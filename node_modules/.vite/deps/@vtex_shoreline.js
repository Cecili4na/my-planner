"use client";
import {
  require_jsx_runtime
} from "./chunk-NPMM3WDP.js";
import {
  require_react_dom
} from "./chunk-JRY3IGQD.js";
import {
  __commonJS,
  __toESM,
  require_react
} from "./chunk-G2OWGING.js";

// node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js
var require_use_sync_external_store_shim_development = __commonJS({
  "node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"(exports) {
    "use strict";
    (function() {
      function is(x2, y) {
        return x2 === y && (0 !== x2 || 1 / x2 === 1 / y) || x2 !== x2 && y !== y;
      }
      function useSyncExternalStore$2(subscribe2, getSnapshot) {
        didWarnOld18Alpha || void 0 === React37.startTransition || (didWarnOld18Alpha = true, console.error(
          "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
        ));
        var value = getSnapshot();
        if (!didWarnUncachedGetSnapshot) {
          var cachedValue = getSnapshot();
          objectIs(value, cachedValue) || (console.error(
            "The result of getSnapshot should be cached to avoid an infinite loop"
          ), didWarnUncachedGetSnapshot = true);
        }
        cachedValue = useState40({
          inst: { value, getSnapshot }
        });
        var inst = cachedValue[0].inst, forceUpdate = cachedValue[1];
        useLayoutEffect7(
          function() {
            inst.value = value;
            inst.getSnapshot = getSnapshot;
            checkIfSnapshotChanged(inst) && forceUpdate({ inst });
          },
          [subscribe2, value, getSnapshot]
        );
        useEffect54(
          function() {
            checkIfSnapshotChanged(inst) && forceUpdate({ inst });
            return subscribe2(function() {
              checkIfSnapshotChanged(inst) && forceUpdate({ inst });
            });
          },
          [subscribe2]
        );
        useDebugValue(value);
        return value;
      }
      function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        inst = inst.value;
        try {
          var nextValue = latestGetSnapshot();
          return !objectIs(inst, nextValue);
        } catch (error) {
          return true;
        }
      }
      function useSyncExternalStore$1(subscribe2, getSnapshot) {
        return getSnapshot();
      }
      "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
      var React37 = require_react(), objectIs = "function" === typeof Object.is ? Object.is : is, useState40 = React37.useState, useEffect54 = React37.useEffect, useLayoutEffect7 = React37.useLayoutEffect, useDebugValue = React37.useDebugValue, didWarnOld18Alpha = false, didWarnUncachedGetSnapshot = false, shim = "undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement ? useSyncExternalStore$1 : useSyncExternalStore$2;
      exports.useSyncExternalStore = void 0 !== React37.useSyncExternalStore ? React37.useSyncExternalStore : shim;
      "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
    })();
  }
});

// node_modules/use-sync-external-store/shim/index.js
var require_shim = __commonJS({
  "node_modules/use-sync-external-store/shim/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_use_sync_external_store_shim_development();
    }
  }
});

// node_modules/deepmerge/dist/cjs.js
var require_cjs = __commonJS({
  "node_modules/deepmerge/dist/cjs.js"(exports, module) {
    "use strict";
    var isMergeableObject = function isMergeableObject2(value) {
      return isNonNullObject(value) && !isSpecial(value);
    };
    function isNonNullObject(value) {
      return !!value && typeof value === "object";
    }
    function isSpecial(value) {
      var stringValue = Object.prototype.toString.call(value);
      return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement(value);
    }
    var canUseSymbol = typeof Symbol === "function" && Symbol.for;
    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
    function isReactElement(value) {
      return value.$$typeof === REACT_ELEMENT_TYPE;
    }
    function emptyTarget(val) {
      return Array.isArray(val) ? [] : {};
    }
    function cloneUnlessOtherwiseSpecified(value, options) {
      return options.clone !== false && options.isMergeableObject(value) ? deepmerge2(emptyTarget(value), value, options) : value;
    }
    function defaultArrayMerge(target, source, options) {
      return target.concat(source).map(function(element) {
        return cloneUnlessOtherwiseSpecified(element, options);
      });
    }
    function getMergeFunction(key, options) {
      if (!options.customMerge) {
        return deepmerge2;
      }
      var customMerge = options.customMerge(key);
      return typeof customMerge === "function" ? customMerge : deepmerge2;
    }
    function getEnumerableOwnPropertySymbols(target) {
      return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol4) {
        return Object.propertyIsEnumerable.call(target, symbol4);
      }) : [];
    }
    function getKeys2(target) {
      return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
    }
    function propertyIsOnObject(object, property) {
      try {
        return property in object;
      } catch (_) {
        return false;
      }
    }
    function propertyIsUnsafe(target, key) {
      return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
    }
    function mergeObject(target, source, options) {
      var destination = {};
      if (options.isMergeableObject(target)) {
        getKeys2(target).forEach(function(key) {
          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
        });
      }
      getKeys2(source).forEach(function(key) {
        if (propertyIsUnsafe(target, key)) {
          return;
        }
        if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
          destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
        } else {
          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
        }
      });
      return destination;
    }
    function deepmerge2(target, source, options) {
      options = options || {};
      options.arrayMerge = options.arrayMerge || defaultArrayMerge;
      options.isMergeableObject = options.isMergeableObject || isMergeableObject;
      options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
      var sourceIsArray = Array.isArray(source);
      var targetIsArray = Array.isArray(target);
      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
      if (!sourceAndTargetTypesMatch) {
        return cloneUnlessOtherwiseSpecified(source, options);
      } else if (sourceIsArray) {
        return options.arrayMerge(target, source, options);
      } else {
        return mergeObject(target, source, options);
      }
    }
    deepmerge2.all = function deepmergeAll(array, options) {
      if (!Array.isArray(array)) {
        throw new Error("first argument should be an array");
      }
      return array.reduce(function(prev, next) {
        return deepmerge2(prev, next, options);
      }, {});
    };
    var deepmerge_1 = deepmerge2;
    module.exports = deepmerge_1;
  }
});

// node_modules/@vtex/shoreline-utils/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js
var require_use_sync_external_store_shim_development2 = __commonJS({
  "node_modules/@vtex/shoreline-utils/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React37 = require_react();
        var ReactSharedInternals = React37.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function is(x2, y) {
          return x2 === y && (x2 !== 0 || 1 / x2 === 1 / y) || x2 !== x2 && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var useState40 = React37.useState, useEffect54 = React37.useEffect, useLayoutEffect7 = React37.useLayoutEffect, useDebugValue = React37.useDebugValue;
        var didWarnOld18Alpha = false;
        var didWarnUncachedGetSnapshot = false;
        function useSyncExternalStore2(subscribe2, getSnapshot, getServerSnapshot) {
          {
            if (!didWarnOld18Alpha) {
              if (React37.startTransition !== void 0) {
                didWarnOld18Alpha = true;
                error("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.");
              }
            }
          }
          var value = getSnapshot();
          {
            if (!didWarnUncachedGetSnapshot) {
              var cachedValue = getSnapshot();
              if (!objectIs(value, cachedValue)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
              }
            }
          }
          var _useState = useState40({
            inst: {
              value,
              getSnapshot
            }
          }), inst = _useState[0].inst, forceUpdate = _useState[1];
          useLayoutEffect7(function() {
            inst.value = value;
            inst.getSnapshot = getSnapshot;
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
          }, [subscribe2, value, getSnapshot]);
          useEffect54(function() {
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
            var handleStoreChange = function() {
              if (checkIfSnapshotChanged(inst)) {
                forceUpdate({
                  inst
                });
              }
            };
            return subscribe2(handleStoreChange);
          }, [subscribe2]);
          useDebugValue(value);
          return value;
        }
        function checkIfSnapshotChanged(inst) {
          var latestGetSnapshot = inst.getSnapshot;
          var prevValue = inst.value;
          try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
          } catch (error2) {
            return true;
          }
        }
        function useSyncExternalStore$1(subscribe2, getSnapshot, getServerSnapshot) {
          return getSnapshot();
        }
        var canUseDOM3 = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var isServerEnvironment = !canUseDOM3;
        var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore2;
        var useSyncExternalStore$2 = React37.useSyncExternalStore !== void 0 ? React37.useSyncExternalStore : shim;
        exports.useSyncExternalStore = useSyncExternalStore$2;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@vtex/shoreline-utils/node_modules/use-sync-external-store/shim/index.js
var require_shim2 = __commonJS({
  "node_modules/@vtex/shoreline-utils/node_modules/use-sync-external-store/shim/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_use_sync_external_store_shim_development2();
    }
  }
});

// node_modules/@vtex/shoreline-utils/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js
var require_with_selector_development = __commonJS({
  "node_modules/@vtex/shoreline-utils/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React37 = require_react();
        var shim = require_shim2();
        function is(x2, y) {
          return x2 === y && (x2 !== 0 || 1 / x2 === 1 / y) || x2 !== x2 && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var useSyncExternalStore2 = shim.useSyncExternalStore;
        var useRef50 = React37.useRef, useEffect54 = React37.useEffect, useMemo28 = React37.useMemo, useDebugValue = React37.useDebugValue;
        function useSyncExternalStoreWithSelector2(subscribe2, getSnapshot, getServerSnapshot, selector2, isEqual) {
          var instRef = useRef50(null);
          var inst;
          if (instRef.current === null) {
            inst = {
              hasValue: false,
              value: null
            };
            instRef.current = inst;
          } else {
            inst = instRef.current;
          }
          var _useMemo = useMemo28(function() {
            var hasMemo = false;
            var memoizedSnapshot;
            var memoizedSelection;
            var memoizedSelector = function(nextSnapshot) {
              if (!hasMemo) {
                hasMemo = true;
                memoizedSnapshot = nextSnapshot;
                var _nextSelection = selector2(nextSnapshot);
                if (isEqual !== void 0) {
                  if (inst.hasValue) {
                    var currentSelection = inst.value;
                    if (isEqual(currentSelection, _nextSelection)) {
                      memoizedSelection = currentSelection;
                      return currentSelection;
                    }
                  }
                }
                memoizedSelection = _nextSelection;
                return _nextSelection;
              }
              var prevSnapshot = memoizedSnapshot;
              var prevSelection = memoizedSelection;
              if (objectIs(prevSnapshot, nextSnapshot)) {
                return prevSelection;
              }
              var nextSelection = selector2(nextSnapshot);
              if (isEqual !== void 0 && isEqual(prevSelection, nextSelection)) {
                return prevSelection;
              }
              memoizedSnapshot = nextSnapshot;
              memoizedSelection = nextSelection;
              return nextSelection;
            };
            var maybeGetServerSnapshot = getServerSnapshot === void 0 ? null : getServerSnapshot;
            var getSnapshotWithSelector = function() {
              return memoizedSelector(getSnapshot());
            };
            var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? void 0 : function() {
              return memoizedSelector(maybeGetServerSnapshot());
            };
            return [getSnapshotWithSelector, getServerSnapshotWithSelector];
          }, [getSnapshot, getServerSnapshot, selector2, isEqual]), getSelection = _useMemo[0], getServerSelection = _useMemo[1];
          var value = useSyncExternalStore2(subscribe2, getSelection, getServerSelection);
          useEffect54(function() {
            inst.hasValue = true;
            inst.value = value;
          }, [value]);
          useDebugValue(value);
          return value;
        }
        exports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector2;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@vtex/shoreline-utils/node_modules/use-sync-external-store/shim/with-selector.js
var require_with_selector = __commonJS({
  "node_modules/@vtex/shoreline-utils/node_modules/use-sync-external-store/shim/with-selector.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_with_selector_development();
    }
  }
});

// node_modules/@vtex/shoreline/dist/index.mjs
var import_react201 = __toESM(require_react(), 1);
var import_react202 = __toESM(require_react(), 1);

// node_modules/@ariakit/react-core/esm/__chunks/3YLGPPWQ.js
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a2, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp.call(b2, prop))
      __defNormalProp(a2, prop, b2[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b2)) {
      if (__propIsEnum.call(b2, prop))
        __defNormalProp(a2, prop, b2[prop]);
    }
  return a2;
};
var __spreadProps = (a2, b2) => __defProps(a2, __getOwnPropDescs(b2));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// node_modules/@ariakit/core/esm/__chunks/3YLGPPWQ.js
var __defProp2 = Object.defineProperty;
var __defProps2 = Object.defineProperties;
var __getOwnPropDescs2 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols2 = Object.getOwnPropertySymbols;
var __hasOwnProp2 = Object.prototype.hasOwnProperty;
var __propIsEnum2 = Object.prototype.propertyIsEnumerable;
var __defNormalProp2 = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues2 = (a2, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp2.call(b2, prop))
      __defNormalProp2(a2, prop, b2[prop]);
  if (__getOwnPropSymbols2)
    for (var prop of __getOwnPropSymbols2(b2)) {
      if (__propIsEnum2.call(b2, prop))
        __defNormalProp2(a2, prop, b2[prop]);
    }
  return a2;
};
var __spreadProps2 = (a2, b2) => __defProps2(a2, __getOwnPropDescs2(b2));
var __objRest2 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp2.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols2)
    for (var prop of __getOwnPropSymbols2(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum2.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// node_modules/@ariakit/core/esm/__chunks/PBFD2E7P.js
function noop(..._) {
}
function shallowEqual(a2, b2) {
  if (a2 === b2) return true;
  if (!a2) return false;
  if (!b2) return false;
  if (typeof a2 !== "object") return false;
  if (typeof b2 !== "object") return false;
  const aKeys = Object.keys(a2);
  const bKeys = Object.keys(b2);
  const { length } = aKeys;
  if (bKeys.length !== length) return false;
  for (const key of aKeys) {
    if (a2[key] !== b2[key]) {
      return false;
    }
  }
  return true;
}
function applyState(argument, currentValue) {
  if (isUpdater(argument)) {
    const value = isLazyValue(currentValue) ? currentValue() : currentValue;
    return argument(value);
  }
  return argument;
}
function isUpdater(argument) {
  return typeof argument === "function";
}
function isLazyValue(value) {
  return typeof value === "function";
}
function hasOwnProperty(object, prop) {
  if (typeof Object.hasOwn === "function") {
    return Object.hasOwn(object, prop);
  }
  return Object.prototype.hasOwnProperty.call(object, prop);
}
function chain(...fns) {
  return (...args) => {
    for (const fn of fns) {
      if (typeof fn === "function") {
        fn(...args);
      }
    }
  };
}
function cx(...args) {
  return args.filter(Boolean).join(" ") || void 0;
}
function normalizeString(str) {
  return str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
}
function omit(object, keys) {
  const result = __spreadValues2({}, object);
  for (const key of keys) {
    if (hasOwnProperty(result, key)) {
      delete result[key];
    }
  }
  return result;
}
function pick(object, paths) {
  const result = {};
  for (const key of paths) {
    if (hasOwnProperty(object, key)) {
      result[key] = object[key];
    }
  }
  return result;
}
function identity(value) {
  return value;
}
function invariant(condition, message) {
  if (condition) return;
  if (typeof message !== "string") throw new Error("Invariant failed");
  throw new Error(message);
}
function getKeys(obj) {
  return Object.keys(obj);
}
function isFalsyBooleanCallback(booleanOrCallback, ...args) {
  const result = typeof booleanOrCallback === "function" ? booleanOrCallback(...args) : booleanOrCallback;
  if (result == null) return false;
  return !result;
}
function disabledFromProps(props) {
  return props.disabled || props["aria-disabled"] === true || props["aria-disabled"] === "true";
}
function removeUndefinedValues(obj) {
  const result = {};
  for (const key in obj) {
    if (obj[key] !== void 0) {
      result[key] = obj[key];
    }
  }
  return result;
}
function defaultValue(...values) {
  for (const value of values) {
    if (value !== void 0) return value;
  }
  return void 0;
}

// node_modules/@ariakit/react-core/esm/__chunks/SK3NAZA3.js
var import_react = __toESM(require_react(), 1);
function setRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}
function isValidElementWithRef(element) {
  if (!element) return false;
  if (!(0, import_react.isValidElement)(element)) return false;
  if ("ref" in element.props) return true;
  if ("ref" in element) return true;
  return false;
}
function getRefProperty(element) {
  if (!isValidElementWithRef(element)) return null;
  const props = __spreadValues({}, element.props);
  return props.ref || element.ref;
}
function mergeProps(base, overrides) {
  const props = __spreadValues({}, base);
  for (const key in overrides) {
    if (!hasOwnProperty(overrides, key)) continue;
    if (key === "className") {
      const prop = "className";
      props[prop] = base[prop] ? `${base[prop]} ${overrides[prop]}` : overrides[prop];
      continue;
    }
    if (key === "style") {
      const prop = "style";
      props[prop] = base[prop] ? __spreadValues(__spreadValues({}, base[prop]), overrides[prop]) : overrides[prop];
      continue;
    }
    const overrideValue = overrides[key];
    if (typeof overrideValue === "function" && key.startsWith("on")) {
      const baseValue = base[key];
      if (typeof baseValue === "function") {
        props[key] = (...args) => {
          overrideValue(...args);
          baseValue(...args);
        };
        continue;
      }
    }
    props[key] = overrideValue;
  }
  return props;
}

// node_modules/@ariakit/core/esm/__chunks/PQP5VPTV.js
var canUseDOM = checkIsBrowser();
function checkIsBrowser() {
  var _a2;
  return typeof window !== "undefined" && !!((_a2 = window.document) == null ? void 0 : _a2.createElement);
}
function getDocument(node) {
  return node ? node.ownerDocument || node : document;
}
function getWindow(node) {
  return getDocument(node).defaultView || window;
}
function getActiveElement(node, activeDescendant = false) {
  const { activeElement } = getDocument(node);
  if (!(activeElement == null ? void 0 : activeElement.nodeName)) {
    return null;
  }
  if (isFrame(activeElement) && activeElement.contentDocument) {
    return getActiveElement(
      activeElement.contentDocument.body,
      activeDescendant
    );
  }
  if (activeDescendant) {
    const id = activeElement.getAttribute("aria-activedescendant");
    if (id) {
      const element = getDocument(activeElement).getElementById(id);
      if (element) {
        return element;
      }
    }
  }
  return activeElement;
}
function contains(parent, child) {
  return parent === child || parent.contains(child);
}
function isFrame(element) {
  return element.tagName === "IFRAME";
}
function isButton(element) {
  const tagName = element.tagName.toLowerCase();
  if (tagName === "button") return true;
  if (tagName === "input" && element.type) {
    return buttonInputTypes.indexOf(element.type) !== -1;
  }
  return false;
}
var buttonInputTypes = [
  "button",
  "color",
  "file",
  "image",
  "reset",
  "submit"
];
function isVisible(element) {
  if (typeof element.checkVisibility === "function") {
    return element.checkVisibility();
  }
  const htmlElement = element;
  return htmlElement.offsetWidth > 0 || htmlElement.offsetHeight > 0 || element.getClientRects().length > 0;
}
function isTextField(element) {
  try {
    const isTextInput = element instanceof HTMLInputElement && element.selectionStart !== null;
    const isTextArea = element.tagName === "TEXTAREA";
    return isTextInput || isTextArea || false;
  } catch (error) {
    return false;
  }
}
function isTextbox(element) {
  return element.isContentEditable || isTextField(element);
}
function getTextboxValue(element) {
  if (isTextField(element)) {
    return element.value;
  }
  if (element.isContentEditable) {
    const range = getDocument(element).createRange();
    range.selectNodeContents(element);
    return range.toString();
  }
  return "";
}
function getTextboxSelection(element) {
  let start = 0;
  let end = 0;
  if (isTextField(element)) {
    start = element.selectionStart || 0;
    end = element.selectionEnd || 0;
  } else if (element.isContentEditable) {
    const selection = getDocument(element).getSelection();
    if ((selection == null ? void 0 : selection.rangeCount) && selection.anchorNode && contains(element, selection.anchorNode) && selection.focusNode && contains(element, selection.focusNode)) {
      const range = selection.getRangeAt(0);
      const nextRange = range.cloneRange();
      nextRange.selectNodeContents(element);
      nextRange.setEnd(range.startContainer, range.startOffset);
      start = nextRange.toString().length;
      nextRange.setEnd(range.endContainer, range.endOffset);
      end = nextRange.toString().length;
    }
  }
  return { start, end };
}
function getPopupRole(element, fallback) {
  const allowedPopupRoles = ["dialog", "menu", "listbox", "tree", "grid"];
  const role = element == null ? void 0 : element.getAttribute("role");
  if (role && allowedPopupRoles.indexOf(role) !== -1) {
    return role;
  }
  return fallback;
}
function getPopupItemRole(element, fallback) {
  var _a2;
  const itemRoleByPopupRole = {
    menu: "menuitem",
    listbox: "option",
    tree: "treeitem"
  };
  const popupRole = getPopupRole(element);
  if (!popupRole) return fallback;
  const key = popupRole;
  return (_a2 = itemRoleByPopupRole[key]) != null ? _a2 : fallback;
}
function getScrollingElement(element) {
  if (!element) return null;
  const isScrollableOverflow = (overflow) => {
    if (overflow === "auto") return true;
    if (overflow === "scroll") return true;
    return false;
  };
  if (element.clientHeight && element.scrollHeight > element.clientHeight) {
    const { overflowY } = getComputedStyle(element);
    if (isScrollableOverflow(overflowY)) return element;
  } else if (element.clientWidth && element.scrollWidth > element.clientWidth) {
    const { overflowX } = getComputedStyle(element);
    if (isScrollableOverflow(overflowX)) return element;
  }
  return getScrollingElement(element.parentElement) || document.scrollingElement || document.body;
}
function setSelectionRange(element, ...args) {
  if (/text|search|password|tel|url/i.test(element.type)) {
    element.setSelectionRange(...args);
  }
}

// node_modules/@ariakit/core/esm/__chunks/3VBK76MS.js
function isTouchDevice() {
  return canUseDOM && !!navigator.maxTouchPoints;
}
function isApple() {
  if (!canUseDOM) return false;
  return /mac|iphone|ipad|ipod/i.test(navigator.platform);
}
function isSafari() {
  return canUseDOM && isApple() && /apple/i.test(navigator.vendor);
}
function isFirefox() {
  return canUseDOM && /firefox\//i.test(navigator.userAgent);
}
function isMac() {
  return canUseDOM && navigator.platform.startsWith("Mac") && !isTouchDevice();
}

// node_modules/@ariakit/core/esm/utils/events.js
function isPortalEvent(event) {
  return Boolean(
    event.currentTarget && !contains(event.currentTarget, event.target)
  );
}
function isSelfTarget(event) {
  return event.target === event.currentTarget;
}
function isOpeningInNewTab(event) {
  const element = event.currentTarget;
  if (!element) return false;
  const isAppleDevice = isApple();
  if (isAppleDevice && !event.metaKey) return false;
  if (!isAppleDevice && !event.ctrlKey) return false;
  const tagName = element.tagName.toLowerCase();
  if (tagName === "a") return true;
  if (tagName === "button" && element.type === "submit") return true;
  if (tagName === "input" && element.type === "submit") return true;
  return false;
}
function isDownloading(event) {
  const element = event.currentTarget;
  if (!element) return false;
  const tagName = element.tagName.toLowerCase();
  if (!event.altKey) return false;
  if (tagName === "a") return true;
  if (tagName === "button" && element.type === "submit") return true;
  if (tagName === "input" && element.type === "submit") return true;
  return false;
}
function fireEvent(element, type, eventInit) {
  const event = new Event(type, eventInit);
  return element.dispatchEvent(event);
}
function fireBlurEvent(element, eventInit) {
  const event = new FocusEvent("blur", eventInit);
  const defaultAllowed = element.dispatchEvent(event);
  const bubbleInit = __spreadProps2(__spreadValues2({}, eventInit), { bubbles: true });
  element.dispatchEvent(new FocusEvent("focusout", bubbleInit));
  return defaultAllowed;
}
function fireKeyboardEvent(element, type, eventInit) {
  const event = new KeyboardEvent(type, eventInit);
  return element.dispatchEvent(event);
}
function fireClickEvent(element, eventInit) {
  const event = new MouseEvent("click", eventInit);
  return element.dispatchEvent(event);
}
function isFocusEventOutside(event, container) {
  const containerElement = container || event.currentTarget;
  const relatedTarget = event.relatedTarget;
  return !relatedTarget || !contains(containerElement, relatedTarget);
}
function queueBeforeEvent(element, type, callback, timeout) {
  const createTimer = (callback2) => {
    if (timeout) {
      const timerId2 = setTimeout(callback2, timeout);
      return () => clearTimeout(timerId2);
    }
    const timerId = requestAnimationFrame(callback2);
    return () => cancelAnimationFrame(timerId);
  };
  const cancelTimer = createTimer(() => {
    element.removeEventListener(type, callSync, true);
    callback();
  });
  const callSync = () => {
    cancelTimer();
    callback();
  };
  element.addEventListener(type, callSync, { once: true, capture: true });
  return cancelTimer;
}
function addGlobalEventListener(type, listener, options, scope = window) {
  const children3 = [];
  try {
    scope.document.addEventListener(type, listener, options);
    for (const frame of Array.from(scope.frames)) {
      children3.push(addGlobalEventListener(type, listener, options, frame));
    }
  } catch (e) {
  }
  const removeEventListener = () => {
    try {
      scope.document.removeEventListener(type, listener, options);
    } catch (e) {
    }
    for (const remove of children3) {
      remove();
    }
  };
  return removeEventListener;
}

// node_modules/@ariakit/react-core/esm/__chunks/HNHAUIIY.js
var import_react2 = __toESM(require_react(), 1);
var React = __toESM(require_react(), 1);
var _React = __spreadValues({}, React);
var useReactId = _React.useId;
var useReactDeferredValue = _React.useDeferredValue;
var useReactInsertionEffect = _React.useInsertionEffect;
var useSafeLayoutEffect = canUseDOM ? import_react2.useLayoutEffect : import_react2.useEffect;
function useInitialValue(value) {
  const [initialValue] = (0, import_react2.useState)(value);
  return initialValue;
}
function useLiveRef(value) {
  const ref = (0, import_react2.useRef)(value);
  useSafeLayoutEffect(() => {
    ref.current = value;
  });
  return ref;
}
function useEvent(callback) {
  const ref = (0, import_react2.useRef)(() => {
    throw new Error("Cannot call an event handler while rendering.");
  });
  if (useReactInsertionEffect) {
    useReactInsertionEffect(() => {
      ref.current = callback;
    });
  } else {
    ref.current = callback;
  }
  return (0, import_react2.useCallback)((...args) => {
    var _a2;
    return (_a2 = ref.current) == null ? void 0 : _a2.call(ref, ...args);
  }, []);
}
function useTransactionState(callback) {
  const [state, setState] = (0, import_react2.useState)(null);
  useSafeLayoutEffect(() => {
    if (state == null) return;
    if (!callback) return;
    let prevState = null;
    callback((prev) => {
      prevState = prev;
      return state;
    });
    return () => {
      callback(prevState);
    };
  }, [state, callback]);
  return [state, setState];
}
function useMergeRefs(...refs) {
  return (0, import_react2.useMemo)(() => {
    if (!refs.some(Boolean)) return;
    return (value) => {
      for (const ref of refs) {
        setRef(ref, value);
      }
    };
  }, refs);
}
function useId(defaultId) {
  if (useReactId) {
    const reactId = useReactId();
    if (defaultId) return defaultId;
    return reactId;
  }
  const [id, setId] = (0, import_react2.useState)(defaultId);
  useSafeLayoutEffect(() => {
    if (defaultId || id) return;
    const random = Math.random().toString(36).substr(2, 6);
    setId(`id-${random}`);
  }, [defaultId, id]);
  return defaultId || id;
}
function useTagName(refOrElement, type) {
  const stringOrUndefined = (type2) => {
    if (typeof type2 !== "string") return;
    return type2;
  };
  const [tagName, setTagName] = (0, import_react2.useState)(() => stringOrUndefined(type));
  useSafeLayoutEffect(() => {
    const element = refOrElement && "current" in refOrElement ? refOrElement.current : refOrElement;
    setTagName((element == null ? void 0 : element.tagName.toLowerCase()) || stringOrUndefined(type));
  }, [refOrElement, type]);
  return tagName;
}
function useAttribute(refOrElement, attributeName, defaultValue2) {
  const initialValue = useInitialValue(defaultValue2);
  const [attribute, setAttribute2] = (0, import_react2.useState)(initialValue);
  (0, import_react2.useEffect)(() => {
    const element = refOrElement && "current" in refOrElement ? refOrElement.current : refOrElement;
    if (!element) return;
    const callback = () => {
      const value = element.getAttribute(attributeName);
      setAttribute2(value == null ? initialValue : value);
    };
    const observer = new MutationObserver(callback);
    observer.observe(element, { attributeFilter: [attributeName] });
    callback();
    return () => observer.disconnect();
  }, [refOrElement, attributeName, initialValue]);
  return attribute;
}
function useUpdateEffect(effect, deps) {
  const mounted = (0, import_react2.useRef)(false);
  (0, import_react2.useEffect)(() => {
    if (mounted.current) {
      return effect();
    }
    mounted.current = true;
  }, deps);
  (0, import_react2.useEffect)(
    () => () => {
      mounted.current = false;
    },
    []
  );
}
function useUpdateLayoutEffect(effect, deps) {
  const mounted = (0, import_react2.useRef)(false);
  useSafeLayoutEffect(() => {
    if (mounted.current) {
      return effect();
    }
    mounted.current = true;
  }, deps);
  useSafeLayoutEffect(
    () => () => {
      mounted.current = false;
    },
    []
  );
}
function useForceUpdate() {
  return (0, import_react2.useReducer)(() => [], []);
}
function useBooleanEvent(booleanOrCallback) {
  return useEvent(
    typeof booleanOrCallback === "function" ? booleanOrCallback : () => booleanOrCallback
  );
}
function useWrapElement(props, callback, deps = []) {
  const wrapElement = (0, import_react2.useCallback)(
    (element) => {
      if (props.wrapElement) {
        element = props.wrapElement(element);
      }
      return callback(element);
    },
    [...deps, props.wrapElement]
  );
  return __spreadProps(__spreadValues({}, props), { wrapElement });
}
function usePortalRef(portalProp = false, portalRefProp) {
  const [portalNode, setPortalNode] = (0, import_react2.useState)(null);
  const portalRef = useMergeRefs(setPortalNode, portalRefProp);
  const domReady = !portalProp || portalNode;
  return { portalRef, portalNode, domReady };
}
function useMetadataProps(props, key, value) {
  const parent = props.onLoadedMetadataCapture;
  const onLoadedMetadataCapture = (0, import_react2.useMemo)(() => {
    return Object.assign(() => {
    }, __spreadProps(__spreadValues({}, parent), { [key]: value }));
  }, [parent, key, value]);
  return [parent == null ? void 0 : parent[key], { onLoadedMetadataCapture }];
}
function useIsMouseMoving() {
  (0, import_react2.useEffect)(() => {
    addGlobalEventListener("mousemove", setMouseMoving, true);
    addGlobalEventListener("mousedown", resetMouseMoving, true);
    addGlobalEventListener("mouseup", resetMouseMoving, true);
    addGlobalEventListener("keydown", resetMouseMoving, true);
    addGlobalEventListener("scroll", resetMouseMoving, true);
  }, []);
  const isMouseMoving = useEvent(() => mouseMoving);
  return isMouseMoving;
}
var mouseMoving = false;
var previousScreenX = 0;
var previousScreenY = 0;
function hasMouseMovement(event) {
  const movementX = event.movementX || event.screenX - previousScreenX;
  const movementY = event.movementY || event.screenY - previousScreenY;
  previousScreenX = event.screenX;
  previousScreenY = event.screenY;
  return movementX || movementY || false;
}
function setMouseMoving(event) {
  if (!hasMouseMovement(event)) return;
  mouseMoving = true;
}
function resetMouseMoving() {
  mouseMoving = false;
}

// node_modules/@ariakit/react-core/esm/__chunks/7FZLUSKW.js
var React2 = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
function forwardRef2(render) {
  const Role3 = React2.forwardRef((props, ref) => render(__spreadProps(__spreadValues({}, props), { ref })));
  Role3.displayName = render.displayName || render.name;
  return Role3;
}
function memo2(Component, propsAreEqual) {
  return React2.memo(Component, propsAreEqual);
}
function createElement(Type, props) {
  const _a2 = props, { wrapElement, render } = _a2, rest = __objRest(_a2, ["wrapElement", "render"]);
  const mergedRef = useMergeRefs(props.ref, getRefProperty(render));
  let element;
  if (React2.isValidElement(render)) {
    const renderProps = __spreadProps(__spreadValues({}, render.props), { ref: mergedRef });
    element = React2.cloneElement(render, mergeProps(rest, renderProps));
  } else if (render) {
    element = render(rest);
  } else {
    element = (0, import_jsx_runtime.jsx)(Type, __spreadValues({}, rest));
  }
  if (wrapElement) {
    return wrapElement(element);
  }
  return element;
}
function createHook(useProps) {
  const useRole3 = (props = {}) => {
    return useProps(props);
  };
  useRole3.displayName = useProps.name;
  return useRole3;
}
function createStoreContext(providers = [], scopedProviders = []) {
  const context = React2.createContext(void 0);
  const scopedContext = React2.createContext(void 0);
  const useContext24 = () => React2.useContext(context);
  const useScopedContext = (onlyScoped = false) => {
    const scoped = React2.useContext(scopedContext);
    const store = useContext24();
    if (onlyScoped) return scoped;
    return scoped || store;
  };
  const useProviderContext = () => {
    const scoped = React2.useContext(scopedContext);
    const store = useContext24();
    if (scoped && scoped === store) return;
    return store;
  };
  const ContextProvider = (props) => {
    return providers.reduceRight(
      (children3, Provider) => (0, import_jsx_runtime.jsx)(Provider, __spreadProps(__spreadValues({}, props), { children: children3 })),
      (0, import_jsx_runtime.jsx)(context.Provider, __spreadValues({}, props))
    );
  };
  const ScopedContextProvider = (props) => {
    return (0, import_jsx_runtime.jsx)(ContextProvider, __spreadProps(__spreadValues({}, props), { children: scopedProviders.reduceRight(
      (children3, Provider) => (0, import_jsx_runtime.jsx)(Provider, __spreadProps(__spreadValues({}, props), { children: children3 })),
      (0, import_jsx_runtime.jsx)(scopedContext.Provider, __spreadValues({}, props))
    ) }));
  };
  return {
    context,
    scopedContext,
    useContext: useContext24,
    useScopedContext,
    useProviderContext,
    ContextProvider,
    ScopedContextProvider
  };
}

// node_modules/@ariakit/react-core/esm/__chunks/G4PVPWEW.js
var ctx = createStoreContext();
var useCollectionContext = ctx.useContext;
var useCollectionScopedContext = ctx.useScopedContext;
var useCollectionProviderContext = ctx.useProviderContext;
var CollectionContextProvider = ctx.ContextProvider;
var CollectionScopedContextProvider = ctx.ScopedContextProvider;

// node_modules/@ariakit/react-core/esm/__chunks/APGXEJ2Q.js
var import_react3 = __toESM(require_react(), 1);
var ctx2 = createStoreContext(
  [CollectionContextProvider],
  [CollectionScopedContextProvider]
);
var useCompositeContext = ctx2.useContext;
var useCompositeScopedContext = ctx2.useScopedContext;
var useCompositeProviderContext = ctx2.useProviderContext;
var CompositeContextProvider = ctx2.ContextProvider;
var CompositeScopedContextProvider = ctx2.ScopedContextProvider;
var CompositeItemContext = (0, import_react3.createContext)(
  void 0
);
var CompositeRowContext = (0, import_react3.createContext)(
  void 0
);

// node_modules/@ariakit/react-core/esm/__chunks/3TGOYUTQ.js
var import_react4 = __toESM(require_react(), 1);
var TagValueContext = (0, import_react4.createContext)(null);
var TagRemoveIdContext = (0, import_react4.createContext)(
  null
);
var ctx3 = createStoreContext(
  [CompositeContextProvider],
  [CompositeScopedContextProvider]
);
var useTagContext = ctx3.useContext;
var useTagScopedContext = ctx3.useScopedContext;
var useTagProviderContext = ctx3.useProviderContext;
var TagContextProvider = ctx3.ContextProvider;
var TagScopedContextProvider = ctx3.ScopedContextProvider;

// node_modules/@ariakit/core/esm/__chunks/EQQLU3CG.js
function getInternal(store, key) {
  const internals = store.__unstableInternals;
  invariant(internals, "Invalid store");
  return internals[key];
}
function createStore(initialState, ...stores) {
  let state = initialState;
  let prevStateBatch = state;
  let lastUpdate = Symbol();
  let destroy = noop;
  const instances = /* @__PURE__ */ new Set();
  const updatedKeys = /* @__PURE__ */ new Set();
  const setups = /* @__PURE__ */ new Set();
  const listeners = /* @__PURE__ */ new Set();
  const batchListeners = /* @__PURE__ */ new Set();
  const disposables = /* @__PURE__ */ new WeakMap();
  const listenerKeys = /* @__PURE__ */ new WeakMap();
  const storeSetup = (callback) => {
    setups.add(callback);
    return () => setups.delete(callback);
  };
  const storeInit = () => {
    const initialized = instances.size;
    const instance = Symbol();
    instances.add(instance);
    const maybeDestroy = () => {
      instances.delete(instance);
      if (instances.size) return;
      destroy();
    };
    if (initialized) return maybeDestroy;
    const desyncs = getKeys(state).map(
      (key) => chain(
        ...stores.map((store) => {
          var _a2;
          const storeState = (_a2 = store == null ? void 0 : store.getState) == null ? void 0 : _a2.call(store);
          if (!storeState) return;
          if (!hasOwnProperty(storeState, key)) return;
          return sync(store, [key], (state2) => {
            setState(
              key,
              state2[key],
              // @ts-expect-error - Not public API. This is just to prevent
              // infinite loops.
              true
            );
          });
        })
      )
    );
    const teardowns = [];
    for (const setup2 of setups) {
      teardowns.push(setup2());
    }
    const cleanups2 = stores.map(init);
    destroy = chain(...desyncs, ...teardowns, ...cleanups2);
    return maybeDestroy;
  };
  const sub = (keys, listener, set2 = listeners) => {
    set2.add(listener);
    listenerKeys.set(listener, keys);
    return () => {
      var _a2;
      (_a2 = disposables.get(listener)) == null ? void 0 : _a2();
      disposables.delete(listener);
      listenerKeys.delete(listener);
      set2.delete(listener);
    };
  };
  const storeSubscribe = (keys, listener) => sub(keys, listener);
  const storeSync = (keys, listener) => {
    disposables.set(listener, listener(state, state));
    return sub(keys, listener);
  };
  const storeBatch = (keys, listener) => {
    disposables.set(listener, listener(state, prevStateBatch));
    return sub(keys, listener, batchListeners);
  };
  const storePick = (keys) => createStore(pick(state, keys), finalStore);
  const storeOmit = (keys) => createStore(omit(state, keys), finalStore);
  const getState2 = () => state;
  const setState = (key, value, fromStores = false) => {
    var _a2;
    if (!hasOwnProperty(state, key)) return;
    const nextValue = applyState(value, state[key]);
    if (nextValue === state[key]) return;
    if (!fromStores) {
      for (const store of stores) {
        (_a2 = store == null ? void 0 : store.setState) == null ? void 0 : _a2.call(store, key, nextValue);
      }
    }
    const prevState = state;
    state = __spreadProps2(__spreadValues2({}, state), { [key]: nextValue });
    const thisUpdate = Symbol();
    lastUpdate = thisUpdate;
    updatedKeys.add(key);
    const run = (listener, prev, uKeys) => {
      var _a22;
      const keys = listenerKeys.get(listener);
      const updated = (k2) => uKeys ? uKeys.has(k2) : k2 === key;
      if (!keys || keys.some(updated)) {
        (_a22 = disposables.get(listener)) == null ? void 0 : _a22();
        disposables.set(listener, listener(state, prev));
      }
    };
    for (const listener of listeners) {
      run(listener, prevState);
    }
    queueMicrotask(() => {
      if (lastUpdate !== thisUpdate) return;
      const snapshot = state;
      for (const listener of batchListeners) {
        run(listener, prevStateBatch, updatedKeys);
      }
      prevStateBatch = snapshot;
      updatedKeys.clear();
    });
  };
  const finalStore = {
    getState: getState2,
    setState,
    __unstableInternals: {
      setup: storeSetup,
      init: storeInit,
      subscribe: storeSubscribe,
      sync: storeSync,
      batch: storeBatch,
      pick: storePick,
      omit: storeOmit
    }
  };
  return finalStore;
}
function setup(store, ...args) {
  if (!store) return;
  return getInternal(store, "setup")(...args);
}
function init(store, ...args) {
  if (!store) return;
  return getInternal(store, "init")(...args);
}
function subscribe(store, ...args) {
  if (!store) return;
  return getInternal(store, "subscribe")(...args);
}
function sync(store, ...args) {
  if (!store) return;
  return getInternal(store, "sync")(...args);
}
function batch(store, ...args) {
  if (!store) return;
  return getInternal(store, "batch")(...args);
}
function omit2(store, ...args) {
  if (!store) return;
  return getInternal(store, "omit")(...args);
}
function pick2(store, ...args) {
  if (!store) return;
  return getInternal(store, "pick")(...args);
}
function mergeStore(...stores) {
  const initialState = stores.reduce((state, store2) => {
    var _a2;
    const nextState = (_a2 = store2 == null ? void 0 : store2.getState) == null ? void 0 : _a2.call(store2);
    if (!nextState) return state;
    return Object.assign(state, nextState);
  }, {});
  const store = createStore(initialState, ...stores);
  return store;
}
function throwOnConflictingProps(props, store) {
  if (false) return;
  if (!store) return;
  const defaultKeys = Object.entries(props).filter(([key, value]) => key.startsWith("default") && value !== void 0).map(([key]) => {
    var _a2;
    const stateKey = key.replace("default", "");
    return `${((_a2 = stateKey[0]) == null ? void 0 : _a2.toLowerCase()) || ""}${stateKey.slice(1)}`;
  });
  if (!defaultKeys.length) return;
  const storeState = store.getState();
  const conflictingProps = defaultKeys.filter(
    (key) => hasOwnProperty(storeState, key)
  );
  if (!conflictingProps.length) return;
  throw new Error(
    `Passing a store prop in conjunction with a default state is not supported.

const store = useSelectStore();
<SelectProvider store={store} defaultValue="Apple" />
                ^             ^

Instead, pass the default state to the topmost store:

const store = useSelectStore({ defaultValue: "Apple" });
<SelectProvider store={store} />

See https://github.com/ariakit/ariakit/pull/2745 for more details.

If there's a particular need for this, please submit a feature request at https://github.com/ariakit/ariakit
`
  );
}

// node_modules/@ariakit/react-core/esm/__chunks/CTKPPFRS.js
var React3 = __toESM(require_react(), 1);
var import_shim = __toESM(require_shim(), 1);
var { useSyncExternalStore } = import_shim.default;
var noopSubscribe = () => () => {
};
function useStoreState(store, keyOrSelector = identity) {
  const storeSubscribe = React3.useCallback(
    (callback) => {
      if (!store) return noopSubscribe();
      return subscribe(store, null, callback);
    },
    [store]
  );
  const getSnapshot = () => {
    const key = typeof keyOrSelector === "string" ? keyOrSelector : null;
    const selector2 = typeof keyOrSelector === "function" ? keyOrSelector : null;
    const state = store == null ? void 0 : store.getState();
    if (selector2) return selector2(state);
    if (!state) return;
    if (!key) return;
    if (!hasOwnProperty(state, key)) return;
    return state[key];
  };
  return useSyncExternalStore(storeSubscribe, getSnapshot, getSnapshot);
}
function useStoreProps(store, props, key, setKey) {
  const value = hasOwnProperty(props, key) ? props[key] : void 0;
  const setValue = setKey ? props[setKey] : void 0;
  const propsRef = useLiveRef({ value, setValue });
  useSafeLayoutEffect(() => {
    return sync(store, [key], (state, prev) => {
      const { value: value2, setValue: setValue2 } = propsRef.current;
      if (!setValue2) return;
      if (state[key] === prev[key]) return;
      if (state[key] === value2) return;
      setValue2(state[key]);
    });
  }, [store, key]);
  useSafeLayoutEffect(() => {
    if (value === void 0) return;
    store.setState(key, value);
    return batch(store, [key], () => {
      if (value === void 0) return;
      store.setState(key, value);
    });
  });
}
function useStore(createStore2, props) {
  const [store, setStore] = React3.useState(() => createStore2(props));
  useSafeLayoutEffect(() => init(store), [store]);
  const useState210 = React3.useCallback(
    (keyOrSelector) => useStoreState(store, keyOrSelector),
    [store]
  );
  const memoizedStore = React3.useMemo(
    () => __spreadProps(__spreadValues({}, store), { useState: useState210 }),
    [store, useState210]
  );
  const updateStore = useEvent(() => {
    setStore((store2) => createStore2(__spreadValues(__spreadValues({}, props), store2.getState())));
  });
  return [memoizedStore, updateStore];
}

// node_modules/@ariakit/core/esm/__chunks/7DTP4AQO.js
function isElementPreceding(a2, b2) {
  return Boolean(
    b2.compareDocumentPosition(a2) & Node.DOCUMENT_POSITION_PRECEDING
  );
}
function sortBasedOnDOMPosition(items) {
  const pairs = items.map((item, index) => [index, item]);
  let isOrderDifferent = false;
  pairs.sort(([indexA, a2], [indexB, b2]) => {
    const elementA = a2.element;
    const elementB = b2.element;
    if (elementA === elementB) return 0;
    if (!elementA || !elementB) return 0;
    if (isElementPreceding(elementA, elementB)) {
      if (indexA > indexB) {
        isOrderDifferent = true;
      }
      return -1;
    }
    if (indexA < indexB) {
      isOrderDifferent = true;
    }
    return 1;
  });
  if (isOrderDifferent) {
    return pairs.map(([_, item]) => item);
  }
  return items;
}
function getCommonParent(items) {
  var _a2;
  const firstItem = items.find((item) => !!item.element);
  const lastItem = [...items].reverse().find((item) => !!item.element);
  let parentElement = (_a2 = firstItem == null ? void 0 : firstItem.element) == null ? void 0 : _a2.parentElement;
  while (parentElement && (lastItem == null ? void 0 : lastItem.element)) {
    const parent = parentElement;
    if (lastItem && parent.contains(lastItem.element)) {
      return parentElement;
    }
    parentElement = parentElement.parentElement;
  }
  return getDocument(parentElement).body;
}
function getPrivateStore(store) {
  return store == null ? void 0 : store.__unstablePrivateStore;
}
function createCollectionStore(props = {}) {
  var _a2;
  throwOnConflictingProps(props, props.store);
  const syncState = (_a2 = props.store) == null ? void 0 : _a2.getState();
  const items = defaultValue(
    props.items,
    syncState == null ? void 0 : syncState.items,
    props.defaultItems,
    []
  );
  const itemsMap = new Map(items.map((item) => [item.id, item]));
  const initialState = {
    items,
    renderedItems: defaultValue(syncState == null ? void 0 : syncState.renderedItems, [])
  };
  const syncPrivateStore = getPrivateStore(props.store);
  const privateStore = createStore(
    { items, renderedItems: initialState.renderedItems },
    syncPrivateStore
  );
  const collection = createStore(initialState, props.store);
  const sortItems = (renderedItems) => {
    const sortedItems = sortBasedOnDOMPosition(renderedItems);
    privateStore.setState("renderedItems", sortedItems);
    collection.setState("renderedItems", sortedItems);
  };
  setup(collection, () => init(privateStore));
  setup(privateStore, () => {
    return batch(privateStore, ["items"], (state) => {
      collection.setState("items", state.items);
    });
  });
  setup(privateStore, () => {
    return batch(privateStore, ["renderedItems"], (state) => {
      let firstRun = true;
      let raf = requestAnimationFrame(() => {
        const { renderedItems } = collection.getState();
        if (state.renderedItems === renderedItems) return;
        sortItems(state.renderedItems);
      });
      if (typeof IntersectionObserver !== "function") {
        return () => cancelAnimationFrame(raf);
      }
      const ioCallback = () => {
        if (firstRun) {
          firstRun = false;
          return;
        }
        cancelAnimationFrame(raf);
        raf = requestAnimationFrame(() => sortItems(state.renderedItems));
      };
      const root = getCommonParent(state.renderedItems);
      const observer = new IntersectionObserver(ioCallback, { root });
      for (const item of state.renderedItems) {
        if (!item.element) continue;
        observer.observe(item.element);
      }
      return () => {
        cancelAnimationFrame(raf);
        observer.disconnect();
      };
    });
  });
  const mergeItem = (item, setItems, canDeleteFromMap = false) => {
    let prevItem;
    setItems((items2) => {
      const index = items2.findIndex(({ id }) => id === item.id);
      const nextItems = items2.slice();
      if (index !== -1) {
        prevItem = items2[index];
        const nextItem = __spreadValues2(__spreadValues2({}, prevItem), item);
        nextItems[index] = nextItem;
        itemsMap.set(item.id, nextItem);
      } else {
        nextItems.push(item);
        itemsMap.set(item.id, item);
      }
      return nextItems;
    });
    const unmergeItem = () => {
      setItems((items2) => {
        if (!prevItem) {
          if (canDeleteFromMap) {
            itemsMap.delete(item.id);
          }
          return items2.filter(({ id }) => id !== item.id);
        }
        const index = items2.findIndex(({ id }) => id === item.id);
        if (index === -1) return items2;
        const nextItems = items2.slice();
        nextItems[index] = prevItem;
        itemsMap.set(item.id, prevItem);
        return nextItems;
      });
    };
    return unmergeItem;
  };
  const registerItem = (item) => mergeItem(
    item,
    (getItems) => privateStore.setState("items", getItems),
    true
  );
  return __spreadProps2(__spreadValues2({}, collection), {
    registerItem,
    renderItem: (item) => chain(
      registerItem(item),
      mergeItem(
        item,
        (getItems) => privateStore.setState("renderedItems", getItems)
      )
    ),
    item: (id) => {
      if (!id) return null;
      let item = itemsMap.get(id);
      if (!item) {
        const { items: items2 } = collection.getState();
        item = items2.find((item2) => item2.id === id);
        if (item) {
          itemsMap.set(id, item);
        }
      }
      return item || null;
    },
    // @ts-expect-error Internal
    __unstablePrivateStore: privateStore
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/QZUWIJQN.js
function useCollectionStoreProps(store, update, props) {
  useUpdateEffect(update, [props.store]);
  useStoreProps(store, props, "items", "setItems");
  return store;
}

// node_modules/@ariakit/core/esm/__chunks/7PRQYBBV.js
function toArray(arg) {
  if (Array.isArray(arg)) {
    return arg;
  }
  return typeof arg !== "undefined" ? [arg] : [];
}
function flatten2DArray(array) {
  const flattened = [];
  for (const row of array) {
    flattened.push(...row);
  }
  return flattened;
}
function reverseArray(array) {
  return array.slice().reverse();
}

// node_modules/@ariakit/core/esm/__chunks/IJ6VFLJG.js
var NULL_ITEM = { id: null };
function findFirstEnabledItem(items, excludeId) {
  return items.find((item) => {
    if (excludeId) {
      return !item.disabled && item.id !== excludeId;
    }
    return !item.disabled;
  });
}
function getEnabledItems(items, excludeId) {
  return items.filter((item) => {
    if (excludeId) {
      return !item.disabled && item.id !== excludeId;
    }
    return !item.disabled;
  });
}
function getItemsInRow(items, rowId) {
  return items.filter((item) => item.rowId === rowId);
}
function flipItems(items, activeId, shouldInsertNullItem = false) {
  const index = items.findIndex((item) => item.id === activeId);
  return [
    ...items.slice(index + 1),
    ...shouldInsertNullItem ? [NULL_ITEM] : [],
    ...items.slice(0, index)
  ];
}
function groupItemsByRows(items) {
  const rows = [];
  for (const item of items) {
    const row = rows.find((currentRow) => {
      var _a2;
      return ((_a2 = currentRow[0]) == null ? void 0 : _a2.rowId) === item.rowId;
    });
    if (row) {
      row.push(item);
    } else {
      rows.push([item]);
    }
  }
  return rows;
}
function getMaxRowLength(array) {
  let maxLength = 0;
  for (const { length } of array) {
    if (length > maxLength) {
      maxLength = length;
    }
  }
  return maxLength;
}
function createEmptyItem(rowId) {
  return {
    id: "__EMPTY_ITEM__",
    disabled: true,
    rowId
  };
}
function normalizeRows(rows, activeId, focusShift) {
  const maxLength = getMaxRowLength(rows);
  for (const row of rows) {
    for (let i = 0; i < maxLength; i += 1) {
      const item = row[i];
      if (!item || focusShift && item.disabled) {
        const isFirst = i === 0;
        const previousItem = isFirst && focusShift ? findFirstEnabledItem(row) : row[i - 1];
        row[i] = previousItem && activeId !== previousItem.id && focusShift ? previousItem : createEmptyItem(previousItem == null ? void 0 : previousItem.rowId);
      }
    }
  }
  return rows;
}
function verticalizeItems(items) {
  const rows = groupItemsByRows(items);
  const maxLength = getMaxRowLength(rows);
  const verticalized = [];
  for (let i = 0; i < maxLength; i += 1) {
    for (const row of rows) {
      const item = row[i];
      if (item) {
        verticalized.push(__spreadProps2(__spreadValues2({}, item), {
          // If there's no rowId, it means that it's not a grid composite, but
          // a single row instead. So, instead of verticalizing it, that is,
          // assigning a different rowId based on the column index, we keep it
          // undefined so they will be part of the same row. This is useful
          // when using up/down on one-dimensional composites.
          rowId: item.rowId ? `${i}` : void 0
        }));
      }
    }
  }
  return verticalized;
}
function createCompositeStore(props = {}) {
  var _a2;
  const syncState = (_a2 = props.store) == null ? void 0 : _a2.getState();
  const collection = createCollectionStore(props);
  const activeId = defaultValue(
    props.activeId,
    syncState == null ? void 0 : syncState.activeId,
    props.defaultActiveId
  );
  const initialState = __spreadProps2(__spreadValues2({}, collection.getState()), {
    activeId,
    baseElement: defaultValue(syncState == null ? void 0 : syncState.baseElement, null),
    includesBaseElement: defaultValue(
      props.includesBaseElement,
      syncState == null ? void 0 : syncState.includesBaseElement,
      activeId === null
    ),
    moves: defaultValue(syncState == null ? void 0 : syncState.moves, 0),
    orientation: defaultValue(
      props.orientation,
      syncState == null ? void 0 : syncState.orientation,
      "both"
    ),
    rtl: defaultValue(props.rtl, syncState == null ? void 0 : syncState.rtl, false),
    virtualFocus: defaultValue(
      props.virtualFocus,
      syncState == null ? void 0 : syncState.virtualFocus,
      false
    ),
    focusLoop: defaultValue(props.focusLoop, syncState == null ? void 0 : syncState.focusLoop, false),
    focusWrap: defaultValue(props.focusWrap, syncState == null ? void 0 : syncState.focusWrap, false),
    focusShift: defaultValue(props.focusShift, syncState == null ? void 0 : syncState.focusShift, false)
  });
  const composite = createStore(initialState, collection, props.store);
  setup(
    composite,
    () => sync(composite, ["renderedItems", "activeId"], (state) => {
      composite.setState("activeId", (activeId2) => {
        var _a22;
        if (activeId2 !== void 0) return activeId2;
        return (_a22 = findFirstEnabledItem(state.renderedItems)) == null ? void 0 : _a22.id;
      });
    })
  );
  const getNextId = (direction = "next", options = {}) => {
    var _a22, _b;
    const defaultState = composite.getState();
    const {
      skip = 0,
      activeId: activeId2 = defaultState.activeId,
      focusShift = defaultState.focusShift,
      focusLoop = defaultState.focusLoop,
      focusWrap = defaultState.focusWrap,
      includesBaseElement = defaultState.includesBaseElement,
      renderedItems = defaultState.renderedItems,
      rtl = defaultState.rtl
    } = options;
    const isVerticalDirection = direction === "up" || direction === "down";
    const isNextDirection = direction === "next" || direction === "down";
    const canReverse = isNextDirection ? rtl && !isVerticalDirection : !rtl || isVerticalDirection;
    const canShift = focusShift && !skip;
    let items = !isVerticalDirection ? renderedItems : flatten2DArray(
      normalizeRows(groupItemsByRows(renderedItems), activeId2, canShift)
    );
    items = canReverse ? reverseArray(items) : items;
    items = isVerticalDirection ? verticalizeItems(items) : items;
    if (activeId2 == null) {
      return (_a22 = findFirstEnabledItem(items)) == null ? void 0 : _a22.id;
    }
    const activeItem = items.find((item) => item.id === activeId2);
    if (!activeItem) {
      return (_b = findFirstEnabledItem(items)) == null ? void 0 : _b.id;
    }
    const isGrid2 = items.some((item) => item.rowId);
    const activeIndex = items.indexOf(activeItem);
    const nextItems = items.slice(activeIndex + 1);
    const nextItemsInRow = getItemsInRow(nextItems, activeItem.rowId);
    if (skip) {
      const nextEnabledItemsInRow = getEnabledItems(nextItemsInRow, activeId2);
      const nextItem2 = nextEnabledItemsInRow.slice(skip)[0] || // If we can't find an item, just return the last one.
      nextEnabledItemsInRow[nextEnabledItemsInRow.length - 1];
      return nextItem2 == null ? void 0 : nextItem2.id;
    }
    const canLoop = focusLoop && (isVerticalDirection ? focusLoop !== "horizontal" : focusLoop !== "vertical");
    const canWrap = isGrid2 && focusWrap && (isVerticalDirection ? focusWrap !== "horizontal" : focusWrap !== "vertical");
    const hasNullItem = isNextDirection ? (!isGrid2 || isVerticalDirection) && canLoop && includesBaseElement : isVerticalDirection ? includesBaseElement : false;
    if (canLoop) {
      const loopItems = canWrap && !hasNullItem ? items : getItemsInRow(items, activeItem.rowId);
      const sortedItems = flipItems(loopItems, activeId2, hasNullItem);
      const nextItem2 = findFirstEnabledItem(sortedItems, activeId2);
      return nextItem2 == null ? void 0 : nextItem2.id;
    }
    if (canWrap) {
      const nextItem2 = findFirstEnabledItem(
        // We can use nextItems, which contains all the next items, including
        // items from other rows, to wrap between rows. However, if there is a
        // null item (the composite container), we'll only use the next items in
        // the row. So moving next from the last item will focus on the
        // composite container. On grid composites, horizontal navigation never
        // focuses on the composite container, only vertical.
        hasNullItem ? nextItemsInRow : nextItems,
        activeId2
      );
      const nextId = hasNullItem ? (nextItem2 == null ? void 0 : nextItem2.id) || null : nextItem2 == null ? void 0 : nextItem2.id;
      return nextId;
    }
    const nextItem = findFirstEnabledItem(nextItemsInRow, activeId2);
    if (!nextItem && hasNullItem) {
      return null;
    }
    return nextItem == null ? void 0 : nextItem.id;
  };
  return __spreadProps2(__spreadValues2(__spreadValues2({}, collection), composite), {
    setBaseElement: (element) => composite.setState("baseElement", element),
    setActiveId: (id) => composite.setState("activeId", id),
    move: (id) => {
      if (id === void 0) return;
      composite.setState("activeId", id);
      composite.setState("moves", (moves) => moves + 1);
    },
    first: () => {
      var _a22;
      return (_a22 = findFirstEnabledItem(composite.getState().renderedItems)) == null ? void 0 : _a22.id;
    },
    last: () => {
      var _a22;
      return (_a22 = findFirstEnabledItem(reverseArray(composite.getState().renderedItems))) == null ? void 0 : _a22.id;
    },
    next: (options) => {
      if (options !== void 0 && typeof options === "number") {
        options = { skip: options };
      }
      return getNextId("next", options);
    },
    previous: (options) => {
      if (options !== void 0 && typeof options === "number") {
        options = { skip: options };
      }
      return getNextId("previous", options);
    },
    down: (options) => {
      if (options !== void 0 && typeof options === "number") {
        options = { skip: options };
      }
      return getNextId("down", options);
    },
    up: (options) => {
      if (options !== void 0 && typeof options === "number") {
        options = { skip: options };
      }
      return getNextId("up", options);
    }
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/OIB4PV4M.js
function useCompositeStoreProps(store, update, props) {
  store = useCollectionStoreProps(store, update, props);
  useStoreProps(store, props, "activeId", "setActiveId");
  useStoreProps(store, props, "includesBaseElement");
  useStoreProps(store, props, "virtualFocus");
  useStoreProps(store, props, "orientation");
  useStoreProps(store, props, "rtl");
  useStoreProps(store, props, "focusLoop");
  useStoreProps(store, props, "focusWrap");
  useStoreProps(store, props, "focusShift");
  return store;
}

// node_modules/@ariakit/core/esm/__chunks/6E4KKOSB.js
function createDisclosureStore(props = {}) {
  const store = mergeStore(
    props.store,
    omit2(props.disclosure, ["contentElement", "disclosureElement"])
  );
  throwOnConflictingProps(props, store);
  const syncState = store == null ? void 0 : store.getState();
  const open = defaultValue(
    props.open,
    syncState == null ? void 0 : syncState.open,
    props.defaultOpen,
    false
  );
  const animated = defaultValue(props.animated, syncState == null ? void 0 : syncState.animated, false);
  const initialState = {
    open,
    animated,
    animating: !!animated && open,
    mounted: open,
    contentElement: defaultValue(syncState == null ? void 0 : syncState.contentElement, null),
    disclosureElement: defaultValue(syncState == null ? void 0 : syncState.disclosureElement, null)
  };
  const disclosure = createStore(initialState, store);
  setup(
    disclosure,
    () => sync(disclosure, ["animated", "animating"], (state) => {
      if (state.animated) return;
      disclosure.setState("animating", false);
    })
  );
  setup(
    disclosure,
    () => subscribe(disclosure, ["open"], () => {
      if (!disclosure.getState().animated) return;
      disclosure.setState("animating", true);
    })
  );
  setup(
    disclosure,
    () => sync(disclosure, ["open", "animating"], (state) => {
      disclosure.setState("mounted", state.open || state.animating);
    })
  );
  return __spreadProps2(__spreadValues2({}, disclosure), {
    disclosure: props.disclosure,
    setOpen: (value) => disclosure.setState("open", value),
    show: () => disclosure.setState("open", true),
    hide: () => disclosure.setState("open", false),
    toggle: () => disclosure.setState("open", (open2) => !open2),
    stopAnimation: () => disclosure.setState("animating", false),
    setContentElement: (value) => disclosure.setState("contentElement", value),
    setDisclosureElement: (value) => disclosure.setState("disclosureElement", value)
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/C76P7QQC.js
function useDisclosureStoreProps(store, update, props) {
  useUpdateEffect(update, [props.store, props.disclosure]);
  useStoreProps(store, props, "open", "setOpen");
  useStoreProps(store, props, "mounted", "setMounted");
  useStoreProps(store, props, "animated");
  return Object.assign(store, { disclosure: props.disclosure });
}
function useDisclosureStore(props = {}) {
  const [store, update] = useStore(createDisclosureStore, props);
  return useDisclosureStoreProps(store, update, props);
}

// node_modules/@ariakit/core/esm/__chunks/YOHCVXJB.js
function createDialogStore(props = {}) {
  return createDisclosureStore(props);
}

// node_modules/@ariakit/react-core/esm/__chunks/B5WJDZ55.js
function useDialogStoreProps(store, update, props) {
  return useDisclosureStoreProps(store, update, props);
}
function useDialogStore(props = {}) {
  const [store, update] = useStore(createDialogStore, props);
  return useDialogStoreProps(store, update, props);
}

// node_modules/@ariakit/core/esm/__chunks/3UYWTADI.js
function createPopoverStore(_a2 = {}) {
  var _b = _a2, {
    popover: otherPopover
  } = _b, props = __objRest2(_b, [
    "popover"
  ]);
  const store = mergeStore(
    props.store,
    omit2(otherPopover, [
      "arrowElement",
      "anchorElement",
      "contentElement",
      "popoverElement",
      "disclosureElement"
    ])
  );
  throwOnConflictingProps(props, store);
  const syncState = store == null ? void 0 : store.getState();
  const dialog = createDialogStore(__spreadProps2(__spreadValues2({}, props), { store }));
  const placement = defaultValue(
    props.placement,
    syncState == null ? void 0 : syncState.placement,
    "bottom"
  );
  const initialState = __spreadProps2(__spreadValues2({}, dialog.getState()), {
    placement,
    currentPlacement: placement,
    anchorElement: defaultValue(syncState == null ? void 0 : syncState.anchorElement, null),
    popoverElement: defaultValue(syncState == null ? void 0 : syncState.popoverElement, null),
    arrowElement: defaultValue(syncState == null ? void 0 : syncState.arrowElement, null),
    rendered: Symbol("rendered")
  });
  const popover = createStore(initialState, dialog, store);
  return __spreadProps2(__spreadValues2(__spreadValues2({}, dialog), popover), {
    setAnchorElement: (element) => popover.setState("anchorElement", element),
    setPopoverElement: (element) => popover.setState("popoverElement", element),
    setArrowElement: (element) => popover.setState("arrowElement", element),
    render: () => popover.setState("rendered", Symbol("rendered"))
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/CO7ZDQU2.js
function usePopoverStoreProps(store, update, props) {
  useUpdateEffect(update, [props.popover]);
  useStoreProps(store, props, "placement");
  return useDialogStoreProps(store, update, props);
}
function usePopoverStore(props = {}) {
  const [store, update] = useStore(createPopoverStore, props);
  return usePopoverStoreProps(store, update, props);
}

// node_modules/@ariakit/core/esm/combobox/combobox-store.js
var isTouchSafari = isSafari() && isTouchDevice();
function createComboboxStore(_a2 = {}) {
  var _b = _a2, {
    tag
  } = _b, props = __objRest2(_b, [
    "tag"
  ]);
  const store = mergeStore(props.store, pick2(tag, ["value", "rtl"]));
  throwOnConflictingProps(props, store);
  const tagState = tag == null ? void 0 : tag.getState();
  const syncState = store == null ? void 0 : store.getState();
  const activeId = defaultValue(
    props.activeId,
    syncState == null ? void 0 : syncState.activeId,
    props.defaultActiveId,
    null
  );
  const composite = createCompositeStore(__spreadProps2(__spreadValues2({}, props), {
    activeId,
    includesBaseElement: defaultValue(
      props.includesBaseElement,
      syncState == null ? void 0 : syncState.includesBaseElement,
      true
    ),
    orientation: defaultValue(
      props.orientation,
      syncState == null ? void 0 : syncState.orientation,
      "vertical"
    ),
    focusLoop: defaultValue(props.focusLoop, syncState == null ? void 0 : syncState.focusLoop, true),
    focusWrap: defaultValue(props.focusWrap, syncState == null ? void 0 : syncState.focusWrap, true),
    virtualFocus: defaultValue(
      props.virtualFocus,
      syncState == null ? void 0 : syncState.virtualFocus,
      true
    )
  }));
  const popover = createPopoverStore(__spreadProps2(__spreadValues2({}, props), {
    placement: defaultValue(
      props.placement,
      syncState == null ? void 0 : syncState.placement,
      "bottom-start"
    )
  }));
  const value = defaultValue(
    props.value,
    syncState == null ? void 0 : syncState.value,
    props.defaultValue,
    ""
  );
  const selectedValue = defaultValue(
    props.selectedValue,
    syncState == null ? void 0 : syncState.selectedValue,
    tagState == null ? void 0 : tagState.values,
    props.defaultSelectedValue,
    ""
  );
  const multiSelectable = Array.isArray(selectedValue);
  const initialState = __spreadProps2(__spreadValues2(__spreadValues2({}, composite.getState()), popover.getState()), {
    value,
    selectedValue,
    resetValueOnSelect: defaultValue(
      props.resetValueOnSelect,
      syncState == null ? void 0 : syncState.resetValueOnSelect,
      multiSelectable
    ),
    resetValueOnHide: defaultValue(
      props.resetValueOnHide,
      syncState == null ? void 0 : syncState.resetValueOnHide,
      multiSelectable && !tag
    ),
    activeValue: syncState == null ? void 0 : syncState.activeValue
  });
  const combobox = createStore(initialState, composite, popover, store);
  if (isTouchSafari) {
    setup(
      combobox,
      () => sync(combobox, ["virtualFocus"], () => {
        combobox.setState("virtualFocus", false);
      })
    );
  }
  setup(combobox, () => {
    if (!tag) return;
    return chain(
      sync(combobox, ["selectedValue"], (state) => {
        if (!Array.isArray(state.selectedValue)) return;
        tag.setValues(state.selectedValue);
      }),
      sync(tag, ["values"], (state) => {
        combobox.setState("selectedValue", state.values);
      })
    );
  });
  setup(
    combobox,
    () => sync(combobox, ["resetValueOnHide", "mounted"], (state) => {
      if (!state.resetValueOnHide) return;
      if (state.mounted) return;
      combobox.setState("value", value);
    })
  );
  setup(
    combobox,
    () => sync(combobox, ["open"], (state) => {
      if (state.open) return;
      combobox.setState("activeId", activeId);
      combobox.setState("moves", 0);
    })
  );
  setup(
    combobox,
    () => sync(combobox, ["moves", "activeId"], (state, prevState) => {
      if (state.moves === prevState.moves) {
        combobox.setState("activeValue", void 0);
      }
    })
  );
  setup(
    combobox,
    () => batch(combobox, ["moves", "renderedItems"], (state, prev) => {
      if (state.moves === prev.moves) return;
      const { activeId: activeId2 } = combobox.getState();
      const activeItem = composite.item(activeId2);
      combobox.setState("activeValue", activeItem == null ? void 0 : activeItem.value);
    })
  );
  return __spreadProps2(__spreadValues2(__spreadValues2(__spreadValues2({}, popover), composite), combobox), {
    tag,
    setValue: (value2) => combobox.setState("value", value2),
    resetValue: () => combobox.setState("value", initialState.value),
    setSelectedValue: (selectedValue2) => combobox.setState("selectedValue", selectedValue2)
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/E6AN77M4.js
function useComboboxStoreProps(store, update, props) {
  useUpdateEffect(update, [props.tag]);
  useStoreProps(store, props, "value", "setValue");
  useStoreProps(store, props, "selectedValue", "setSelectedValue");
  useStoreProps(store, props, "resetValueOnHide");
  useStoreProps(store, props, "resetValueOnSelect");
  return Object.assign(
    useCompositeStoreProps(
      usePopoverStoreProps(store, update, props),
      update,
      props
    ),
    { tag: props.tag }
  );
}
function useComboboxStore(props = {}) {
  const tag = useTagContext();
  props = __spreadProps(__spreadValues({}, props), {
    tag: props.tag !== void 0 ? props.tag : tag
  });
  const [store, update] = useStore(createComboboxStore, props);
  return useComboboxStoreProps(store, update, props);
}

// node_modules/@ariakit/react-core/esm/__chunks/JDEWEW7S.js
var ctx4 = createStoreContext();
var useDisclosureContext = ctx4.useContext;
var useDisclosureScopedContext = ctx4.useScopedContext;
var useDisclosureProviderContext = ctx4.useProviderContext;
var DisclosureContextProvider = ctx4.ContextProvider;
var DisclosureScopedContextProvider = ctx4.ScopedContextProvider;

// node_modules/@ariakit/react-core/esm/__chunks/CMXOY7UW.js
var import_react5 = __toESM(require_react(), 1);
var ctx5 = createStoreContext(
  [DisclosureContextProvider],
  [DisclosureScopedContextProvider]
);
var useDialogContext = ctx5.useContext;
var useDialogScopedContext = ctx5.useScopedContext;
var useDialogProviderContext = ctx5.useProviderContext;
var DialogContextProvider = ctx5.ContextProvider;
var DialogScopedContextProvider = ctx5.ScopedContextProvider;
var DialogHeadingContext = (0, import_react5.createContext)(void 0);
var DialogDescriptionContext = (0, import_react5.createContext)(void 0);

// node_modules/@ariakit/react-core/esm/__chunks/COWZSPJ7.js
var ctx6 = createStoreContext(
  [DialogContextProvider],
  [DialogScopedContextProvider]
);
var usePopoverContext = ctx6.useContext;
var usePopoverScopedContext = ctx6.useScopedContext;
var usePopoverProviderContext = ctx6.useProviderContext;
var PopoverContextProvider = ctx6.ContextProvider;
var PopoverScopedContextProvider = ctx6.ScopedContextProvider;

// node_modules/@ariakit/react-core/esm/__chunks/3LH6HMTR.js
var import_react6 = __toESM(require_react(), 1);
var ComboboxListRoleContext = (0, import_react6.createContext)(
  void 0
);
var ctx7 = createStoreContext(
  [PopoverContextProvider, CompositeContextProvider],
  [PopoverScopedContextProvider, CompositeScopedContextProvider]
);
var useComboboxContext = ctx7.useContext;
var useComboboxScopedContext = ctx7.useScopedContext;
var useComboboxProviderContext = ctx7.useProviderContext;
var ComboboxContextProvider = ctx7.ContextProvider;
var ComboboxScopedContextProvider = ctx7.ScopedContextProvider;
var ComboboxItemValueContext = (0, import_react6.createContext)(
  void 0
);
var ComboboxItemCheckedContext = (0, import_react6.createContext)(false);

// node_modules/@ariakit/react-core/esm/__chunks/NWYOIOBE.js
var TagName = "div";
var usePopoverAnchor = createHook(
  function usePopoverAnchor2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = usePopoverProviderContext();
    store = store || context;
    props = __spreadProps(__spreadValues({}, props), {
      ref: useMergeRefs(store == null ? void 0 : store.setAnchorElement, props.ref)
    });
    return props;
  }
);
var PopoverAnchor = forwardRef2(function PopoverAnchor2(props) {
  const htmlProps = usePopoverAnchor(props);
  return createElement(TagName, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/5VQZOHHZ.js
var NULL_ITEM2 = { id: null };
function flipItems2(items, activeId, shouldInsertNullItem = false) {
  const index = items.findIndex((item) => item.id === activeId);
  return [
    ...items.slice(index + 1),
    ...shouldInsertNullItem ? [NULL_ITEM2] : [],
    ...items.slice(0, index)
  ];
}
function findFirstEnabledItem2(items, excludeId) {
  return items.find((item) => {
    if (excludeId) {
      return !item.disabled && item.id !== excludeId;
    }
    return !item.disabled;
  });
}
function getEnabledItem(store, id) {
  if (!id) return null;
  return store.item(id) || null;
}
function groupItemsByRows2(items) {
  const rows = [];
  for (const item of items) {
    const row = rows.find((currentRow) => {
      var _a2;
      return ((_a2 = currentRow[0]) == null ? void 0 : _a2.rowId) === item.rowId;
    });
    if (row) {
      row.push(item);
    } else {
      rows.push([item]);
    }
  }
  return rows;
}
function selectTextField(element, collapseToEnd = false) {
  if (isTextField(element)) {
    element.setSelectionRange(
      collapseToEnd ? element.value.length : 0,
      element.value.length
    );
  } else if (element.isContentEditable) {
    const selection = getDocument(element).getSelection();
    selection == null ? void 0 : selection.selectAllChildren(element);
    if (collapseToEnd) {
      selection == null ? void 0 : selection.collapseToEnd();
    }
  }
}
var FOCUS_SILENTLY = Symbol("FOCUS_SILENTLY");
function focusSilently(element) {
  element[FOCUS_SILENTLY] = true;
  element.focus({ preventScroll: true });
}
function silentlyFocused(element) {
  const isSilentlyFocused = element[FOCUS_SILENTLY];
  delete element[FOCUS_SILENTLY];
  return isSilentlyFocused;
}
function isItem(store, element, exclude) {
  if (!element) return false;
  if (element === exclude) return false;
  const item = store.item(element.id);
  if (!item) return false;
  if (exclude && item.element === exclude) return false;
  return true;
}

// node_modules/@ariakit/react-core/esm/__chunks/SWN3JYXT.js
var import_react7 = __toESM(require_react(), 1);
var FocusableContext = (0, import_react7.createContext)(true);

// node_modules/@ariakit/core/esm/utils/focus.js
var selector = "input:not([type='hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], summary, iframe, object, embed, area[href], audio[controls], video[controls], [contenteditable]:not([contenteditable='false'])";
function hasNegativeTabIndex(element) {
  const tabIndex = Number.parseInt(element.getAttribute("tabindex") || "0", 10);
  return tabIndex < 0;
}
function isFocusable(element) {
  if (!element.matches(selector)) return false;
  if (!isVisible(element)) return false;
  if (element.closest("[inert]")) return false;
  return true;
}
function isTabbable(element) {
  if (!isFocusable(element)) return false;
  if (hasNegativeTabIndex(element)) return false;
  if (!("form" in element)) return true;
  if (!element.form) return true;
  if (element.checked) return true;
  if (element.type !== "radio") return true;
  const radioGroup = element.form.elements.namedItem(element.name);
  if (!radioGroup) return true;
  if (!("length" in radioGroup)) return true;
  const activeElement = getActiveElement(element);
  if (!activeElement) return true;
  if (activeElement === element) return true;
  if (!("form" in activeElement)) return true;
  if (activeElement.form !== element.form) return true;
  if (activeElement.name !== element.name) return true;
  return false;
}
function getAllFocusableIn(container, includeContainer) {
  const elements2 = Array.from(
    container.querySelectorAll(selector)
  );
  if (includeContainer) {
    elements2.unshift(container);
  }
  const focusableElements = elements2.filter(isFocusable);
  focusableElements.forEach((element, i) => {
    if (isFrame(element) && element.contentDocument) {
      const frameBody = element.contentDocument.body;
      focusableElements.splice(i, 1, ...getAllFocusableIn(frameBody));
    }
  });
  return focusableElements;
}
function getAllTabbableIn(container, includeContainer, fallbackToFocusable) {
  const elements2 = Array.from(
    container.querySelectorAll(selector)
  );
  const tabbableElements = elements2.filter(isTabbable);
  if (includeContainer && isTabbable(container)) {
    tabbableElements.unshift(container);
  }
  tabbableElements.forEach((element, i) => {
    if (isFrame(element) && element.contentDocument) {
      const frameBody = element.contentDocument.body;
      const allFrameTabbable = getAllTabbableIn(
        frameBody,
        false,
        fallbackToFocusable
      );
      tabbableElements.splice(i, 1, ...allFrameTabbable);
    }
  });
  if (!tabbableElements.length && fallbackToFocusable) {
    return elements2;
  }
  return tabbableElements;
}
function getFirstTabbableIn(container, includeContainer, fallbackToFocusable) {
  const [first] = getAllTabbableIn(
    container,
    includeContainer,
    fallbackToFocusable
  );
  return first || null;
}
function getNextTabbableIn(container, includeContainer, fallbackToFirst, fallbackToFocusable) {
  const activeElement = getActiveElement(container);
  const allFocusable = getAllFocusableIn(container, includeContainer);
  const activeIndex = allFocusable.indexOf(activeElement);
  const nextFocusableElements = allFocusable.slice(activeIndex + 1);
  return nextFocusableElements.find(isTabbable) || (fallbackToFirst ? allFocusable.find(isTabbable) : null) || (fallbackToFocusable ? nextFocusableElements[0] : null) || null;
}
function getNextTabbable(fallbackToFirst, fallbackToFocusable) {
  return getNextTabbableIn(
    document.body,
    false,
    fallbackToFirst,
    fallbackToFocusable
  );
}
function getPreviousTabbableIn(container, includeContainer, fallbackToLast, fallbackToFocusable) {
  const activeElement = getActiveElement(container);
  const allFocusable = getAllFocusableIn(container, includeContainer).reverse();
  const activeIndex = allFocusable.indexOf(activeElement);
  const previousFocusableElements = allFocusable.slice(activeIndex + 1);
  return previousFocusableElements.find(isTabbable) || (fallbackToLast ? allFocusable.find(isTabbable) : null) || (fallbackToFocusable ? previousFocusableElements[0] : null) || null;
}
function getPreviousTabbable(fallbackToFirst, fallbackToFocusable) {
  return getPreviousTabbableIn(
    document.body,
    false,
    fallbackToFirst,
    fallbackToFocusable
  );
}
function getClosestFocusable(element) {
  while (element && !isFocusable(element)) {
    element = element.closest(selector);
  }
  return element || null;
}
function hasFocus(element) {
  const activeElement = getActiveElement(element);
  if (!activeElement) return false;
  if (activeElement === element) return true;
  const activeDescendant = activeElement.getAttribute("aria-activedescendant");
  if (!activeDescendant) return false;
  return activeDescendant === element.id;
}
function hasFocusWithin(element) {
  const activeElement = getActiveElement(element);
  if (!activeElement) return false;
  if (contains(element, activeElement)) return true;
  const activeDescendant = activeElement.getAttribute("aria-activedescendant");
  if (!activeDescendant) return false;
  if (!("id" in element)) return false;
  if (activeDescendant === element.id) return true;
  return !!element.querySelector(`#${CSS.escape(activeDescendant)}`);
}
function focusIfNeeded(element) {
  if (!hasFocusWithin(element) && isFocusable(element)) {
    element.focus();
  }
}
function disableFocus(element) {
  var _a2;
  const currentTabindex = (_a2 = element.getAttribute("tabindex")) != null ? _a2 : "";
  element.setAttribute("data-tabindex", currentTabindex);
  element.setAttribute("tabindex", "-1");
}
function disableFocusIn(container, includeContainer) {
  const tabbableElements = getAllTabbableIn(container, includeContainer);
  for (const element of tabbableElements) {
    disableFocus(element);
  }
}
function restoreFocusIn(container) {
  const elements2 = container.querySelectorAll("[data-tabindex]");
  const restoreTabIndex = (element) => {
    const tabindex = element.getAttribute("data-tabindex");
    element.removeAttribute("data-tabindex");
    if (tabindex) {
      element.setAttribute("tabindex", tabindex);
    } else {
      element.removeAttribute("tabindex");
    }
  };
  if (container.hasAttribute("data-tabindex")) {
    restoreTabIndex(container);
  }
  for (const element of elements2) {
    restoreTabIndex(element);
  }
}
function focusIntoView(element, options) {
  if (!("scrollIntoView" in element)) {
    element.focus();
  } else {
    element.focus({ preventScroll: true });
    element.scrollIntoView(__spreadValues2({ block: "nearest", inline: "nearest" }, options));
  }
}

// node_modules/@ariakit/react-core/esm/__chunks/Z4WWVOIF.js
var import_react8 = __toESM(require_react(), 1);
var TagName2 = "div";
var isSafariBrowser = isSafari();
var alwaysFocusVisibleInputTypes = [
  "text",
  "search",
  "url",
  "tel",
  "email",
  "password",
  "number",
  "date",
  "month",
  "week",
  "time",
  "datetime",
  "datetime-local"
];
var safariFocusAncestorSymbol = Symbol("safariFocusAncestor");
function isSafariFocusAncestor(element) {
  if (!element) return false;
  return !!element[safariFocusAncestorSymbol];
}
function markSafariFocusAncestor(element, value) {
  if (!element) return;
  element[safariFocusAncestorSymbol] = value;
}
function isAlwaysFocusVisible(element) {
  const { tagName, readOnly, type } = element;
  if (tagName === "TEXTAREA" && !readOnly) return true;
  if (tagName === "SELECT" && !readOnly) return true;
  if (tagName === "INPUT" && !readOnly) {
    return alwaysFocusVisibleInputTypes.includes(type);
  }
  if (element.isContentEditable) return true;
  const role = element.getAttribute("role");
  if (role === "combobox" && element.dataset.name) {
    return true;
  }
  return false;
}
function getLabels(element) {
  if ("labels" in element) {
    return element.labels;
  }
  return null;
}
function isNativeCheckboxOrRadio(element) {
  const tagName = element.tagName.toLowerCase();
  if (tagName === "input" && element.type) {
    return element.type === "radio" || element.type === "checkbox";
  }
  return false;
}
function isNativeTabbable(tagName) {
  if (!tagName) return true;
  return tagName === "button" || tagName === "summary" || tagName === "input" || tagName === "select" || tagName === "textarea" || tagName === "a";
}
function supportsDisabledAttribute(tagName) {
  if (!tagName) return true;
  return tagName === "button" || tagName === "input" || tagName === "select" || tagName === "textarea";
}
function getTabIndex(focusable, trulyDisabled, nativeTabbable, supportsDisabled, tabIndexProp) {
  if (!focusable) {
    return tabIndexProp;
  }
  if (trulyDisabled) {
    if (nativeTabbable && !supportsDisabled) {
      return -1;
    }
    return;
  }
  if (nativeTabbable) {
    return tabIndexProp;
  }
  return tabIndexProp || 0;
}
function useDisableEvent(onEvent, disabled) {
  return useEvent((event) => {
    onEvent == null ? void 0 : onEvent(event);
    if (event.defaultPrevented) return;
    if (disabled) {
      event.stopPropagation();
      event.preventDefault();
    }
  });
}
var isKeyboardModality = true;
function onGlobalMouseDown(event) {
  const target = event.target;
  if (target && "hasAttribute" in target) {
    if (!target.hasAttribute("data-focus-visible")) {
      isKeyboardModality = false;
    }
  }
}
function onGlobalKeyDown(event) {
  if (event.metaKey) return;
  if (event.ctrlKey) return;
  if (event.altKey) return;
  isKeyboardModality = true;
}
var useFocusable = createHook(
  function useFocusable2(_a2) {
    var _b = _a2, {
      focusable = true,
      accessibleWhenDisabled,
      autoFocus,
      onFocusVisible
    } = _b, props = __objRest(_b, [
      "focusable",
      "accessibleWhenDisabled",
      "autoFocus",
      "onFocusVisible"
    ]);
    const ref = (0, import_react8.useRef)(null);
    (0, import_react8.useEffect)(() => {
      if (!focusable) return;
      addGlobalEventListener("mousedown", onGlobalMouseDown, true);
      addGlobalEventListener("keydown", onGlobalKeyDown, true);
    }, [focusable]);
    if (isSafariBrowser) {
      (0, import_react8.useEffect)(() => {
        if (!focusable) return;
        const element = ref.current;
        if (!element) return;
        if (!isNativeCheckboxOrRadio(element)) return;
        const labels = getLabels(element);
        if (!labels) return;
        const onMouseUp = () => queueMicrotask(() => element.focus());
        for (const label of labels) {
          label.addEventListener("mouseup", onMouseUp);
        }
        return () => {
          for (const label of labels) {
            label.removeEventListener("mouseup", onMouseUp);
          }
        };
      }, [focusable]);
    }
    const disabled = focusable && disabledFromProps(props);
    const trulyDisabled = !!disabled && !accessibleWhenDisabled;
    const [focusVisible, setFocusVisible] = (0, import_react8.useState)(false);
    (0, import_react8.useEffect)(() => {
      if (!focusable) return;
      if (trulyDisabled && focusVisible) {
        setFocusVisible(false);
      }
    }, [focusable, trulyDisabled, focusVisible]);
    (0, import_react8.useEffect)(() => {
      if (!focusable) return;
      if (!focusVisible) return;
      const element = ref.current;
      if (!element) return;
      if (typeof IntersectionObserver === "undefined") return;
      const observer = new IntersectionObserver(() => {
        if (!isFocusable(element)) {
          setFocusVisible(false);
        }
      });
      observer.observe(element);
      return () => observer.disconnect();
    }, [focusable, focusVisible]);
    const onKeyPressCapture = useDisableEvent(
      props.onKeyPressCapture,
      disabled
    );
    const onMouseDownCapture = useDisableEvent(
      props.onMouseDownCapture,
      disabled
    );
    const onClickCapture = useDisableEvent(props.onClickCapture, disabled);
    const onMouseDownProp = props.onMouseDown;
    const onMouseDown = useEvent((event) => {
      onMouseDownProp == null ? void 0 : onMouseDownProp(event);
      if (event.defaultPrevented) return;
      if (!focusable) return;
      const element = event.currentTarget;
      if (!isSafariBrowser) return;
      if (isPortalEvent(event)) return;
      if (!isButton(element) && !isNativeCheckboxOrRadio(element)) return;
      let receivedFocus = false;
      const onFocus = () => {
        receivedFocus = true;
      };
      const options = { capture: true, once: true };
      element.addEventListener("focusin", onFocus, options);
      const focusableContainer = getClosestFocusable(element.parentElement);
      markSafariFocusAncestor(focusableContainer, true);
      queueBeforeEvent(element, "mouseup", () => {
        element.removeEventListener("focusin", onFocus, true);
        markSafariFocusAncestor(focusableContainer, false);
        if (receivedFocus) return;
        focusIfNeeded(element);
      });
    });
    const handleFocusVisible = (event, currentTarget) => {
      if (currentTarget) {
        event.currentTarget = currentTarget;
      }
      if (!focusable) return;
      const element = event.currentTarget;
      if (!element) return;
      if (!hasFocus(element)) return;
      onFocusVisible == null ? void 0 : onFocusVisible(event);
      if (event.defaultPrevented) return;
      element.dataset.focusVisible = "true";
      setFocusVisible(true);
    };
    const onKeyDownCaptureProp = props.onKeyDownCapture;
    const onKeyDownCapture = useEvent((event) => {
      onKeyDownCaptureProp == null ? void 0 : onKeyDownCaptureProp(event);
      if (event.defaultPrevented) return;
      if (!focusable) return;
      if (focusVisible) return;
      if (event.metaKey) return;
      if (event.altKey) return;
      if (event.ctrlKey) return;
      if (!isSelfTarget(event)) return;
      const element = event.currentTarget;
      const applyFocusVisible = () => handleFocusVisible(event, element);
      queueBeforeEvent(element, "focusout", applyFocusVisible);
    });
    const onFocusCaptureProp = props.onFocusCapture;
    const onFocusCapture = useEvent((event) => {
      onFocusCaptureProp == null ? void 0 : onFocusCaptureProp(event);
      if (event.defaultPrevented) return;
      if (!focusable) return;
      if (!isSelfTarget(event)) {
        setFocusVisible(false);
        return;
      }
      const element = event.currentTarget;
      const applyFocusVisible = () => handleFocusVisible(event, element);
      if (isKeyboardModality || isAlwaysFocusVisible(event.target)) {
        queueBeforeEvent(event.target, "focusout", applyFocusVisible);
      } else {
        setFocusVisible(false);
      }
    });
    const onBlurProp = props.onBlur;
    const onBlur = useEvent((event) => {
      onBlurProp == null ? void 0 : onBlurProp(event);
      if (!focusable) return;
      if (!isFocusEventOutside(event)) return;
      setFocusVisible(false);
    });
    const autoFocusOnShow = (0, import_react8.useContext)(FocusableContext);
    const autoFocusRef = useEvent((element) => {
      if (!focusable) return;
      if (!autoFocus) return;
      if (!element) return;
      if (!autoFocusOnShow) return;
      queueMicrotask(() => {
        if (hasFocus(element)) return;
        if (!isFocusable(element)) return;
        element.focus();
      });
    });
    const tagName = useTagName(ref);
    const nativeTabbable = focusable && isNativeTabbable(tagName);
    const supportsDisabled = focusable && supportsDisabledAttribute(tagName);
    const styleProp = props.style;
    const style2 = (0, import_react8.useMemo)(() => {
      if (trulyDisabled) {
        return __spreadValues({ pointerEvents: "none" }, styleProp);
      }
      return styleProp;
    }, [trulyDisabled, styleProp]);
    props = __spreadProps(__spreadValues({
      "data-focus-visible": focusable && focusVisible || void 0,
      "data-autofocus": autoFocus || void 0,
      "aria-disabled": disabled || void 0
    }, props), {
      ref: useMergeRefs(ref, autoFocusRef, props.ref),
      style: style2,
      tabIndex: getTabIndex(
        focusable,
        trulyDisabled,
        nativeTabbable,
        supportsDisabled,
        props.tabIndex
      ),
      disabled: supportsDisabled && trulyDisabled ? true : void 0,
      // TODO: Test Focusable contentEditable.
      contentEditable: disabled ? void 0 : props.contentEditable,
      onKeyPressCapture,
      onClickCapture,
      onMouseDownCapture,
      onMouseDown,
      onKeyDownCapture,
      onFocusCapture,
      onBlur
    });
    return removeUndefinedValues(props);
  }
);
var Focusable = forwardRef2(function Focusable2(props) {
  const htmlProps = useFocusable(props);
  return createElement(TagName2, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/IKLZZMLE.js
var import_react9 = __toESM(require_react(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var TagName3 = "div";
function isGrid(items) {
  return items.some((item) => !!item.rowId);
}
function isPrintableKey(event) {
  const target = event.target;
  if (target && !isTextField(target)) return false;
  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;
}
function isModifierKey(event) {
  return event.key === "Shift" || event.key === "Control" || event.key === "Alt" || event.key === "Meta";
}
function useKeyboardEventProxy(store, onKeyboardEvent, previousElementRef) {
  return useEvent((event) => {
    var _a2;
    onKeyboardEvent == null ? void 0 : onKeyboardEvent(event);
    if (event.defaultPrevented) return;
    if (event.isPropagationStopped()) return;
    if (!isSelfTarget(event)) return;
    if (isModifierKey(event)) return;
    if (isPrintableKey(event)) return;
    const state = store.getState();
    const activeElement = (_a2 = getEnabledItem(store, state.activeId)) == null ? void 0 : _a2.element;
    if (!activeElement) return;
    const _b = event, { view } = _b, eventInit = __objRest(_b, ["view"]);
    const previousElement = previousElementRef == null ? void 0 : previousElementRef.current;
    if (activeElement !== previousElement) {
      activeElement.focus();
    }
    if (!fireKeyboardEvent(activeElement, event.type, eventInit)) {
      event.preventDefault();
    }
    if (event.currentTarget.contains(activeElement)) {
      event.stopPropagation();
    }
  });
}
function findFirstEnabledItemInTheLastRow(items) {
  return findFirstEnabledItem2(
    flatten2DArray(reverseArray(groupItemsByRows2(items)))
  );
}
function useScheduleFocus(store) {
  const [scheduled, setScheduled] = (0, import_react9.useState)(false);
  const schedule = (0, import_react9.useCallback)(() => setScheduled(true), []);
  const activeItem = store.useState(
    (state) => getEnabledItem(store, state.activeId)
  );
  (0, import_react9.useEffect)(() => {
    const activeElement = activeItem == null ? void 0 : activeItem.element;
    if (!scheduled) return;
    if (!activeElement) return;
    setScheduled(false);
    activeElement.focus({ preventScroll: true });
  }, [activeItem, scheduled]);
  return schedule;
}
var useComposite = createHook(
  function useComposite2(_a2) {
    var _b = _a2, {
      store,
      composite = true,
      focusOnMove = composite,
      moveOnKeyPress = true
    } = _b, props = __objRest(_b, [
      "store",
      "composite",
      "focusOnMove",
      "moveOnKeyPress"
    ]);
    const context = useCompositeProviderContext();
    store = store || context;
    invariant(
      store,
      "Composite must receive a `store` prop or be wrapped in a CompositeProvider component."
    );
    const ref = (0, import_react9.useRef)(null);
    const previousElementRef = (0, import_react9.useRef)(null);
    const scheduleFocus = useScheduleFocus(store);
    const moves = store.useState("moves");
    const [, setBaseElement] = useTransactionState(
      composite ? store.setBaseElement : null
    );
    (0, import_react9.useEffect)(() => {
      var _a22;
      if (!store) return;
      if (!moves) return;
      if (!composite) return;
      if (!focusOnMove) return;
      const { activeId: activeId2 } = store.getState();
      const itemElement = (_a22 = getEnabledItem(store, activeId2)) == null ? void 0 : _a22.element;
      if (!itemElement) return;
      focusIntoView(itemElement);
    }, [store, moves, composite, focusOnMove]);
    useSafeLayoutEffect(() => {
      if (!store) return;
      if (!moves) return;
      if (!composite) return;
      const { baseElement, activeId: activeId2 } = store.getState();
      const isSelfAcive = activeId2 === null;
      if (!isSelfAcive) return;
      if (!baseElement) return;
      const previousElement = previousElementRef.current;
      previousElementRef.current = null;
      if (previousElement) {
        fireBlurEvent(previousElement, { relatedTarget: baseElement });
      }
      if (!hasFocus(baseElement)) {
        baseElement.focus();
      }
    }, [store, moves, composite]);
    const activeId = store.useState("activeId");
    const virtualFocus = store.useState("virtualFocus");
    useSafeLayoutEffect(() => {
      var _a22;
      if (!store) return;
      if (!composite) return;
      if (!virtualFocus) return;
      const previousElement = previousElementRef.current;
      previousElementRef.current = null;
      if (!previousElement) return;
      const activeElement = (_a22 = getEnabledItem(store, activeId)) == null ? void 0 : _a22.element;
      const relatedTarget = activeElement || getActiveElement(previousElement);
      if (relatedTarget === previousElement) return;
      fireBlurEvent(previousElement, { relatedTarget });
    }, [store, activeId, virtualFocus, composite]);
    const onKeyDownCapture = useKeyboardEventProxy(
      store,
      props.onKeyDownCapture,
      previousElementRef
    );
    const onKeyUpCapture = useKeyboardEventProxy(
      store,
      props.onKeyUpCapture,
      previousElementRef
    );
    const onFocusCaptureProp = props.onFocusCapture;
    const onFocusCapture = useEvent((event) => {
      onFocusCaptureProp == null ? void 0 : onFocusCaptureProp(event);
      if (event.defaultPrevented) return;
      if (!store) return;
      const { virtualFocus: virtualFocus2 } = store.getState();
      if (!virtualFocus2) return;
      const previousActiveElement = event.relatedTarget;
      const isSilentlyFocused = silentlyFocused(event.currentTarget);
      if (isSelfTarget(event) && isSilentlyFocused) {
        event.stopPropagation();
        previousElementRef.current = previousActiveElement;
      }
    });
    const onFocusProp = props.onFocus;
    const onFocus = useEvent((event) => {
      onFocusProp == null ? void 0 : onFocusProp(event);
      if (event.defaultPrevented) return;
      if (!composite) return;
      if (!store) return;
      const { relatedTarget } = event;
      const { virtualFocus: virtualFocus2 } = store.getState();
      if (virtualFocus2) {
        if (isSelfTarget(event) && !isItem(store, relatedTarget)) {
          queueMicrotask(scheduleFocus);
        }
      } else if (isSelfTarget(event)) {
        store.setActiveId(null);
      }
    });
    const onBlurCaptureProp = props.onBlurCapture;
    const onBlurCapture = useEvent((event) => {
      var _a22;
      onBlurCaptureProp == null ? void 0 : onBlurCaptureProp(event);
      if (event.defaultPrevented) return;
      if (!store) return;
      const { virtualFocus: virtualFocus2, activeId: activeId2 } = store.getState();
      if (!virtualFocus2) return;
      const activeElement = (_a22 = getEnabledItem(store, activeId2)) == null ? void 0 : _a22.element;
      const nextActiveElement = event.relatedTarget;
      const nextActiveElementIsItem = isItem(store, nextActiveElement);
      const previousElement = previousElementRef.current;
      previousElementRef.current = null;
      if (isSelfTarget(event) && nextActiveElementIsItem) {
        if (nextActiveElement === activeElement) {
          if (previousElement && previousElement !== nextActiveElement) {
            fireBlurEvent(previousElement, event);
          }
        } else if (activeElement) {
          fireBlurEvent(activeElement, event);
        } else if (previousElement) {
          fireBlurEvent(previousElement, event);
        }
        event.stopPropagation();
      } else {
        const targetIsItem = isItem(store, event.target);
        if (!targetIsItem && activeElement) {
          fireBlurEvent(activeElement, event);
        }
      }
    });
    const onKeyDownProp = props.onKeyDown;
    const moveOnKeyPressProp = useBooleanEvent(moveOnKeyPress);
    const onKeyDown = useEvent((event) => {
      var _a22;
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (event.defaultPrevented) return;
      if (!store) return;
      if (!isSelfTarget(event)) return;
      const { orientation, items, renderedItems, activeId: activeId2 } = store.getState();
      const activeItem = getEnabledItem(store, activeId2);
      if ((_a22 = activeItem == null ? void 0 : activeItem.element) == null ? void 0 : _a22.isConnected) return;
      const isVertical2 = orientation !== "horizontal";
      const isHorizontal = orientation !== "vertical";
      const grid = isGrid(renderedItems);
      const isHorizontalKey = event.key === "ArrowLeft" || event.key === "ArrowRight" || event.key === "Home" || event.key === "End";
      if (isHorizontalKey && isTextField(event.currentTarget)) return;
      const up = () => {
        if (grid) {
          const item = items && findFirstEnabledItemInTheLastRow(items);
          return item == null ? void 0 : item.id;
        }
        return store == null ? void 0 : store.last();
      };
      const keyMap = {
        ArrowUp: (grid || isVertical2) && up,
        ArrowRight: (grid || isHorizontal) && store.first,
        ArrowDown: (grid || isVertical2) && store.first,
        ArrowLeft: (grid || isHorizontal) && store.last,
        Home: store.first,
        End: store.last,
        PageUp: store.first,
        PageDown: store.last
      };
      const action = keyMap[event.key];
      if (action) {
        const id = action();
        if (id !== void 0) {
          if (!moveOnKeyPressProp(event)) return;
          event.preventDefault();
          store.move(id);
        }
      }
    });
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime2.jsx)(CompositeContextProvider, { value: store, children: element }),
      [store]
    );
    const activeDescendant = store.useState((state) => {
      var _a22;
      if (!store) return;
      if (!composite) return;
      if (!state.virtualFocus) return;
      return (_a22 = getEnabledItem(store, state.activeId)) == null ? void 0 : _a22.id;
    });
    props = __spreadProps(__spreadValues({
      "aria-activedescendant": activeDescendant
    }, props), {
      ref: useMergeRefs(ref, setBaseElement, props.ref),
      onKeyDownCapture,
      onKeyUpCapture,
      onFocusCapture,
      onFocus,
      onBlurCapture,
      onKeyDown
    });
    const focusable = store.useState(
      (state) => composite && (state.virtualFocus || state.activeId === null)
    );
    props = useFocusable(__spreadValues({ focusable }, props));
    return props;
  }
);
var Composite = forwardRef2(function Composite2(props) {
  const htmlProps = useComposite(props);
  return createElement(TagName3, htmlProps);
});

// node_modules/@ariakit/react-core/esm/combobox/combobox.js
var import_react10 = __toESM(require_react());
var TagName4 = "input";
function isFirstItemAutoSelected(items, activeValue, autoSelect) {
  if (!autoSelect) return false;
  const firstItem = items.find((item) => !item.disabled && item.value);
  return (firstItem == null ? void 0 : firstItem.value) === activeValue;
}
function hasCompletionString(value, activeValue) {
  if (!activeValue) return false;
  if (value == null) return false;
  value = normalizeString(value);
  return activeValue.length > value.length && activeValue.toLowerCase().indexOf(value.toLowerCase()) === 0;
}
function isInputEvent(event) {
  return event.type === "input";
}
function isAriaAutoCompleteValue(value) {
  return value === "inline" || value === "list" || value === "both" || value === "none";
}
function getDefaultAutoSelectId(items) {
  const item = items.find((item2) => {
    var _a2;
    if (item2.disabled) return false;
    return ((_a2 = item2.element) == null ? void 0 : _a2.getAttribute("role")) !== "tab";
  });
  return item == null ? void 0 : item.id;
}
var useCombobox = createHook(
  function useCombobox2(_a2) {
    var _b = _a2, {
      store,
      focusable = true,
      autoSelect: autoSelectProp = false,
      getAutoSelectId,
      setValueOnChange,
      showMinLength = 0,
      showOnChange,
      showOnMouseDown,
      showOnClick = showOnMouseDown,
      showOnKeyDown,
      showOnKeyPress = showOnKeyDown,
      blurActiveItemOnClick,
      setValueOnClick = true,
      moveOnKeyPress = true,
      autoComplete = "list"
    } = _b, props = __objRest(_b, [
      "store",
      "focusable",
      "autoSelect",
      "getAutoSelectId",
      "setValueOnChange",
      "showMinLength",
      "showOnChange",
      "showOnMouseDown",
      "showOnClick",
      "showOnKeyDown",
      "showOnKeyPress",
      "blurActiveItemOnClick",
      "setValueOnClick",
      "moveOnKeyPress",
      "autoComplete"
    ]);
    const context = useComboboxProviderContext();
    store = store || context;
    invariant(
      store,
      "Combobox must receive a `store` prop or be wrapped in a ComboboxProvider component."
    );
    const ref = (0, import_react10.useRef)(null);
    const [valueUpdated, forceValueUpdate] = useForceUpdate();
    const canAutoSelectRef = (0, import_react10.useRef)(false);
    const composingRef = (0, import_react10.useRef)(false);
    const autoSelect = store.useState(
      (state) => state.virtualFocus && autoSelectProp
    );
    const inline2 = autoComplete === "inline" || autoComplete === "both";
    const [canInline, setCanInline] = (0, import_react10.useState)(inline2);
    useUpdateLayoutEffect(() => {
      if (!inline2) return;
      setCanInline(true);
    }, [inline2]);
    const storeValue = store.useState("value");
    const prevSelectedValueRef = (0, import_react10.useRef)();
    (0, import_react10.useEffect)(() => {
      return sync(store, ["selectedValue", "activeId"], (_, prev) => {
        prevSelectedValueRef.current = prev.selectedValue;
      });
    }, []);
    const inlineActiveValue = store.useState((state) => {
      var _a22;
      if (!inline2) return;
      if (!canInline) return;
      if (state.activeValue && Array.isArray(state.selectedValue)) {
        if (state.selectedValue.includes(state.activeValue)) return;
        if ((_a22 = prevSelectedValueRef.current) == null ? void 0 : _a22.includes(state.activeValue)) return;
      }
      return state.activeValue;
    });
    const items = store.useState("renderedItems");
    const open = store.useState("open");
    const contentElement = store.useState("contentElement");
    const value = (0, import_react10.useMemo)(() => {
      if (!inline2) return storeValue;
      if (!canInline) return storeValue;
      const firstItemAutoSelected = isFirstItemAutoSelected(
        items,
        inlineActiveValue,
        autoSelect
      );
      if (firstItemAutoSelected) {
        if (hasCompletionString(storeValue, inlineActiveValue)) {
          const slice = (inlineActiveValue == null ? void 0 : inlineActiveValue.slice(storeValue.length)) || "";
          return storeValue + slice;
        }
        return storeValue;
      }
      return inlineActiveValue || storeValue;
    }, [inline2, canInline, items, inlineActiveValue, autoSelect, storeValue]);
    (0, import_react10.useEffect)(() => {
      const element = ref.current;
      if (!element) return;
      const onCompositeItemMove = () => setCanInline(true);
      element.addEventListener("combobox-item-move", onCompositeItemMove);
      return () => {
        element.removeEventListener("combobox-item-move", onCompositeItemMove);
      };
    }, []);
    (0, import_react10.useEffect)(() => {
      if (!inline2) return;
      if (!canInline) return;
      if (!inlineActiveValue) return;
      const firstItemAutoSelected = isFirstItemAutoSelected(
        items,
        inlineActiveValue,
        autoSelect
      );
      if (!firstItemAutoSelected) return;
      if (!hasCompletionString(storeValue, inlineActiveValue)) return;
      let cleanup = noop;
      queueMicrotask(() => {
        const element = ref.current;
        if (!element) return;
        const { start: prevStart, end: prevEnd } = getTextboxSelection(element);
        const nextStart = storeValue.length;
        const nextEnd = inlineActiveValue.length;
        setSelectionRange(element, nextStart, nextEnd);
        cleanup = () => {
          if (!hasFocus(element)) return;
          const { start, end } = getTextboxSelection(element);
          if (start !== nextStart) return;
          if (end !== nextEnd) return;
          setSelectionRange(element, prevStart, prevEnd);
        };
      });
      return () => cleanup();
    }, [
      valueUpdated,
      inline2,
      canInline,
      inlineActiveValue,
      items,
      autoSelect,
      storeValue
    ]);
    const scrollingElementRef = (0, import_react10.useRef)(null);
    const getAutoSelectIdProp = useEvent(getAutoSelectId);
    const autoSelectIdRef = (0, import_react10.useRef)(null);
    (0, import_react10.useEffect)(() => {
      if (!open) return;
      if (!contentElement) return;
      const scrollingElement = getScrollingElement(contentElement);
      if (!scrollingElement) return;
      scrollingElementRef.current = scrollingElement;
      const onUserScroll = () => {
        canAutoSelectRef.current = false;
      };
      const onScroll = () => {
        if (!store) return;
        if (!canAutoSelectRef.current) return;
        const { activeId } = store.getState();
        if (activeId === null) return;
        if (activeId === autoSelectIdRef.current) return;
        canAutoSelectRef.current = false;
      };
      const options = { passive: true, capture: true };
      scrollingElement.addEventListener("wheel", onUserScroll, options);
      scrollingElement.addEventListener("touchmove", onUserScroll, options);
      scrollingElement.addEventListener("scroll", onScroll, options);
      return () => {
        scrollingElement.removeEventListener("wheel", onUserScroll, true);
        scrollingElement.removeEventListener("touchmove", onUserScroll, true);
        scrollingElement.removeEventListener("scroll", onScroll, true);
      };
    }, [open, contentElement, store]);
    useSafeLayoutEffect(() => {
      if (!storeValue) return;
      if (composingRef.current) return;
      canAutoSelectRef.current = true;
    }, [storeValue]);
    useSafeLayoutEffect(() => {
      if (autoSelect !== "always" && open) return;
      canAutoSelectRef.current = open;
    }, [autoSelect, open]);
    const resetValueOnSelect = store.useState("resetValueOnSelect");
    useUpdateEffect(() => {
      var _a22, _b2;
      const canAutoSelect = canAutoSelectRef.current;
      if (!store) return;
      if (!open) return;
      if ((!autoSelect || !canAutoSelect) && !resetValueOnSelect) return;
      const { baseElement, contentElement: contentElement2, activeId } = store.getState();
      if (baseElement && !hasFocus(baseElement)) return;
      if (contentElement2 == null ? void 0 : contentElement2.hasAttribute("data-placing")) {
        const observer = new MutationObserver(forceValueUpdate);
        observer.observe(contentElement2, { attributeFilter: ["data-placing"] });
        return () => observer.disconnect();
      }
      if (autoSelect && canAutoSelect) {
        const userAutoSelectId = getAutoSelectIdProp(items);
        const autoSelectId = userAutoSelectId !== void 0 ? userAutoSelectId : (_a22 = getDefaultAutoSelectId(items)) != null ? _a22 : store.first();
        autoSelectIdRef.current = autoSelectId;
        store.move(autoSelectId != null ? autoSelectId : null);
      } else {
        const element = (_b2 = store.item(activeId)) == null ? void 0 : _b2.element;
        if (element && "scrollIntoView" in element) {
          element.scrollIntoView({ block: "nearest", inline: "nearest" });
        }
      }
      return;
    }, [
      store,
      open,
      valueUpdated,
      storeValue,
      autoSelect,
      resetValueOnSelect,
      getAutoSelectIdProp,
      items
    ]);
    (0, import_react10.useEffect)(() => {
      if (!inline2) return;
      const combobox = ref.current;
      if (!combobox) return;
      const elements2 = [combobox, contentElement].filter(
        (value2) => !!value2
      );
      const onBlur2 = (event) => {
        if (elements2.every((el) => isFocusEventOutside(event, el))) {
          store == null ? void 0 : store.setValue(value);
        }
      };
      for (const element of elements2) {
        element.addEventListener("focusout", onBlur2);
      }
      return () => {
        for (const element of elements2) {
          element.removeEventListener("focusout", onBlur2);
        }
      };
    }, [inline2, contentElement, store, value]);
    const canShow = (event) => {
      const currentTarget = event.currentTarget;
      return currentTarget.value.length >= showMinLength;
    };
    const onChangeProp = props.onChange;
    const showOnChangeProp = useBooleanEvent(showOnChange != null ? showOnChange : canShow);
    const setValueOnChangeProp = useBooleanEvent(
      // If the combobox is combined with tags, the value will be set by the tag
      // input component.
      setValueOnChange != null ? setValueOnChange : !store.tag
    );
    const onChange = useEvent((event) => {
      onChangeProp == null ? void 0 : onChangeProp(event);
      if (event.defaultPrevented) return;
      if (!store) return;
      const currentTarget = event.currentTarget;
      const { value: value2, selectionStart, selectionEnd } = currentTarget;
      const nativeEvent = event.nativeEvent;
      canAutoSelectRef.current = true;
      if (isInputEvent(nativeEvent)) {
        if (nativeEvent.isComposing) {
          canAutoSelectRef.current = false;
          composingRef.current = true;
        }
        if (inline2) {
          const textInserted = nativeEvent.inputType === "insertText" || nativeEvent.inputType === "insertCompositionText";
          const caretAtEnd = selectionStart === value2.length;
          setCanInline(textInserted && caretAtEnd);
        }
      }
      if (setValueOnChangeProp(event)) {
        const isSameValue = value2 === store.getState().value;
        store.setValue(value2);
        queueMicrotask(() => {
          setSelectionRange(currentTarget, selectionStart, selectionEnd);
        });
        if (inline2 && autoSelect && isSameValue) {
          forceValueUpdate();
        }
      }
      if (showOnChangeProp(event)) {
        store.show();
      }
      if (!autoSelect || !canAutoSelectRef.current) {
        store.setActiveId(null);
      }
    });
    const onCompositionEndProp = props.onCompositionEnd;
    const onCompositionEnd = useEvent((event) => {
      canAutoSelectRef.current = true;
      composingRef.current = false;
      onCompositionEndProp == null ? void 0 : onCompositionEndProp(event);
      if (event.defaultPrevented) return;
      if (!autoSelect) return;
      forceValueUpdate();
    });
    const onMouseDownProp = props.onMouseDown;
    const blurActiveItemOnClickProp = useBooleanEvent(
      blurActiveItemOnClick != null ? blurActiveItemOnClick : () => !!(store == null ? void 0 : store.getState().includesBaseElement)
    );
    const setValueOnClickProp = useBooleanEvent(setValueOnClick);
    const showOnClickProp = useBooleanEvent(showOnClick != null ? showOnClick : canShow);
    const onMouseDown = useEvent((event) => {
      onMouseDownProp == null ? void 0 : onMouseDownProp(event);
      if (event.defaultPrevented) return;
      if (event.button) return;
      if (event.ctrlKey) return;
      if (!store) return;
      if (blurActiveItemOnClickProp(event)) {
        store.setActiveId(null);
      }
      if (setValueOnClickProp(event)) {
        store.setValue(value);
      }
      if (showOnClickProp(event)) {
        queueBeforeEvent(event.currentTarget, "mouseup", store.show);
      }
    });
    const onKeyDownProp = props.onKeyDown;
    const showOnKeyPressProp = useBooleanEvent(showOnKeyPress != null ? showOnKeyPress : canShow);
    const onKeyDown = useEvent((event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (!event.repeat) {
        canAutoSelectRef.current = false;
      }
      if (event.defaultPrevented) return;
      if (event.ctrlKey) return;
      if (event.altKey) return;
      if (event.shiftKey) return;
      if (event.metaKey) return;
      if (!store) return;
      const { open: open2 } = store.getState();
      if (open2) return;
      if (event.key === "ArrowUp" || event.key === "ArrowDown") {
        if (showOnKeyPressProp(event)) {
          event.preventDefault();
          store.show();
        }
      }
    });
    const onBlurProp = props.onBlur;
    const onBlur = useEvent((event) => {
      canAutoSelectRef.current = false;
      onBlurProp == null ? void 0 : onBlurProp(event);
      if (event.defaultPrevented) return;
    });
    const id = useId(props.id);
    const ariaAutoComplete = isAriaAutoCompleteValue(autoComplete) ? autoComplete : void 0;
    const isActiveItem = store.useState((state) => state.activeId === null);
    props = __spreadProps(__spreadValues({
      id,
      role: "combobox",
      "aria-autocomplete": ariaAutoComplete,
      "aria-haspopup": getPopupRole(contentElement, "listbox"),
      "aria-expanded": open,
      "aria-controls": contentElement == null ? void 0 : contentElement.id,
      "data-active-item": isActiveItem || void 0,
      value
    }, props), {
      ref: useMergeRefs(ref, props.ref),
      onChange,
      onCompositionEnd,
      onMouseDown,
      onKeyDown,
      onBlur
    });
    props = useComposite(__spreadProps(__spreadValues({
      store,
      focusable
    }, props), {
      // Enable inline autocomplete when the user moves from the combobox input
      // to an item.
      moveOnKeyPress: (event) => {
        if (isFalsyBooleanCallback(moveOnKeyPress, event)) return false;
        if (inline2) setCanInline(true);
        return true;
      }
    }));
    props = usePopoverAnchor(__spreadValues({ store }, props));
    return __spreadValues({ autoComplete: "off" }, props);
  }
);
var Combobox = forwardRef2(function Combobox2(props) {
  const htmlProps = useCombobox(props);
  return createElement(TagName4, htmlProps);
});

// node_modules/@ariakit/react-core/esm/combobox/combobox-provider.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
function ComboboxProvider(props = {}) {
  const store = useComboboxStore(props);
  return (0, import_jsx_runtime3.jsx)(ComboboxContextProvider, { value: store, children: props.children });
}

// node_modules/@ariakit/react-core/esm/__chunks/ZHUQ44XA.js
var import_react11 = __toESM(require_react(), 1);
var TagName5 = "button";
function isNativeClick(event) {
  if (!event.isTrusted) return false;
  const element = event.currentTarget;
  if (event.key === "Enter") {
    return isButton(element) || element.tagName === "SUMMARY" || element.tagName === "A";
  }
  if (event.key === " ") {
    return isButton(element) || element.tagName === "SUMMARY" || element.tagName === "INPUT" || element.tagName === "SELECT";
  }
  return false;
}
var symbol = Symbol("command");
var useCommand = createHook(
  function useCommand2(_a2) {
    var _b = _a2, { clickOnEnter = true, clickOnSpace = true } = _b, props = __objRest(_b, ["clickOnEnter", "clickOnSpace"]);
    const ref = (0, import_react11.useRef)(null);
    const tagName = useTagName(ref);
    const type = props.type;
    const [isNativeButton, setIsNativeButton] = (0, import_react11.useState)(
      () => !!tagName && isButton({ tagName, type })
    );
    (0, import_react11.useEffect)(() => {
      if (!ref.current) return;
      setIsNativeButton(isButton(ref.current));
    }, []);
    const [active, setActive] = (0, import_react11.useState)(false);
    const activeRef = (0, import_react11.useRef)(false);
    const disabled = disabledFromProps(props);
    const [isDuplicate, metadataProps] = useMetadataProps(props, symbol, true);
    const onKeyDownProp = props.onKeyDown;
    const onKeyDown = useEvent((event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      const element = event.currentTarget;
      if (event.defaultPrevented) return;
      if (isDuplicate) return;
      if (disabled) return;
      if (!isSelfTarget(event)) return;
      if (isTextField(element)) return;
      if (element.isContentEditable) return;
      const isEnter = clickOnEnter && event.key === "Enter";
      const isSpace = clickOnSpace && event.key === " ";
      const shouldPreventEnter = event.key === "Enter" && !clickOnEnter;
      const shouldPreventSpace = event.key === " " && !clickOnSpace;
      if (shouldPreventEnter || shouldPreventSpace) {
        event.preventDefault();
        return;
      }
      if (isEnter || isSpace) {
        const nativeClick = isNativeClick(event);
        if (isEnter) {
          if (!nativeClick) {
            event.preventDefault();
            const _a22 = event, { view } = _a22, eventInit = __objRest(_a22, ["view"]);
            const click = () => fireClickEvent(element, eventInit);
            if (isFirefox()) {
              queueBeforeEvent(element, "keyup", click);
            } else {
              queueMicrotask(click);
            }
          }
        } else if (isSpace) {
          activeRef.current = true;
          if (!nativeClick) {
            event.preventDefault();
            setActive(true);
          }
        }
      }
    });
    const onKeyUpProp = props.onKeyUp;
    const onKeyUp = useEvent((event) => {
      onKeyUpProp == null ? void 0 : onKeyUpProp(event);
      if (event.defaultPrevented) return;
      if (isDuplicate) return;
      if (disabled) return;
      if (event.metaKey) return;
      const isSpace = clickOnSpace && event.key === " ";
      if (activeRef.current && isSpace) {
        activeRef.current = false;
        if (!isNativeClick(event)) {
          event.preventDefault();
          setActive(false);
          const element = event.currentTarget;
          const _a22 = event, { view } = _a22, eventInit = __objRest(_a22, ["view"]);
          queueMicrotask(() => fireClickEvent(element, eventInit));
        }
      }
    });
    props = __spreadProps(__spreadValues(__spreadValues({
      "data-active": active || void 0,
      type: isNativeButton ? "button" : void 0
    }, metadataProps), props), {
      ref: useMergeRefs(ref, props.ref),
      onKeyDown,
      onKeyUp
    });
    props = useFocusable(props);
    return props;
  }
);
var Command = forwardRef2(function Command2(props) {
  const htmlProps = useCommand(props);
  return createElement(TagName5, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/JOBHIYEN.js
var import_react12 = __toESM(require_react(), 1);
var TagName6 = "button";
var useButton = createHook(
  function useButton2(props) {
    const ref = (0, import_react12.useRef)(null);
    const tagName = useTagName(ref, TagName6);
    const [isNativeButton, setIsNativeButton] = (0, import_react12.useState)(
      () => !!tagName && isButton({ tagName, type: props.type })
    );
    (0, import_react12.useEffect)(() => {
      if (!ref.current) return;
      setIsNativeButton(isButton(ref.current));
    }, []);
    props = __spreadProps(__spreadValues({
      role: !isNativeButton && tagName !== "a" ? "button" : void 0
    }, props), {
      ref: useMergeRefs(ref, props.ref)
    });
    props = useCommand(props);
    return props;
  }
);
var Button = forwardRef2(function Button2(props) {
  const htmlProps = useButton(props);
  return createElement(TagName6, htmlProps);
});

// node_modules/@ariakit/react-core/esm/combobox/combobox-cancel.js
var import_react13 = __toESM(require_react());
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var TagName7 = "button";
var children = (0, import_jsx_runtime4.jsxs)(
  "svg",
  {
    "aria-hidden": "true",
    display: "block",
    viewBox: "0 0 16 16",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    width: "1em",
    height: "1em",
    pointerEvents: "none",
    children: [
      (0, import_jsx_runtime4.jsx)("line", { x1: "5", y1: "5", x2: "11", y2: "11" }),
      (0, import_jsx_runtime4.jsx)("line", { x1: "5", y1: "11", x2: "11", y2: "5" })
    ]
  }
);
var useComboboxCancel = createHook(
  function useComboboxCancel2(_a2) {
    var _b = _a2, { store, hideWhenEmpty } = _b, props = __objRest(_b, ["store", "hideWhenEmpty"]);
    const context = useComboboxProviderContext();
    store = store || context;
    invariant(
      store,
      "ComboboxCancel must receive a `store` prop or be wrapped in a ComboboxProvider component."
    );
    const onClickProp = props.onClick;
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      store == null ? void 0 : store.setValue("");
      store == null ? void 0 : store.move(null);
    });
    const comboboxId = store.useState((state) => {
      var _a22;
      return (_a22 = state.baseElement) == null ? void 0 : _a22.id;
    });
    const empty = store.useState((state) => state.value === "");
    props = useWrapElement(
      props,
      (element) => {
        if (!hideWhenEmpty) return element;
        if (empty) return (0, import_jsx_runtime4.jsx)(import_react13.Fragment, {});
        return element;
      },
      [hideWhenEmpty, empty]
    );
    props = __spreadProps(__spreadValues({
      children,
      "aria-label": "Clear input",
      // This aria-controls will ensure the combobox popup remains visible when
      // this element gets focused. This logic is done in the ComboboxPopover
      // component.
      "aria-controls": comboboxId
    }, props), {
      onClick
    });
    props = useButton(props);
    return props;
  }
);
var ComboboxCancel = forwardRef2(function ComboboxCancel2(props) {
  const htmlProps = useComboboxCancel(props);
  return createElement(TagName7, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/RM6VCCZ7.js
var import_react14 = __toESM(require_react(), 1);
var TagName8 = "button";
var symbol2 = Symbol("disclosure");
var useDisclosure = createHook(
  function useDisclosure2(_a2) {
    var _b = _a2, { store, toggleOnClick = true } = _b, props = __objRest(_b, ["store", "toggleOnClick"]);
    const context = useDisclosureProviderContext();
    store = store || context;
    invariant(
      store,
      "Disclosure must receive a `store` prop or be wrapped in a DisclosureProvider component."
    );
    const ref = (0, import_react14.useRef)(null);
    const [expanded, setExpanded] = (0, import_react14.useState)(false);
    const disclosureElement = store.useState("disclosureElement");
    const open = store.useState("open");
    (0, import_react14.useEffect)(() => {
      let isCurrentDisclosure = disclosureElement === ref.current;
      if (!(disclosureElement == null ? void 0 : disclosureElement.isConnected)) {
        store == null ? void 0 : store.setDisclosureElement(ref.current);
        isCurrentDisclosure = true;
      }
      setExpanded(open && isCurrentDisclosure);
    }, [disclosureElement, store, open]);
    const onClickProp = props.onClick;
    const toggleOnClickProp = useBooleanEvent(toggleOnClick);
    const [isDuplicate, metadataProps] = useMetadataProps(props, symbol2, true);
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      if (isDuplicate) return;
      if (!toggleOnClickProp(event)) return;
      store == null ? void 0 : store.setDisclosureElement(event.currentTarget);
      store == null ? void 0 : store.toggle();
    });
    const contentElement = store.useState("contentElement");
    props = __spreadProps(__spreadValues(__spreadValues({
      "aria-expanded": expanded,
      "aria-controls": contentElement == null ? void 0 : contentElement.id
    }, metadataProps), props), {
      ref: useMergeRefs(ref, props.ref),
      onClick
    });
    props = useButton(props);
    return props;
  }
);
var Disclosure = forwardRef2(function Disclosure2(props) {
  const htmlProps = useDisclosure(props);
  return createElement(TagName8, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/35RDKJF6.js
var TagName9 = "button";
var useDialogDisclosure = createHook(
  function useDialogDisclosure2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useDialogProviderContext();
    store = store || context;
    invariant(
      store,
      "DialogDisclosure must receive a `store` prop or be wrapped in a DialogProvider component."
    );
    const contentElement = store.useState("contentElement");
    props = __spreadValues({
      "aria-haspopup": getPopupRole(contentElement, "dialog")
    }, props);
    props = useDisclosure(__spreadValues({ store }, props));
    return props;
  }
);
var DialogDisclosure = forwardRef2(function DialogDisclosure2(props) {
  const htmlProps = useDialogDisclosure(props);
  return createElement(TagName9, htmlProps);
});

// node_modules/@ariakit/react-core/esm/combobox/combobox-disclosure.js
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var TagName10 = "button";
var children2 = (0, import_jsx_runtime5.jsx)(
  "svg",
  {
    "aria-hidden": "true",
    display: "block",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    viewBox: "0 0 16 16",
    height: "1em",
    width: "1em",
    pointerEvents: "none",
    children: (0, import_jsx_runtime5.jsx)("polyline", { points: "4,6 8,10 12,6" })
  }
);
var useComboboxDisclosure = createHook(function useComboboxDisclosure2(_a2) {
  var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
  const context = useComboboxProviderContext();
  store = store || context;
  invariant(
    store,
    "ComboboxDisclosure must receive a `store` prop or be wrapped in a ComboboxProvider component."
  );
  const onMouseDownProp = props.onMouseDown;
  const onMouseDown = useEvent((event) => {
    onMouseDownProp == null ? void 0 : onMouseDownProp(event);
    event.preventDefault();
    store == null ? void 0 : store.move(null);
  });
  const onClickProp = props.onClick;
  const onClick = useEvent((event) => {
    onClickProp == null ? void 0 : onClickProp(event);
    if (event.defaultPrevented) return;
    if (!store) return;
    const { baseElement } = store.getState();
    store.setDisclosureElement(baseElement);
  });
  const open = store.useState("open");
  props = __spreadProps(__spreadValues({
    children: children2,
    tabIndex: -1,
    "aria-label": open ? "Hide popup" : "Show popup",
    "aria-expanded": open
  }, props), {
    onMouseDown,
    onClick
  });
  props = useDialogDisclosure(__spreadValues({ store }, props));
  return props;
});
var ComboboxDisclosure = forwardRef2(function ComboboxDisclosure2(props) {
  const htmlProps = useComboboxDisclosure(props);
  return createElement(TagName10, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/7HVFURXT.js
var import_react15 = __toESM(require_react(), 1);
var GroupLabelContext = (0, import_react15.createContext)(void 0);

// node_modules/@ariakit/react-core/esm/__chunks/T5ZXM55C.js
var import_react16 = __toESM(require_react(), 1);
var TagName11 = "div";
var useGroupLabel = createHook(
  function useGroupLabel2(props) {
    const setLabelId = (0, import_react16.useContext)(GroupLabelContext);
    const id = useId(props.id);
    useSafeLayoutEffect(() => {
      setLabelId == null ? void 0 : setLabelId(id);
      return () => setLabelId == null ? void 0 : setLabelId(void 0);
    }, [setLabelId, id]);
    props = __spreadValues({
      id,
      "aria-hidden": true
    }, props);
    return removeUndefinedValues(props);
  }
);
var GroupLabel = forwardRef2(function GroupLabel2(props) {
  const htmlProps = useGroupLabel(props);
  return createElement(TagName11, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/HSDWSC5V.js
var TagName12 = "div";
var useCompositeGroupLabel = createHook(function useCompositeGroupLabel2(_a2) {
  var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
  props = useGroupLabel(props);
  return props;
});
var CompositeGroupLabel = forwardRef2(function CompositeGroupLabel2(props) {
  const htmlProps = useCompositeGroupLabel(props);
  return createElement(TagName12, htmlProps);
});

// node_modules/@ariakit/react-core/esm/combobox/combobox-group-label.js
var TagName13 = "div";
var useComboboxGroupLabel = createHook(function useComboboxGroupLabel2(props) {
  props = useCompositeGroupLabel(props);
  return props;
});
var ComboboxGroupLabel = forwardRef2(function ComboboxGroupLabel2(props) {
  const htmlProps = useComboboxGroupLabel(props);
  return createElement(TagName13, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/T75KQT4U.js
var import_react17 = __toESM(require_react(), 1);
var import_jsx_runtime6 = __toESM(require_jsx_runtime(), 1);
var TagName14 = "div";
var useGroup = createHook(
  function useGroup2(props) {
    const [labelId, setLabelId] = (0, import_react17.useState)();
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime6.jsx)(GroupLabelContext.Provider, { value: setLabelId, children: element }),
      []
    );
    props = __spreadValues({
      role: "group",
      "aria-labelledby": labelId
    }, props);
    return removeUndefinedValues(props);
  }
);
var Group = forwardRef2(function Group2(props) {
  const htmlProps = useGroup(props);
  return createElement(TagName14, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/ENWWPSY3.js
var TagName15 = "div";
var useCompositeGroup = createHook(
  function useCompositeGroup2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    props = useGroup(props);
    return props;
  }
);
var CompositeGroup = forwardRef2(function CompositeGroup2(props) {
  const htmlProps = useCompositeGroup(props);
  return createElement(TagName15, htmlProps);
});

// node_modules/@ariakit/react-core/esm/combobox/combobox-group.js
var TagName16 = "div";
var useComboboxGroup = createHook(
  function useComboboxGroup2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useComboboxScopedContext();
    store = store || context;
    invariant(
      store,
      "ComboboxRow must be wrapped in a ComboboxList or ComboboxPopover component"
    );
    const contentElement = store.useState("contentElement");
    const popupRole = getPopupRole(contentElement);
    if (popupRole === "grid") {
      props = __spreadValues({ role: "rowgroup" }, props);
    }
    props = useCompositeGroup(__spreadValues({ store }, props));
    return props;
  }
);
var ComboboxGroup = forwardRef2(function ComboboxGroup2(props) {
  const htmlProps = useComboboxGroup(props);
  return createElement(TagName16, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/EYKMH5G5.js
var import_react18 = __toESM(require_react(), 1);
var CheckboxCheckedContext = (0, import_react18.createContext)(false);

// node_modules/@ariakit/react-core/esm/__chunks/AJFF2SUZ.js
var import_react19 = __toESM(require_react(), 1);
var import_jsx_runtime7 = __toESM(require_jsx_runtime(), 1);
var TagName17 = "span";
var checkmark = (0, import_jsx_runtime7.jsx)(
  "svg",
  {
    display: "block",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    viewBox: "0 0 16 16",
    height: "1em",
    width: "1em",
    children: (0, import_jsx_runtime7.jsx)("polyline", { points: "4,8 7,12 12,4" })
  }
);
function getChildren(props) {
  if (props.checked) {
    return props.children || checkmark;
  }
  if (typeof props.children === "function") {
    return props.children;
  }
  return null;
}
var useCheckboxCheck = createHook(
  function useCheckboxCheck2(_a2) {
    var _b = _a2, { store, checked } = _b, props = __objRest(_b, ["store", "checked"]);
    const context = (0, import_react19.useContext)(CheckboxCheckedContext);
    checked = checked != null ? checked : context;
    const children3 = getChildren({ checked, children: props.children });
    props = __spreadProps(__spreadValues({
      "aria-hidden": true
    }, props), {
      children: children3,
      style: __spreadValues({
        width: "1em",
        height: "1em",
        pointerEvents: "none"
      }, props.style)
    });
    return removeUndefinedValues(props);
  }
);
var CheckboxCheck = forwardRef2(function CheckboxCheck2(props) {
  const htmlProps = useCheckboxCheck(props);
  return createElement(TagName17, htmlProps);
});

// node_modules/@ariakit/react-core/esm/combobox/combobox-item-check.js
var import_react20 = __toESM(require_react());
var TagName18 = "span";
var useComboboxItemCheck = createHook(function useComboboxItemCheck2(_a2) {
  var _b = _a2, { store, checked } = _b, props = __objRest(_b, ["store", "checked"]);
  const context = (0, import_react20.useContext)(ComboboxItemCheckedContext);
  checked = checked != null ? checked : context;
  props = useCheckboxCheck(__spreadProps(__spreadValues({}, props), { checked }));
  return props;
});
var ComboboxItemCheck = forwardRef2(function ComboboxItemCheck2(props) {
  const htmlProps = useComboboxItemCheck(props);
  return createElement(TagName18, htmlProps);
});

// node_modules/@ariakit/react-core/esm/combobox/combobox-item-value.js
var import_react21 = __toESM(require_react());
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
var TagName19 = "span";
function normalizeValue(value) {
  return normalizeString(value).toLowerCase();
}
function getOffsets(string, values) {
  const offsets = [];
  for (const value of values) {
    let pos = 0;
    const length = value.length;
    while (string.indexOf(value, pos) !== -1) {
      const index = string.indexOf(value, pos);
      if (index !== -1) {
        offsets.push([index, length]);
      }
      pos = index + 1;
    }
  }
  return offsets;
}
function filterOverlappingOffsets(offsets) {
  return offsets.filter(([offset3, length], i, arr) => {
    return !arr.some(
      ([o, l2], j) => j !== i && o <= offset3 && o + l2 >= offset3 + length
    );
  });
}
function sortOffsets(offsets) {
  return offsets.sort(([a2], [b2]) => a2 - b2);
}
function splitValue(itemValue, userValue) {
  if (!itemValue) return itemValue;
  if (!userValue) return itemValue;
  const userValues = toArray(userValue).filter(Boolean).map(normalizeValue);
  const parts = [];
  const span = (value, autocomplete = false) => (0, import_jsx_runtime8.jsx)(
    "span",
    {
      "data-autocomplete-value": autocomplete ? "" : void 0,
      "data-user-value": autocomplete ? void 0 : "",
      children: value
    },
    parts.length
  );
  const offsets = sortOffsets(
    filterOverlappingOffsets(
      // Convert userValues into a set to avoid duplicates
      getOffsets(normalizeValue(itemValue), new Set(userValues))
    )
  );
  if (!offsets.length) {
    parts.push(span(itemValue, true));
    return parts;
  }
  const [firstOffset] = offsets[0];
  const values = [
    itemValue.slice(0, firstOffset),
    ...offsets.flatMap(([offset3, length], i) => {
      var _a2;
      const value = itemValue.slice(offset3, offset3 + length);
      const nextOffset = (_a2 = offsets[i + 1]) == null ? void 0 : _a2[0];
      const nextValue = itemValue.slice(offset3 + length, nextOffset);
      return [value, nextValue];
    })
  ];
  values.forEach((value, i) => {
    if (!value) return;
    parts.push(span(value, i % 2 === 0));
  });
  return parts;
}
var useComboboxItemValue = createHook(function useComboboxItemValue2(_a2) {
  var _b = _a2, { store, value, userValue } = _b, props = __objRest(_b, ["store", "value", "userValue"]);
  const context = useComboboxScopedContext();
  store = store || context;
  const itemContext = (0, import_react21.useContext)(ComboboxItemValueContext);
  const itemValue = value != null ? value : itemContext;
  const inputValue = useStoreState(store, (state) => userValue != null ? userValue : state == null ? void 0 : state.value);
  const children3 = (0, import_react21.useMemo)(() => {
    if (!itemValue) return;
    if (!inputValue) return itemValue;
    return splitValue(itemValue, inputValue);
  }, [itemValue, inputValue]);
  props = __spreadValues({
    children: children3
  }, props);
  return removeUndefinedValues(props);
});
var ComboboxItemValue = forwardRef2(function ComboboxItemValue2(props) {
  const htmlProps = useComboboxItemValue(props);
  return createElement(TagName19, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/L63MOBXC.js
var import_react22 = __toESM(require_react(), 1);
var TagName20 = "div";
function getMouseDestination(event) {
  const relatedTarget = event.relatedTarget;
  if ((relatedTarget == null ? void 0 : relatedTarget.nodeType) === Node.ELEMENT_NODE) {
    return relatedTarget;
  }
  return null;
}
function hoveringInside(event) {
  const nextElement = getMouseDestination(event);
  if (!nextElement) return false;
  return contains(event.currentTarget, nextElement);
}
var symbol3 = Symbol("composite-hover");
function movingToAnotherItem(event) {
  let dest = getMouseDestination(event);
  if (!dest) return false;
  do {
    if (hasOwnProperty(dest, symbol3) && dest[symbol3]) return true;
    dest = dest.parentElement;
  } while (dest);
  return false;
}
var useCompositeHover = createHook(
  function useCompositeHover2(_a2) {
    var _b = _a2, {
      store,
      focusOnHover = true,
      blurOnHoverEnd = !!focusOnHover
    } = _b, props = __objRest(_b, [
      "store",
      "focusOnHover",
      "blurOnHoverEnd"
    ]);
    const context = useCompositeContext();
    store = store || context;
    invariant(
      store,
      "CompositeHover must be wrapped in a Composite component."
    );
    const isMouseMoving = useIsMouseMoving();
    const onMouseMoveProp = props.onMouseMove;
    const focusOnHoverProp = useBooleanEvent(focusOnHover);
    const onMouseMove = useEvent((event) => {
      onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);
      if (event.defaultPrevented) return;
      if (!isMouseMoving()) return;
      if (!focusOnHoverProp(event)) return;
      if (!hasFocusWithin(event.currentTarget)) {
        const baseElement = store == null ? void 0 : store.getState().baseElement;
        if (baseElement && !hasFocus(baseElement)) {
          baseElement.focus();
        }
      }
      store == null ? void 0 : store.setActiveId(event.currentTarget.id);
    });
    const onMouseLeaveProp = props.onMouseLeave;
    const blurOnHoverEndProp = useBooleanEvent(blurOnHoverEnd);
    const onMouseLeave = useEvent((event) => {
      var _a22;
      onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);
      if (event.defaultPrevented) return;
      if (!isMouseMoving()) return;
      if (hoveringInside(event)) return;
      if (movingToAnotherItem(event)) return;
      if (!focusOnHoverProp(event)) return;
      if (!blurOnHoverEndProp(event)) return;
      store == null ? void 0 : store.setActiveId(null);
      (_a22 = store == null ? void 0 : store.getState().baseElement) == null ? void 0 : _a22.focus();
    });
    const ref = (0, import_react22.useCallback)((element) => {
      if (!element) return;
      element[symbol3] = true;
    }, []);
    props = __spreadProps(__spreadValues({}, props), {
      ref: useMergeRefs(ref, props.ref),
      onMouseMove,
      onMouseLeave
    });
    return removeUndefinedValues(props);
  }
);
var CompositeHover = memo2(
  forwardRef2(function CompositeHover2(props) {
    const htmlProps = useCompositeHover(props);
    return createElement(TagName20, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/__chunks/SZHY72KI.js
var import_react23 = __toESM(require_react(), 1);
var TagName21 = "div";
var useCollectionItem = createHook(
  function useCollectionItem2(_a2) {
    var _b = _a2, {
      store,
      shouldRegisterItem = true,
      getItem = identity,
      element
    } = _b, props = __objRest(_b, [
      "store",
      "shouldRegisterItem",
      "getItem",
      // @ts-expect-error This prop may come from a collection renderer.
      "element"
    ]);
    const context = useCollectionContext();
    store = store || context;
    const id = useId(props.id);
    const ref = (0, import_react23.useRef)(element);
    (0, import_react23.useEffect)(() => {
      const element2 = ref.current;
      if (!id) return;
      if (!element2) return;
      if (!shouldRegisterItem) return;
      const item = getItem({ id, element: element2 });
      return store == null ? void 0 : store.renderItem(item);
    }, [id, shouldRegisterItem, getItem, store]);
    props = __spreadProps(__spreadValues({}, props), {
      ref: useMergeRefs(ref, props.ref)
    });
    return removeUndefinedValues(props);
  }
);
var CollectionItem = forwardRef2(function CollectionItem2(props) {
  const htmlProps = useCollectionItem(props);
  return createElement(TagName21, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/NSB34BGG.js
var import_react24 = __toESM(require_react(), 1);
var import_jsx_runtime9 = __toESM(require_jsx_runtime(), 1);
var TagName22 = "button";
function isEditableElement(element) {
  if (isTextbox(element)) return true;
  return element.tagName === "INPUT" && !isButton(element);
}
function getNextPageOffset(scrollingElement, pageUp = false) {
  const height = scrollingElement.clientHeight;
  const { top } = scrollingElement.getBoundingClientRect();
  const pageSize = Math.max(height * 0.875, height - 40) * 1.5;
  const pageOffset = pageUp ? height - pageSize + top : pageSize + top;
  if (scrollingElement.tagName === "HTML") {
    return pageOffset + scrollingElement.scrollTop;
  }
  return pageOffset;
}
function getItemOffset(itemElement, pageUp = false) {
  const { top } = itemElement.getBoundingClientRect();
  if (pageUp) {
    return top + itemElement.clientHeight;
  }
  return top;
}
function findNextPageItemId(element, store, next, pageUp = false) {
  var _a2;
  if (!store) return;
  if (!next) return;
  const { renderedItems } = store.getState();
  const scrollingElement = getScrollingElement(element);
  if (!scrollingElement) return;
  const nextPageOffset = getNextPageOffset(scrollingElement, pageUp);
  let id;
  let prevDifference;
  for (let i = 0; i < renderedItems.length; i += 1) {
    const previousId = id;
    id = next(i);
    if (!id) break;
    if (id === previousId) continue;
    const itemElement = (_a2 = getEnabledItem(store, id)) == null ? void 0 : _a2.element;
    if (!itemElement) continue;
    const itemOffset = getItemOffset(itemElement, pageUp);
    const difference = itemOffset - nextPageOffset;
    const absDifference = Math.abs(difference);
    if (pageUp && difference <= 0 || !pageUp && difference >= 0) {
      if (prevDifference !== void 0 && prevDifference < absDifference) {
        id = previousId;
      }
      break;
    }
    prevDifference = absDifference;
  }
  return id;
}
function targetIsAnotherItem(event, store) {
  if (isSelfTarget(event)) return false;
  return isItem(store, event.target);
}
var useCompositeItem = createHook(
  function useCompositeItem2(_a2) {
    var _b = _a2, {
      store,
      rowId: rowIdProp,
      preventScrollOnKeyDown = false,
      moveOnKeyPress = true,
      tabbable = false,
      getItem: getItemProp,
      "aria-setsize": ariaSetSizeProp,
      "aria-posinset": ariaPosInSetProp
    } = _b, props = __objRest(_b, [
      "store",
      "rowId",
      "preventScrollOnKeyDown",
      "moveOnKeyPress",
      "tabbable",
      "getItem",
      "aria-setsize",
      "aria-posinset"
    ]);
    const context = useCompositeContext();
    store = store || context;
    const id = useId(props.id);
    const ref = (0, import_react24.useRef)(null);
    const row = (0, import_react24.useContext)(CompositeRowContext);
    const rowId = useStoreState(store, (state) => {
      if (rowIdProp) return rowIdProp;
      if (!state) return;
      if (!(row == null ? void 0 : row.baseElement)) return;
      if (row.baseElement !== state.baseElement) return;
      return row.id;
    });
    const disabled = disabledFromProps(props);
    const trulyDisabled = disabled && !props.accessibleWhenDisabled;
    const getItem = (0, import_react24.useCallback)(
      (item) => {
        const nextItem = __spreadProps(__spreadValues({}, item), {
          id: id || item.id,
          rowId,
          disabled: !!trulyDisabled
        });
        if (getItemProp) {
          return getItemProp(nextItem);
        }
        return nextItem;
      },
      [id, rowId, trulyDisabled, getItemProp]
    );
    const onFocusProp = props.onFocus;
    const hasFocusedComposite = (0, import_react24.useRef)(false);
    const onFocus = useEvent((event) => {
      onFocusProp == null ? void 0 : onFocusProp(event);
      if (event.defaultPrevented) return;
      if (isPortalEvent(event)) return;
      if (!id) return;
      if (!store) return;
      if (targetIsAnotherItem(event, store)) return;
      const { virtualFocus, baseElement: baseElement2 } = store.getState();
      store.setActiveId(id);
      if (isTextbox(event.currentTarget)) {
        selectTextField(event.currentTarget);
      }
      if (!virtualFocus) return;
      if (!isSelfTarget(event)) return;
      if (isEditableElement(event.currentTarget)) return;
      if (!(baseElement2 == null ? void 0 : baseElement2.isConnected)) return;
      if (isSafari() && event.currentTarget.hasAttribute("data-autofocus")) {
        event.currentTarget.scrollIntoView({
          block: "nearest",
          inline: "nearest"
        });
      }
      hasFocusedComposite.current = true;
      const fromComposite = event.relatedTarget === baseElement2 || isItem(store, event.relatedTarget);
      if (fromComposite) {
        focusSilently(baseElement2);
      } else {
        baseElement2.focus();
      }
    });
    const onBlurCaptureProp = props.onBlurCapture;
    const onBlurCapture = useEvent((event) => {
      onBlurCaptureProp == null ? void 0 : onBlurCaptureProp(event);
      if (event.defaultPrevented) return;
      const state = store == null ? void 0 : store.getState();
      if ((state == null ? void 0 : state.virtualFocus) && hasFocusedComposite.current) {
        hasFocusedComposite.current = false;
        event.preventDefault();
        event.stopPropagation();
      }
    });
    const onKeyDownProp = props.onKeyDown;
    const preventScrollOnKeyDownProp = useBooleanEvent(preventScrollOnKeyDown);
    const moveOnKeyPressProp = useBooleanEvent(moveOnKeyPress);
    const onKeyDown = useEvent((event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (event.defaultPrevented) return;
      if (!isSelfTarget(event)) return;
      if (!store) return;
      const { currentTarget } = event;
      const state = store.getState();
      const item = store.item(id);
      const isGrid2 = !!(item == null ? void 0 : item.rowId);
      const isVertical2 = state.orientation !== "horizontal";
      const isHorizontal = state.orientation !== "vertical";
      const canHomeEnd = () => {
        if (isGrid2) return true;
        if (isHorizontal) return true;
        if (!state.baseElement) return true;
        if (!isTextField(state.baseElement)) return true;
        return false;
      };
      const keyMap = {
        ArrowUp: (isGrid2 || isVertical2) && store.up,
        ArrowRight: (isGrid2 || isHorizontal) && store.next,
        ArrowDown: (isGrid2 || isVertical2) && store.down,
        ArrowLeft: (isGrid2 || isHorizontal) && store.previous,
        Home: () => {
          if (!canHomeEnd()) return;
          if (!isGrid2 || event.ctrlKey) {
            return store == null ? void 0 : store.first();
          }
          return store == null ? void 0 : store.previous(-1);
        },
        End: () => {
          if (!canHomeEnd()) return;
          if (!isGrid2 || event.ctrlKey) {
            return store == null ? void 0 : store.last();
          }
          return store == null ? void 0 : store.next(-1);
        },
        PageUp: () => {
          return findNextPageItemId(currentTarget, store, store == null ? void 0 : store.up, true);
        },
        PageDown: () => {
          return findNextPageItemId(currentTarget, store, store == null ? void 0 : store.down);
        }
      };
      const action = keyMap[event.key];
      if (action) {
        if (isTextbox(currentTarget)) {
          const selection = getTextboxSelection(currentTarget);
          const isLeft = isHorizontal && event.key === "ArrowLeft";
          const isRight = isHorizontal && event.key === "ArrowRight";
          const isUp = isVertical2 && event.key === "ArrowUp";
          const isDown = isVertical2 && event.key === "ArrowDown";
          if (isRight || isDown) {
            const { length: valueLength } = getTextboxValue(currentTarget);
            if (selection.end !== valueLength) return;
          } else if ((isLeft || isUp) && selection.start !== 0) return;
        }
        const nextId = action();
        if (preventScrollOnKeyDownProp(event) || nextId !== void 0) {
          if (!moveOnKeyPressProp(event)) return;
          event.preventDefault();
          store.move(nextId);
        }
      }
    });
    const baseElement = useStoreState(
      store,
      (state) => (state == null ? void 0 : state.baseElement) || void 0
    );
    const providerValue = (0, import_react24.useMemo)(
      () => ({ id, baseElement }),
      [id, baseElement]
    );
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime9.jsx)(CompositeItemContext.Provider, { value: providerValue, children: element }),
      [providerValue]
    );
    const isActiveItem = useStoreState(
      store,
      (state) => !!state && state.activeId === id
    );
    const ariaSetSize = useStoreState(store, (state) => {
      if (ariaSetSizeProp != null) return ariaSetSizeProp;
      if (!state) return;
      if (!(row == null ? void 0 : row.ariaSetSize)) return;
      if (row.baseElement !== state.baseElement) return;
      return row.ariaSetSize;
    });
    const ariaPosInSet = useStoreState(store, (state) => {
      if (ariaPosInSetProp != null) return ariaPosInSetProp;
      if (!state) return;
      if (!(row == null ? void 0 : row.ariaPosInSet)) return;
      if (row.baseElement !== state.baseElement) return;
      const itemsInRow = state.renderedItems.filter(
        (item) => item.rowId === rowId
      );
      return row.ariaPosInSet + itemsInRow.findIndex((item) => item.id === id);
    });
    const isTabbable2 = useStoreState(store, (state) => {
      var _a22;
      if (!(state == null ? void 0 : state.renderedItems.length)) return true;
      if (state.virtualFocus) return false;
      if (tabbable) return true;
      if (state.activeId === null) return false;
      const item = store == null ? void 0 : store.item(state.activeId);
      if (item == null ? void 0 : item.disabled) return true;
      if (!((_a22 = item == null ? void 0 : item.element) == null ? void 0 : _a22.isConnected)) return true;
      return state.activeId === id;
    });
    props = __spreadProps(__spreadValues({
      id,
      "data-active-item": isActiveItem || void 0
    }, props), {
      ref: useMergeRefs(ref, props.ref),
      tabIndex: isTabbable2 ? props.tabIndex : -1,
      onFocus,
      onBlurCapture,
      onKeyDown
    });
    props = useCommand(props);
    props = useCollectionItem(__spreadProps(__spreadValues({
      store
    }, props), {
      getItem,
      shouldRegisterItem: id ? props.shouldRegisterItem : false
    }));
    return removeUndefinedValues(__spreadProps(__spreadValues({}, props), {
      "aria-setsize": ariaSetSize,
      "aria-posinset": ariaPosInSet
    }));
  }
);
var CompositeItem = memo2(
  forwardRef2(function CompositeItem2(props) {
    const htmlProps = useCompositeItem(props);
    return createElement(TagName22, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/combobox/combobox-item.js
var import_react25 = __toESM(require_react());
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
var TagName23 = "div";
function isSelected(storeValue, itemValue) {
  if (itemValue == null) return;
  if (storeValue == null) return false;
  if (Array.isArray(storeValue)) {
    return storeValue.includes(itemValue);
  }
  return storeValue === itemValue;
}
function getItemRole(popupRole) {
  var _a2;
  const itemRoleByPopupRole = {
    menu: "menuitem",
    listbox: "option",
    tree: "treeitem"
  };
  const key = popupRole;
  return (_a2 = itemRoleByPopupRole[key]) != null ? _a2 : "option";
}
var useComboboxItem = createHook(
  function useComboboxItem2(_a2) {
    var _b = _a2, {
      store,
      value,
      hideOnClick,
      setValueOnClick,
      selectValueOnClick = true,
      resetValueOnSelect,
      focusOnHover = false,
      moveOnKeyPress = true,
      getItem: getItemProp
    } = _b, props = __objRest(_b, [
      "store",
      "value",
      "hideOnClick",
      "setValueOnClick",
      "selectValueOnClick",
      "resetValueOnSelect",
      "focusOnHover",
      "moveOnKeyPress",
      "getItem"
    ]);
    var _a22;
    const context = useComboboxScopedContext();
    store = store || context;
    invariant(
      store,
      "ComboboxItem must be wrapped in a ComboboxList or ComboboxPopover component."
    );
    const getItem = (0, import_react25.useCallback)(
      (item) => {
        const nextItem = __spreadProps(__spreadValues({}, item), { value });
        if (getItemProp) {
          return getItemProp(nextItem);
        }
        return nextItem;
      },
      [value, getItemProp]
    );
    const multiSelectable = store.useState(
      (state) => Array.isArray(state.selectedValue)
    );
    const selected = store.useState(
      (state) => isSelected(state.selectedValue, value)
    );
    const resetValueOnSelectState = store.useState("resetValueOnSelect");
    setValueOnClick = setValueOnClick != null ? setValueOnClick : !multiSelectable;
    hideOnClick = hideOnClick != null ? hideOnClick : value != null && !multiSelectable;
    const onClickProp = props.onClick;
    const setValueOnClickProp = useBooleanEvent(setValueOnClick);
    const selectValueOnClickProp = useBooleanEvent(selectValueOnClick);
    const resetValueOnSelectProp = useBooleanEvent(
      (_a22 = resetValueOnSelect != null ? resetValueOnSelect : resetValueOnSelectState) != null ? _a22 : multiSelectable
    );
    const hideOnClickProp = useBooleanEvent(hideOnClick);
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      if (isDownloading(event)) return;
      if (isOpeningInNewTab(event)) return;
      if (value != null) {
        if (selectValueOnClickProp(event)) {
          if (resetValueOnSelectProp(event)) {
            store == null ? void 0 : store.resetValue();
          }
          store == null ? void 0 : store.setSelectedValue((prevValue) => {
            if (!Array.isArray(prevValue)) return value;
            if (prevValue.includes(value)) {
              return prevValue.filter((v2) => v2 !== value);
            }
            return [...prevValue, value];
          });
        }
        if (setValueOnClickProp(event)) {
          store == null ? void 0 : store.setValue(value);
        }
      }
      if (hideOnClickProp(event)) {
        store == null ? void 0 : store.hide();
      }
    });
    const onKeyDownProp = props.onKeyDown;
    const onKeyDown = useEvent((event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (event.defaultPrevented) return;
      const baseElement = store == null ? void 0 : store.getState().baseElement;
      if (!baseElement) return;
      if (hasFocus(baseElement)) return;
      const printable = event.key.length === 1;
      if (printable || event.key === "Backspace" || event.key === "Delete") {
        queueMicrotask(() => baseElement.focus());
        if (isTextField(baseElement)) {
          store == null ? void 0 : store.setValue(baseElement.value);
        }
      }
    });
    if (multiSelectable && selected != null) {
      props = __spreadValues({
        "aria-selected": selected
      }, props);
    }
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime10.jsx)(ComboboxItemValueContext.Provider, { value, children: (0, import_jsx_runtime10.jsx)(ComboboxItemCheckedContext.Provider, { value: selected != null ? selected : false, children: element }) }),
      [value, selected]
    );
    const popupRole = (0, import_react25.useContext)(ComboboxListRoleContext);
    props = __spreadProps(__spreadValues({
      role: getItemRole(popupRole),
      children: value
    }, props), {
      onClick,
      onKeyDown
    });
    const moveOnKeyPressProp = useBooleanEvent(moveOnKeyPress);
    props = useCompositeItem(__spreadProps(__spreadValues({
      store
    }, props), {
      getItem,
      // Dispatch a custom event on the combobox input when moving to an item
      // with the keyboard so the Combobox component can enable inline
      // autocompletion.
      moveOnKeyPress: (event) => {
        if (!moveOnKeyPressProp(event)) return false;
        const moveEvent = new Event("combobox-item-move");
        const baseElement = store == null ? void 0 : store.getState().baseElement;
        baseElement == null ? void 0 : baseElement.dispatchEvent(moveEvent);
        return true;
      }
    }));
    props = useCompositeHover(__spreadValues({ store, focusOnHover }, props));
    return props;
  }
);
var ComboboxItem = memo2(
  forwardRef2(function ComboboxItem2(props) {
    const htmlProps = useComboboxItem(props);
    return createElement(TagName23, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/combobox/combobox-label.js
var TagName24 = "label";
var useComboboxLabel = createHook(
  function useComboboxLabel2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useComboboxProviderContext();
    store = store || context;
    invariant(
      store,
      "ComboboxLabel must receive a `store` prop or be wrapped in a ComboboxProvider component."
    );
    const comboboxId = store.useState((state) => {
      var _a22;
      return (_a22 = state.baseElement) == null ? void 0 : _a22.id;
    });
    props = __spreadValues({
      htmlFor: comboboxId
    }, props);
    return removeUndefinedValues(props);
  }
);
var ComboboxLabel = memo2(
  forwardRef2(function ComboboxLabel2(props) {
    const htmlProps = useComboboxLabel(props);
    return createElement(TagName24, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/__chunks/UYRBEP7M.js
var import_react26 = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var import_jsx_runtime11 = __toESM(require_jsx_runtime(), 1);
var TagName25 = "div";
function afterTimeout(timeoutMs, cb) {
  const timeoutId = setTimeout(cb, timeoutMs);
  return () => clearTimeout(timeoutId);
}
function afterPaint2(cb) {
  let raf = requestAnimationFrame(() => {
    raf = requestAnimationFrame(cb);
  });
  return () => cancelAnimationFrame(raf);
}
function parseCSSTime(...times) {
  return times.join(", ").split(", ").reduce((longestTime, currentTimeString) => {
    const multiplier = currentTimeString.endsWith("ms") ? 1 : 1e3;
    const currentTime = Number.parseFloat(currentTimeString || "0s") * multiplier;
    if (currentTime > longestTime) return currentTime;
    return longestTime;
  }, 0);
}
function isHidden(mounted, hidden, alwaysVisible) {
  return !alwaysVisible && hidden !== false && (!mounted || !!hidden);
}
var useDisclosureContent = createHook(function useDisclosureContent2(_a2) {
  var _b = _a2, { store, alwaysVisible } = _b, props = __objRest(_b, ["store", "alwaysVisible"]);
  const context = useDisclosureProviderContext();
  store = store || context;
  invariant(
    store,
    "DisclosureContent must receive a `store` prop or be wrapped in a DisclosureProvider component."
  );
  const ref = (0, import_react26.useRef)(null);
  const id = useId(props.id);
  const [transition, setTransition] = (0, import_react26.useState)(null);
  const open = store.useState("open");
  const mounted = store.useState("mounted");
  const animated = store.useState("animated");
  const contentElement = store.useState("contentElement");
  const otherElement = useStoreState(store.disclosure, "contentElement");
  useSafeLayoutEffect(() => {
    if (!ref.current) return;
    store == null ? void 0 : store.setContentElement(ref.current);
  }, [store]);
  useSafeLayoutEffect(() => {
    let previousAnimated;
    store == null ? void 0 : store.setState("animated", (animated2) => {
      previousAnimated = animated2;
      return true;
    });
    return () => {
      if (previousAnimated === void 0) return;
      store == null ? void 0 : store.setState("animated", previousAnimated);
    };
  }, [store]);
  useSafeLayoutEffect(() => {
    if (!animated) return;
    if (!(contentElement == null ? void 0 : contentElement.isConnected)) {
      setTransition(null);
      return;
    }
    return afterPaint2(() => {
      setTransition(open ? "enter" : mounted ? "leave" : null);
    });
  }, [animated, contentElement, open, mounted]);
  useSafeLayoutEffect(() => {
    if (!store) return;
    if (!animated) return;
    if (!transition) return;
    if (!contentElement) return;
    const stopAnimation = () => store == null ? void 0 : store.setState("animating", false);
    const stopAnimationSync = () => (0, import_react_dom.flushSync)(stopAnimation);
    if (transition === "leave" && open) return;
    if (transition === "enter" && !open) return;
    if (typeof animated === "number") {
      const timeout2 = animated;
      return afterTimeout(timeout2, stopAnimationSync);
    }
    const {
      transitionDuration,
      animationDuration,
      transitionDelay,
      animationDelay
    } = getComputedStyle(contentElement);
    const {
      transitionDuration: transitionDuration2 = "0",
      animationDuration: animationDuration2 = "0",
      transitionDelay: transitionDelay2 = "0",
      animationDelay: animationDelay2 = "0"
    } = otherElement ? getComputedStyle(otherElement) : {};
    const delay = parseCSSTime(
      transitionDelay,
      animationDelay,
      transitionDelay2,
      animationDelay2
    );
    const duration = parseCSSTime(
      transitionDuration,
      animationDuration,
      transitionDuration2,
      animationDuration2
    );
    const timeout = delay + duration;
    if (!timeout) {
      if (transition === "enter") {
        store.setState("animated", false);
      }
      stopAnimation();
      return;
    }
    const frameRate = 1e3 / 60;
    const maxTimeout = Math.max(timeout - frameRate, 0);
    return afterTimeout(maxTimeout, stopAnimationSync);
  }, [store, animated, contentElement, otherElement, open, transition]);
  props = useWrapElement(
    props,
    (element) => (0, import_jsx_runtime11.jsx)(DialogScopedContextProvider, { value: store, children: element }),
    [store]
  );
  const hidden = isHidden(mounted, props.hidden, alwaysVisible);
  const styleProp = props.style;
  const style2 = (0, import_react26.useMemo)(() => {
    if (hidden) {
      return __spreadProps(__spreadValues({}, styleProp), { display: "none" });
    }
    return styleProp;
  }, [hidden, styleProp]);
  props = __spreadProps(__spreadValues({
    id,
    "data-open": open || void 0,
    "data-enter": transition === "enter" || void 0,
    "data-leave": transition === "leave" || void 0,
    hidden
  }, props), {
    ref: useMergeRefs(id ? store.setContentElement : null, ref, props.ref),
    style: style2
  });
  return removeUndefinedValues(props);
});
var DisclosureContentImpl = forwardRef2(function DisclosureContentImpl2(props) {
  const htmlProps = useDisclosureContent(props);
  return createElement(TagName25, htmlProps);
});
var DisclosureContent = forwardRef2(function DisclosureContent2(_a2) {
  var _b = _a2, {
    unmountOnHide
  } = _b, props = __objRest(_b, [
    "unmountOnHide"
  ]);
  const context = useDisclosureProviderContext();
  const store = props.store || context;
  const mounted = useStoreState(
    store,
    (state) => !unmountOnHide || (state == null ? void 0 : state.mounted)
  );
  if (mounted === false) return null;
  return (0, import_jsx_runtime11.jsx)(DisclosureContentImpl, __spreadValues({}, props));
});

// node_modules/@ariakit/react-core/esm/__chunks/XNK4OM26.js
var import_react27 = __toESM(require_react(), 1);
var import_jsx_runtime12 = __toESM(require_jsx_runtime(), 1);
var TagName26 = "div";
var useComboboxList = createHook(
  function useComboboxList2(_a2) {
    var _b = _a2, { store, alwaysVisible } = _b, props = __objRest(_b, ["store", "alwaysVisible"]);
    const scopedContext = useComboboxScopedContext(true);
    const context = useComboboxContext();
    store = store || context;
    const scopedContextSameStore = !!store && store === scopedContext;
    invariant(
      store,
      "ComboboxList must receive a `store` prop or be wrapped in a ComboboxProvider component."
    );
    const ref = (0, import_react27.useRef)(null);
    const id = useId(props.id);
    const mounted = store.useState("mounted");
    const hidden = isHidden(mounted, props.hidden, alwaysVisible);
    const style2 = hidden ? __spreadProps(__spreadValues({}, props.style), { display: "none" }) : props.style;
    const multiSelectable = store.useState(
      (state) => Array.isArray(state.selectedValue)
    );
    const role = useAttribute(ref, "role", props.role);
    const isCompositeRole = role === "listbox" || role === "tree" || role === "grid";
    const ariaMultiSelectable = isCompositeRole ? multiSelectable || void 0 : void 0;
    const [hasListboxInside, setHasListboxInside] = (0, import_react27.useState)(false);
    const contentElement = store.useState("contentElement");
    useSafeLayoutEffect(() => {
      if (!mounted) return;
      const element = ref.current;
      if (!element) return;
      if (contentElement !== element) return;
      const callback = () => {
        setHasListboxInside(!!element.querySelector("[role='listbox']"));
      };
      const observer = new MutationObserver(callback);
      observer.observe(element, {
        subtree: true,
        childList: true,
        attributeFilter: ["role"]
      });
      callback();
      return () => observer.disconnect();
    }, [mounted, contentElement]);
    if (!hasListboxInside) {
      props = __spreadValues({
        role: "listbox",
        "aria-multiselectable": ariaMultiSelectable
      }, props);
    }
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime12.jsx)(ComboboxScopedContextProvider, { value: store, children: (0, import_jsx_runtime12.jsx)(ComboboxListRoleContext.Provider, { value: role, children: element }) }),
      [store, role]
    );
    const setContentElement = id && (!scopedContext || !scopedContextSameStore) ? store.setContentElement : null;
    props = __spreadProps(__spreadValues({
      id,
      hidden
    }, props), {
      ref: useMergeRefs(setContentElement, ref, props.ref),
      style: style2
    });
    return removeUndefinedValues(props);
  }
);
var ComboboxList = forwardRef2(function ComboboxList2(props) {
  const htmlProps = useComboboxList(props);
  return createElement(TagName26, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/63XF7ACK.js
function isBackdrop(element, ...ids) {
  if (!element) return false;
  const backdrop = element.getAttribute("data-backdrop");
  if (backdrop == null) return false;
  if (backdrop === "") return true;
  if (backdrop === "true") return true;
  if (!ids.length) return true;
  return ids.some((id) => backdrop === id);
}

// node_modules/@ariakit/react-core/esm/__chunks/K2ZF5NU7.js
var cleanups = /* @__PURE__ */ new WeakMap();
function orchestrate(element, key, setup2) {
  if (!cleanups.has(element)) {
    cleanups.set(element, /* @__PURE__ */ new Map());
  }
  const elementCleanups = cleanups.get(element);
  const prevCleanup = elementCleanups.get(key);
  if (!prevCleanup) {
    elementCleanups.set(key, setup2());
    return () => {
      var _a2;
      (_a2 = elementCleanups.get(key)) == null ? void 0 : _a2();
      elementCleanups.delete(key);
    };
  }
  const cleanup = setup2();
  const nextCleanup = () => {
    cleanup();
    prevCleanup();
    elementCleanups.delete(key);
  };
  elementCleanups.set(key, nextCleanup);
  return () => {
    const isCurrent = elementCleanups.get(key) === nextCleanup;
    if (!isCurrent) return;
    cleanup();
    elementCleanups.set(key, prevCleanup);
  };
}
function setAttribute(element, attr, value) {
  const setup2 = () => {
    const previousValue = element.getAttribute(attr);
    element.setAttribute(attr, value);
    return () => {
      if (previousValue == null) {
        element.removeAttribute(attr);
      } else {
        element.setAttribute(attr, previousValue);
      }
    };
  };
  return orchestrate(element, attr, setup2);
}
function setProperty(element, property, value) {
  const setup2 = () => {
    const exists = property in element;
    const previousValue = element[property];
    element[property] = value;
    return () => {
      if (!exists) {
        delete element[property];
      } else {
        element[property] = previousValue;
      }
    };
  };
  return orchestrate(element, property, setup2);
}
function assignStyle(element, style2) {
  if (!element) return () => {
  };
  const setup2 = () => {
    const prevStyle = element.style.cssText;
    Object.assign(element.style, style2);
    return () => {
      element.style.cssText = prevStyle;
    };
  };
  return orchestrate(element, "style", setup2);
}
function setCSSProperty(element, property, value) {
  if (!element) return () => {
  };
  const setup2 = () => {
    const previousValue = element.style.getPropertyValue(property);
    element.style.setProperty(property, value);
    return () => {
      if (previousValue) {
        element.style.setProperty(property, previousValue);
      } else {
        element.style.removeProperty(property);
      }
    };
  };
  return orchestrate(element, property, setup2);
}

// node_modules/@ariakit/react-core/esm/__chunks/AOUGVQZ3.js
var ignoreTags = ["SCRIPT", "STYLE"];
function getSnapshotPropertyName(id) {
  return `__ariakit-dialog-snapshot-${id}`;
}
function inSnapshot(id, element) {
  const doc = getDocument(element);
  const propertyName = getSnapshotPropertyName(id);
  if (!doc.body[propertyName]) return true;
  do {
    if (element === doc.body) return false;
    if (element[propertyName]) return true;
    if (!element.parentElement) return false;
    element = element.parentElement;
  } while (true);
}
function isValidElement3(id, element, ignoredElements) {
  if (ignoreTags.includes(element.tagName)) return false;
  if (!inSnapshot(id, element)) return false;
  return !ignoredElements.some(
    (enabledElement) => enabledElement && contains(element, enabledElement)
  );
}
function walkTreeOutside(id, elements2, callback, ancestorCallback) {
  for (let element of elements2) {
    if (!(element == null ? void 0 : element.isConnected)) continue;
    const hasAncestorAlready = elements2.some((maybeAncestor) => {
      if (!maybeAncestor) return false;
      if (maybeAncestor === element) return false;
      return maybeAncestor.contains(element);
    });
    const doc = getDocument(element);
    const originalElement = element;
    while (element.parentElement && element !== doc.body) {
      ancestorCallback == null ? void 0 : ancestorCallback(element.parentElement, originalElement);
      if (!hasAncestorAlready) {
        for (const child of element.parentElement.children) {
          if (isValidElement3(id, child, elements2)) {
            callback(child, originalElement);
          }
        }
      }
      element = element.parentElement;
    }
  }
}
function createWalkTreeSnapshot(id, elements2) {
  const { body } = getDocument(elements2[0]);
  const cleanups2 = [];
  const markElement2 = (element) => {
    cleanups2.push(setProperty(element, getSnapshotPropertyName(id), true));
  };
  walkTreeOutside(id, elements2, markElement2);
  return chain(setProperty(body, getSnapshotPropertyName(id), true), () => {
    for (const cleanup of cleanups2) {
      cleanup();
    }
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/2PGBN2Y4.js
function getPropertyName(id = "", ancestor = false) {
  return `__ariakit-dialog-${ancestor ? "ancestor" : "outside"}${id ? `-${id}` : ""}`;
}
function markElement(element, id = "") {
  return chain(
    setProperty(element, getPropertyName(), true),
    setProperty(element, getPropertyName(id), true)
  );
}
function markAncestor(element, id = "") {
  return chain(
    setProperty(element, getPropertyName("", true), true),
    setProperty(element, getPropertyName(id, true), true)
  );
}
function isElementMarked(element, id) {
  const ancestorProperty = getPropertyName(id, true);
  if (element[ancestorProperty]) return true;
  const elementProperty = getPropertyName(id);
  do {
    if (element[elementProperty]) return true;
    if (!element.parentElement) return false;
    element = element.parentElement;
  } while (true);
}
function markTreeOutside(id, elements2) {
  const cleanups2 = [];
  const ids = elements2.map((el) => el == null ? void 0 : el.id);
  walkTreeOutside(
    id,
    elements2,
    (element) => {
      if (isBackdrop(element, ...ids)) return;
      cleanups2.unshift(markElement(element, id));
    },
    (ancestor, element) => {
      const isAnotherDialogAncestor = element.hasAttribute("data-dialog") && element.id !== id;
      if (isAnotherDialogAncestor) return;
      cleanups2.unshift(markAncestor(ancestor, id));
    }
  );
  const restoreAccessibilityTree = () => {
    for (const cleanup of cleanups2) {
      cleanup();
    }
  };
  return restoreAccessibilityTree;
}

// node_modules/@ariakit/react-core/esm/__chunks/5HEBF2AL.js
var TagName27 = "div";
var elements = [
  "a",
  "button",
  "details",
  "dialog",
  "div",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "header",
  "img",
  "input",
  "label",
  "li",
  "nav",
  "ol",
  "p",
  "section",
  "select",
  "span",
  "summary",
  "textarea",
  "ul",
  "svg"
];
var useRole = createHook(
  function useRole2(props) {
    return props;
  }
);
var Role = forwardRef2(
  // @ts-expect-error
  function Role2(props) {
    return createElement(TagName27, props);
  }
);
Object.assign(
  Role,
  elements.reduce((acc, element) => {
    acc[element] = forwardRef2(function Role3(props) {
      return createElement(element, props);
    });
    return acc;
  }, {})
);

// node_modules/@ariakit/react-core/esm/__chunks/RYNM3PZY.js
var import_react28 = __toESM(require_react(), 1);
var import_jsx_runtime13 = __toESM(require_jsx_runtime(), 1);
function DialogBackdrop({
  store,
  backdrop,
  alwaysVisible,
  hidden
}) {
  const ref = (0, import_react28.useRef)(null);
  const disclosure = useDisclosureStore({ disclosure: store });
  const contentElement = useStoreState(store, "contentElement");
  (0, import_react28.useEffect)(() => {
    const backdrop2 = ref.current;
    const dialog = contentElement;
    if (!backdrop2) return;
    if (!dialog) return;
    backdrop2.style.zIndex = getComputedStyle(dialog).zIndex;
  }, [contentElement]);
  useSafeLayoutEffect(() => {
    const id = contentElement == null ? void 0 : contentElement.id;
    if (!id) return;
    const backdrop2 = ref.current;
    if (!backdrop2) return;
    return markAncestor(backdrop2, id);
  }, [contentElement]);
  const props = useDisclosureContent({
    ref,
    store: disclosure,
    role: "presentation",
    "data-backdrop": (contentElement == null ? void 0 : contentElement.id) || "",
    alwaysVisible,
    hidden: hidden != null ? hidden : void 0,
    style: {
      position: "fixed",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    }
  });
  if (!backdrop) return null;
  if ((0, import_react28.isValidElement)(backdrop)) {
    return (0, import_jsx_runtime13.jsx)(Role, __spreadProps(__spreadValues({}, props), { render: backdrop }));
  }
  const Component = typeof backdrop !== "boolean" ? backdrop : "div";
  return (0, import_jsx_runtime13.jsx)(Role, __spreadProps(__spreadValues({}, props), { render: (0, import_jsx_runtime13.jsx)(Component, {}) }));
}

// node_modules/@ariakit/react-core/esm/__chunks/IGR4SXG2.js
function isFocusTrap(element, ...ids) {
  if (!element) return false;
  const attr = element.getAttribute("data-focus-trap");
  if (attr == null) return false;
  if (!ids.length) return true;
  if (attr === "") return false;
  return ids.some((id) => attr === id);
}

// node_modules/@ariakit/react-core/esm/__chunks/ESSM74HH.js
function hideElementFromAccessibilityTree(element) {
  return setAttribute(element, "aria-hidden", "true");
}

// node_modules/@ariakit/react-core/esm/__chunks/677M2CI3.js
function supportsInert() {
  return "inert" in HTMLElement.prototype;
}

// node_modules/@ariakit/react-core/esm/__chunks/D7GLA236.js
function disableTree(element, ignoredElements) {
  if (!("style" in element)) return noop;
  if (supportsInert()) {
    return setProperty(element, "inert", true);
  }
  const tabbableElements = getAllTabbableIn(element, true);
  const enableElements = tabbableElements.map((element2) => {
    if (ignoredElements == null ? void 0 : ignoredElements.some((el) => el && contains(el, element2))) return noop;
    const restoreFocusMethod = orchestrate(element2, "focus", () => {
      element2.focus = noop;
      return () => {
        delete element2.focus;
      };
    });
    return chain(setAttribute(element2, "tabindex", "-1"), restoreFocusMethod);
  });
  return chain(
    ...enableElements,
    hideElementFromAccessibilityTree(element),
    assignStyle(element, {
      pointerEvents: "none",
      userSelect: "none",
      cursor: "default"
    })
  );
}
function disableTreeOutside(id, elements2) {
  const cleanups2 = [];
  const ids = elements2.map((el) => el == null ? void 0 : el.id);
  walkTreeOutside(
    id,
    elements2,
    (element) => {
      if (isBackdrop(element, ...ids)) return;
      if (isFocusTrap(element, ...ids)) return;
      cleanups2.unshift(disableTree(element, elements2));
    },
    (element) => {
      if (!element.hasAttribute("role")) return;
      if (elements2.some((el) => el && contains(el, element))) return;
      cleanups2.unshift(setAttribute(element, "role", "none"));
    }
  );
  const restoreTreeOutside = () => {
    for (const cleanup of cleanups2) {
      cleanup();
    }
  };
  return restoreTreeOutside;
}

// node_modules/@ariakit/react-core/esm/__chunks/SCDU7JWG.js
var import_react29 = __toESM(require_react(), 1);
var import_react_dom2 = __toESM(require_react_dom(), 1);
function useRootDialog({
  attribute,
  contentId,
  contentElement,
  enabled
}) {
  const [updated, retry] = useForceUpdate();
  const isRootDialog = (0, import_react29.useCallback)(() => {
    if (!enabled) return false;
    if (!contentElement) return false;
    const { body } = getDocument(contentElement);
    const id = body.getAttribute(attribute);
    return !id || id === contentId;
  }, [updated, enabled, contentElement, attribute, contentId]);
  (0, import_react29.useEffect)(() => {
    if (!enabled) return;
    if (!contentId) return;
    if (!contentElement) return;
    const { body } = getDocument(contentElement);
    if (isRootDialog()) {
      body.setAttribute(attribute, contentId);
      return () => body.removeAttribute(attribute);
    }
    const observer = new MutationObserver(() => (0, import_react_dom2.flushSync)(retry));
    observer.observe(body, { attributeFilter: [attribute] });
    return () => observer.disconnect();
  }, [updated, enabled, contentId, contentElement, isRootDialog, attribute]);
  return isRootDialog;
}

// node_modules/@ariakit/react-core/esm/__chunks/TBGPDHVR.js
var import_react30 = __toESM(require_react(), 1);
function getPaddingProperty(documentElement) {
  const documentLeft = documentElement.getBoundingClientRect().left;
  const scrollbarX = Math.round(documentLeft) + documentElement.scrollLeft;
  return scrollbarX ? "paddingLeft" : "paddingRight";
}
function usePreventBodyScroll(contentElement, contentId, enabled) {
  const isRootDialog = useRootDialog({
    attribute: "data-dialog-prevent-body-scroll",
    contentElement,
    contentId,
    enabled
  });
  (0, import_react30.useEffect)(() => {
    if (!isRootDialog()) return;
    if (!contentElement) return;
    const doc = getDocument(contentElement);
    const win = getWindow(contentElement);
    const { documentElement, body } = doc;
    const cssScrollbarWidth = documentElement.style.getPropertyValue("--scrollbar-width");
    const scrollbarWidth = cssScrollbarWidth ? Number.parseInt(cssScrollbarWidth) : win.innerWidth - documentElement.clientWidth;
    const setScrollbarWidthProperty = () => setCSSProperty(
      documentElement,
      "--scrollbar-width",
      `${scrollbarWidth}px`
    );
    const paddingProperty = getPaddingProperty(documentElement);
    const setStyle2 = () => assignStyle(body, {
      overflow: "hidden",
      [paddingProperty]: `${scrollbarWidth}px`
    });
    const setIOSStyle = () => {
      var _a2, _b;
      const { scrollX, scrollY, visualViewport: visualViewport2 } = win;
      const offsetLeft = (_a2 = visualViewport2 == null ? void 0 : visualViewport2.offsetLeft) != null ? _a2 : 0;
      const offsetTop = (_b = visualViewport2 == null ? void 0 : visualViewport2.offsetTop) != null ? _b : 0;
      const restoreStyle = assignStyle(body, {
        position: "fixed",
        overflow: "hidden",
        top: `${-(scrollY - Math.floor(offsetTop))}px`,
        left: `${-(scrollX - Math.floor(offsetLeft))}px`,
        right: "0",
        [paddingProperty]: `${scrollbarWidth}px`
      });
      return () => {
        restoreStyle();
        if (true) {
          win.scrollTo({ left: scrollX, top: scrollY, behavior: "instant" });
        }
      };
    };
    const isIOS2 = isApple() && !isMac();
    return chain(
      setScrollbarWidthProperty(),
      isIOS2 ? setIOSStyle() : setStyle2()
    );
  }, [isRootDialog, contentElement]);
}

// node_modules/@ariakit/react-core/esm/__chunks/IT6VQU5B.js
var import_react31 = __toESM(require_react(), 1);
var import_jsx_runtime14 = __toESM(require_jsx_runtime(), 1);
var NestedDialogsContext = (0, import_react31.createContext)({});
function useNestedDialogs(store) {
  const context = (0, import_react31.useContext)(NestedDialogsContext);
  const [dialogs, setDialogs] = (0, import_react31.useState)([]);
  const add = (0, import_react31.useCallback)(
    (dialog) => {
      var _a2;
      setDialogs((dialogs2) => [...dialogs2, dialog]);
      return chain((_a2 = context.add) == null ? void 0 : _a2.call(context, dialog), () => {
        setDialogs((dialogs2) => dialogs2.filter((d) => d !== dialog));
      });
    },
    [context]
  );
  useSafeLayoutEffect(() => {
    return sync(store, ["open", "contentElement"], (state) => {
      var _a2;
      if (!state.open) return;
      if (!state.contentElement) return;
      return (_a2 = context.add) == null ? void 0 : _a2.call(context, store);
    });
  }, [store, context]);
  const providerValue = (0, import_react31.useMemo)(() => ({ store, add }), [store, add]);
  const wrapElement = (0, import_react31.useCallback)(
    (element) => (0, import_jsx_runtime14.jsx)(NestedDialogsContext.Provider, { value: providerValue, children: element }),
    [providerValue]
  );
  return { wrapElement, nestedDialogs: dialogs };
}

// node_modules/@ariakit/react-core/esm/__chunks/HLTQOHKZ.js
var import_react32 = __toESM(require_react(), 1);
function usePreviousMouseDownRef(enabled) {
  const previousMouseDownRef = (0, import_react32.useRef)();
  (0, import_react32.useEffect)(() => {
    if (!enabled) {
      previousMouseDownRef.current = null;
      return;
    }
    const onMouseDown = (event) => {
      previousMouseDownRef.current = event.target;
    };
    return addGlobalEventListener("mousedown", onMouseDown, true);
  }, [enabled]);
  return previousMouseDownRef;
}

// node_modules/@ariakit/react-core/esm/__chunks/7V5QX4SZ.js
var import_react33 = __toESM(require_react(), 1);
function isInDocument(target) {
  if (target.tagName === "HTML") return true;
  return contains(getDocument(target).body, target);
}
function isDisclosure(disclosure, target) {
  if (!disclosure) return false;
  if (contains(disclosure, target)) return true;
  const activeId = target.getAttribute("aria-activedescendant");
  if (activeId) {
    const activeElement = getDocument(disclosure).getElementById(activeId);
    if (activeElement) {
      return contains(disclosure, activeElement);
    }
  }
  return false;
}
function isMouseEventOnDialog(event, dialog) {
  if (!("clientY" in event)) return false;
  const rect = dialog.getBoundingClientRect();
  if (rect.width === 0 || rect.height === 0) return false;
  return rect.top <= event.clientY && event.clientY <= rect.top + rect.height && rect.left <= event.clientX && event.clientX <= rect.left + rect.width;
}
function useEventOutside({
  store,
  type,
  listener,
  capture,
  domReady
}) {
  const callListener = useEvent(listener);
  const open = useStoreState(store, "open");
  const focusedRef = (0, import_react33.useRef)(false);
  useSafeLayoutEffect(() => {
    if (!open) return;
    if (!domReady) return;
    const { contentElement } = store.getState();
    if (!contentElement) return;
    const onFocus = () => {
      focusedRef.current = true;
    };
    contentElement.addEventListener("focusin", onFocus, true);
    return () => contentElement.removeEventListener("focusin", onFocus, true);
  }, [store, open, domReady]);
  (0, import_react33.useEffect)(() => {
    if (!open) return;
    const onEvent = (event) => {
      const { contentElement, disclosureElement } = store.getState();
      const target = event.target;
      if (!contentElement) return;
      if (!target) return;
      if (!isInDocument(target)) return;
      if (contains(contentElement, target)) return;
      if (isDisclosure(disclosureElement, target)) return;
      if (target.hasAttribute("data-focus-trap")) return;
      if (isMouseEventOnDialog(event, contentElement)) return;
      const focused = focusedRef.current;
      if (focused && !isElementMarked(target, contentElement.id)) return;
      if (isSafariFocusAncestor(target)) return;
      callListener(event);
    };
    return addGlobalEventListener(type, onEvent, capture);
  }, [open, capture]);
}
function shouldHideOnInteractOutside(hideOnInteractOutside, event) {
  if (typeof hideOnInteractOutside === "function") {
    return hideOnInteractOutside(event);
  }
  return !!hideOnInteractOutside;
}
function useHideOnInteractOutside(store, hideOnInteractOutside, domReady) {
  const open = useStoreState(store, "open");
  const previousMouseDownRef = usePreviousMouseDownRef(open);
  const props = { store, domReady, capture: true };
  useEventOutside(__spreadProps(__spreadValues({}, props), {
    type: "click",
    listener: (event) => {
      const { contentElement } = store.getState();
      const previousMouseDown = previousMouseDownRef.current;
      if (!previousMouseDown) return;
      if (!isVisible(previousMouseDown)) return;
      if (!isElementMarked(previousMouseDown, contentElement == null ? void 0 : contentElement.id)) return;
      if (!shouldHideOnInteractOutside(hideOnInteractOutside, event)) return;
      store.hide();
    }
  }));
  useEventOutside(__spreadProps(__spreadValues({}, props), {
    type: "focusin",
    listener: (event) => {
      const { contentElement } = store.getState();
      if (!contentElement) return;
      if (event.target === getDocument(contentElement)) return;
      if (!shouldHideOnInteractOutside(hideOnInteractOutside, event)) return;
      store.hide();
    }
  }));
  useEventOutside(__spreadProps(__spreadValues({}, props), {
    type: "contextmenu",
    listener: (event) => {
      if (!shouldHideOnInteractOutside(hideOnInteractOutside, event)) return;
      store.hide();
    }
  }));
}

// node_modules/@ariakit/react-core/esm/__chunks/6GXEOXGT.js
function prependHiddenDismiss(container, onClick) {
  const document2 = getDocument(container);
  const button = document2.createElement("button");
  button.type = "button";
  button.tabIndex = -1;
  button.textContent = "Dismiss popup";
  Object.assign(button.style, {
    border: "0px",
    clip: "rect(0 0 0 0)",
    height: "1px",
    margin: "-1px",
    overflow: "hidden",
    padding: "0px",
    position: "absolute",
    whiteSpace: "nowrap",
    width: "1px"
  });
  button.addEventListener("click", onClick);
  container.prepend(button);
  const removeHiddenDismiss = () => {
    button.removeEventListener("click", onClick);
    button.remove();
  };
  return removeHiddenDismiss;
}

// node_modules/@ariakit/react-core/esm/__chunks/EGBLFVR2.js
var import_jsx_runtime15 = __toESM(require_jsx_runtime(), 1);
var TagName28 = "div";
var useFocusableContainer = createHook(function useFocusableContainer2(_a2) {
  var _b = _a2, { autoFocusOnShow = true } = _b, props = __objRest(_b, ["autoFocusOnShow"]);
  props = useWrapElement(
    props,
    (element) => (0, import_jsx_runtime15.jsx)(FocusableContext.Provider, { value: autoFocusOnShow, children: element }),
    [autoFocusOnShow]
  );
  return props;
});
var FocusableContainer = forwardRef2(function FocusableContainer2(props) {
  const htmlProps = useFocusableContainer(props);
  return createElement(TagName28, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/CZ4GFWYL.js
var import_react34 = __toESM(require_react(), 1);
var HeadingContext = (0, import_react34.createContext)(0);

// node_modules/@ariakit/react-core/esm/__chunks/5M6RIVE2.js
var import_react35 = __toESM(require_react(), 1);
var import_jsx_runtime16 = __toESM(require_jsx_runtime(), 1);
function HeadingLevel({ level, children: children3 }) {
  const contextLevel = (0, import_react35.useContext)(HeadingContext);
  const nextLevel = Math.max(
    Math.min(level || contextLevel + 1, 6),
    1
  );
  return (0, import_jsx_runtime16.jsx)(HeadingContext.Provider, { value: nextLevel, children: children3 });
}

// node_modules/@ariakit/react-core/esm/__chunks/2ATXICAB.js
var TagName29 = "span";
var useVisuallyHidden = createHook(
  function useVisuallyHidden2(props) {
    props = __spreadProps(__spreadValues({}, props), {
      style: __spreadValues({
        border: 0,
        clip: "rect(0 0 0 0)",
        height: "1px",
        margin: "-1px",
        overflow: "hidden",
        padding: 0,
        position: "absolute",
        whiteSpace: "nowrap",
        width: "1px"
      }, props.style)
    });
    return props;
  }
);
var VisuallyHidden = forwardRef2(function VisuallyHidden2(props) {
  const htmlProps = useVisuallyHidden(props);
  return createElement(TagName29, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/ND57YZ3V.js
var TagName30 = "span";
var useFocusTrap = createHook(
  function useFocusTrap2(props) {
    props = __spreadProps(__spreadValues({
      "data-focus-trap": "",
      tabIndex: 0,
      "aria-hidden": true
    }, props), {
      style: __spreadValues({
        // Prevents unintended scroll jumps.
        position: "fixed",
        top: 0,
        left: 0
      }, props.style)
    });
    props = useVisuallyHidden(props);
    return props;
  }
);
var FocusTrap = forwardRef2(function FocusTrap2(props) {
  const htmlProps = useFocusTrap(props);
  return createElement(TagName30, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/AOQQTIBO.js
var import_react36 = __toESM(require_react(), 1);
var PortalContext = (0, import_react36.createContext)(null);

// node_modules/@ariakit/react-core/esm/__chunks/OJXDGVKQ.js
var import_react37 = __toESM(require_react(), 1);
var import_react_dom3 = __toESM(require_react_dom(), 1);
var import_jsx_runtime17 = __toESM(require_jsx_runtime(), 1);
var TagName31 = "div";
function getRootElement(element) {
  return getDocument(element).body;
}
function getPortalElement(element, portalElement) {
  if (!portalElement) {
    return getDocument(element).createElement("div");
  }
  if (typeof portalElement === "function") {
    return portalElement(element);
  }
  return portalElement;
}
function getRandomId(prefix2 = "id") {
  return `${prefix2 ? `${prefix2}-` : ""}${Math.random().toString(36).substr(2, 6)}`;
}
function queueFocus(element) {
  queueMicrotask(() => {
    element == null ? void 0 : element.focus();
  });
}
var usePortal = createHook(function usePortal2(_a2) {
  var _b = _a2, {
    preserveTabOrder,
    preserveTabOrderAnchor,
    portalElement,
    portalRef,
    portal = true
  } = _b, props = __objRest(_b, [
    "preserveTabOrder",
    "preserveTabOrderAnchor",
    "portalElement",
    "portalRef",
    "portal"
  ]);
  const ref = (0, import_react37.useRef)(null);
  const refProp = useMergeRefs(ref, props.ref);
  const context = (0, import_react37.useContext)(PortalContext);
  const [portalNode, setPortalNode] = (0, import_react37.useState)(null);
  const [anchorPortalNode, setAnchorPortalNode] = (0, import_react37.useState)(
    null
  );
  const outerBeforeRef = (0, import_react37.useRef)(null);
  const innerBeforeRef = (0, import_react37.useRef)(null);
  const innerAfterRef = (0, import_react37.useRef)(null);
  const outerAfterRef = (0, import_react37.useRef)(null);
  useSafeLayoutEffect(() => {
    const element = ref.current;
    if (!element || !portal) {
      setPortalNode(null);
      return;
    }
    const portalEl = getPortalElement(element, portalElement);
    if (!portalEl) {
      setPortalNode(null);
      return;
    }
    const isPortalInDocument = portalEl.isConnected;
    if (!isPortalInDocument) {
      const rootElement = context || getRootElement(element);
      rootElement.appendChild(portalEl);
    }
    if (!portalEl.id) {
      portalEl.id = element.id ? `portal/${element.id}` : getRandomId();
    }
    setPortalNode(portalEl);
    setRef(portalRef, portalEl);
    if (isPortalInDocument) return;
    return () => {
      portalEl.remove();
      setRef(portalRef, null);
    };
  }, [portal, portalElement, context, portalRef]);
  useSafeLayoutEffect(() => {
    if (!portal) return;
    if (!preserveTabOrder) return;
    if (!preserveTabOrderAnchor) return;
    const doc = getDocument(preserveTabOrderAnchor);
    const element = doc.createElement("span");
    element.style.position = "fixed";
    preserveTabOrderAnchor.insertAdjacentElement("afterend", element);
    setAnchorPortalNode(element);
    return () => {
      element.remove();
      setAnchorPortalNode(null);
    };
  }, [portal, preserveTabOrder, preserveTabOrderAnchor]);
  (0, import_react37.useEffect)(() => {
    if (!portalNode) return;
    if (!preserveTabOrder) return;
    let raf = 0;
    const onFocus = (event) => {
      if (!isFocusEventOutside(event)) return;
      const focusing = event.type === "focusin";
      cancelAnimationFrame(raf);
      if (focusing) {
        return restoreFocusIn(portalNode);
      }
      raf = requestAnimationFrame(() => {
        disableFocusIn(portalNode, true);
      });
    };
    portalNode.addEventListener("focusin", onFocus, true);
    portalNode.addEventListener("focusout", onFocus, true);
    return () => {
      cancelAnimationFrame(raf);
      portalNode.removeEventListener("focusin", onFocus, true);
      portalNode.removeEventListener("focusout", onFocus, true);
    };
  }, [portalNode, preserveTabOrder]);
  props = useWrapElement(
    props,
    (element) => {
      element = // While the portal node is not in the DOM, we need to pass the
      // current context to the portal context, otherwise it's going to
      // reset to the body element on nested portals.
      (0, import_jsx_runtime17.jsx)(PortalContext.Provider, { value: portalNode || context, children: element });
      if (!portal) return element;
      if (!portalNode) {
        return (0, import_jsx_runtime17.jsx)(
          "span",
          {
            ref: refProp,
            id: props.id,
            style: { position: "fixed" },
            hidden: true
          }
        );
      }
      element = (0, import_jsx_runtime17.jsxs)(import_jsx_runtime17.Fragment, { children: [
        preserveTabOrder && portalNode && (0, import_jsx_runtime17.jsx)(
          FocusTrap,
          {
            ref: innerBeforeRef,
            "data-focus-trap": props.id,
            className: "__focus-trap-inner-before",
            onFocus: (event) => {
              if (isFocusEventOutside(event, portalNode)) {
                queueFocus(getNextTabbable());
              } else {
                queueFocus(outerBeforeRef.current);
              }
            }
          }
        ),
        element,
        preserveTabOrder && portalNode && (0, import_jsx_runtime17.jsx)(
          FocusTrap,
          {
            ref: innerAfterRef,
            "data-focus-trap": props.id,
            className: "__focus-trap-inner-after",
            onFocus: (event) => {
              if (isFocusEventOutside(event, portalNode)) {
                queueFocus(getPreviousTabbable());
              } else {
                queueFocus(outerAfterRef.current);
              }
            }
          }
        )
      ] });
      if (portalNode) {
        element = (0, import_react_dom3.createPortal)(element, portalNode);
      }
      let preserveTabOrderElement = (0, import_jsx_runtime17.jsxs)(import_jsx_runtime17.Fragment, { children: [
        preserveTabOrder && portalNode && (0, import_jsx_runtime17.jsx)(
          FocusTrap,
          {
            ref: outerBeforeRef,
            "data-focus-trap": props.id,
            className: "__focus-trap-outer-before",
            onFocus: (event) => {
              const fromOuter = event.relatedTarget === outerAfterRef.current;
              if (!fromOuter && isFocusEventOutside(event, portalNode)) {
                queueFocus(innerBeforeRef.current);
              } else {
                queueFocus(getPreviousTabbable());
              }
            }
          }
        ),
        preserveTabOrder && // We're using position: fixed here so that the browser doesn't
        // add margin to the element when setting gap on a parent element.
        (0, import_jsx_runtime17.jsx)("span", { "aria-owns": portalNode == null ? void 0 : portalNode.id, style: { position: "fixed" } }),
        preserveTabOrder && portalNode && (0, import_jsx_runtime17.jsx)(
          FocusTrap,
          {
            ref: outerAfterRef,
            "data-focus-trap": props.id,
            className: "__focus-trap-outer-after",
            onFocus: (event) => {
              if (isFocusEventOutside(event, portalNode)) {
                queueFocus(innerAfterRef.current);
              } else {
                const nextTabbable = getNextTabbable();
                if (nextTabbable === innerBeforeRef.current) {
                  requestAnimationFrame(() => {
                    var _a22;
                    return (_a22 = getNextTabbable()) == null ? void 0 : _a22.focus();
                  });
                  return;
                }
                queueFocus(nextTabbable);
              }
            }
          }
        )
      ] });
      if (anchorPortalNode && preserveTabOrder) {
        preserveTabOrderElement = (0, import_react_dom3.createPortal)(
          preserveTabOrderElement,
          anchorPortalNode
        );
      }
      return (0, import_jsx_runtime17.jsxs)(import_jsx_runtime17.Fragment, { children: [
        preserveTabOrderElement,
        element
      ] });
    },
    [portalNode, context, portal, props.id, preserveTabOrder, anchorPortalNode]
  );
  props = __spreadProps(__spreadValues({}, props), {
    ref: refProp
  });
  return props;
});
var Portal = forwardRef2(function Portal2(props) {
  const htmlProps = usePortal(props);
  return createElement(TagName31, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/YLXVVG22.js
var import_react38 = __toESM(require_react(), 1);
var import_jsx_runtime18 = __toESM(require_jsx_runtime(), 1);
var TagName32 = "div";
var isSafariBrowser2 = isSafari();
function isAlreadyFocusingAnotherElement(dialog) {
  const activeElement = getActiveElement();
  if (!activeElement) return false;
  if (dialog && contains(dialog, activeElement)) return false;
  if (isFocusable(activeElement)) return true;
  return false;
}
function getElementFromProp(prop, focusable = false) {
  if (!prop) return null;
  const element = "current" in prop ? prop.current : prop;
  if (!element) return null;
  if (focusable) return isFocusable(element) ? element : null;
  return element;
}
var useDialog = createHook(function useDialog2(_a2) {
  var _b = _a2, {
    store: storeProp,
    open: openProp,
    onClose,
    focusable = true,
    modal = true,
    portal = !!modal,
    backdrop = !!modal,
    hideOnEscape = true,
    hideOnInteractOutside = true,
    getPersistentElements,
    preventBodyScroll = !!modal,
    autoFocusOnShow = true,
    autoFocusOnHide = true,
    initialFocus,
    finalFocus,
    unmountOnHide,
    unstable_treeSnapshotKey
  } = _b, props = __objRest(_b, [
    "store",
    "open",
    "onClose",
    "focusable",
    "modal",
    "portal",
    "backdrop",
    "hideOnEscape",
    "hideOnInteractOutside",
    "getPersistentElements",
    "preventBodyScroll",
    "autoFocusOnShow",
    "autoFocusOnHide",
    "initialFocus",
    "finalFocus",
    "unmountOnHide",
    "unstable_treeSnapshotKey"
  ]);
  const context = useDialogProviderContext();
  const ref = (0, import_react38.useRef)(null);
  const store = useDialogStore({
    store: storeProp || context,
    open: openProp,
    setOpen(open2) {
      if (open2) return;
      const dialog = ref.current;
      if (!dialog) return;
      const event = new Event("close", { bubbles: false, cancelable: true });
      if (onClose) {
        dialog.addEventListener("close", onClose, { once: true });
      }
      dialog.dispatchEvent(event);
      if (!event.defaultPrevented) return;
      store.setOpen(true);
    }
  });
  const { portalRef, domReady } = usePortalRef(portal, props.portalRef);
  const preserveTabOrderProp = props.preserveTabOrder;
  const preserveTabOrder = useStoreState(
    store,
    (state) => preserveTabOrderProp && !modal && state.mounted
  );
  const id = useId(props.id);
  const open = useStoreState(store, "open");
  const mounted = useStoreState(store, "mounted");
  const contentElement = useStoreState(store, "contentElement");
  const hidden = isHidden(mounted, props.hidden, props.alwaysVisible);
  usePreventBodyScroll(contentElement, id, preventBodyScroll && !hidden);
  useHideOnInteractOutside(store, hideOnInteractOutside, domReady);
  const { wrapElement, nestedDialogs } = useNestedDialogs(store);
  props = useWrapElement(props, wrapElement, [wrapElement]);
  useSafeLayoutEffect(() => {
    if (!open) return;
    const dialog = ref.current;
    const activeElement = getActiveElement(dialog, true);
    if (!activeElement) return;
    if (activeElement.tagName === "BODY") return;
    if (dialog && contains(dialog, activeElement)) return;
    store.setDisclosureElement(activeElement);
  }, [store, open]);
  if (isSafariBrowser2) {
    (0, import_react38.useEffect)(() => {
      if (!mounted) return;
      const { disclosureElement } = store.getState();
      if (!disclosureElement) return;
      if (!isButton(disclosureElement)) return;
      const onMouseDown = () => {
        let receivedFocus = false;
        const onFocus = () => {
          receivedFocus = true;
        };
        const options = { capture: true, once: true };
        disclosureElement.addEventListener("focusin", onFocus, options);
        queueBeforeEvent(disclosureElement, "mouseup", () => {
          disclosureElement.removeEventListener("focusin", onFocus, true);
          if (receivedFocus) return;
          focusIfNeeded(disclosureElement);
        });
      };
      disclosureElement.addEventListener("mousedown", onMouseDown);
      return () => {
        disclosureElement.removeEventListener("mousedown", onMouseDown);
      };
    }, [store, mounted]);
  }
  (0, import_react38.useEffect)(() => {
    if (!mounted) return;
    if (!domReady) return;
    const dialog = ref.current;
    if (!dialog) return;
    const win = getWindow(dialog);
    const viewport = win.visualViewport || win;
    const setViewportHeight = () => {
      var _a22, _b2;
      const height = (_b2 = (_a22 = win.visualViewport) == null ? void 0 : _a22.height) != null ? _b2 : win.innerHeight;
      dialog.style.setProperty("--dialog-viewport-height", `${height}px`);
    };
    setViewportHeight();
    viewport.addEventListener("resize", setViewportHeight);
    return () => {
      viewport.removeEventListener("resize", setViewportHeight);
    };
  }, [mounted, domReady]);
  (0, import_react38.useEffect)(() => {
    if (!modal) return;
    if (!mounted) return;
    if (!domReady) return;
    const dialog = ref.current;
    if (!dialog) return;
    const existingDismiss = dialog.querySelector("[data-dialog-dismiss]");
    if (existingDismiss) return;
    return prependHiddenDismiss(dialog, store.hide);
  }, [store, modal, mounted, domReady]);
  useSafeLayoutEffect(() => {
    if (!supportsInert()) return;
    if (open) return;
    if (!mounted) return;
    if (!domReady) return;
    const dialog = ref.current;
    if (!dialog) return;
    return disableTree(dialog);
  }, [open, mounted, domReady]);
  const canTakeTreeSnapshot = open && domReady;
  useSafeLayoutEffect(() => {
    if (!id) return;
    if (!canTakeTreeSnapshot) return;
    const dialog = ref.current;
    return createWalkTreeSnapshot(id, [dialog]);
  }, [id, canTakeTreeSnapshot, unstable_treeSnapshotKey]);
  const getPersistentElementsProp = useEvent(getPersistentElements);
  useSafeLayoutEffect(() => {
    if (!id) return;
    if (!canTakeTreeSnapshot) return;
    const { disclosureElement } = store.getState();
    const dialog = ref.current;
    const persistentElements = getPersistentElementsProp() || [];
    const allElements = [
      dialog,
      ...persistentElements,
      ...nestedDialogs.map((dialog2) => dialog2.getState().contentElement)
    ];
    if (modal) {
      return chain(
        markTreeOutside(id, allElements),
        disableTreeOutside(id, allElements)
      );
    }
    return markTreeOutside(id, [disclosureElement, ...allElements]);
  }, [
    id,
    store,
    canTakeTreeSnapshot,
    getPersistentElementsProp,
    nestedDialogs,
    modal,
    unstable_treeSnapshotKey
  ]);
  const mayAutoFocusOnShow = !!autoFocusOnShow;
  const autoFocusOnShowProp = useBooleanEvent(autoFocusOnShow);
  const [autoFocusEnabled, setAutoFocusEnabled] = (0, import_react38.useState)(false);
  (0, import_react38.useEffect)(() => {
    if (!open) return;
    if (!mayAutoFocusOnShow) return;
    if (!domReady) return;
    if (!(contentElement == null ? void 0 : contentElement.isConnected)) return;
    const element = getElementFromProp(initialFocus, true) || // If no initial focus is specified, we try to focus the first element
    // with the autofocus attribute. If it's an Ariakit component, the
    // Focusable component will consume the autoFocus prop and add the
    // data-autofocus attribute to the element instead.
    contentElement.querySelector(
      "[data-autofocus=true],[autofocus]"
    ) || // We have to fallback to the first focusable element otherwise portaled
    // dialogs with preserveTabOrder set to true will not receive focus
    // properly because the elements aren't tabbable until the dialog receives
    // focus.
    getFirstTabbableIn(contentElement, true, portal && preserveTabOrder) || // Finally, we fallback to the dialog element itself.
    contentElement;
    const isElementFocusable = isFocusable(element);
    if (!autoFocusOnShowProp(isElementFocusable ? element : null)) return;
    setAutoFocusEnabled(true);
    queueMicrotask(() => {
      element.focus();
      if (!isSafariBrowser2) return;
      element.scrollIntoView({ block: "nearest", inline: "nearest" });
    });
  }, [
    open,
    mayAutoFocusOnShow,
    domReady,
    contentElement,
    initialFocus,
    portal,
    preserveTabOrder,
    autoFocusOnShowProp
  ]);
  const mayAutoFocusOnHide = !!autoFocusOnHide;
  const autoFocusOnHideProp = useBooleanEvent(autoFocusOnHide);
  const [hasOpened, setHasOpened] = (0, import_react38.useState)(false);
  (0, import_react38.useEffect)(() => {
    if (!open) return;
    setHasOpened(true);
    return () => setHasOpened(false);
  }, [open]);
  const focusOnHide = (0, import_react38.useCallback)(
    (dialog, retry = true) => {
      const { disclosureElement } = store.getState();
      if (isAlreadyFocusingAnotherElement(dialog)) return;
      let element = getElementFromProp(finalFocus) || disclosureElement;
      if (element == null ? void 0 : element.id) {
        const doc = getDocument(element);
        const selector2 = `[aria-activedescendant="${element.id}"]`;
        const composite = doc.querySelector(selector2);
        if (composite) {
          element = composite;
        }
      }
      if (element && !isFocusable(element)) {
        const maybeParentDialog = element.closest("[data-dialog]");
        if (maybeParentDialog == null ? void 0 : maybeParentDialog.id) {
          const doc = getDocument(maybeParentDialog);
          const selector2 = `[aria-controls~="${maybeParentDialog.id}"]`;
          const control = doc.querySelector(selector2);
          if (control) {
            element = control;
          }
        }
      }
      const isElementFocusable = element && isFocusable(element);
      if (!isElementFocusable && retry) {
        requestAnimationFrame(() => focusOnHide(dialog, false));
        return;
      }
      if (!autoFocusOnHideProp(isElementFocusable ? element : null)) return;
      if (!isElementFocusable) return;
      element == null ? void 0 : element.focus();
    },
    [store, finalFocus, autoFocusOnHideProp]
  );
  const focusedOnHideRef = (0, import_react38.useRef)(false);
  useSafeLayoutEffect(() => {
    if (open) return;
    if (!hasOpened) return;
    if (!mayAutoFocusOnHide) return;
    const dialog = ref.current;
    focusedOnHideRef.current = true;
    focusOnHide(dialog);
  }, [open, hasOpened, domReady, mayAutoFocusOnHide, focusOnHide]);
  (0, import_react38.useEffect)(() => {
    if (!hasOpened) return;
    if (!mayAutoFocusOnHide) return;
    const dialog = ref.current;
    return () => {
      if (focusedOnHideRef.current) {
        focusedOnHideRef.current = false;
        return;
      }
      focusOnHide(dialog);
    };
  }, [hasOpened, mayAutoFocusOnHide, focusOnHide]);
  const hideOnEscapeProp = useBooleanEvent(hideOnEscape);
  (0, import_react38.useEffect)(() => {
    if (!domReady) return;
    if (!mounted) return;
    const onKeyDown = (event) => {
      if (event.key !== "Escape") return;
      if (event.defaultPrevented) return;
      const dialog = ref.current;
      if (!dialog) return;
      if (isElementMarked(dialog)) return;
      const target = event.target;
      if (!target) return;
      const { disclosureElement } = store.getState();
      const isValidTarget = () => {
        if (target.tagName === "BODY") return true;
        if (contains(dialog, target)) return true;
        if (!disclosureElement) return true;
        if (contains(disclosureElement, target)) return true;
        return false;
      };
      if (!isValidTarget()) return;
      if (!hideOnEscapeProp(event)) return;
      store.hide();
    };
    return addGlobalEventListener("keydown", onKeyDown, true);
  }, [store, domReady, mounted, hideOnEscapeProp]);
  props = useWrapElement(
    props,
    (element) => (0, import_jsx_runtime18.jsx)(HeadingLevel, { level: modal ? 1 : void 0, children: element }),
    [modal]
  );
  const hiddenProp = props.hidden;
  const alwaysVisible = props.alwaysVisible;
  props = useWrapElement(
    props,
    (element) => {
      if (!backdrop) return element;
      return (0, import_jsx_runtime18.jsxs)(import_jsx_runtime18.Fragment, { children: [
        (0, import_jsx_runtime18.jsx)(
          DialogBackdrop,
          {
            store,
            backdrop,
            hidden: hiddenProp,
            alwaysVisible
          }
        ),
        element
      ] });
    },
    [store, backdrop, hiddenProp, alwaysVisible]
  );
  const [headingId, setHeadingId] = (0, import_react38.useState)();
  const [descriptionId, setDescriptionId] = (0, import_react38.useState)();
  props = useWrapElement(
    props,
    (element) => (0, import_jsx_runtime18.jsx)(DialogScopedContextProvider, { value: store, children: (0, import_jsx_runtime18.jsx)(DialogHeadingContext.Provider, { value: setHeadingId, children: (0, import_jsx_runtime18.jsx)(DialogDescriptionContext.Provider, { value: setDescriptionId, children: element }) }) }),
    [store]
  );
  props = __spreadProps(__spreadValues({
    id,
    "data-dialog": "",
    role: "dialog",
    tabIndex: focusable ? -1 : void 0,
    "aria-labelledby": headingId,
    "aria-describedby": descriptionId
  }, props), {
    ref: useMergeRefs(ref, props.ref)
  });
  props = useFocusableContainer(__spreadProps(__spreadValues({}, props), {
    autoFocusOnShow: autoFocusEnabled
  }));
  props = useDisclosureContent(__spreadValues({ store }, props));
  props = useFocusable(__spreadProps(__spreadValues({}, props), { focusable }));
  props = usePortal(__spreadProps(__spreadValues({ portal }, props), { portalRef, preserveTabOrder }));
  return props;
});
function createDialogComponent(Component, useProviderContext = useDialogProviderContext) {
  return forwardRef2(function DialogComponent(props) {
    const context = useProviderContext();
    const store = props.store || context;
    const mounted = useStoreState(
      store,
      (state) => !props.unmountOnHide || (state == null ? void 0 : state.mounted) || !!props.open
    );
    if (!mounted) return null;
    return (0, import_jsx_runtime18.jsx)(Component, __spreadValues({}, props));
  });
}
var Dialog = createDialogComponent(
  forwardRef2(function Dialog2(props) {
    const htmlProps = useDialog(props);
    return createElement(TagName32, htmlProps);
  }),
  useDialogProviderContext
);

// node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs
var sides = ["top", "right", "bottom", "left"];
var alignments = ["start", "end"];
var placements = sides.reduce((acc, side) => acc.concat(side, side + "-" + alignments[0], side + "-" + alignments[1]), []);
var min = Math.min;
var max = Math.max;
var round = Math.round;
var floor = Math.floor;
var createCoords = (v2) => ({
  x: v2,
  y: v2
});
var oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
var oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function clamp(start, value, end) {
  return max(start, min(value, end));
}
function evaluate(value, param) {
  return typeof value === "function" ? value(param) : value;
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getOppositeAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getAxisLength(axis) {
  return axis === "y" ? "height" : "width";
}
function getSideAxis(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ["left", "right"];
  const rl = ["right", "left"];
  const tb = ["top", "bottom"];
  const bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      if (rtl) return isStart ? rl : lr;
      return isStart ? lr : rl;
    case "left":
    case "right":
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === "start", rtl);
  if (alignment) {
    list = list.map((side) => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  const {
    x: x2,
    y,
    width,
    height
  } = rect;
  return {
    width,
    height,
    top: y,
    left: x2,
    right: x2 + width,
    bottom: y + height,
    x: x2,
    y
  };
}

// node_modules/@floating-ui/core/dist/floating-ui.core.mjs
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const sideAxis = getSideAxis(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const alignLength = getAxisLength(alignmentAxis);
  const side = getSide(placement);
  const isVertical2 = sideAxis === "y";
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical2 ? -1 : 1);
      break;
    case "end":
      coords[alignmentAxis] += commonAlign * (rtl && isVertical2 ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference, floating, config) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  let rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x: x2,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset: reset3
    } = await fn({
      x: x2,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    x2 = nextX != null ? nextX : x2;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    if (reset3 && resetCount <= 50) {
      resetCount++;
      if (typeof reset3 === "object") {
        if (reset3.placement) {
          statefulPlacement = reset3.placement;
        }
        if (reset3.rects) {
          rects = reset3.rects === true ? await platform2.getElementRects({
            reference,
            floating,
            strategy
          }) : reset3.rects;
        }
        ({
          x: x2,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
    }
  }
  return {
    x: x2,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x: x2,
    y,
    platform: platform2,
    rects,
    elements: elements2,
    strategy
  } = state;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = evaluate(options, state);
  const paddingObject = getPaddingObject(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements2[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements2.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === "floating" ? {
    x: x2,
    y,
    width: rects.floating.width,
    height: rects.floating.height
  } : rects.reference;
  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements2.floating));
  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: elements2,
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
var arrow = (options) => ({
  name: "arrow",
  options,
  async fn(state) {
    const {
      x: x2,
      y,
      placement,
      rects,
      platform: platform2,
      elements: elements2,
      middlewareData
    } = state;
    const {
      element,
      padding = 0
    } = evaluate(options, state) || {};
    if (element == null) {
      return {};
    }
    const paddingObject = getPaddingObject(padding);
    const coords = {
      x: x2,
      y
    };
    const axis = getAlignmentAxis(placement);
    const length = getAxisLength(axis);
    const arrowDimensions = await platform2.getDimensions(element);
    const isYAxis = axis === "y";
    const minProp = isYAxis ? "top" : "left";
    const maxProp = isYAxis ? "bottom" : "right";
    const clientProp = isYAxis ? "clientHeight" : "clientWidth";
    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));
    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
    if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {
      clientSize = elements2.floating[clientProp] || rects.floating[length];
    }
    const centerToReference = endDiff / 2 - startDiff / 2;
    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
    const minPadding = min(paddingObject[minProp], largestPossiblePadding);
    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);
    const min$1 = minPadding;
    const max2 = clientSize - arrowDimensions[length] - maxPadding;
    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
    const offset3 = clamp(min$1, center, max2);
    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset3 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max2 : 0;
    return {
      [axis]: coords[axis] + alignmentOffset,
      data: {
        [axis]: offset3,
        centerOffset: center - offset3 - alignmentOffset,
        ...shouldAddOffset && {
          alignmentOffset
        }
      },
      reset: shouldAddOffset
    };
  }
});
var flip = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "flip",
    options,
    async fn(state) {
      var _middlewareData$arrow, _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements: elements2
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        fallbackAxisSideDirection = "none",
        flipAlignment = true,
        ...detectOverflowOptions
      } = evaluate(options, state);
      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      const side = getSide(placement);
      const initialSideAxis = getSideAxis(initialPlacement);
      const isBasePlacement = getSide(initialPlacement) === initialPlacement;
      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements2.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== "none";
      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {
        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements2 = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const sides2 = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow[sides2[0]], overflow[sides2[1]]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];
      if (!overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements2[nextIndex];
        if (nextPlacement) {
          const ignoreCrossAxisOverflow = checkCrossAxis === "alignment" ? initialSideAxis !== getSideAxis(nextPlacement) : false;
          if (!ignoreCrossAxisOverflow || // We leave the current main axis only if every placement on that axis
          // overflows the main axis.
          overflowsData.every((d) => d.overflows[0] > 0 && getSideAxis(d.placement) === initialSideAxis)) {
            return {
              data: {
                index: nextIndex,
                overflows: overflowsData
              },
              reset: {
                placement: nextPlacement
              }
            };
          }
        }
        let resetPlacement = (_overflowsData$filter = overflowsData.filter((d) => d.overflows[0] <= 0).sort((a2, b2) => a2.overflows[1] - b2.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case "bestFit": {
              var _overflowsData$filter2;
              const placement2 = (_overflowsData$filter2 = overflowsData.filter((d) => {
                if (hasFallbackAxisSideDirection) {
                  const currentSideAxis = getSideAxis(d.placement);
                  return currentSideAxis === initialSideAxis || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  currentSideAxis === "y";
                }
                return true;
              }).map((d) => [d.placement, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a2, b2) => a2[1] - b2[1])[0]) == null ? void 0 : _overflowsData$filter2[0];
              if (placement2) {
                resetPlacement = placement2;
              }
              break;
            }
            case "initialPlacement":
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};
async function convertValueToCoords(state, options) {
  const {
    placement,
    platform: platform2,
    elements: elements2
  } = state;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements2.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical2 = getSideAxis(placement) === "y";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical2 ? -1 : 1;
  const rawValue = evaluate(options, state);
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: rawValue.mainAxis || 0,
    crossAxis: rawValue.crossAxis || 0,
    alignmentAxis: rawValue.alignmentAxis
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical2 ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var offset = function(options) {
  if (options === void 0) {
    options = 0;
  }
  return {
    name: "offset",
    options,
    async fn(state) {
      var _middlewareData$offse, _middlewareData$arrow;
      const {
        x: x2,
        y,
        placement,
        middlewareData
      } = state;
      const diffCoords = await convertValueToCoords(state, options);
      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      return {
        x: x2 + diffCoords.x,
        y: y + diffCoords.y,
        data: {
          ...diffCoords,
          placement
        }
      };
    }
  };
};
var shift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "shift",
    options,
    async fn(state) {
      const {
        x: x2,
        y,
        placement
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: (_ref) => {
            let {
              x: x3,
              y: y2
            } = _ref;
            return {
              x: x3,
              y: y2
            };
          }
        },
        ...detectOverflowOptions
      } = evaluate(options, state);
      const coords = {
        x: x2,
        y
      };
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const crossAxis = getSideAxis(getSide(placement));
      const mainAxis = getOppositeAxis(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === "y" ? "top" : "left";
        const maxSide = mainAxis === "y" ? "bottom" : "right";
        const min2 = mainAxisCoord + overflow[minSide];
        const max2 = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = clamp(min2, mainAxisCoord, max2);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === "y" ? "top" : "left";
        const maxSide = crossAxis === "y" ? "bottom" : "right";
        const min2 = crossAxisCoord + overflow[minSide];
        const max2 = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = clamp(min2, crossAxisCoord, max2);
      }
      const limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x2,
          y: limitedCoords.y - y,
          enabled: {
            [mainAxis]: checkMainAxis,
            [crossAxis]: checkCrossAxis
          }
        }
      };
    }
  };
};
var limitShift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    options,
    fn(state) {
      const {
        x: x2,
        y,
        placement,
        rects,
        middlewareData
      } = state;
      const {
        offset: offset3 = 0,
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true
      } = evaluate(options, state);
      const coords = {
        x: x2,
        y
      };
      const crossAxis = getSideAxis(placement);
      const mainAxis = getOppositeAxis(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      const rawOffset = evaluate(offset3, state);
      const computedOffset = typeof rawOffset === "number" ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };
      if (checkMainAxis) {
        const len = mainAxis === "y" ? "height" : "width";
        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        if (mainAxisCoord < limitMin) {
          mainAxisCoord = limitMin;
        } else if (mainAxisCoord > limitMax) {
          mainAxisCoord = limitMax;
        }
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2;
        const len = mainAxis === "y" ? "width" : "height";
        const isOriginSide = ["top", "left"].includes(getSide(placement));
        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        if (crossAxisCoord < limitMin) {
          crossAxisCoord = limitMin;
        } else if (crossAxisCoord > limitMax) {
          crossAxisCoord = limitMax;
        }
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
};
var size = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "size",
    options,
    async fn(state) {
      var _state$middlewareData, _state$middlewareData2;
      const {
        placement,
        rects,
        platform: platform2,
        elements: elements2
      } = state;
      const {
        apply = () => {
        },
        ...detectOverflowOptions
      } = evaluate(options, state);
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const side = getSide(placement);
      const alignment = getAlignment(placement);
      const isYAxis = getSideAxis(placement) === "y";
      const {
        width,
        height
      } = rects.floating;
      let heightSide;
      let widthSide;
      if (side === "top" || side === "bottom") {
        heightSide = side;
        widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements2.floating)) ? "start" : "end") ? "left" : "right";
      } else {
        widthSide = side;
        heightSide = alignment === "end" ? "top" : "bottom";
      }
      const maximumClippingHeight = height - overflow.top - overflow.bottom;
      const maximumClippingWidth = width - overflow.left - overflow.right;
      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);
      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);
      const noShift = !state.middlewareData.shift;
      let availableHeight = overflowAvailableHeight;
      let availableWidth = overflowAvailableWidth;
      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {
        availableWidth = maximumClippingWidth;
      }
      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {
        availableHeight = maximumClippingHeight;
      }
      if (noShift && !alignment) {
        const xMin = max(overflow.left, 0);
        const xMax = max(overflow.right, 0);
        const yMin = max(overflow.top, 0);
        const yMax = max(overflow.bottom, 0);
        if (isYAxis) {
          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));
        } else {
          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));
        }
      }
      await apply({
        ...state,
        availableWidth,
        availableHeight
      });
      const nextDimensions = await platform2.getDimensions(elements2.floating);
      if (width !== nextDimensions.width || height !== nextDimensions.height) {
        return {
          reset: {
            rects: true
          }
        };
      }
      return {};
    }
  };
};

// node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs
function hasWindow() {
  return typeof window !== "undefined";
}
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || "").toLowerCase();
  }
  return "#document";
}
function getWindow2(node) {
  var _node$ownerDocument;
  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof Node || value instanceof getWindow2(value).Node;
}
function isElement(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof Element || value instanceof getWindow2(value).Element;
}
function isHTMLElement(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof HTMLElement || value instanceof getWindow2(value).HTMLElement;
}
function isShadowRoot(value) {
  if (!hasWindow() || typeof ShadowRoot === "undefined") {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow2(value).ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle2(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isTopLayer(element) {
  return [":popover-open", ":modal"].some((selector2) => {
    try {
      return element.matches(selector2);
    } catch (e) {
      return false;
    }
  });
}
function isContainingBlock(elementOrCss) {
  const webkit = isWebKit();
  const css = isElement(elementOrCss) ? getComputedStyle2(elementOrCss) : elementOrCss;
  return ["transform", "translate", "scale", "rotate", "perspective"].some((value) => css[value] ? css[value] !== "none" : false) || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || ["transform", "translate", "scale", "rotate", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else if (isTopLayer(currentNode)) {
      return null;
    }
    currentNode = getParentNode(currentNode);
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === "undefined" || !CSS.supports) return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
function getComputedStyle2(element) {
  return getWindow2(element).getComputedStyle(element);
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.scrollX,
    scrollTop: element.scrollY
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  const result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list, traverseIframes) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow2(scrollableAncestor);
  if (isBody) {
    const frameElement = getFrameElement(win);
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}
function getFrameElement(win) {
  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;
}

// node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs
function getCssDimensions(element) {
  const css = getComputedStyle2(element);
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = isHTMLElement(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}
function unwrapElement(element) {
  return !isElement(element) ? element.contextElement : element;
}
function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement(domElement)) {
    return createCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $
  } = getCssDimensions(domElement);
  let x2 = ($ ? round(rect.width) : rect.width) / width;
  let y = ($ ? round(rect.height) : rect.height) / height;
  if (!x2 || !Number.isFinite(x2)) {
    x2 = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x: x2,
    y
  };
}
var noOffsets = createCoords(0);
function getVisualOffsets(element) {
  const win = getWindow2(element);
  if (!isWebKit() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow2(element)) {
    return false;
  }
  return isFixed;
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = createCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
  let x2 = (clientRect.left + visualOffsets.x) / scale.x;
  let y = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = getWindow2(domElement);
    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow2(offsetParent) : offsetParent;
    let currentWin = win;
    let currentIFrame = getFrameElement(currentWin);
    while (currentIFrame && offsetParent && offsetWin !== currentWin) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = getComputedStyle2(currentIFrame);
      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x2 *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x2 += left;
      y += top;
      currentWin = getWindow2(currentIFrame);
      currentIFrame = getFrameElement(currentWin);
    }
  }
  return rectToClientRect({
    width,
    height,
    x: x2,
    y
  });
}
function getWindowScrollBarX(element, rect) {
  const leftScroll = getNodeScroll(element).scrollLeft;
  if (!rect) {
    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;
  }
  return rect.left + leftScroll;
}
function getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {
  if (ignoreScrollbarX === void 0) {
    ignoreScrollbarX = false;
  }
  const htmlRect = documentElement.getBoundingClientRect();
  const x2 = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 : (
    // RTL <body> scrollbar.
    getWindowScrollBarX(documentElement, htmlRect)
  ));
  const y = htmlRect.top + scroll.scrollTop;
  return {
    x: x2,
    y
  };
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    elements: elements2,
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isFixed = strategy === "fixed";
  const documentElement = getDocumentElement(offsetParent);
  const topLayer = elements2 ? isTopLayer(elements2.floating) : false;
  if (offsetParent === documentElement || topLayer && isFixed) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = createCoords(1);
  const offsets = createCoords(0);
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y
  };
}
function getClientRects(element) {
  return Array.from(element.getClientRects());
}
function getDocumentRect(element) {
  const html = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = element.ownerDocument.body;
  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x2 = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle2(body).direction === "rtl") {
    x2 += max(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x: x2,
    y
  };
}
function getViewportRect(element, strategy) {
  const win = getWindow2(element);
  const html = getDocumentElement(element);
  const visualViewport2 = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x2 = 0;
  let y = 0;
  if (visualViewport2) {
    width = visualViewport2.width;
    height = visualViewport2.height;
    const visualViewportBased = isWebKit();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x2 = visualViewport2.offsetLeft;
      y = visualViewport2.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x2,
    y
  };
}
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === "fixed");
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x2 = left * scale.x;
  const y = top * scale.y;
  return {
    width,
    height,
    x: x2,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect(getDocumentElement(element));
  } else if (isElement(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y,
      width: clippingAncestor.width,
      height: clippingAncestor.height
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = getParentNode(element);
  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle2(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache2) {
  const cachedResult = cache2.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = getOverflowAncestors(element, [], false).filter((el) => isElement(el) && getNodeName(el) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle2(element).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode(element) : element;
  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle2(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === "fixed") {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      result = result.filter((ancestor) => ancestor !== currentNode);
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode(currentNode);
  }
  cache2.set(element, result);
  return result;
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === "clippingAncestors" ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  const {
    width,
    height
  } = getCssDimensions(element);
  return {
    width,
    height
  };
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const isFixed = strategy === "fixed";
  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createCoords(0);
  function setLeftRTLScrollbarOffset() {
    offsets.x = getWindowScrollBarX(documentElement);
  }
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      setLeftRTLScrollbarOffset();
    }
  }
  if (isFixed && !isOffsetParentAnElement && documentElement) {
    setLeftRTLScrollbarOffset();
  }
  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);
  const x2 = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;
  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;
  return {
    x: x2,
    y,
    width: rect.width,
    height: rect.height
  };
}
function isStaticPositioned(element) {
  return getComputedStyle2(element).position === "static";
}
function getTrueOffsetParent(element, polyfill) {
  if (!isHTMLElement(element) || getComputedStyle2(element).position === "fixed") {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  let rawOffsetParent = element.offsetParent;
  if (getDocumentElement(element) === rawOffsetParent) {
    rawOffsetParent = rawOffsetParent.ownerDocument.body;
  }
  return rawOffsetParent;
}
function getOffsetParent(element, polyfill) {
  const win = getWindow2(element);
  if (isTopLayer(element)) {
    return win;
  }
  if (!isHTMLElement(element)) {
    let svgOffsetParent = getParentNode(element);
    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {
      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {
        return svgOffsetParent;
      }
      svgOffsetParent = getParentNode(svgOffsetParent);
    }
    return win;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill);
  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {
    return win;
  }
  return offsetParent || getContainingBlock(element) || win;
}
var getElementRects = async function(data) {
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
  const getDimensionsFn = this.getDimensions;
  const floatingDimensions = await getDimensionsFn(data.floating);
  return {
    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),
    floating: {
      x: 0,
      y: 0,
      width: floatingDimensions.width,
      height: floatingDimensions.height
    }
  };
};
function isRTL(element) {
  return getComputedStyle2(element).direction === "rtl";
}
var platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement,
  getClippingRect,
  getOffsetParent,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement,
  isRTL
};
function rectsAreEqual(a2, b2) {
  return a2.x === b2.x && a2.y === b2.y && a2.width === b2.width && a2.height === b2.height;
}
function observeMove(element, onMove) {
  let io = null;
  let timeoutId;
  const root = getDocumentElement(element);
  function cleanup() {
    var _io;
    clearTimeout(timeoutId);
    (_io = io) == null || _io.disconnect();
    io = null;
  }
  function refresh(skip, threshold) {
    if (skip === void 0) {
      skip = false;
    }
    if (threshold === void 0) {
      threshold = 1;
    }
    cleanup();
    const elementRectForRootMargin = element.getBoundingClientRect();
    const {
      left,
      top,
      width,
      height
    } = elementRectForRootMargin;
    if (!skip) {
      onMove();
    }
    if (!width || !height) {
      return;
    }
    const insetTop = floor(top);
    const insetRight = floor(root.clientWidth - (left + width));
    const insetBottom = floor(root.clientHeight - (top + height));
    const insetLeft = floor(left);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options = {
      rootMargin,
      threshold: max(0, min(1, threshold)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          timeoutId = setTimeout(() => {
            refresh(false, 1e-7);
          }, 1e3);
        } else {
          refresh(false, ratio);
        }
      }
      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {
        refresh();
      }
      isFirstUpdate = false;
    }
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options,
        // Handle <iframe>s
        root: root.ownerDocument
      });
    } catch (_e) {
      io = new IntersectionObserver(handleObserve, options);
    }
    io.observe(element);
  }
  refresh(true);
  return cleanup;
}
function autoUpdate(reference, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === "function",
    layoutShift = typeof IntersectionObserver === "function",
    animationFrame = false
  } = options;
  const referenceEl = unwrapElement(reference);
  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver((_ref) => {
      let [firstEntry] = _ref;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          var _resizeObserver;
          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
        });
      }
      update();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    var _resizeObserver2;
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    cleanupIo == null || cleanupIo();
    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
var offset2 = offset;
var shift2 = shift;
var flip2 = flip;
var size2 = size;
var arrow2 = arrow;
var limitShift2 = limitShift;
var computePosition2 = (reference, floating, options) => {
  const cache2 = /* @__PURE__ */ new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache2
  };
  return computePosition(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};

// node_modules/@ariakit/react-core/esm/__chunks/DUIQBYXB.js
var import_react39 = __toESM(require_react(), 1);
var import_jsx_runtime19 = __toESM(require_jsx_runtime(), 1);
var TagName33 = "div";
function createDOMRect(x2 = 0, y = 0, width = 0, height = 0) {
  if (typeof DOMRect === "function") {
    return new DOMRect(x2, y, width, height);
  }
  const rect = {
    x: x2,
    y,
    width,
    height,
    top: y,
    right: x2 + width,
    bottom: y + height,
    left: x2
  };
  return __spreadProps(__spreadValues({}, rect), { toJSON: () => rect });
}
function getDOMRect(anchorRect) {
  if (!anchorRect) return createDOMRect();
  const { x: x2, y, width, height } = anchorRect;
  return createDOMRect(x2, y, width, height);
}
function getAnchorElement(anchorElement, getAnchorRect) {
  const contextElement = anchorElement || void 0;
  return {
    contextElement,
    getBoundingClientRect: () => {
      const anchor = anchorElement;
      const anchorRect = getAnchorRect == null ? void 0 : getAnchorRect(anchor);
      if (anchorRect || !anchor) {
        return getDOMRect(anchorRect);
      }
      return anchor.getBoundingClientRect();
    }
  };
}
function isValidPlacement(flip22) {
  return /^(?:top|bottom|left|right)(?:-(?:start|end))?$/.test(flip22);
}
function roundByDPR(value) {
  const dpr = window.devicePixelRatio || 1;
  return Math.round(value * dpr) / dpr;
}
function getOffsetMiddleware(arrowElement, props) {
  return offset2(({ placement }) => {
    var _a2;
    const arrowOffset = ((arrowElement == null ? void 0 : arrowElement.clientHeight) || 0) / 2;
    const finalGutter = typeof props.gutter === "number" ? props.gutter + arrowOffset : (_a2 = props.gutter) != null ? _a2 : arrowOffset;
    const hasAlignment = !!placement.split("-")[1];
    return {
      crossAxis: !hasAlignment ? props.shift : void 0,
      mainAxis: finalGutter,
      alignmentAxis: props.shift
    };
  });
}
function getFlipMiddleware(props) {
  if (props.flip === false) return;
  const fallbackPlacements = typeof props.flip === "string" ? props.flip.split(" ") : void 0;
  invariant(
    !fallbackPlacements || fallbackPlacements.every(isValidPlacement),
    "`flip` expects a spaced-delimited list of placements"
  );
  return flip2({
    padding: props.overflowPadding,
    fallbackPlacements
  });
}
function getShiftMiddleware(props) {
  if (!props.slide && !props.overlap) return;
  return shift2({
    mainAxis: props.slide,
    crossAxis: props.overlap,
    padding: props.overflowPadding,
    limiter: limitShift2()
  });
}
function getSizeMiddleware(props) {
  return size2({
    padding: props.overflowPadding,
    apply({ elements: elements2, availableWidth, availableHeight, rects }) {
      const wrapper = elements2.floating;
      const referenceWidth = Math.round(rects.reference.width);
      availableWidth = Math.floor(availableWidth);
      availableHeight = Math.floor(availableHeight);
      wrapper.style.setProperty(
        "--popover-anchor-width",
        `${referenceWidth}px`
      );
      wrapper.style.setProperty(
        "--popover-available-width",
        `${availableWidth}px`
      );
      wrapper.style.setProperty(
        "--popover-available-height",
        `${availableHeight}px`
      );
      if (props.sameWidth) {
        wrapper.style.width = `${referenceWidth}px`;
      }
      if (props.fitViewport) {
        wrapper.style.maxWidth = `${availableWidth}px`;
        wrapper.style.maxHeight = `${availableHeight}px`;
      }
    }
  });
}
function getArrowMiddleware(arrowElement, props) {
  if (!arrowElement) return;
  return arrow2({
    element: arrowElement,
    padding: props.arrowPadding
  });
}
var usePopover = createHook(
  function usePopover2(_a2) {
    var _b = _a2, {
      store,
      modal = false,
      portal = !!modal,
      preserveTabOrder = true,
      autoFocusOnShow = true,
      wrapperProps,
      fixed = false,
      flip: flip22 = true,
      shift: shift22 = 0,
      slide = true,
      overlap = false,
      sameWidth = false,
      fitViewport = false,
      gutter,
      arrowPadding = 4,
      overflowPadding = 8,
      getAnchorRect,
      updatePosition
    } = _b, props = __objRest(_b, [
      "store",
      "modal",
      "portal",
      "preserveTabOrder",
      "autoFocusOnShow",
      "wrapperProps",
      "fixed",
      "flip",
      "shift",
      "slide",
      "overlap",
      "sameWidth",
      "fitViewport",
      "gutter",
      "arrowPadding",
      "overflowPadding",
      "getAnchorRect",
      "updatePosition"
    ]);
    const context = usePopoverProviderContext();
    store = store || context;
    invariant(
      store,
      "Popover must receive a `store` prop or be wrapped in a PopoverProvider component."
    );
    const arrowElement = store.useState("arrowElement");
    const anchorElement = store.useState("anchorElement");
    const disclosureElement = store.useState("disclosureElement");
    const popoverElement = store.useState("popoverElement");
    const contentElement = store.useState("contentElement");
    const placement = store.useState("placement");
    const mounted = store.useState("mounted");
    const rendered = store.useState("rendered");
    const defaultArrowElementRef = (0, import_react39.useRef)(null);
    const [positioned, setPositioned] = (0, import_react39.useState)(false);
    const { portalRef, domReady } = usePortalRef(portal, props.portalRef);
    const getAnchorRectProp = useEvent(getAnchorRect);
    const updatePositionProp = useEvent(updatePosition);
    const hasCustomUpdatePosition = !!updatePosition;
    useSafeLayoutEffect(() => {
      if (!(popoverElement == null ? void 0 : popoverElement.isConnected)) return;
      popoverElement.style.setProperty(
        "--popover-overflow-padding",
        `${overflowPadding}px`
      );
      const anchor = getAnchorElement(anchorElement, getAnchorRectProp);
      const updatePosition2 = async () => {
        if (!mounted) return;
        if (!arrowElement) {
          defaultArrowElementRef.current = defaultArrowElementRef.current || document.createElement("div");
        }
        const arrow22 = arrowElement || defaultArrowElementRef.current;
        const middleware = [
          getOffsetMiddleware(arrow22, { gutter, shift: shift22 }),
          getFlipMiddleware({ flip: flip22, overflowPadding }),
          getShiftMiddleware({ slide, shift: shift22, overlap, overflowPadding }),
          getArrowMiddleware(arrow22, { arrowPadding }),
          getSizeMiddleware({
            sameWidth,
            fitViewport,
            overflowPadding
          })
        ];
        const pos = await computePosition2(anchor, popoverElement, {
          placement,
          strategy: fixed ? "fixed" : "absolute",
          middleware
        });
        store == null ? void 0 : store.setState("currentPlacement", pos.placement);
        setPositioned(true);
        const x2 = roundByDPR(pos.x);
        const y = roundByDPR(pos.y);
        Object.assign(popoverElement.style, {
          top: "0",
          left: "0",
          transform: `translate3d(${x2}px,${y}px,0)`
        });
        if (arrow22 && pos.middlewareData.arrow) {
          const { x: arrowX, y: arrowY } = pos.middlewareData.arrow;
          const side = pos.placement.split("-")[0];
          const centerX = arrow22.clientWidth / 2;
          const centerY = arrow22.clientHeight / 2;
          const originX = arrowX != null ? arrowX + centerX : -centerX;
          const originY = arrowY != null ? arrowY + centerY : -centerY;
          popoverElement.style.setProperty(
            "--popover-transform-origin",
            {
              top: `${originX}px calc(100% + ${centerY}px)`,
              bottom: `${originX}px ${-centerY}px`,
              left: `calc(100% + ${centerX}px) ${originY}px`,
              right: `${-centerX}px ${originY}px`
            }[side]
          );
          Object.assign(arrow22.style, {
            left: arrowX != null ? `${arrowX}px` : "",
            top: arrowY != null ? `${arrowY}px` : "",
            [side]: "100%"
          });
        }
      };
      const update = async () => {
        if (hasCustomUpdatePosition) {
          await updatePositionProp({ updatePosition: updatePosition2 });
          setPositioned(true);
        } else {
          await updatePosition2();
        }
      };
      const cancelAutoUpdate = autoUpdate(anchor, popoverElement, update, {
        // JSDOM doesn't support ResizeObserver
        elementResize: typeof ResizeObserver === "function"
      });
      return () => {
        setPositioned(false);
        cancelAutoUpdate();
      };
    }, [
      store,
      rendered,
      popoverElement,
      arrowElement,
      anchorElement,
      popoverElement,
      placement,
      mounted,
      domReady,
      fixed,
      flip22,
      shift22,
      slide,
      overlap,
      sameWidth,
      fitViewport,
      gutter,
      arrowPadding,
      overflowPadding,
      getAnchorRectProp,
      hasCustomUpdatePosition,
      updatePositionProp
    ]);
    useSafeLayoutEffect(() => {
      if (!mounted) return;
      if (!domReady) return;
      if (!(popoverElement == null ? void 0 : popoverElement.isConnected)) return;
      if (!(contentElement == null ? void 0 : contentElement.isConnected)) return;
      const applyZIndex = () => {
        popoverElement.style.zIndex = getComputedStyle(contentElement).zIndex;
      };
      applyZIndex();
      let raf = requestAnimationFrame(() => {
        raf = requestAnimationFrame(applyZIndex);
      });
      return () => cancelAnimationFrame(raf);
    }, [mounted, domReady, popoverElement, contentElement]);
    const position = fixed ? "fixed" : "absolute";
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime19.jsx)(
        "div",
        __spreadProps(__spreadValues({}, wrapperProps), {
          style: __spreadValues({
            // https://floating-ui.com/docs/computeposition#initial-layout
            position,
            top: 0,
            left: 0,
            width: "max-content"
          }, wrapperProps == null ? void 0 : wrapperProps.style),
          ref: store == null ? void 0 : store.setPopoverElement,
          children: element
        })
      ),
      [store, position, wrapperProps]
    );
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime19.jsx)(PopoverScopedContextProvider, { value: store, children: element }),
      [store]
    );
    props = __spreadProps(__spreadValues({
      // data-placing is not part of the public API. We're setting this here so
      // we can wait for the popover to be positioned before other components
      // move focus into it. For example, this attribute is observed by the
      // Combobox component with the autoSelect behavior.
      "data-placing": !positioned || void 0
    }, props), {
      style: __spreadValues({
        position: "relative"
      }, props.style)
    });
    props = useDialog(__spreadProps(__spreadValues({
      store,
      modal,
      portal,
      preserveTabOrder,
      preserveTabOrderAnchor: disclosureElement || anchorElement,
      autoFocusOnShow: positioned && autoFocusOnShow
    }, props), {
      portalRef
    }));
    return props;
  }
);
var Popover = createDialogComponent(
  forwardRef2(function Popover2(props) {
    const htmlProps = usePopover(props);
    return createElement(TagName33, htmlProps);
  }),
  usePopoverProviderContext
);

// node_modules/@ariakit/react-core/esm/combobox/combobox-popover.js
var import_react40 = __toESM(require_react());
var TagName34 = "div";
function isController(target, ...ids) {
  if (!target) return false;
  if ("id" in target) {
    const selector2 = ids.filter(Boolean).map((id) => `[aria-controls~="${id}"]`).join(", ");
    if (!selector2) return false;
    return target.matches(selector2);
  }
  return false;
}
var useComboboxPopover = createHook(
  function useComboboxPopover2(_a2) {
    var _b = _a2, {
      store,
      modal,
      tabIndex,
      alwaysVisible,
      autoFocusOnHide = true,
      hideOnInteractOutside = true
    } = _b, props = __objRest(_b, [
      "store",
      "modal",
      "tabIndex",
      "alwaysVisible",
      "autoFocusOnHide",
      "hideOnInteractOutside"
    ]);
    const context = useComboboxProviderContext();
    store = store || context;
    invariant(
      store,
      "ComboboxPopover must receive a `store` prop or be wrapped in a ComboboxProvider component."
    );
    const baseElement = store.useState("baseElement");
    const hiddenByClickOutsideRef = (0, import_react40.useRef)(false);
    const treeSnapshotKey = useStoreState(
      store.tag,
      (state) => state == null ? void 0 : state.renderedItems.length
    );
    props = useComboboxList(__spreadValues({ store, alwaysVisible }, props));
    props = usePopover(__spreadProps(__spreadValues({
      store,
      modal,
      alwaysVisible,
      backdrop: false,
      autoFocusOnShow: false,
      finalFocus: baseElement,
      preserveTabOrderAnchor: null,
      unstable_treeSnapshotKey: treeSnapshotKey
    }, props), {
      // When the combobox popover is modal, we make sure to include the
      // combobox input and all the combobox controls (cancel, disclosure) in
      // the list of persistent elements so they make part of the modal context,
      // allowing users to tab through them.
      getPersistentElements() {
        var _a22;
        const elements2 = ((_a22 = props.getPersistentElements) == null ? void 0 : _a22.call(props)) || [];
        if (!modal) return elements2;
        if (!store) return elements2;
        const { contentElement, baseElement: baseElement2 } = store.getState();
        if (!baseElement2) return elements2;
        const doc = getDocument(baseElement2);
        const selectors = [];
        if (contentElement == null ? void 0 : contentElement.id) {
          selectors.push(`[aria-controls~="${contentElement.id}"]`);
        }
        if (baseElement2 == null ? void 0 : baseElement2.id) {
          selectors.push(`[aria-controls~="${baseElement2.id}"]`);
        }
        if (!selectors.length) return [...elements2, baseElement2];
        const selector2 = selectors.join(",");
        const controlElements = doc.querySelectorAll(selector2);
        return [...elements2, ...controlElements];
      },
      // The combobox popover should focus on the combobox input when it hides,
      // unless the event was triggered by a click outside the popover, in which
      // case the input shouldn't be re-focused.
      autoFocusOnHide(element) {
        if (isFalsyBooleanCallback(autoFocusOnHide, element)) return false;
        if (hiddenByClickOutsideRef.current) {
          hiddenByClickOutsideRef.current = false;
          return false;
        }
        return true;
      },
      // Make sure we don't hide the popover when the user interacts with the
      // combobox cancel or the combobox disclosure buttons. They will have the
      // aria-controls attribute pointing to either the combobox input or the
      // combobox popover elements.
      hideOnInteractOutside(event) {
        var _a22, _b2;
        const state = store == null ? void 0 : store.getState();
        const contentId = (_a22 = state == null ? void 0 : state.contentElement) == null ? void 0 : _a22.id;
        const baseId = (_b2 = state == null ? void 0 : state.baseElement) == null ? void 0 : _b2.id;
        if (isController(event.target, contentId, baseId)) return false;
        const result = typeof hideOnInteractOutside === "function" ? hideOnInteractOutside(event) : hideOnInteractOutside;
        if (result) {
          hiddenByClickOutsideRef.current = event.type === "click";
        }
        return result;
      }
    }));
    return props;
  }
);
var ComboboxPopover = createDialogComponent(
  forwardRef2(function ComboboxPopover2(props) {
    const htmlProps = useComboboxPopover(props);
    return createElement(TagName34, htmlProps);
  }),
  useComboboxProviderContext
);

// node_modules/@ariakit/react-core/esm/__chunks/BCUN2D7Y.js
var import_react41 = __toESM(require_react(), 1);
var import_jsx_runtime20 = __toESM(require_jsx_runtime(), 1);
var TagName35 = "div";
var useCompositeRow = createHook(
  function useCompositeRow2(_a2) {
    var _b = _a2, {
      store,
      "aria-setsize": ariaSetSize,
      "aria-posinset": ariaPosInSet
    } = _b, props = __objRest(_b, [
      "store",
      "aria-setsize",
      "aria-posinset"
    ]);
    const context = useCompositeContext();
    store = store || context;
    invariant(
      store,
      "CompositeRow must be wrapped in a Composite component."
    );
    const id = useId(props.id);
    const baseElement = store.useState(
      (state) => state.baseElement || void 0
    );
    const providerValue = (0, import_react41.useMemo)(
      () => ({ id, baseElement, ariaSetSize, ariaPosInSet }),
      [id, baseElement, ariaSetSize, ariaPosInSet]
    );
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime20.jsx)(CompositeRowContext.Provider, { value: providerValue, children: element }),
      [providerValue]
    );
    props = __spreadValues({ id }, props);
    return removeUndefinedValues(props);
  }
);
var CompositeRow = forwardRef2(function CompositeRow2(props) {
  const htmlProps = useCompositeRow(props);
  return createElement(TagName35, htmlProps);
});

// node_modules/@ariakit/react-core/esm/combobox/combobox-row.js
var TagName36 = "div";
var useComboboxRow = createHook(
  function useComboboxRow2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useComboboxScopedContext();
    store = store || context;
    invariant(
      store,
      "ComboboxRow must be wrapped in a ComboboxList or ComboboxPopover component"
    );
    const contentElement = store.useState("contentElement");
    const popupRole = getPopupRole(contentElement);
    const role = popupRole === "grid" ? "row" : "presentation";
    props = __spreadValues({ role }, props);
    props = useCompositeRow(__spreadValues({ store }, props));
    return props;
  }
);
var ComboboxRow = forwardRef2(function ComboboxRow2(props) {
  const htmlProps = useComboboxRow(props);
  return createElement(TagName36, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/33WVSQBK.js
var TagName37 = "hr";
var useSeparator = createHook(
  function useSeparator2(_a2) {
    var _b = _a2, { orientation = "horizontal" } = _b, props = __objRest(_b, ["orientation"]);
    props = __spreadValues({
      role: "separator",
      "aria-orientation": orientation
    }, props);
    return props;
  }
);
var Separator = forwardRef2(function Separator2(props) {
  const htmlProps = useSeparator(props);
  return createElement(TagName37, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/QGD6VM2D.js
var TagName38 = "hr";
var useCompositeSeparator = createHook(function useCompositeSeparator2(_a2) {
  var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
  const context = useCompositeContext();
  store = store || context;
  invariant(
    store,
    "CompositeSeparator must be wrapped in a Composite component."
  );
  const orientation = store.useState(
    (state) => state.orientation === "horizontal" ? "vertical" : "horizontal"
  );
  props = useSeparator(__spreadProps(__spreadValues({}, props), { orientation }));
  return props;
});
var CompositeSeparator = forwardRef2(function CompositeSeparator2(props) {
  const htmlProps = useCompositeSeparator(props);
  return createElement(TagName38, htmlProps);
});

// node_modules/@ariakit/react-core/esm/combobox/combobox-separator.js
var TagName39 = "hr";
var useComboboxSeparator = createHook(function useComboboxSeparator2(_a2) {
  var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
  const context = useComboboxScopedContext();
  store = store || context;
  invariant(
    store,
    "ComboboxSeparator must be wrapped in a ComboboxList or ComboboxPopover component."
  );
  props = useCompositeSeparator(__spreadValues({ store }, props));
  return props;
});
var ComboboxSeparator = forwardRef2(function ComboboxSeparator2(props) {
  const htmlProps = useComboboxSeparator(props);
  return createElement(TagName39, htmlProps);
});

// node_modules/@ariakit/react-core/esm/collection/collection.js
var import_jsx_runtime21 = __toESM(require_jsx_runtime());
var TagName40 = "div";
var useCollection = createHook(
  function useCollection2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useCollectionProviderContext();
    store = store || context;
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime21.jsx)(CollectionScopedContextProvider, { value: store, children: element }),
      [store]
    );
    return removeUndefinedValues(props);
  }
);
var Collection = forwardRef2(function Collection2(props) {
  const htmlProps = useCollection(props);
  return createElement(TagName40, htmlProps);
});

// node_modules/@ariakit/react-core/esm/collection/collection-provider.js
var import_jsx_runtime22 = __toESM(require_jsx_runtime());

// node_modules/@ariakit/core/esm/checkbox/checkbox-store.js
function createCheckboxStore(props = {}) {
  var _a2;
  throwOnConflictingProps(props, props.store);
  const syncState = (_a2 = props.store) == null ? void 0 : _a2.getState();
  const initialState = {
    value: defaultValue(
      props.value,
      syncState == null ? void 0 : syncState.value,
      props.defaultValue,
      false
    )
  };
  const checkbox = createStore(initialState, props.store);
  return __spreadProps2(__spreadValues2({}, checkbox), {
    setValue: (value) => checkbox.setState("value", value)
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/ISFXQ47C.js
function useCheckboxStoreProps(store, update, props) {
  useUpdateEffect(update, [props.store]);
  useStoreProps(store, props, "value", "setValue");
  return store;
}
function useCheckboxStore(props = {}) {
  const [store, update] = useStore(createCheckboxStore, props);
  return useCheckboxStoreProps(store, update, props);
}

// node_modules/@ariakit/react-core/esm/__chunks/3YZMJGQP.js
var ctx8 = createStoreContext();
var useCheckboxContext = ctx8.useContext;
var useCheckboxScopedContext = ctx8.useScopedContext;
var useCheckboxProviderContext = ctx8.useProviderContext;
var CheckboxContextProvider = ctx8.ContextProvider;
var CheckboxScopedContextProvider = ctx8.ScopedContextProvider;

// node_modules/@ariakit/react-core/esm/__chunks/6P23IZ5Z.js
var import_react42 = __toESM(require_react(), 1);
var import_jsx_runtime23 = __toESM(require_jsx_runtime(), 1);
var TagName41 = "input";
function setMixed(element, mixed) {
  if (mixed) {
    element.indeterminate = true;
  } else if (element.indeterminate) {
    element.indeterminate = false;
  }
}
function isNativeCheckbox(tagName, type) {
  return tagName === "input" && (!type || type === "checkbox");
}
function getPrimitiveValue(value) {
  if (Array.isArray(value)) {
    return value.toString();
  }
  return value;
}
var useCheckbox = createHook(
  function useCheckbox2(_a2) {
    var _b = _a2, {
      store,
      name,
      value: valueProp,
      checked: checkedProp,
      defaultChecked
    } = _b, props = __objRest(_b, [
      "store",
      "name",
      "value",
      "checked",
      "defaultChecked"
    ]);
    const context = useCheckboxContext();
    store = store || context;
    const [_checked, setChecked] = (0, import_react42.useState)(defaultChecked != null ? defaultChecked : false);
    const checked = useStoreState(store, (state) => {
      if (checkedProp !== void 0) return checkedProp;
      if ((state == null ? void 0 : state.value) === void 0) return _checked;
      if (valueProp != null) {
        if (Array.isArray(state.value)) {
          const primitiveValue = getPrimitiveValue(valueProp);
          return state.value.includes(primitiveValue);
        }
        return state.value === valueProp;
      }
      if (Array.isArray(state.value)) return false;
      if (typeof state.value === "boolean") return state.value;
      return false;
    });
    const ref = (0, import_react42.useRef)(null);
    const tagName = useTagName(ref, TagName41);
    const nativeCheckbox = isNativeCheckbox(tagName, props.type);
    const mixed = checked ? checked === "mixed" : void 0;
    const isChecked = checked === "mixed" ? false : checked;
    const disabled = disabledFromProps(props);
    const [propertyUpdated, schedulePropertyUpdate] = useForceUpdate();
    (0, import_react42.useEffect)(() => {
      const element = ref.current;
      if (!element) return;
      setMixed(element, mixed);
      if (nativeCheckbox) return;
      element.checked = isChecked;
      if (name !== void 0) {
        element.name = name;
      }
      if (valueProp !== void 0) {
        element.value = `${valueProp}`;
      }
    }, [propertyUpdated, mixed, nativeCheckbox, isChecked, name, valueProp]);
    const onChangeProp = props.onChange;
    const onChange = useEvent((event) => {
      if (disabled) {
        event.stopPropagation();
        event.preventDefault();
        return;
      }
      setMixed(event.currentTarget, mixed);
      if (!nativeCheckbox) {
        event.currentTarget.checked = !event.currentTarget.checked;
        schedulePropertyUpdate();
      }
      onChangeProp == null ? void 0 : onChangeProp(event);
      if (event.defaultPrevented) return;
      const elementChecked = event.currentTarget.checked;
      setChecked(elementChecked);
      store == null ? void 0 : store.setValue((prevValue) => {
        if (valueProp == null) return elementChecked;
        const primitiveValue = getPrimitiveValue(valueProp);
        if (!Array.isArray(prevValue)) {
          return prevValue === primitiveValue ? false : primitiveValue;
        }
        if (elementChecked) {
          if (prevValue.includes(primitiveValue)) {
            return prevValue;
          }
          return [...prevValue, primitiveValue];
        }
        return prevValue.filter((v2) => v2 !== primitiveValue);
      });
    });
    const onClickProp = props.onClick;
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      if (nativeCheckbox) return;
      onChange(event);
    });
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime23.jsx)(CheckboxCheckedContext.Provider, { value: isChecked, children: element }),
      [isChecked]
    );
    props = __spreadProps(__spreadValues({
      role: !nativeCheckbox ? "checkbox" : void 0,
      type: nativeCheckbox ? "checkbox" : void 0,
      "aria-checked": checked
    }, props), {
      ref: useMergeRefs(ref, props.ref),
      onChange,
      onClick
    });
    props = useCommand(__spreadValues({ clickOnEnter: !nativeCheckbox }, props));
    return removeUndefinedValues(__spreadValues({
      name: nativeCheckbox ? name : void 0,
      value: nativeCheckbox ? valueProp : void 0,
      checked: isChecked
    }, props));
  }
);
var Checkbox = forwardRef2(function Checkbox2(props) {
  const htmlProps = useCheckbox(props);
  return createElement(TagName41, htmlProps);
});

// node_modules/@ariakit/react-core/esm/checkbox/checkbox-provider.js
var import_jsx_runtime24 = __toESM(require_jsx_runtime());

// node_modules/@ariakit/react-core/esm/__chunks/LD67HE6L.js
var import_react43 = __toESM(require_react(), 1);

// node_modules/@ariakit/react-core/esm/__chunks/PQKUBRVU.js
var ctx9 = createStoreContext(
  [CollectionContextProvider],
  [CollectionScopedContextProvider]
);
var useFormContext = ctx9.useContext;
var useFormScopedContext = ctx9.useScopedContext;
var useFormProviderContext = ctx9.useProviderContext;
var FormContextProvider = ctx9.ContextProvider;
var FormScopedContextProvider = ctx9.ScopedContextProvider;

// node_modules/@ariakit/react-core/esm/form/form.js
var import_react44 = __toESM(require_react());
var import_jsx_runtime25 = __toESM(require_jsx_runtime());
var TagName42 = "form";
function isField(element, items) {
  return items.some(
    (item) => item.type === "field" && item.element === element
  );
}
function getFirstInvalidField(items) {
  return items.find(
    (item) => {
      var _a2;
      return item.type === "field" && ((_a2 = item.element) == null ? void 0 : _a2.getAttribute("aria-invalid")) === "true";
    }
  );
}
var useForm = createHook(function useForm2(_a2) {
  var _b = _a2, {
    store,
    validateOnChange = true,
    validateOnBlur = true,
    resetOnUnmount = false,
    resetOnSubmit = true,
    autoFocusOnSubmit = true
  } = _b, props = __objRest(_b, [
    "store",
    "validateOnChange",
    "validateOnBlur",
    "resetOnUnmount",
    "resetOnSubmit",
    "autoFocusOnSubmit"
  ]);
  const context = useFormContext();
  store = store || context;
  invariant(
    store,
    "Form must receive a `store` prop or be wrapped in a FormProvider component."
  );
  const ref = (0, import_react44.useRef)(null);
  const values = store.useState("values");
  const submitSucceed = store.useState("submitSucceed");
  const submitFailed = store.useState("submitFailed");
  const items = store.useState("items");
  const defaultValues = useInitialValue(values);
  (0, import_react44.useEffect)(
    () => resetOnUnmount ? store == null ? void 0 : store.reset : void 0,
    [resetOnUnmount, store]
  );
  useUpdateEffect(() => {
    if (!validateOnChange) return;
    if (values === defaultValues) return;
    store == null ? void 0 : store.validate();
  }, [validateOnChange, values, defaultValues, store]);
  (0, import_react44.useEffect)(() => {
    if (!resetOnSubmit) return;
    if (!submitSucceed) return;
    store == null ? void 0 : store.reset();
  }, [resetOnSubmit, submitSucceed, store]);
  const [shouldFocusOnSubmit, setShouldFocusOnSubmit] = (0, import_react44.useState)(false);
  (0, import_react44.useEffect)(() => {
    if (!shouldFocusOnSubmit) return;
    if (!submitFailed) return;
    const field = getFirstInvalidField(items);
    const element = field == null ? void 0 : field.element;
    if (!element) return;
    setShouldFocusOnSubmit(false);
    element.focus();
    if (isTextField(element)) {
      element.select();
    }
  }, [autoFocusOnSubmit, submitFailed, items]);
  const onSubmitProp = props.onSubmit;
  const onSubmit = useEvent((event) => {
    onSubmitProp == null ? void 0 : onSubmitProp(event);
    if (event.defaultPrevented) return;
    event.preventDefault();
    store == null ? void 0 : store.submit();
    if (!autoFocusOnSubmit) return;
    setShouldFocusOnSubmit(true);
  });
  const onBlurProp = props.onBlur;
  const onBlur = useEvent((event) => {
    onBlurProp == null ? void 0 : onBlurProp(event);
    if (event.defaultPrevented) return;
    if (!validateOnBlur) return;
    if (!store) return;
    if (!isField(event.target, store.getState().items)) return;
    store.validate();
  });
  const onResetProp = props.onReset;
  const onReset = useEvent((event) => {
    onResetProp == null ? void 0 : onResetProp(event);
    if (event.defaultPrevented) return;
    event.preventDefault();
    store == null ? void 0 : store.reset();
  });
  props = useWrapElement(
    props,
    (element) => (0, import_jsx_runtime25.jsx)(FormScopedContextProvider, { value: store, children: element }),
    [store]
  );
  const tagName = useTagName(ref, TagName42);
  props = __spreadProps(__spreadValues({
    role: tagName !== "form" ? "form" : void 0,
    noValidate: true
  }, props), {
    ref: useMergeRefs(ref, props.ref),
    onSubmit,
    onBlur,
    onReset
  });
  return props;
});
var Form = forwardRef2(function Form2(props) {
  const htmlProps = useForm(props);
  return createElement(TagName42, htmlProps);
});

// node_modules/@ariakit/react-core/esm/form/form-provider.js
var import_jsx_runtime26 = __toESM(require_jsx_runtime());

// node_modules/@ariakit/react-core/esm/__chunks/KKXTCJYN.js
var import_react45 = __toESM(require_react(), 1);
var TagName43 = "input";
function getNamedElement(ref, name) {
  const element = ref.current;
  if (!element) return null;
  if (element.name === name) return element;
  if (element.form) {
    return element.form.elements.namedItem(name);
  }
  const document2 = getDocument(element);
  return document2.getElementsByName(name)[0];
}
function useItem(store, name, type) {
  return store.useState(
    (state) => state.items.find((item) => item.type === type && item.name === name)
  );
}
var useFormControl = createHook(
  function useFormControl2(_a2) {
    var _b = _a2, {
      store,
      name: nameProp,
      getItem: getItemProp,
      touchOnBlur = true
    } = _b, props = __objRest(_b, [
      "store",
      "name",
      "getItem",
      "touchOnBlur"
    ]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      "FormControl must be wrapped in a Form component."
    );
    const name = `${nameProp}`;
    const id = useId(props.id);
    const ref = (0, import_react45.useRef)(null);
    store.useValidate(async () => {
      const element = getNamedElement(ref, name);
      if (!element) return;
      await Promise.resolve();
      if ("validity" in element && !element.validity.valid) {
        store == null ? void 0 : store.setError(name, element.validationMessage);
      }
    });
    const getItem = (0, import_react45.useCallback)(
      (item) => {
        const nextItem = __spreadProps(__spreadValues({}, item), { id: id || item.id, name, type: "field" });
        if (getItemProp) {
          return getItemProp(nextItem);
        }
        return nextItem;
      },
      [id, name, getItemProp]
    );
    const onBlurProp = props.onBlur;
    const touchOnBlurProp = useBooleanEvent(touchOnBlur);
    const onBlur = useEvent((event) => {
      onBlurProp == null ? void 0 : onBlurProp(event);
      if (event.defaultPrevented) return;
      if (!touchOnBlurProp(event)) return;
      store == null ? void 0 : store.setFieldTouched(name, true);
    });
    const label = useItem(store, name, "label");
    const error = useItem(store, name, "error");
    const description = useItem(store, name, "description");
    const describedBy = cx(
      error == null ? void 0 : error.id,
      description == null ? void 0 : description.id,
      props["aria-describedby"]
    );
    const invalid = store.useState(
      () => !!(store == null ? void 0 : store.getError(name)) && store.getFieldTouched(name)
    );
    props = __spreadProps(__spreadValues({
      id,
      "aria-labelledby": label == null ? void 0 : label.id,
      "aria-invalid": invalid
    }, props), {
      "aria-describedby": describedBy || void 0,
      ref: useMergeRefs(ref, props.ref),
      onBlur
    });
    props = useCollectionItem(__spreadProps(__spreadValues({ store }, props), { name, getItem }));
    return props;
  }
);
var FormControl = memo2(
  forwardRef2(function FormControl2(props) {
    const htmlProps = useFormControl(props);
    return createElement(TagName43, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/form/form-checkbox.js
var TagName44 = "input";
var useFormCheckbox = createHook(
  function useFormCheckbox2(_a2) {
    var _b = _a2, {
      store,
      name: nameProp,
      value,
      checked,
      defaultChecked
    } = _b, props = __objRest(_b, [
      "store",
      "name",
      "value",
      "checked",
      "defaultChecked"
    ]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      "FormCheckbox must be wrapped in a Form component."
    );
    const name = `${nameProp}`;
    const checkboxStore = useCheckboxStore({
      value: store.useValue(name),
      setValue: (value2) => store == null ? void 0 : store.setValue(name, value2)
    });
    props = useCheckbox(__spreadValues({ store: checkboxStore, value, checked }, props));
    props = useFormControl(__spreadValues({
      store,
      name,
      "aria-labelledby": void 0
    }, props));
    return props;
  }
);
var FormCheckbox = memo2(
  forwardRef2(function FormCheckbox2(props) {
    const htmlProps = useFormCheckbox(props);
    return createElement(TagName44, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/form/form-description.js
var import_react46 = __toESM(require_react());
var TagName45 = "div";
var useFormDescription = createHook(
  function useFormDescription2(_a2) {
    var _b = _a2, {
      store,
      name: nameProp,
      getItem: getItemProp
    } = _b, props = __objRest(_b, [
      "store",
      "name",
      "getItem"
    ]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      "FormDescription must be wrapped in a Form component."
    );
    const id = useId(props.id);
    const ref = (0, import_react46.useRef)(null);
    const name = `${nameProp}`;
    const getItem = (0, import_react46.useCallback)(
      (item) => {
        const nextItem = __spreadProps(__spreadValues({}, item), {
          id: id || item.id,
          name,
          type: "description"
        });
        if (getItemProp) {
          return getItemProp(nextItem);
        }
        return nextItem;
      },
      [id, name, getItemProp]
    );
    props = __spreadProps(__spreadValues({
      id
    }, props), {
      ref: useMergeRefs(ref, props.ref)
    });
    props = useCollectionItem(__spreadProps(__spreadValues({ store }, props), { getItem }));
    return props;
  }
);
var FormDescription = memo2(
  forwardRef2(function FormDescription2(props) {
    const htmlProps = useFormDescription(props);
    return createElement(TagName45, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/form/form-error.js
var import_react47 = __toESM(require_react());
var TagName46 = "div";
var useFormError = createHook(
  function useFormError2(_a2) {
    var _b = _a2, {
      store,
      name: nameProp,
      getItem: getItemProp
    } = _b, props = __objRest(_b, [
      "store",
      "name",
      "getItem"
    ]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      "FormError must be wrapped in a Form component."
    );
    const id = useId(props.id);
    const ref = (0, import_react47.useRef)(null);
    const name = `${nameProp}`;
    const getItem = (0, import_react47.useCallback)(
      (item) => {
        const nextItem = __spreadProps(__spreadValues({}, item), { id: id || item.id, name, type: "error" });
        if (getItemProp) {
          return getItemProp(nextItem);
        }
        return nextItem;
      },
      [id, name, getItemProp]
    );
    const children3 = store.useState(() => {
      const error = store == null ? void 0 : store.getError(name);
      if (error == null) return;
      if (!(store == null ? void 0 : store.getFieldTouched(name))) return;
      return error;
    });
    props = __spreadProps(__spreadValues({
      id,
      role: "alert",
      children: children3
    }, props), {
      ref: useMergeRefs(ref, props.ref)
    });
    props = useCollectionItem(__spreadProps(__spreadValues({ store }, props), { getItem }));
    return props;
  }
);
var FormError = memo2(
  forwardRef2(function FormError2(props) {
    const htmlProps = useFormError(props);
    return createElement(TagName46, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/form/form-field.js
var TagName47 = "input";
var useFormField = createHook(
  function useFormField2(props) {
    return useFormControl(props);
  }
);
var FormField = memo2(
  forwardRef2(function FormField2(props) {
    const htmlProps = useFormField(props);
    return createElement(TagName47, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/form/form-group-label.js
var TagName48 = "div";
var useFormGroupLabel = createHook(
  function useFormGroupLabel2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    props = useGroupLabel(props);
    return props;
  }
);
var FormGroupLabel = forwardRef2(function FormGroupLabel2(props) {
  const htmlProps = useFormGroupLabel(props);
  return createElement(TagName48, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/DFTBBEAD.js
var TagName49 = "div";
var useFormGroup = createHook(
  function useFormGroup2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    props = useGroup(props);
    return props;
  }
);
var FormGroup = forwardRef2(function FormGroup2(props) {
  const htmlProps = useFormGroup(props);
  return createElement(TagName49, htmlProps);
});

// node_modules/@ariakit/react-core/esm/form/form-input.js
var TagName50 = "input";
var useFormInput = createHook(
  function useFormInput2(_a2) {
    var _b = _a2, { store, name: nameProp } = _b, props = __objRest(_b, ["store", "name"]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      "FormInput must be wrapped in a Form component."
    );
    const name = `${nameProp}`;
    const onChangeProp = props.onChange;
    const onChange = useEvent((event) => {
      onChangeProp == null ? void 0 : onChangeProp(event);
      if (event.defaultPrevented) return;
      store == null ? void 0 : store.setValue(name, event.target.value);
    });
    const value = store.useValue(name);
    props = __spreadProps(__spreadValues({
      value
    }, props), {
      onChange
    });
    props = useFocusable(props);
    props = useFormControl(__spreadValues({ store, name }, props));
    return props;
  }
);
var FormInput = memo2(
  forwardRef2(function FormInput2(props) {
    const htmlProps = useFormInput(props);
    return createElement(TagName50, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/form/form-label.js
var import_react48 = __toESM(require_react());
var import_jsx_runtime27 = __toESM(require_jsx_runtime());
var TagName51 = "label";
function supportsNativeLabel(tagName) {
  return tagName === "input" || tagName === "textarea" || tagName === "select" || tagName === "meter" || tagName === "progress";
}
var useFormLabel = createHook(
  function useFormLabel2(_a2) {
    var _b = _a2, {
      store,
      name: nameProp,
      getItem: getItemProp
    } = _b, props = __objRest(_b, [
      "store",
      "name",
      "getItem"
    ]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      "FormLabel must be wrapped in a Form component."
    );
    const id = useId(props.id);
    const ref = (0, import_react48.useRef)(null);
    const name = `${nameProp}`;
    const getItem = (0, import_react48.useCallback)(
      (item) => {
        const nextItem = __spreadProps(__spreadValues({}, item), { id: id || item.id, name, type: "label" });
        if (getItemProp) {
          return getItemProp(nextItem);
        }
        return nextItem;
      },
      [id, name, getItemProp]
    );
    const field = store.useState(
      (state) => state.items.find((item) => item.type === "field" && item.name === name)
    );
    const fieldTagName = useTagName(field == null ? void 0 : field.element, "input");
    const isNativeLabel = supportsNativeLabel(fieldTagName);
    const onClickProp = props.onClick;
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      if (isNativeLabel) return;
      const fieldElement = field == null ? void 0 : field.element;
      if (!fieldElement) return;
      queueMicrotask(() => {
        const focusableElement = getFirstTabbableIn(fieldElement, true, true);
        focusableElement == null ? void 0 : focusableElement.focus();
        const role = focusableElement == null ? void 0 : focusableElement.getAttribute("role");
        if (role === "combobox") return;
        focusableElement == null ? void 0 : focusableElement.click();
      });
    });
    props = __spreadProps(__spreadValues({
      id,
      render: isNativeLabel ? (0, import_jsx_runtime27.jsx)("label", {}) : (0, import_jsx_runtime27.jsx)("span", {}),
      htmlFor: isNativeLabel ? field == null ? void 0 : field.id : void 0
    }, props), {
      ref: useMergeRefs(ref, props.ref),
      onClick
    });
    if (!isNativeLabel) {
      props = __spreadProps(__spreadValues({}, props), {
        style: __spreadValues({
          cursor: "default"
        }, props.style)
      });
    }
    props = useCollectionItem(__spreadProps(__spreadValues({ store }, props), { getItem }));
    return props;
  }
);
var FormLabel = memo2(
  forwardRef2(function FormLabel2(props) {
    const htmlProps = useFormLabel(props);
    return createElement(TagName51, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/form/form-push.js
var import_react49 = __toESM(require_react());
var TagName52 = "button";
function getFirstFieldsByName(items, name) {
  if (!items) return [];
  const fields = [];
  for (const item of items) {
    if (item.type !== "field") continue;
    if (!item.name.startsWith(name)) continue;
    const nameWithIndex = item.name.replace(/(\.\d+)\..+$/, "$1");
    const regex = new RegExp(`^${nameWithIndex}`);
    if (!fields.some((i) => regex.test(i.name))) {
      fields.push(item);
    }
  }
  return fields;
}
var useFormPush = createHook(
  function useFormPush2(_a2) {
    var _b = _a2, {
      store,
      value,
      name: nameProp,
      getItem: getItemProp,
      autoFocusOnClick = true
    } = _b, props = __objRest(_b, [
      "store",
      "value",
      "name",
      "getItem",
      "autoFocusOnClick"
    ]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      "FormPush must be wrapped in a Form component."
    );
    const name = `${nameProp}`;
    const [shouldFocus, setShouldFocus] = (0, import_react49.useState)(false);
    (0, import_react49.useEffect)(() => {
      var _a22;
      if (!shouldFocus) return;
      const items = getFirstFieldsByName(store == null ? void 0 : store.getState().items, name);
      const element = (_a22 = items == null ? void 0 : items[items.length - 1]) == null ? void 0 : _a22.element;
      if (!element) return;
      element.focus();
      setShouldFocus(false);
    }, [store, shouldFocus, name]);
    const getItem = (0, import_react49.useCallback)(
      (item) => {
        const nextItem = __spreadProps(__spreadValues({}, item), { type: "button", name });
        if (getItemProp) {
          return getItemProp(nextItem);
        }
        return nextItem;
      },
      [name, getItemProp]
    );
    const onClickProp = props.onClick;
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      store == null ? void 0 : store.pushValue(name, value);
      if (!autoFocusOnClick) return;
      setShouldFocus(true);
    });
    props = __spreadProps(__spreadValues({}, props), {
      onClick
    });
    props = useButton(props);
    props = useCollectionItem(__spreadProps(__spreadValues({ store }, props), { getItem }));
    return props;
  }
);
var FormPush = forwardRef2(function FormPush2(props) {
  const htmlProps = useFormPush(props);
  return createElement(TagName52, htmlProps);
});

// node_modules/@ariakit/react-core/esm/form/form-radio-group.js
var TagName53 = "div";
var useFormRadioGroup = createHook(
  function useFormRadioGroup2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    props = __spreadValues({ role: "radiogroup" }, props);
    props = useFormGroup(props);
    return props;
  }
);
var FormRadioGroup = forwardRef2(function FormRadioGroup2(props) {
  const htmlProps = useFormRadioGroup(props);
  return createElement(TagName53, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/MDCSFLUU.js
var ctx10 = createStoreContext(
  [CompositeContextProvider],
  [CompositeScopedContextProvider]
);
var useRadioContext = ctx10.useContext;
var useRadioScopedContext = ctx10.useScopedContext;
var useRadioProviderContext = ctx10.useProviderContext;
var RadioContextProvider = ctx10.ContextProvider;
var RadioScopedContextProvider = ctx10.ScopedContextProvider;

// node_modules/@ariakit/react-core/esm/__chunks/NETION43.js
var import_react50 = __toESM(require_react(), 1);
var TagName54 = "input";
function getIsChecked(value, storeValue) {
  if (storeValue === void 0) return;
  if (value != null && storeValue != null) {
    return storeValue === value;
  }
  return !!storeValue;
}
function isNativeRadio(tagName, type) {
  return tagName === "input" && (!type || type === "radio");
}
var useRadio = createHook(function useRadio2(_a2) {
  var _b = _a2, {
    store,
    name,
    value,
    checked
  } = _b, props = __objRest(_b, [
    "store",
    "name",
    "value",
    "checked"
  ]);
  const context = useRadioContext();
  store = store || context;
  const id = useId(props.id);
  const ref = (0, import_react50.useRef)(null);
  const isChecked = useStoreState(
    store,
    (state) => checked != null ? checked : getIsChecked(value, state == null ? void 0 : state.value)
  );
  (0, import_react50.useEffect)(() => {
    if (!id) return;
    if (!isChecked) return;
    const isActiveItem = (store == null ? void 0 : store.getState().activeId) === id;
    if (isActiveItem) return;
    store == null ? void 0 : store.setActiveId(id);
  }, [store, isChecked, id]);
  const onChangeProp = props.onChange;
  const tagName = useTagName(ref, TagName54);
  const nativeRadio = isNativeRadio(tagName, props.type);
  const disabled = disabledFromProps(props);
  const [propertyUpdated, schedulePropertyUpdate] = useForceUpdate();
  (0, import_react50.useEffect)(() => {
    const element = ref.current;
    if (!element) return;
    if (nativeRadio) return;
    if (isChecked !== void 0) {
      element.checked = isChecked;
    }
    if (name !== void 0) {
      element.name = name;
    }
    if (value !== void 0) {
      element.value = `${value}`;
    }
  }, [propertyUpdated, nativeRadio, isChecked, name, value]);
  const onChange = useEvent((event) => {
    if (disabled) {
      event.preventDefault();
      event.stopPropagation();
      return;
    }
    if ((store == null ? void 0 : store.getState().value) === value) return;
    if (!nativeRadio) {
      event.currentTarget.checked = true;
      schedulePropertyUpdate();
    }
    onChangeProp == null ? void 0 : onChangeProp(event);
    if (event.defaultPrevented) return;
    store == null ? void 0 : store.setValue(value);
  });
  const onClickProp = props.onClick;
  const onClick = useEvent((event) => {
    onClickProp == null ? void 0 : onClickProp(event);
    if (event.defaultPrevented) return;
    if (nativeRadio) return;
    onChange(event);
  });
  const onFocusProp = props.onFocus;
  const onFocus = useEvent((event) => {
    onFocusProp == null ? void 0 : onFocusProp(event);
    if (event.defaultPrevented) return;
    if (!nativeRadio) return;
    if (!store) return;
    const { moves, activeId } = store.getState();
    if (!moves) return;
    if (id && activeId !== id) return;
    onChange(event);
  });
  props = __spreadProps(__spreadValues({
    id,
    role: !nativeRadio ? "radio" : void 0,
    type: nativeRadio ? "radio" : void 0,
    "aria-checked": isChecked
  }, props), {
    ref: useMergeRefs(ref, props.ref),
    onChange,
    onClick,
    onFocus
  });
  props = useCompositeItem(__spreadValues({
    store,
    clickOnEnter: !nativeRadio
  }, props));
  return removeUndefinedValues(__spreadValues({
    name: nativeRadio ? name : void 0,
    value: nativeRadio ? value : void 0,
    checked: isChecked
  }, props));
});
var Radio = memo2(
  forwardRef2(function Radio2(props) {
    const htmlProps = useRadio(props);
    return createElement(TagName54, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/form/form-radio.js
var TagName55 = "input";
var useFormRadio = createHook(
  function useFormRadio2(_a2) {
    var _b = _a2, { store, name: nameProp, value } = _b, props = __objRest(_b, ["store", "name", "value"]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      "FormRadio must be wrapped in a Form component."
    );
    const name = `${nameProp}`;
    const onChangeProp = props.onChange;
    const onChange = useEvent((event) => {
      onChangeProp == null ? void 0 : onChangeProp(event);
      if (event.defaultPrevented) return;
      store == null ? void 0 : store.setValue(name, value);
    });
    const checkedProp = props.checked;
    const checked = store.useState(
      () => checkedProp != null ? checkedProp : (store == null ? void 0 : store.getValue(name)) === value
    );
    props = __spreadProps(__spreadValues({}, props), {
      checked,
      onChange
    });
    props = useRadio(__spreadValues({ value }, props));
    props = useFormControl(__spreadValues({
      store,
      name,
      "aria-labelledby": void 0
    }, props));
    return props;
  }
);
var FormRadio = memo2(
  forwardRef2(function FormRadio2(props) {
    const htmlProps = useFormRadio(props);
    return createElement(TagName55, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/form/form-remove.js
var TagName56 = "button";
function findNextOrPreviousField(items, name, index) {
  const fields = items == null ? void 0 : items.filter(
    (item) => item.type === "field" && item.name.startsWith(name)
  );
  const regex = new RegExp(`^${name}\\.(\\d+)`);
  const nextField = fields == null ? void 0 : fields.find((field) => {
    const fieldIndex = field.name.replace(regex, "$1");
    return Number.parseInt(fieldIndex) > index;
  });
  if (nextField) return nextField;
  return fields == null ? void 0 : fields.reverse().find((field) => {
    const fieldIndex = field.name.replace(regex, "$1");
    return Number.parseInt(fieldIndex) < index;
  });
}
function findPushButton(items, name) {
  return items == null ? void 0 : items.find((item) => item.type === "button" && item.name === name);
}
var useFormRemove = createHook(
  function useFormRemove2(_a2) {
    var _b = _a2, {
      store,
      name: nameProp,
      index,
      autoFocusOnClick = true
    } = _b, props = __objRest(_b, [
      "store",
      "name",
      "index",
      "autoFocusOnClick"
    ]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      "FormRemove must be wrapped in a Form component."
    );
    const name = `${nameProp}`;
    const onClickProp = props.onClick;
    const onClick = useEvent((event) => {
      var _a22;
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      if (!store) return;
      store.removeValue(name, index);
      if (!autoFocusOnClick) return;
      const { items } = store.getState();
      const item = findNextOrPreviousField(items, name, index);
      const element = item == null ? void 0 : item.element;
      if (element) {
        element.focus();
        if (isTextField(element)) {
          element.select();
        }
      } else {
        const pushButton = findPushButton(items, name);
        (_a22 = pushButton == null ? void 0 : pushButton.element) == null ? void 0 : _a22.focus();
      }
    });
    props = __spreadProps(__spreadValues({}, props), {
      onClick
    });
    props = useButton(props);
    return props;
  }
);
var FormRemove = forwardRef2(function FormRemove2(props) {
  const htmlProps = useFormRemove(props);
  return createElement(TagName56, htmlProps);
});

// node_modules/@ariakit/react-core/esm/form/form-reset.js
var TagName57 = "button";
var useFormReset = createHook(
  function useFormReset2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      "FormReset must be wrapped in a Form component."
    );
    props = __spreadValues({
      type: "reset",
      disabled: store.useState("submitting")
    }, props);
    props = useButton(props);
    return props;
  }
);
var FormReset = forwardRef2(function FormReset2(props) {
  const htmlProps = useFormReset(props);
  return createElement(TagName57, htmlProps);
});

// node_modules/@ariakit/react-core/esm/form/form-submit.js
var TagName58 = "button";
var useFormSubmit = createHook(
  function useFormSubmit2(_a2) {
    var _b = _a2, { store, accessibleWhenDisabled = true } = _b, props = __objRest(_b, ["store", "accessibleWhenDisabled"]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      "FormSubmit must be wrapped in a Form component."
    );
    props = __spreadValues({
      type: "submit",
      disabled: store.useState("submitting")
    }, props);
    props = useButton(__spreadProps(__spreadValues({}, props), { accessibleWhenDisabled }));
    return props;
  }
);
var FormSubmit = forwardRef2(function FormSubmit2(props) {
  const htmlProps = useFormSubmit(props);
  return createElement(TagName58, htmlProps);
});

// node_modules/@ariakit/react-core/esm/focus-trap/focus-trap-region.js
var import_react51 = __toESM(require_react());
var import_jsx_runtime28 = __toESM(require_jsx_runtime());
var TagName59 = "div";
var useFocusTrapRegion = createHook(
  function useFocusTrapRegion2(_a2) {
    var _b = _a2, { enabled = false } = _b, props = __objRest(_b, ["enabled"]);
    const ref = (0, import_react51.useRef)(null);
    props = useWrapElement(
      props,
      (element) => {
        const renderFocusTrap = () => {
          if (!enabled) return null;
          return (0, import_jsx_runtime28.jsx)(
            FocusTrap,
            {
              onFocus: (event) => {
                const container = ref.current;
                if (!container) return;
                const tabbables = getAllTabbableIn(container, true);
                const first = tabbables[0];
                const last = tabbables[tabbables.length - 1];
                if (!tabbables.length) {
                  container.focus();
                  return;
                }
                if (event.relatedTarget === first) {
                  last == null ? void 0 : last.focus();
                } else {
                  first == null ? void 0 : first.focus();
                }
              }
            }
          );
        };
        return (0, import_jsx_runtime28.jsxs)(import_jsx_runtime28.Fragment, { children: [
          renderFocusTrap(),
          element,
          renderFocusTrap()
        ] });
      },
      [enabled]
    );
    props = __spreadProps(__spreadValues({}, props), {
      ref: useMergeRefs(ref, props.ref)
    });
    return removeUndefinedValues(props);
  }
);
var FocusTrapRegion = forwardRef2(function FocusTrapRegion2(props) {
  const htmlProps = useFocusTrapRegion(props);
  return createElement(TagName59, htmlProps);
});

// node_modules/@ariakit/react-core/esm/disclosure/disclosure-provider.js
var import_jsx_runtime29 = __toESM(require_jsx_runtime());

// node_modules/@ariakit/react-core/esm/dialog/dialog-provider.js
var import_jsx_runtime30 = __toESM(require_jsx_runtime());

// node_modules/@ariakit/react-core/esm/__chunks/TI35IBOT.js
var import_react52 = __toESM(require_react(), 1);
var TagName60 = "p";
var useDialogDescription = createHook(function useDialogDescription2(_a2) {
  var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
  const setDescriptionId = (0, import_react52.useContext)(DialogDescriptionContext);
  const id = useId(props.id);
  useSafeLayoutEffect(() => {
    setDescriptionId == null ? void 0 : setDescriptionId(id);
    return () => setDescriptionId == null ? void 0 : setDescriptionId(void 0);
  }, [setDescriptionId, id]);
  props = __spreadValues({
    id
  }, props);
  return removeUndefinedValues(props);
});
var DialogDescription = forwardRef2(function DialogDescription2(props) {
  const htmlProps = useDialogDescription(props);
  return createElement(TagName60, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/CRZAWNHO.js
var import_react53 = __toESM(require_react(), 1);
var import_jsx_runtime31 = __toESM(require_jsx_runtime(), 1);
var TagName61 = "button";
var useDialogDismiss = createHook(
  function useDialogDismiss2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useDialogScopedContext();
    store = store || context;
    const onClickProp = props.onClick;
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      store == null ? void 0 : store.hide();
    });
    const children3 = (0, import_react53.useMemo)(
      () => (0, import_jsx_runtime31.jsxs)(
        "svg",
        {
          "aria-label": "Dismiss popup",
          display: "block",
          fill: "none",
          stroke: "currentColor",
          strokeLinecap: "round",
          strokeLinejoin: "round",
          strokeWidth: 1.5,
          viewBox: "0 0 16 16",
          height: "1em",
          width: "1em",
          children: [
            (0, import_jsx_runtime31.jsx)("line", { x1: "4", y1: "4", x2: "12", y2: "12" }),
            (0, import_jsx_runtime31.jsx)("line", { x1: "4", y1: "12", x2: "12", y2: "4" })
          ]
        }
      ),
      []
    );
    props = __spreadProps(__spreadValues({
      "data-dialog-dismiss": "",
      children: children3
    }, props), {
      onClick
    });
    props = useButton(props);
    return props;
  }
);
var DialogDismiss = forwardRef2(function DialogDismiss2(props) {
  const htmlProps = useDialogDismiss(props);
  return createElement(TagName61, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/7GRXGX7S.js
var import_react54 = __toESM(require_react(), 1);
var import_jsx_runtime32 = __toESM(require_jsx_runtime(), 1);
var TagName62 = "h1";
var useHeading = createHook(
  function useHeading2(props) {
    const ref = (0, import_react54.useRef)(null);
    const level = (0, import_react54.useContext)(HeadingContext) || 1;
    const Element2 = `h${level}`;
    const tagName = useTagName(ref, Element2);
    const isNativeHeading = (0, import_react54.useMemo)(
      () => !!tagName && /^h\d$/.test(tagName),
      [tagName]
    );
    props = __spreadProps(__spreadValues({
      render: (0, import_jsx_runtime32.jsx)(Element2, {}),
      role: !isNativeHeading ? "heading" : void 0,
      "aria-level": !isNativeHeading ? level : void 0
    }, props), {
      ref: useMergeRefs(ref, props.ref)
    });
    return props;
  }
);
var Heading = forwardRef2(function Heading2(props) {
  const htmlProps = useHeading(props);
  return createElement(TagName62, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/FUHTKLDR.js
var import_react55 = __toESM(require_react(), 1);
var TagName63 = "h1";
var useDialogHeading = createHook(
  function useDialogHeading2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const setHeadingId = (0, import_react55.useContext)(DialogHeadingContext);
    const id = useId(props.id);
    useSafeLayoutEffect(() => {
      setHeadingId == null ? void 0 : setHeadingId(id);
      return () => setHeadingId == null ? void 0 : setHeadingId(void 0);
    }, [setHeadingId, id]);
    props = __spreadValues({
      id
    }, props);
    props = useHeading(props);
    return props;
  }
);
var DialogHeading = forwardRef2(function DialogHeading2(props) {
  const htmlProps = useDialogHeading(props);
  return createElement(TagName63, htmlProps);
});

// node_modules/@ariakit/react-core/esm/composite/composite-provider.js
var import_jsx_runtime33 = __toESM(require_jsx_runtime());

// node_modules/@ariakit/react-core/esm/__chunks/CWIRMIEN.js
var import_react56 = __toESM(require_react(), 1);
var TagName64 = "div";
var chars = "";
function clearChars() {
  chars = "";
}
function isValidTypeaheadEvent(event) {
  const target = event.target;
  if (target && isTextField(target)) return false;
  if (event.key === " " && chars.length) return true;
  return event.key.length === 1 && !event.ctrlKey && !event.altKey && !event.metaKey && /^[\p{Letter}\p{Number}]$/u.test(event.key);
}
function isSelfTargetOrItem(event, items) {
  if (isSelfTarget(event)) return true;
  const target = event.target;
  if (!target) return false;
  const isItem2 = items.some((item) => item.element === target);
  return isItem2;
}
function getEnabledItems2(items) {
  return items.filter((item) => !item.disabled);
}
function itemTextStartsWith(item, text) {
  var _a2;
  const itemText = ((_a2 = item.element) == null ? void 0 : _a2.textContent) || item.children || // The composite item object itself doesn't include a value property, but
  // other components like Select do. Since CompositeTypeahead is a generic
  // component that can be used with those as well, we also consider the value
  // property as a fallback for the typeahead text content.
  "value" in item && item.value;
  if (!itemText) return false;
  return normalizeString(itemText).trim().toLowerCase().startsWith(text.toLowerCase());
}
function getSameInitialItems(items, char, activeId) {
  if (!activeId) return items;
  const activeItem = items.find((item) => item.id === activeId);
  if (!activeItem) return items;
  if (!itemTextStartsWith(activeItem, char)) return items;
  if (chars !== char && itemTextStartsWith(activeItem, chars)) return items;
  chars = char;
  return flipItems2(
    items.filter((item) => itemTextStartsWith(item, chars)),
    activeId
  ).filter((item) => item.id !== activeId);
}
var useCompositeTypeahead = createHook(function useCompositeTypeahead2(_a2) {
  var _b = _a2, { store, typeahead = true } = _b, props = __objRest(_b, ["store", "typeahead"]);
  const context = useCompositeContext();
  store = store || context;
  invariant(
    store,
    "CompositeTypeahead must be a Composite component"
  );
  const onKeyDownCaptureProp = props.onKeyDownCapture;
  const cleanupTimeoutRef = (0, import_react56.useRef)(0);
  const onKeyDownCapture = useEvent((event) => {
    onKeyDownCaptureProp == null ? void 0 : onKeyDownCaptureProp(event);
    if (event.defaultPrevented) return;
    if (!typeahead) return;
    if (!store) return;
    const { renderedItems, items, activeId } = store.getState();
    if (!isValidTypeaheadEvent(event)) return clearChars();
    let enabledItems = getEnabledItems2(
      renderedItems.length ? renderedItems : items
    );
    if (!isSelfTargetOrItem(event, enabledItems)) return clearChars();
    event.preventDefault();
    window.clearTimeout(cleanupTimeoutRef.current);
    cleanupTimeoutRef.current = window.setTimeout(() => {
      chars = "";
    }, 500);
    const char = event.key.toLowerCase();
    chars += char;
    enabledItems = getSameInitialItems(enabledItems, char, activeId);
    const item = enabledItems.find((item2) => itemTextStartsWith(item2, chars));
    if (item) {
      store.move(item.id);
    } else {
      clearChars();
    }
  });
  props = __spreadProps(__spreadValues({}, props), {
    onKeyDownCapture
  });
  return removeUndefinedValues(props);
});
var CompositeTypeahead = forwardRef2(function CompositeTypeahead2(props) {
  const htmlProps = useCompositeTypeahead(props);
  return createElement(TagName64, htmlProps);
});

// node_modules/@ariakit/core/esm/radio/radio-store.js
function createRadioStore(_a2 = {}) {
  var props = __objRest2(_a2, []);
  var _a22;
  const syncState = (_a22 = props.store) == null ? void 0 : _a22.getState();
  const composite = createCompositeStore(__spreadProps2(__spreadValues2({}, props), {
    focusLoop: defaultValue(props.focusLoop, syncState == null ? void 0 : syncState.focusLoop, true)
  }));
  const initialState = __spreadProps2(__spreadValues2({}, composite.getState()), {
    value: defaultValue(
      props.value,
      syncState == null ? void 0 : syncState.value,
      props.defaultValue,
      null
    )
  });
  const radio = createStore(initialState, composite, props.store);
  return __spreadProps2(__spreadValues2(__spreadValues2({}, composite), radio), {
    setValue: (value) => radio.setState("value", value)
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/3FB3COFJ.js
function useRadioStoreProps(store, update, props) {
  store = useCompositeStoreProps(store, update, props);
  useStoreProps(store, props, "value", "setValue");
  return store;
}
function useRadioStore(props = {}) {
  const [store, update] = useStore(createRadioStore, props);
  return useRadioStoreProps(store, update, props);
}

// node_modules/@ariakit/react-core/esm/radio/radio-provider.js
var import_jsx_runtime34 = __toESM(require_jsx_runtime());
function RadioProvider(props = {}) {
  const store = useRadioStore(props);
  return (0, import_jsx_runtime34.jsx)(RadioContextProvider, { value: store, children: props.children });
}

// node_modules/@ariakit/react-core/esm/radio/radio-group.js
var import_jsx_runtime35 = __toESM(require_jsx_runtime());
var TagName65 = "div";
var useRadioGroup = createHook(
  function useRadioGroup2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useRadioProviderContext();
    store = store || context;
    invariant(
      store,
      "RadioGroup must receive a `store` prop or be wrapped in a RadioProvider component."
    );
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime35.jsx)(RadioScopedContextProvider, { value: store, children: element }),
      [store]
    );
    props = __spreadValues({
      role: "radiogroup"
    }, props);
    props = useComposite(__spreadValues({ store }, props));
    return props;
  }
);
var RadioGroup = forwardRef2(function RadioGroup2(props) {
  const htmlProps = useRadioGroup(props);
  return createElement(TagName65, htmlProps);
});

// node_modules/@ariakit/react-core/esm/popover/popover-provider.js
var import_jsx_runtime36 = __toESM(require_jsx_runtime());
function PopoverProvider(props = {}) {
  const store = usePopoverStore(props);
  return (0, import_jsx_runtime36.jsx)(PopoverContextProvider, { value: store, children: props.children });
}

// node_modules/@ariakit/react-core/esm/__chunks/QFL5V2DO.js
var POPOVER_ARROW_PATH = "M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z";

// node_modules/@ariakit/react-core/esm/__chunks/UPTSIFGR.js
var import_react57 = __toESM(require_react(), 1);
var import_jsx_runtime37 = __toESM(require_jsx_runtime(), 1);
var TagName66 = "div";
var defaultSize = 30;
var halfDefaultSize = defaultSize / 2;
var rotateMap = {
  top: `rotate(180 ${halfDefaultSize} ${halfDefaultSize})`,
  right: `rotate(-90 ${halfDefaultSize} ${halfDefaultSize})`,
  bottom: `rotate(0 ${halfDefaultSize} ${halfDefaultSize})`,
  left: `rotate(90 ${halfDefaultSize} ${halfDefaultSize})`
};
function useComputedStyle(store) {
  const [style2, setStyle2] = (0, import_react57.useState)();
  const contentElement = store.useState("contentElement");
  useSafeLayoutEffect(() => {
    if (!contentElement) return;
    const win = getWindow(contentElement);
    const computedStyle = win.getComputedStyle(contentElement);
    setStyle2(computedStyle);
  }, [contentElement]);
  return style2;
}
var usePopoverArrow = createHook(
  function usePopoverArrow2(_a2) {
    var _b = _a2, { store, size: size3 = defaultSize } = _b, props = __objRest(_b, ["store", "size"]);
    const context = usePopoverContext();
    store = store || context;
    invariant(
      store,
      "PopoverArrow must be wrapped in a Popover component."
    );
    const dir = store.useState(
      (state) => state.currentPlacement.split("-")[0]
    );
    const style2 = useComputedStyle(store);
    const fill = (style2 == null ? void 0 : style2.getPropertyValue("background-color")) || "none";
    const stroke = (style2 == null ? void 0 : style2.getPropertyValue(`border-${dir}-color`)) || "none";
    const borderWidth = (style2 == null ? void 0 : style2.getPropertyValue(`border-${dir}-width`)) || "0px";
    const strokeWidth = Number.parseInt(borderWidth) * 2 * (defaultSize / size3);
    const transform = rotateMap[dir];
    const children3 = (0, import_react57.useMemo)(
      () => (0, import_jsx_runtime37.jsx)("svg", { display: "block", viewBox: "0 0 30 30", children: (0, import_jsx_runtime37.jsxs)("g", { transform, children: [
        (0, import_jsx_runtime37.jsx)("path", { fill: "none", d: POPOVER_ARROW_PATH }),
        (0, import_jsx_runtime37.jsx)("path", { stroke: "none", d: POPOVER_ARROW_PATH })
      ] }) }),
      [transform]
    );
    props = __spreadProps(__spreadValues({
      children: children3,
      "aria-hidden": true
    }, props), {
      ref: useMergeRefs(store.setArrowElement, props.ref),
      style: __spreadValues({
        // server side rendering
        position: "absolute",
        fontSize: size3,
        width: "1em",
        height: "1em",
        pointerEvents: "none",
        fill,
        stroke,
        strokeWidth
      }, props.style)
    });
    return removeUndefinedValues(props);
  }
);
var PopoverArrow = forwardRef2(function PopoverArrow2(props) {
  const htmlProps = usePopoverArrow(props);
  return createElement(TagName66, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/FICKQG6J.js
var TagName67 = "p";
var usePopoverDescription = createHook(function usePopoverDescription2(props) {
  props = useDialogDescription(props);
  return props;
});
var PopoverDescription = forwardRef2(function PopoverDescription2(props) {
  const htmlProps = usePopoverDescription(props);
  return createElement(TagName67, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/A7OBCLOL.js
var import_react58 = __toESM(require_react(), 1);
var import_jsx_runtime38 = __toESM(require_jsx_runtime(), 1);
var TagName68 = "span";
var pointsMap = {
  top: "4,10 8,6 12,10",
  right: "6,4 10,8 6,12",
  bottom: "4,6 8,10 12,6",
  left: "10,4 6,8 10,12"
};
var usePopoverDisclosureArrow = createHook(function usePopoverDisclosureArrow2(_a2) {
  var _b = _a2, { store, placement } = _b, props = __objRest(_b, ["store", "placement"]);
  const context = usePopoverContext();
  store = store || context;
  invariant(
    store,
    "PopoverDisclosureArrow must be wrapped in a PopoverDisclosure component."
  );
  const position = store.useState((state) => placement || state.placement);
  const dir = position.split("-")[0];
  const points = pointsMap[dir];
  const children3 = (0, import_react58.useMemo)(
    () => (0, import_jsx_runtime38.jsx)(
      "svg",
      {
        display: "block",
        fill: "none",
        stroke: "currentColor",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 1.5,
        viewBox: "0 0 16 16",
        height: "1em",
        width: "1em",
        children: (0, import_jsx_runtime38.jsx)("polyline", { points })
      }
    ),
    [points]
  );
  props = __spreadProps(__spreadValues({
    children: children3,
    "aria-hidden": true
  }, props), {
    style: __spreadValues({
      width: "1em",
      height: "1em",
      pointerEvents: "none"
    }, props.style)
  });
  return removeUndefinedValues(props);
});
var PopoverDisclosureArrow = forwardRef2(
  function PopoverDisclosureArrow2(props) {
    const htmlProps = usePopoverDisclosureArrow(props);
    return createElement(TagName68, htmlProps);
  }
);

// node_modules/@ariakit/react-core/esm/__chunks/QE62MSCL.js
var import_jsx_runtime39 = __toESM(require_jsx_runtime(), 1);
var TagName69 = "button";
var usePopoverDisclosure = createHook(function usePopoverDisclosure2(_a2) {
  var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
  const context = usePopoverProviderContext();
  store = store || context;
  invariant(
    store,
    "PopoverDisclosure must receive a `store` prop or be wrapped in a PopoverProvider component."
  );
  const onClickProp = props.onClick;
  const onClick = useEvent((event) => {
    store == null ? void 0 : store.setAnchorElement(event.currentTarget);
    onClickProp == null ? void 0 : onClickProp(event);
  });
  props = useWrapElement(
    props,
    (element) => (0, import_jsx_runtime39.jsx)(PopoverScopedContextProvider, { value: store, children: element }),
    [store]
  );
  props = __spreadProps(__spreadValues({}, props), {
    onClick
  });
  props = usePopoverAnchor(__spreadValues({ store }, props));
  props = useDialogDisclosure(__spreadValues({ store }, props));
  return props;
});
var PopoverDisclosure = forwardRef2(function PopoverDisclosure2(props) {
  const htmlProps = usePopoverDisclosure(props);
  return createElement(TagName69, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/OSVWXUOM.js
var TagName70 = "button";
var usePopoverDismiss = createHook(
  function usePopoverDismiss2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = usePopoverScopedContext();
    store = store || context;
    props = useDialogDismiss(__spreadValues({ store }, props));
    return props;
  }
);
var PopoverDismiss = forwardRef2(function PopoverDismiss2(props) {
  const htmlProps = usePopoverDismiss(props);
  return createElement(TagName70, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/DCBMRDNF.js
var TagName71 = "h1";
var usePopoverHeading = createHook(
  function usePopoverHeading2(props) {
    props = useDialogHeading(props);
    return props;
  }
);
var PopoverHeading = forwardRef2(function PopoverHeading2(props) {
  const htmlProps = usePopoverHeading(props);
  return createElement(TagName71, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/QVEJ36PB.js
var import_react59 = __toESM(require_react(), 1);
var menubar = createStoreContext(
  [CompositeContextProvider],
  [CompositeScopedContextProvider]
);
var useMenubarContext = menubar.useContext;
var useMenubarScopedContext = menubar.useScopedContext;
var useMenubarProviderContext = menubar.useProviderContext;
var MenubarContextProvider = menubar.ContextProvider;
var MenubarScopedContextProvider = menubar.ScopedContextProvider;
var MenuItemCheckedContext = (0, import_react59.createContext)(
  void 0
);

// node_modules/@ariakit/core/esm/__chunks/S22RJCNX.js
function createMenubarStore(props = {}) {
  var _a2;
  const syncState = (_a2 = props.store) == null ? void 0 : _a2.getState();
  const composite = createCompositeStore(__spreadProps2(__spreadValues2({}, props), {
    orientation: defaultValue(
      props.orientation,
      syncState == null ? void 0 : syncState.orientation,
      "horizontal"
    ),
    focusLoop: defaultValue(props.focusLoop, syncState == null ? void 0 : syncState.focusLoop, true)
  }));
  const initialState = __spreadValues2({}, composite.getState());
  const menubar2 = createStore(initialState, composite, props.store);
  return __spreadValues2(__spreadValues2({}, composite), menubar2);
}

// node_modules/@ariakit/react-core/esm/__chunks/UZXETJJN.js
function useMenubarStoreProps(store, update, props) {
  return useCompositeStoreProps(store, update, props);
}
function useMenubarStore(props = {}) {
  const [store, update] = useStore(createMenubarStore, props);
  return useMenubarStoreProps(store, update, props);
}

// node_modules/@ariakit/react-core/esm/__chunks/4JPBYLF3.js
var import_jsx_runtime40 = __toESM(require_jsx_runtime(), 1);
var TagName72 = "div";
var useMenubar = createHook(
  function useMenubar2(_a2) {
    var _b = _a2, {
      store: storeProp,
      composite = true,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    } = _b, props = __objRest(_b, [
      "store",
      "composite",
      "orientation",
      "virtualFocus",
      "focusLoop",
      "rtl"
    ]);
    const context = useMenubarProviderContext();
    storeProp = storeProp || context;
    const store = useMenubarStore({
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    });
    const orientation = store.useState(
      (state) => !composite || state.orientation === "both" ? void 0 : state.orientation
    );
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime40.jsx)(MenubarScopedContextProvider, { value: store, children: element }),
      [store]
    );
    if (composite) {
      props = __spreadValues({
        role: "menubar",
        "aria-orientation": orientation
      }, props);
    }
    props = useComposite(__spreadValues({ store, composite }, props));
    return props;
  }
);
var Menubar = forwardRef2(function Menubar2(props) {
  const htmlProps = useMenubar(props);
  return createElement(TagName72, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/55NJ2WSC.js
var import_jsx_runtime41 = __toESM(require_jsx_runtime(), 1);

// node_modules/@ariakit/react-core/esm/__chunks/DPAO6G5R.js
var ctx11 = createStoreContext(
  [PopoverContextProvider],
  [PopoverScopedContextProvider]
);
var useHovercardContext = ctx11.useContext;
var useHovercardScopedContext = ctx11.useScopedContext;
var useHovercardProviderContext = ctx11.useProviderContext;
var HovercardContextProvider = ctx11.ContextProvider;
var HovercardScopedContextProvider = ctx11.ScopedContextProvider;

// node_modules/@ariakit/react-core/esm/__chunks/SJPAIJOW.js
var import_react60 = __toESM(require_react(), 1);
var menu = createStoreContext(
  [CompositeContextProvider, HovercardContextProvider],
  [CompositeScopedContextProvider, HovercardScopedContextProvider]
);
var useMenuContext = menu.useContext;
var useMenuScopedContext = menu.useScopedContext;
var useMenuProviderContext = menu.useProviderContext;
var MenuContextProvider = menu.ContextProvider;
var MenuScopedContextProvider = menu.ScopedContextProvider;
var MenuItemCheckedContext2 = (0, import_react60.createContext)(
  void 0
);

// node_modules/@ariakit/core/esm/__chunks/EACLTACN.js
function createHovercardStore(props = {}) {
  var _a2;
  const syncState = (_a2 = props.store) == null ? void 0 : _a2.getState();
  const popover = createPopoverStore(__spreadProps2(__spreadValues2({}, props), {
    placement: defaultValue(
      props.placement,
      syncState == null ? void 0 : syncState.placement,
      "bottom"
    )
  }));
  const timeout = defaultValue(props.timeout, syncState == null ? void 0 : syncState.timeout, 500);
  const initialState = __spreadProps2(__spreadValues2({}, popover.getState()), {
    timeout,
    showTimeout: defaultValue(props.showTimeout, syncState == null ? void 0 : syncState.showTimeout),
    hideTimeout: defaultValue(props.hideTimeout, syncState == null ? void 0 : syncState.hideTimeout),
    autoFocusOnShow: defaultValue(syncState == null ? void 0 : syncState.autoFocusOnShow, false)
  });
  const hovercard = createStore(initialState, popover, props.store);
  return __spreadProps2(__spreadValues2(__spreadValues2({}, popover), hovercard), {
    setAutoFocusOnShow: (value) => hovercard.setState("autoFocusOnShow", value)
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/JZ2NHXQS.js
function useHovercardStoreProps(store, update, props) {
  useStoreProps(store, props, "timeout");
  useStoreProps(store, props, "showTimeout");
  useStoreProps(store, props, "hideTimeout");
  return usePopoverStoreProps(store, update, props);
}

// node_modules/@ariakit/core/esm/menu/menu-store.js
function createMenuStore(_a2 = {}) {
  var _b = _a2, {
    combobox,
    parent,
    menubar: menubar2
  } = _b, props = __objRest2(_b, [
    "combobox",
    "parent",
    "menubar"
  ]);
  const parentIsMenubar = !!menubar2 && !parent;
  const store = mergeStore(
    props.store,
    pick2(parent, ["values"]),
    omit2(combobox, [
      "arrowElement",
      "anchorElement",
      "contentElement",
      "popoverElement",
      "disclosureElement"
    ])
  );
  throwOnConflictingProps(props, store);
  const syncState = store.getState();
  const composite = createCompositeStore(__spreadProps2(__spreadValues2({}, props), {
    store,
    orientation: defaultValue(
      props.orientation,
      syncState.orientation,
      "vertical"
    )
  }));
  const hovercard = createHovercardStore(__spreadProps2(__spreadValues2({}, props), {
    store,
    placement: defaultValue(
      props.placement,
      syncState.placement,
      "bottom-start"
    ),
    timeout: defaultValue(
      props.timeout,
      syncState.timeout,
      parentIsMenubar ? 0 : 150
    ),
    hideTimeout: defaultValue(props.hideTimeout, syncState.hideTimeout, 0)
  }));
  const initialState = __spreadProps2(__spreadValues2(__spreadValues2({}, composite.getState()), hovercard.getState()), {
    initialFocus: defaultValue(syncState.initialFocus, "container"),
    values: defaultValue(
      props.values,
      syncState.values,
      props.defaultValues,
      {}
    )
  });
  const menu2 = createStore(initialState, composite, hovercard, store);
  setup(
    menu2,
    () => sync(menu2, ["mounted"], (state) => {
      if (state.mounted) return;
      menu2.setState("activeId", null);
    })
  );
  setup(
    menu2,
    () => sync(parent, ["orientation"], (state) => {
      menu2.setState(
        "placement",
        state.orientation === "vertical" ? "right-start" : "bottom-start"
      );
    })
  );
  return __spreadProps2(__spreadValues2(__spreadValues2(__spreadValues2({}, composite), hovercard), menu2), {
    combobox,
    parent,
    menubar: menubar2,
    hideAll: () => {
      hovercard.hide();
      parent == null ? void 0 : parent.hideAll();
    },
    setInitialFocus: (value) => menu2.setState("initialFocus", value),
    setValues: (values) => menu2.setState("values", values),
    setValue: (name, value) => {
      if (name === "__proto__") return;
      if (name === "constructor") return;
      if (Array.isArray(name)) return;
      menu2.setState("values", (values) => {
        const prevValue = values[name];
        const nextValue = applyState(value, prevValue);
        if (nextValue === prevValue) return values;
        return __spreadProps2(__spreadValues2({}, values), {
          [name]: nextValue !== void 0 && nextValue
        });
      });
    }
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/53XSP24K.js
function useMenuStoreProps(store, update, props) {
  useUpdateEffect(update, [props.combobox, props.parent, props.menubar]);
  useStoreProps(store, props, "values", "setValues");
  return Object.assign(
    useHovercardStoreProps(
      useCompositeStoreProps(store, update, props),
      update,
      props
    ),
    {
      combobox: props.combobox,
      parent: props.parent,
      menubar: props.menubar
    }
  );
}
function useMenuStore(props = {}) {
  const parent = useMenuContext();
  const menubar2 = useMenubarContext();
  const combobox = useComboboxProviderContext();
  props = __spreadProps(__spreadValues({}, props), {
    parent: props.parent !== void 0 ? props.parent : parent,
    menubar: props.menubar !== void 0 ? props.menubar : menubar2,
    combobox: props.combobox !== void 0 ? props.combobox : combobox
  });
  const [store, update] = useStore(createMenuStore, props);
  return useMenuStoreProps(store, update, props);
}

// node_modules/@ariakit/react-core/esm/menu/menu-bar-store.js
var import_react61 = __toESM(require_react());

// node_modules/@ariakit/react-core/esm/__chunks/AN3MJ3OG.js
var import_react62 = __toESM(require_react(), 1);
var import_jsx_runtime42 = __toESM(require_jsx_runtime(), 1);
var TagName73 = "div";
function useAriaLabelledBy(_a2) {
  var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
  const [id, setId] = (0, import_react62.useState)(void 0);
  const label = props["aria-label"];
  const disclosureElement = useStoreState(store, "disclosureElement");
  const contentElement = useStoreState(store, "contentElement");
  (0, import_react62.useEffect)(() => {
    const disclosure = disclosureElement;
    if (!disclosure) return;
    const menu2 = contentElement;
    if (!menu2) return;
    const menuLabel = label || menu2.hasAttribute("aria-label");
    if (menuLabel) {
      setId(void 0);
    } else if (disclosure.id) {
      setId(disclosure.id);
    }
  }, [label, disclosureElement, contentElement]);
  return id;
}
var useMenuList = createHook(
  function useMenuList2(_a2) {
    var _b = _a2, { store, alwaysVisible, composite } = _b, props = __objRest(_b, ["store", "alwaysVisible", "composite"]);
    const context = useMenuProviderContext();
    store = store || context;
    invariant(
      store,
      "MenuList must receive a `store` prop or be wrapped in a MenuProvider component."
    );
    const parentMenu = store.parent;
    const parentMenubar = store.menubar;
    const hasParentMenu = !!parentMenu;
    const id = useId(props.id);
    const onKeyDownProp = props.onKeyDown;
    const dir = store.useState(
      (state) => state.placement.split("-")[0]
    );
    const orientation = store.useState(
      (state) => state.orientation === "both" ? void 0 : state.orientation
    );
    const isHorizontal = orientation !== "vertical";
    const isMenubarHorizontal = useStoreState(
      parentMenubar,
      (state) => !!state && state.orientation !== "vertical"
    );
    const onKeyDown = useEvent((event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (event.defaultPrevented) return;
      if (hasParentMenu || parentMenubar && !isHorizontal) {
        const hideMap = {
          ArrowRight: () => dir === "left" && !isHorizontal,
          ArrowLeft: () => dir === "right" && !isHorizontal,
          ArrowUp: () => dir === "bottom" && isHorizontal,
          ArrowDown: () => dir === "top" && isHorizontal
        };
        const action = hideMap[event.key];
        if (action == null ? void 0 : action()) {
          event.stopPropagation();
          event.preventDefault();
          return store == null ? void 0 : store.hide();
        }
      }
      if (parentMenubar) {
        const keyMap = {
          ArrowRight: () => {
            if (!isMenubarHorizontal) return;
            return parentMenubar.next();
          },
          ArrowLeft: () => {
            if (!isMenubarHorizontal) return;
            return parentMenubar.previous();
          },
          ArrowDown: () => {
            if (isMenubarHorizontal) return;
            return parentMenubar.next();
          },
          ArrowUp: () => {
            if (isMenubarHorizontal) return;
            return parentMenubar.previous();
          }
        };
        const action = keyMap[event.key];
        const id2 = action == null ? void 0 : action();
        if (id2 !== void 0) {
          event.stopPropagation();
          event.preventDefault();
          parentMenubar.move(id2);
        }
      }
    });
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime42.jsx)(MenuScopedContextProvider, { value: store, children: element }),
      [store]
    );
    const ariaLabelledBy = useAriaLabelledBy(__spreadValues({ store }, props));
    const mounted = store.useState("mounted");
    const hidden = isHidden(mounted, props.hidden, alwaysVisible);
    const style2 = hidden ? __spreadProps(__spreadValues({}, props.style), { display: "none" }) : props.style;
    props = __spreadProps(__spreadValues({
      id,
      "aria-labelledby": ariaLabelledBy,
      hidden
    }, props), {
      ref: useMergeRefs(id ? store.setContentElement : null, props.ref),
      style: style2,
      onKeyDown
    });
    const hasCombobox = !!store.combobox;
    composite = composite != null ? composite : !hasCombobox;
    if (composite) {
      props = __spreadValues({
        role: "menu",
        "aria-orientation": orientation
      }, props);
    }
    props = useComposite(__spreadValues({ store, composite }, props));
    props = useCompositeTypeahead(__spreadValues({ store, typeahead: !hasCombobox }, props));
    return props;
  }
);
var MenuList = forwardRef2(function MenuList2(props) {
  const htmlProps = useMenuList(props);
  return createElement(TagName73, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/X7QOZUD3.js
function getEventPoint(event) {
  return [event.clientX, event.clientY];
}
function isPointInPolygon(point, polygon) {
  const [x2, y] = point;
  let inside = false;
  const length = polygon.length;
  for (let l2 = length, i = 0, j = l2 - 1; i < l2; j = i++) {
    const [xi, yi] = polygon[i];
    const [xj, yj] = polygon[j];
    const [, vy] = polygon[j === 0 ? l2 - 1 : j - 1] || [0, 0];
    const where = (yi - yj) * (x2 - xi) - (xi - xj) * (y - yi);
    if (yj < yi) {
      if (y >= yj && y < yi) {
        if (where === 0) return true;
        if (where > 0) {
          if (y === yj) {
            if (y > vy) {
              inside = !inside;
            }
          } else {
            inside = !inside;
          }
        }
      }
    } else if (yi < yj) {
      if (y > yi && y <= yj) {
        if (where === 0) return true;
        if (where < 0) {
          if (y === yj) {
            if (y < vy) {
              inside = !inside;
            }
          } else {
            inside = !inside;
          }
        }
      }
    } else if (y === yi && (x2 >= xj && x2 <= xi || x2 >= xi && x2 <= xj)) {
      return true;
    }
  }
  return inside;
}
function getEnterPointPlacement(enterPoint, rect) {
  const { top, right, bottom, left } = rect;
  const [x2, y] = enterPoint;
  const placementX = x2 < left ? "left" : x2 > right ? "right" : null;
  const placementY = y < top ? "top" : y > bottom ? "bottom" : null;
  return [placementX, placementY];
}
function getElementPolygon(element, enterPoint) {
  const rect = element.getBoundingClientRect();
  const { top, right, bottom, left } = rect;
  const [x2, y] = getEnterPointPlacement(enterPoint, rect);
  const polygon = [enterPoint];
  if (x2) {
    if (y !== "top") {
      polygon.push([x2 === "left" ? left : right, top]);
    }
    polygon.push([x2 === "left" ? right : left, top]);
    polygon.push([x2 === "left" ? right : left, bottom]);
    if (y !== "bottom") {
      polygon.push([x2 === "left" ? left : right, bottom]);
    }
  } else if (y === "top") {
    polygon.push([left, top]);
    polygon.push([left, bottom]);
    polygon.push([right, bottom]);
    polygon.push([right, top]);
  } else {
    polygon.push([left, bottom]);
    polygon.push([left, top]);
    polygon.push([right, top]);
    polygon.push([right, bottom]);
  }
  return polygon;
}

// node_modules/@ariakit/react-core/esm/__chunks/QLQGB5A3.js
var import_react63 = __toESM(require_react(), 1);
var import_jsx_runtime43 = __toESM(require_jsx_runtime(), 1);
var TagName74 = "div";
function isMovingOnHovercard(target, card, anchor, nested) {
  if (hasFocusWithin(card)) return true;
  if (!target) return false;
  if (contains(card, target)) return true;
  if (anchor && contains(anchor, target)) return true;
  if (nested == null ? void 0 : nested.some((card2) => isMovingOnHovercard(target, card2, anchor))) {
    return true;
  }
  return false;
}
function useAutoFocusOnHide(_a2) {
  var _b = _a2, {
    store
  } = _b, props = __objRest(_b, [
    "store"
  ]);
  const [autoFocusOnHide, setAutoFocusOnHide] = (0, import_react63.useState)(false);
  const mounted = store.useState("mounted");
  (0, import_react63.useEffect)(() => {
    if (!mounted) {
      setAutoFocusOnHide(false);
    }
  }, [mounted]);
  const onFocusProp = props.onFocus;
  const onFocus = useEvent((event) => {
    onFocusProp == null ? void 0 : onFocusProp(event);
    if (event.defaultPrevented) return;
    setAutoFocusOnHide(true);
  });
  const finalFocusRef = (0, import_react63.useRef)(null);
  (0, import_react63.useEffect)(() => {
    return sync(store, ["anchorElement"], (state) => {
      finalFocusRef.current = state.anchorElement;
    });
  }, []);
  props = __spreadProps(__spreadValues({
    autoFocusOnHide,
    finalFocus: finalFocusRef
  }, props), {
    onFocus
  });
  return props;
}
var NestedHovercardContext = (0, import_react63.createContext)(null);
var useHovercard = createHook(
  function useHovercard2(_a2) {
    var _b = _a2, {
      store,
      modal = false,
      portal = !!modal,
      hideOnEscape = true,
      hideOnHoverOutside = true,
      disablePointerEventsOnApproach = !!hideOnHoverOutside
    } = _b, props = __objRest(_b, [
      "store",
      "modal",
      "portal",
      "hideOnEscape",
      "hideOnHoverOutside",
      "disablePointerEventsOnApproach"
    ]);
    const context = useHovercardProviderContext();
    store = store || context;
    invariant(
      store,
      "Hovercard must receive a `store` prop or be wrapped in a HovercardProvider component."
    );
    const ref = (0, import_react63.useRef)(null);
    const [nestedHovercards, setNestedHovercards] = (0, import_react63.useState)([]);
    const hideTimeoutRef = (0, import_react63.useRef)(0);
    const enterPointRef = (0, import_react63.useRef)(null);
    const { portalRef, domReady } = usePortalRef(portal, props.portalRef);
    const isMouseMoving = useIsMouseMoving();
    const mayHideOnHoverOutside = !!hideOnHoverOutside;
    const hideOnHoverOutsideProp = useBooleanEvent(hideOnHoverOutside);
    const mayDisablePointerEvents = !!disablePointerEventsOnApproach;
    const disablePointerEventsProp = useBooleanEvent(
      disablePointerEventsOnApproach
    );
    const open = store.useState("open");
    const mounted = store.useState("mounted");
    (0, import_react63.useEffect)(() => {
      if (!domReady) return;
      if (!mounted) return;
      if (!mayHideOnHoverOutside && !mayDisablePointerEvents) return;
      const element = ref.current;
      if (!element) return;
      const onMouseMove = (event) => {
        if (!store) return;
        if (!isMouseMoving()) return;
        const { anchorElement, hideTimeout, timeout } = store.getState();
        const enterPoint = enterPointRef.current;
        const [target] = event.composedPath();
        const anchor = anchorElement;
        if (isMovingOnHovercard(target, element, anchor, nestedHovercards)) {
          enterPointRef.current = target && anchor && contains(anchor, target) ? getEventPoint(event) : null;
          window.clearTimeout(hideTimeoutRef.current);
          hideTimeoutRef.current = 0;
          return;
        }
        if (hideTimeoutRef.current) return;
        if (enterPoint) {
          const currentPoint = getEventPoint(event);
          const polygon = getElementPolygon(element, enterPoint);
          if (isPointInPolygon(currentPoint, polygon)) {
            enterPointRef.current = currentPoint;
            if (!disablePointerEventsProp(event)) return;
            event.preventDefault();
            event.stopPropagation();
            return;
          }
        }
        if (!hideOnHoverOutsideProp(event)) return;
        hideTimeoutRef.current = window.setTimeout(() => {
          hideTimeoutRef.current = 0;
          store == null ? void 0 : store.hide();
        }, hideTimeout != null ? hideTimeout : timeout);
      };
      return chain(
        addGlobalEventListener("mousemove", onMouseMove, true),
        () => clearTimeout(hideTimeoutRef.current)
      );
    }, [
      store,
      isMouseMoving,
      domReady,
      mounted,
      mayHideOnHoverOutside,
      mayDisablePointerEvents,
      nestedHovercards,
      disablePointerEventsProp,
      hideOnHoverOutsideProp
    ]);
    (0, import_react63.useEffect)(() => {
      if (!domReady) return;
      if (!mounted) return;
      if (!mayDisablePointerEvents) return;
      const disableEvent = (event) => {
        const element = ref.current;
        if (!element) return;
        const enterPoint = enterPointRef.current;
        if (!enterPoint) return;
        const polygon = getElementPolygon(element, enterPoint);
        if (isPointInPolygon(getEventPoint(event), polygon)) {
          if (!disablePointerEventsProp(event)) return;
          event.preventDefault();
          event.stopPropagation();
        }
      };
      return chain(
        // Note: we may need to add pointer events here in the future.
        addGlobalEventListener("mouseenter", disableEvent, true),
        addGlobalEventListener("mouseover", disableEvent, true),
        addGlobalEventListener("mouseout", disableEvent, true),
        addGlobalEventListener("mouseleave", disableEvent, true)
      );
    }, [domReady, mounted, mayDisablePointerEvents, disablePointerEventsProp]);
    (0, import_react63.useEffect)(() => {
      if (!domReady) return;
      if (open) return;
      store == null ? void 0 : store.setAutoFocusOnShow(false);
    }, [store, domReady, open]);
    const openRef = useLiveRef(open);
    (0, import_react63.useEffect)(() => {
      if (!domReady) return;
      return () => {
        if (!openRef.current) {
          store == null ? void 0 : store.setAutoFocusOnShow(false);
        }
      };
    }, [store, domReady]);
    const registerOnParent = (0, import_react63.useContext)(NestedHovercardContext);
    useSafeLayoutEffect(() => {
      if (modal) return;
      if (!portal) return;
      if (!mounted) return;
      if (!domReady) return;
      const element = ref.current;
      if (!element) return;
      return registerOnParent == null ? void 0 : registerOnParent(element);
    }, [modal, portal, mounted, domReady]);
    const registerNestedHovercard = (0, import_react63.useCallback)(
      (element) => {
        setNestedHovercards((prevElements) => [...prevElements, element]);
        const parentUnregister = registerOnParent == null ? void 0 : registerOnParent(element);
        return () => {
          setNestedHovercards(
            (prevElements) => prevElements.filter((item) => item !== element)
          );
          parentUnregister == null ? void 0 : parentUnregister();
        };
      },
      [registerOnParent]
    );
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime43.jsx)(HovercardScopedContextProvider, { value: store, children: (0, import_jsx_runtime43.jsx)(NestedHovercardContext.Provider, { value: registerNestedHovercard, children: element }) }),
      [store, registerNestedHovercard]
    );
    props = __spreadProps(__spreadValues({}, props), {
      ref: useMergeRefs(ref, props.ref)
    });
    props = useAutoFocusOnHide(__spreadValues({ store }, props));
    const autoFocusOnShow = store.useState(
      (state) => modal || state.autoFocusOnShow
    );
    props = usePopover(__spreadProps(__spreadValues({
      store,
      modal,
      portal,
      autoFocusOnShow
    }, props), {
      portalRef,
      hideOnEscape(event) {
        if (isFalsyBooleanCallback(hideOnEscape, event)) return false;
        requestAnimationFrame(() => {
          requestAnimationFrame(() => {
            store == null ? void 0 : store.hide();
          });
        });
        return true;
      }
    }));
    return props;
  }
);
var Hovercard = createDialogComponent(
  forwardRef2(function Hovercard2(props) {
    const htmlProps = useHovercard(props);
    return createElement(TagName74, htmlProps);
  }),
  useHovercardProviderContext
);

// node_modules/@ariakit/react-core/esm/menu/menu.js
var import_react64 = __toESM(require_react());
var TagName75 = "div";
var useMenu = createHook(function useMenu2(_a2) {
  var _b = _a2, {
    store,
    modal: modalProp = false,
    portal = !!modalProp,
    hideOnEscape = true,
    autoFocusOnShow = true,
    hideOnHoverOutside,
    alwaysVisible
  } = _b, props = __objRest(_b, [
    "store",
    "modal",
    "portal",
    "hideOnEscape",
    "autoFocusOnShow",
    "hideOnHoverOutside",
    "alwaysVisible"
  ]);
  const context = useMenuProviderContext();
  store = store || context;
  invariant(
    store,
    "Menu must receive a `store` prop or be wrapped in a MenuProvider component."
  );
  const ref = (0, import_react64.useRef)(null);
  const parentMenu = store.parent;
  const parentMenubar = store.menubar;
  const hasParentMenu = !!parentMenu;
  const parentIsMenubar = !!parentMenubar && !hasParentMenu;
  props = __spreadProps(__spreadValues({}, props), {
    ref: useMergeRefs(ref, props.ref)
  });
  const _a22 = useMenuList(__spreadValues({
    store,
    alwaysVisible
  }, props)), { "aria-labelledby": ariaLabelledBy } = _a22, menuListProps = __objRest(_a22, ["aria-labelledby"]);
  props = menuListProps;
  const [initialFocusRef, setInitialFocusRef] = (0, import_react64.useState)();
  const autoFocusOnShowState = store.useState("autoFocusOnShow");
  const initialFocus = store.useState("initialFocus");
  const baseElement = store.useState("baseElement");
  const items = store.useState("renderedItems");
  (0, import_react64.useEffect)(() => {
    let cleaning = false;
    setInitialFocusRef((prevInitialFocusRef) => {
      var _a3, _b2, _c;
      if (cleaning) return;
      if (!autoFocusOnShowState) return;
      if ((_a3 = prevInitialFocusRef == null ? void 0 : prevInitialFocusRef.current) == null ? void 0 : _a3.isConnected) return prevInitialFocusRef;
      const ref2 = (0, import_react64.createRef)();
      switch (initialFocus) {
        case "first":
          ref2.current = ((_b2 = items.find((item) => !item.disabled && item.element)) == null ? void 0 : _b2.element) || null;
          break;
        case "last":
          ref2.current = ((_c = [...items].reverse().find((item) => !item.disabled && item.element)) == null ? void 0 : _c.element) || null;
          break;
        default:
          ref2.current = baseElement;
      }
      return ref2;
    });
    return () => {
      cleaning = true;
    };
  }, [store, autoFocusOnShowState, initialFocus, items, baseElement]);
  const modal = hasParentMenu ? false : modalProp;
  const mayAutoFocusOnShow = !!autoFocusOnShow;
  const canAutoFocusOnShow = !!initialFocusRef || !!props.initialFocus || !!modal;
  const contentElement = useStoreState(
    store.combobox || store,
    "contentElement"
  );
  const parentContentElement = useStoreState(
    (parentMenu == null ? void 0 : parentMenu.combobox) || parentMenu,
    "contentElement"
  );
  const preserveTabOrderAnchor = (0, import_react64.useMemo)(() => {
    if (!parentContentElement) return;
    if (!contentElement) return;
    const role = contentElement.getAttribute("role");
    const parentRole = parentContentElement.getAttribute("role");
    const parentIsMenuOrMenubar = parentRole === "menu" || parentRole === "menubar";
    if (parentIsMenuOrMenubar && role === "menu") return;
    return parentContentElement;
  }, [contentElement, parentContentElement]);
  if (preserveTabOrderAnchor !== void 0) {
    props = __spreadValues({
      preserveTabOrderAnchor
    }, props);
  }
  props = useHovercard(__spreadProps(__spreadValues({
    store,
    alwaysVisible,
    initialFocus: initialFocusRef,
    autoFocusOnShow: mayAutoFocusOnShow ? canAutoFocusOnShow && autoFocusOnShow : autoFocusOnShowState || !!modal
  }, props), {
    hideOnEscape(event) {
      if (isFalsyBooleanCallback(hideOnEscape, event)) return false;
      store == null ? void 0 : store.hideAll();
      return true;
    },
    hideOnHoverOutside(event) {
      const disclosureElement = store == null ? void 0 : store.getState().disclosureElement;
      const getHideOnHoverOutside = () => {
        if (typeof hideOnHoverOutside === "function") {
          return hideOnHoverOutside(event);
        }
        if (hideOnHoverOutside != null) return hideOnHoverOutside;
        if (hasParentMenu) return true;
        if (!parentIsMenubar) return false;
        if (!disclosureElement) return true;
        if (hasFocusWithin(disclosureElement)) return false;
        return true;
      };
      if (!getHideOnHoverOutside()) return false;
      if (event.defaultPrevented) return true;
      if (!hasParentMenu) return true;
      if (!disclosureElement) return true;
      fireEvent(disclosureElement, "mouseout", event);
      if (!hasFocusWithin(disclosureElement)) return true;
      requestAnimationFrame(() => {
        if (hasFocusWithin(disclosureElement)) return;
        store == null ? void 0 : store.hide();
      });
      return false;
    },
    modal,
    portal,
    backdrop: hasParentMenu ? false : props.backdrop
  }));
  props = __spreadValues({
    "aria-labelledby": ariaLabelledBy
  }, props);
  return props;
});
var Menu = createDialogComponent(
  forwardRef2(function Menu2(props) {
    const htmlProps = useMenu(props);
    return createElement(TagName75, htmlProps);
  }),
  useMenuProviderContext
);

// node_modules/@ariakit/react-core/esm/menu/menu-provider.js
var import_jsx_runtime44 = __toESM(require_jsx_runtime());
function MenuProvider(props = {}) {
  const store = useMenuStore(props);
  return (0, import_jsx_runtime44.jsx)(MenuContextProvider, { value: store, children: props.children });
}

// node_modules/@ariakit/react-core/esm/menu/menu-bar.js
var import_react65 = __toESM(require_react());
var TagName76 = "div";
var useMenuBar = createHook(
  function useMenuBar2(props) {
    (0, import_react65.useEffect)(() => {
      if (true) {
        console.warn(
          "MenuBar is deprecated. Use Menubar instead.",
          "See https://ariakit.org/reference/menubar"
        );
      }
    }, []);
    return useMenubar(props);
  }
);
var MenuBar = forwardRef2(function MenuBar2(props) {
  const htmlProps = useMenuBar(props);
  return createElement(TagName76, htmlProps);
});

// node_modules/@ariakit/react-core/esm/menu/menu-bar-provider.js
var import_react66 = __toESM(require_react());
var import_jsx_runtime45 = __toESM(require_jsx_runtime());

// node_modules/@ariakit/react-core/esm/menu/menu-arrow.js
var TagName77 = "div";
var useMenuArrow = createHook(
  function useMenuArrow2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useMenuContext();
    store = store || context;
    return usePopoverArrow(__spreadValues({ store }, props));
  }
);
var MenuArrow = forwardRef2(function MenuArrow2(props) {
  const htmlProps = useMenuArrow(props);
  return createElement(TagName77, htmlProps);
});

// node_modules/@ariakit/react-core/esm/menu/menu-button-arrow.js
var TagName78 = "span";
var useMenuButtonArrow = createHook(
  function useMenuButtonArrow2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useMenuContext();
    store = store || context;
    props = usePopoverDisclosureArrow(__spreadValues({ store }, props));
    return props;
  }
);
var MenuButtonArrow = forwardRef2(function MenuButtonArrow2(props) {
  const htmlProps = useMenuButtonArrow(props);
  return createElement(TagName78, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/BRBME7U5.js
var import_react67 = __toESM(require_react(), 1);
var TagName79 = "a";
var useHovercardAnchor = createHook(
  function useHovercardAnchor2(_a2) {
    var _b = _a2, { store, showOnHover = true } = _b, props = __objRest(_b, ["store", "showOnHover"]);
    const context = useHovercardProviderContext();
    store = store || context;
    invariant(
      store,
      "HovercardAnchor must receive a `store` prop or be wrapped in a HovercardProvider component."
    );
    const disabled = disabledFromProps(props);
    const showTimeoutRef = (0, import_react67.useRef)(0);
    (0, import_react67.useEffect)(() => () => window.clearTimeout(showTimeoutRef.current), []);
    (0, import_react67.useEffect)(() => {
      const onMouseLeave = (event) => {
        if (!store) return;
        const { anchorElement } = store.getState();
        if (!anchorElement) return;
        if (event.target !== anchorElement) return;
        window.clearTimeout(showTimeoutRef.current);
        showTimeoutRef.current = 0;
      };
      return addGlobalEventListener("mouseleave", onMouseLeave, true);
    }, [store]);
    const onMouseMoveProp = props.onMouseMove;
    const showOnHoverProp = useBooleanEvent(showOnHover);
    const isMouseMoving = useIsMouseMoving();
    const onMouseMove = useEvent((event) => {
      onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);
      if (disabled) return;
      if (!store) return;
      if (event.defaultPrevented) return;
      if (showTimeoutRef.current) return;
      if (!isMouseMoving()) return;
      if (!showOnHoverProp(event)) return;
      const element = event.currentTarget;
      store.setAnchorElement(element);
      store.setDisclosureElement(element);
      const { showTimeout, timeout } = store.getState();
      const showHovercard = () => {
        showTimeoutRef.current = 0;
        if (!isMouseMoving()) return;
        store == null ? void 0 : store.setAnchorElement(element);
        store == null ? void 0 : store.show();
        queueMicrotask(() => {
          store == null ? void 0 : store.setDisclosureElement(element);
        });
      };
      const timeoutMs = showTimeout != null ? showTimeout : timeout;
      if (timeoutMs === 0) {
        showHovercard();
      } else {
        showTimeoutRef.current = window.setTimeout(showHovercard, timeoutMs);
      }
    });
    const onClickProp = props.onClick;
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (!store) return;
      window.clearTimeout(showTimeoutRef.current);
      showTimeoutRef.current = 0;
    });
    const ref = (0, import_react67.useCallback)(
      (element) => {
        if (!store) return;
        const { anchorElement } = store.getState();
        if (anchorElement == null ? void 0 : anchorElement.isConnected) return;
        store.setAnchorElement(element);
      },
      [store]
    );
    props = __spreadProps(__spreadValues({}, props), {
      ref: useMergeRefs(ref, props.ref),
      onMouseMove,
      onClick
    });
    props = useFocusable(props);
    return props;
  }
);
var HovercardAnchor = forwardRef2(function HovercardAnchor2(props) {
  const htmlProps = useHovercardAnchor(props);
  return createElement(TagName79, htmlProps);
});

// node_modules/@ariakit/react-core/esm/menu/menu-button.js
var import_react68 = __toESM(require_react());
var import_jsx_runtime46 = __toESM(require_jsx_runtime());
var TagName80 = "button";
function getInitialFocus(event, dir) {
  const keyMap = {
    ArrowDown: dir === "bottom" || dir === "top" ? "first" : false,
    ArrowUp: dir === "bottom" || dir === "top" ? "last" : false,
    ArrowRight: dir === "right" ? "first" : false,
    ArrowLeft: dir === "left" ? "first" : false
  };
  return keyMap[event.key];
}
function hasActiveItem(items, excludeElement) {
  return !!(items == null ? void 0 : items.some((item) => {
    if (!item.element) return false;
    if (item.element === excludeElement) return false;
    return item.element.getAttribute("aria-expanded") === "true";
  }));
}
var useMenuButton = createHook(
  function useMenuButton2(_a2) {
    var _b = _a2, {
      store,
      focusable,
      accessibleWhenDisabled,
      showOnHover
    } = _b, props = __objRest(_b, [
      "store",
      "focusable",
      "accessibleWhenDisabled",
      "showOnHover"
    ]);
    const context = useMenuProviderContext();
    store = store || context;
    invariant(
      store,
      "MenuButton must receive a `store` prop or be wrapped in a MenuProvider component."
    );
    const ref = (0, import_react68.useRef)(null);
    const parentMenu = store.parent;
    const parentMenubar = store.menubar;
    const hasParentMenu = !!parentMenu;
    const parentIsMenubar = !!parentMenubar && !hasParentMenu;
    const disabled = disabledFromProps(props);
    const showMenu = () => {
      const trigger = ref.current;
      if (!trigger) return;
      store == null ? void 0 : store.setDisclosureElement(trigger);
      store == null ? void 0 : store.setAnchorElement(trigger);
      store == null ? void 0 : store.show();
    };
    const onFocusProp = props.onFocus;
    const onFocus = useEvent((event) => {
      onFocusProp == null ? void 0 : onFocusProp(event);
      if (disabled) return;
      if (event.defaultPrevented) return;
      store == null ? void 0 : store.setAutoFocusOnShow(false);
      store == null ? void 0 : store.setActiveId(null);
      if (!parentMenubar) return;
      if (!parentIsMenubar) return;
      const { items } = parentMenubar.getState();
      if (hasActiveItem(items, event.currentTarget)) {
        showMenu();
      }
    });
    const dir = useStoreState(
      store,
      (state) => state.placement.split("-")[0]
    );
    const onKeyDownProp = props.onKeyDown;
    const onKeyDown = useEvent((event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (disabled) return;
      if (event.defaultPrevented) return;
      const initialFocus = getInitialFocus(event, dir);
      if (initialFocus) {
        event.preventDefault();
        showMenu();
        store == null ? void 0 : store.setAutoFocusOnShow(true);
        store == null ? void 0 : store.setInitialFocus(initialFocus);
      }
    });
    const onClickProp = props.onClick;
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      if (!store) return;
      const isKeyboardClick = !event.detail;
      const { open } = store.getState();
      if (!open || isKeyboardClick) {
        if (!hasParentMenu || isKeyboardClick) {
          store.setAutoFocusOnShow(true);
        }
        store.setInitialFocus(isKeyboardClick ? "first" : "container");
      }
      if (hasParentMenu) {
        showMenu();
      }
    });
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime46.jsx)(MenuContextProvider, { value: store, children: element }),
      [store]
    );
    if (hasParentMenu) {
      props = __spreadProps(__spreadValues({}, props), {
        render: (0, import_jsx_runtime46.jsx)(Role.div, { render: props.render })
      });
    }
    const id = useId(props.id);
    const parentContentElement = useStoreState(
      (parentMenu == null ? void 0 : parentMenu.combobox) || parentMenu,
      "contentElement"
    );
    const role = hasParentMenu || parentIsMenubar ? getPopupItemRole(parentContentElement, "menuitem") : void 0;
    const contentElement = store.useState("contentElement");
    props = __spreadProps(__spreadValues({
      id,
      role,
      "aria-haspopup": getPopupRole(contentElement, "menu")
    }, props), {
      ref: useMergeRefs(ref, props.ref),
      onFocus,
      onKeyDown,
      onClick
    });
    props = useHovercardAnchor(__spreadProps(__spreadValues({
      store,
      focusable,
      accessibleWhenDisabled
    }, props), {
      showOnHover: (event) => {
        const getShowOnHover = () => {
          if (typeof showOnHover === "function") return showOnHover(event);
          if (showOnHover != null) return showOnHover;
          if (hasParentMenu) return true;
          if (!parentMenubar) return false;
          const { items } = parentMenubar.getState();
          return parentIsMenubar && hasActiveItem(items);
        };
        const canShowOnHover = getShowOnHover();
        if (!canShowOnHover) return false;
        const parent = parentIsMenubar ? parentMenubar : parentMenu;
        if (!parent) return true;
        parent.setActiveId(event.currentTarget.id);
        return true;
      }
    }));
    props = usePopoverDisclosure(__spreadValues({
      store,
      toggleOnClick: !hasParentMenu,
      focusable,
      accessibleWhenDisabled
    }, props));
    props = useCompositeTypeahead(__spreadValues({
      store,
      typeahead: parentIsMenubar
    }, props));
    return props;
  }
);
var MenuButton = forwardRef2(function MenuButton2(props) {
  const htmlProps = useMenuButton(props);
  return createElement(TagName80, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/VJLCZNVL.js
var TagName81 = "p";
var useHovercardDescription = createHook(function useHovercardDescription2(props) {
  props = usePopoverDescription(props);
  return props;
});
var HovercardDescription = forwardRef2(function HovercardDescription2(props) {
  const htmlProps = useHovercardDescription(props);
  return createElement(TagName81, htmlProps);
});

// node_modules/@ariakit/react-core/esm/menu/menu-description.js
var TagName82 = "p";
var useMenuDescription = createHook(
  function useMenuDescription2(props) {
    props = useHovercardDescription(props);
    return props;
  }
);
var MenuDescription = forwardRef2(function MenuDescription2(props) {
  const htmlProps = useMenuDescription(props);
  return createElement(TagName82, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/BDPFIQXC.js
var TagName83 = "button";
var useHovercardDismiss = createHook(
  function useHovercardDismiss2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useHovercardScopedContext();
    store = store || context;
    props = usePopoverDismiss(__spreadValues({ store }, props));
    return props;
  }
);
var HovercardDismiss = forwardRef2(function HovercardDismiss2(props) {
  const htmlProps = useHovercardDismiss(props);
  return createElement(TagName83, htmlProps);
});

// node_modules/@ariakit/react-core/esm/menu/menu-dismiss.js
var TagName84 = "button";
var useMenuDismiss = createHook(
  function useMenuDismiss2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useMenuScopedContext();
    store = store || context;
    props = useHovercardDismiss(__spreadValues({ store }, props));
    return props;
  }
);
var MenuDismiss = forwardRef2(function MenuDismiss2(props) {
  const htmlProps = useMenuDismiss(props);
  return createElement(TagName84, htmlProps);
});

// node_modules/@ariakit/react-core/esm/menu/menu-group-label.js
var TagName85 = "div";
var useMenuGroupLabel = createHook(
  function useMenuGroupLabel2(props) {
    props = useCompositeGroupLabel(props);
    return props;
  }
);
var MenuGroupLabel = forwardRef2(function MenuGroupLabel2(props) {
  const htmlProps = useMenuGroupLabel(props);
  return createElement(TagName85, htmlProps);
});

// node_modules/@ariakit/react-core/esm/menu/menu-group.js
var TagName86 = "div";
var useMenuGroup = createHook(
  function useMenuGroup2(props) {
    props = useCompositeGroup(props);
    return props;
  }
);
var MenuGroup = forwardRef2(function MenuGroup2(props) {
  const htmlProps = useMenuGroup(props);
  return createElement(TagName86, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/SNORBXW6.js
var TagName87 = "h1";
var useHovercardHeading = createHook(
  function useHovercardHeading2(props) {
    props = usePopoverHeading(props);
    return props;
  }
);
var HovercardHeading = forwardRef2(function HovercardHeading2(props) {
  const htmlProps = useHovercardHeading(props);
  return createElement(TagName87, htmlProps);
});

// node_modules/@ariakit/react-core/esm/menu/menu-heading.js
var TagName88 = "h1";
var useMenuHeading = createHook(
  function useMenuHeading2(props) {
    props = useHovercardHeading(props);
    return props;
  }
);
var MenuHeading = forwardRef2(function MenuHeading2(props) {
  const htmlProps = useMenuHeading(props);
  return createElement(TagName88, htmlProps);
});

// node_modules/@ariakit/react-core/esm/menu/menu-item-check.js
var import_react69 = __toESM(require_react());
var TagName89 = "span";
var useMenuItemCheck = createHook(
  function useMenuItemCheck2(_a2) {
    var _b = _a2, { store, checked } = _b, props = __objRest(_b, ["store", "checked"]);
    const context = (0, import_react69.useContext)(MenuItemCheckedContext2);
    checked = checked != null ? checked : context;
    props = useCheckboxCheck(__spreadProps(__spreadValues({}, props), { checked }));
    return props;
  }
);
var MenuItemCheck = forwardRef2(function MenuItemCheck2(props) {
  const htmlProps = useMenuItemCheck(props);
  return createElement(TagName89, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/UXB73EBH.js
var TagName90 = "div";
function menuHasFocus(baseElement, items, currentTarget) {
  var _a2;
  if (!baseElement) return false;
  if (hasFocusWithin(baseElement)) return true;
  const expandedItem = items == null ? void 0 : items.find((item) => {
    var _a22;
    if (item.element === currentTarget) return false;
    return ((_a22 = item.element) == null ? void 0 : _a22.getAttribute("aria-expanded")) === "true";
  });
  const expandedMenuId = (_a2 = expandedItem == null ? void 0 : expandedItem.element) == null ? void 0 : _a2.getAttribute("aria-controls");
  if (!expandedMenuId) return false;
  const doc = getDocument(baseElement);
  const expandedMenu = doc.getElementById(expandedMenuId);
  if (!expandedMenu) return false;
  if (hasFocusWithin(expandedMenu)) return true;
  return !!expandedMenu.querySelector("[role=menuitem][aria-expanded=true]");
}
var useMenuItem = createHook(
  function useMenuItem2(_a2) {
    var _b = _a2, {
      store,
      hideOnClick = true,
      preventScrollOnKeyDown = true,
      focusOnHover,
      blurOnHoverEnd
    } = _b, props = __objRest(_b, [
      "store",
      "hideOnClick",
      "preventScrollOnKeyDown",
      "focusOnHover",
      "blurOnHoverEnd"
    ]);
    const menuContext = useMenuScopedContext(true);
    const menubarContext = useMenubarScopedContext();
    store = store || menuContext || menubarContext;
    invariant(
      store,
      "MenuItem must be wrapped in a MenuList, Menu or Menubar component"
    );
    const onClickProp = props.onClick;
    const hideOnClickProp = useBooleanEvent(hideOnClick);
    const hideMenu = "hideAll" in store ? store.hideAll : void 0;
    const isWithinMenu = !!hideMenu;
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      if (isDownloading(event)) return;
      if (isOpeningInNewTab(event)) return;
      if (!hideMenu) return;
      const popupType = event.currentTarget.getAttribute("aria-haspopup");
      if (popupType === "menu") return;
      if (!hideOnClickProp(event)) return;
      hideMenu();
    });
    const contentElement = useStoreState(
      store,
      (state) => "contentElement" in state ? state.contentElement : null
    );
    const role = getPopupItemRole(contentElement, "menuitem");
    props = __spreadProps(__spreadValues({
      role
    }, props), {
      onClick
    });
    props = useCompositeItem(__spreadValues({
      store,
      preventScrollOnKeyDown
    }, props));
    props = useCompositeHover(__spreadProps(__spreadValues({
      store
    }, props), {
      focusOnHover(event) {
        const getFocusOnHover = () => {
          if (typeof focusOnHover === "function") return focusOnHover(event);
          if (focusOnHover != null) return focusOnHover;
          return true;
        };
        if (!store) return false;
        if (!getFocusOnHover()) return false;
        const { baseElement, items } = store.getState();
        if (isWithinMenu) {
          if (event.currentTarget.hasAttribute("aria-expanded")) {
            event.currentTarget.focus();
          }
          return true;
        }
        if (menuHasFocus(baseElement, items, event.currentTarget)) {
          event.currentTarget.focus();
          return true;
        }
        return false;
      },
      blurOnHoverEnd(event) {
        if (typeof blurOnHoverEnd === "function") return blurOnHoverEnd(event);
        if (blurOnHoverEnd != null) return blurOnHoverEnd;
        return isWithinMenu;
      }
    }));
    return props;
  }
);
var MenuItem = memo2(
  forwardRef2(function MenuItem2(props) {
    const htmlProps = useMenuItem(props);
    return createElement(TagName90, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/menu/menu-item-checkbox.js
var import_react70 = __toESM(require_react());
var TagName91 = "div";
function getPrimitiveValue2(value) {
  if (Array.isArray(value)) {
    return value.toString();
  }
  return value;
}
function getValue(storeValue, value, checked) {
  if (value === void 0) {
    if (Array.isArray(storeValue)) return storeValue;
    return !!checked;
  }
  const primitiveValue = getPrimitiveValue2(value);
  if (!Array.isArray(storeValue)) {
    if (checked) {
      return primitiveValue;
    }
    return storeValue === primitiveValue ? false : storeValue;
  }
  if (checked) {
    if (storeValue.includes(primitiveValue)) {
      return storeValue;
    }
    return [...storeValue, primitiveValue];
  }
  return storeValue.filter((v2) => v2 !== primitiveValue);
}
var useMenuItemCheckbox = createHook(
  function useMenuItemCheckbox2(_a2) {
    var _b = _a2, {
      store,
      name,
      value,
      checked,
      defaultChecked: defaultCheckedProp,
      hideOnClick = false
    } = _b, props = __objRest(_b, [
      "store",
      "name",
      "value",
      "checked",
      "defaultChecked",
      "hideOnClick"
    ]);
    const context = useMenuScopedContext();
    store = store || context;
    invariant(
      store,
      "MenuItemCheckbox must be wrapped in a MenuList or Menu component"
    );
    const defaultChecked = useInitialValue(defaultCheckedProp);
    (0, import_react70.useEffect)(() => {
      store == null ? void 0 : store.setValue(name, (prevValue = []) => {
        if (!defaultChecked) return prevValue;
        return getValue(prevValue, value, true);
      });
    }, [store, name, value, defaultChecked]);
    (0, import_react70.useEffect)(() => {
      if (checked === void 0) return;
      store == null ? void 0 : store.setValue(name, (prevValue) => {
        return getValue(prevValue, value, checked);
      });
    }, [store, name, value, checked]);
    const checkboxStore = useCheckboxStore({
      value: store.useState((state) => state.values[name]),
      setValue(internalValue) {
        store == null ? void 0 : store.setValue(name, () => {
          if (checked === void 0) return internalValue;
          const nextValue = getValue(internalValue, value, checked);
          if (!Array.isArray(nextValue)) return nextValue;
          if (!Array.isArray(internalValue)) return nextValue;
          if (shallowEqual(internalValue, nextValue)) return internalValue;
          return nextValue;
        });
      }
    });
    props = __spreadValues({
      role: "menuitemcheckbox"
    }, props);
    props = useCheckbox(__spreadValues({
      store: checkboxStore,
      name,
      value,
      checked
    }, props));
    props = useMenuItem(__spreadValues({ store, hideOnClick }, props));
    return props;
  }
);
var MenuItemCheckbox = memo2(
  forwardRef2(function MenuItemCheckbox2(props) {
    const htmlProps = useMenuItemCheckbox(props);
    return createElement(TagName91, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/menu/menu-item-radio.js
var import_react71 = __toESM(require_react());
var import_jsx_runtime47 = __toESM(require_jsx_runtime());
var TagName92 = "div";
function getValue2(prevValue, value, checked) {
  if (checked === void 0) return prevValue;
  if (checked) return value;
  return prevValue;
}
var useMenuItemRadio = createHook(
  function useMenuItemRadio2(_a2) {
    var _b = _a2, {
      store,
      name,
      value,
      checked,
      onChange: onChangeProp,
      hideOnClick = false
    } = _b, props = __objRest(_b, [
      "store",
      "name",
      "value",
      "checked",
      "onChange",
      "hideOnClick"
    ]);
    const context = useMenuScopedContext();
    store = store || context;
    invariant(
      store,
      "MenuItemRadio must be wrapped in a MenuList or Menu component"
    );
    const defaultChecked = useInitialValue(props.defaultChecked);
    (0, import_react71.useEffect)(() => {
      store == null ? void 0 : store.setValue(name, (prevValue = false) => {
        return getValue2(prevValue, value, defaultChecked);
      });
    }, [store, name, value, defaultChecked]);
    (0, import_react71.useEffect)(() => {
      if (checked === void 0) return;
      store == null ? void 0 : store.setValue(name, (prevValue) => {
        return getValue2(prevValue, value, checked);
      });
    }, [store, name, value, checked]);
    const isChecked = store.useState((state) => state.values[name] === value);
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime47.jsx)(MenuItemCheckedContext2.Provider, { value: !!isChecked, children: element }),
      [isChecked]
    );
    props = __spreadValues({
      role: "menuitemradio"
    }, props);
    props = useRadio(__spreadValues({
      name,
      value,
      checked: isChecked,
      onChange(event) {
        onChangeProp == null ? void 0 : onChangeProp(event);
        if (event.defaultPrevented) return;
        const element = event.currentTarget;
        store == null ? void 0 : store.setValue(name, (prevValue) => {
          return getValue2(prevValue, value, checked != null ? checked : element.checked);
        });
      }
    }, props));
    props = useMenuItem(__spreadValues({ store, hideOnClick }, props));
    return props;
  }
);
var MenuItemRadio = memo2(
  forwardRef2(function MenuItemRadio2(props) {
    const htmlProps = useMenuItemRadio(props);
    return createElement(TagName92, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/menu/menu-separator.js
var TagName93 = "hr";
var useMenuSeparator = createHook(
  function useMenuSeparator2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useMenuContext();
    store = store || context;
    props = useCompositeSeparator(__spreadValues({ store }, props));
    return props;
  }
);
var MenuSeparator = forwardRef2(function MenuSeparator2(props) {
  const htmlProps = useMenuSeparator(props);
  return createElement(TagName93, htmlProps);
});

// node_modules/@ariakit/react-core/esm/hovercard/hovercard-provider.js
var import_jsx_runtime48 = __toESM(require_jsx_runtime());

// node_modules/@ariakit/react-core/esm/hovercard/hovercard-arrow.js
var TagName94 = "div";
var useHovercardArrow = createHook(
  function useHovercardArrow2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useHovercardContext();
    store = store || context;
    props = usePopoverArrow(__spreadValues({ store }, props));
    return props;
  }
);
var HovercardArrow = forwardRef2(function HovercardArrow2(props) {
  const htmlProps = useHovercardArrow(props);
  return createElement(TagName94, htmlProps);
});

// node_modules/@ariakit/react-core/esm/hovercard/hovercard-disclosure.js
var import_react72 = __toESM(require_react());
var import_jsx_runtime49 = __toESM(require_jsx_runtime());
var TagName95 = "button";
var useHovercardDisclosure = createHook(function useHovercardDisclosure2(_a2) {
  var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
  const context = useHovercardProviderContext();
  store = store || context;
  invariant(
    store,
    "HovercardDisclosure must receive a `store` prop or be wrapped in a HovercardProvider component."
  );
  const [visible, setVisible] = (0, import_react72.useState)(false);
  (0, import_react72.useEffect)(() => {
    if (!visible) return;
    const onBlur = (event) => {
      if (!store) return;
      const nextActiveElement = event.relatedTarget;
      if (nextActiveElement) {
        const {
          anchorElement: anchor,
          popoverElement: popover,
          disclosureElement: disclosure
        } = store.getState();
        if (anchor && contains(anchor, nextActiveElement)) return;
        if (popover && contains(popover, nextActiveElement)) return;
        if (disclosure && contains(disclosure, nextActiveElement)) return;
        if (nextActiveElement.hasAttribute("data-focus-trap")) return;
      }
      setVisible(false);
    };
    return addGlobalEventListener("focusout", onBlur, true);
  }, [visible, store]);
  (0, import_react72.useEffect)(() => {
    return sync(store, ["anchorElement"], (state) => {
      const anchor = state.anchorElement;
      if (!anchor) return;
      const observer = new MutationObserver(() => {
        if (!anchor.hasAttribute("data-focus-visible")) return;
        setVisible(true);
      });
      observer.observe(anchor, { attributeFilter: ["data-focus-visible"] });
      return () => observer.disconnect();
    });
  }, [store]);
  const onClickProp = props.onClick;
  const onClick = useEvent((event) => {
    onClickProp == null ? void 0 : onClickProp(event);
    if (event.defaultPrevented) return;
    store == null ? void 0 : store.setAutoFocusOnShow(true);
  });
  const onFocusProp = props.onFocus;
  const onFocus = useEvent((event) => {
    onFocusProp == null ? void 0 : onFocusProp(event);
    if (event.defaultPrevented) return;
    setVisible(true);
  });
  const { style: style2 } = useVisuallyHidden();
  if (!visible) {
    props = __spreadProps(__spreadValues({}, props), {
      style: __spreadValues(__spreadValues({}, style2), props.style)
    });
  }
  const children3 = (0, import_jsx_runtime49.jsx)(
    "svg",
    {
      display: "block",
      fill: "none",
      stroke: "currentColor",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      strokeWidth: 1.5,
      viewBox: "0 0 16 16",
      height: "1em",
      width: "1em",
      children: (0, import_jsx_runtime49.jsx)("polyline", { points: "4,6 8,10 12,6" })
    }
  );
  props = __spreadProps(__spreadValues({
    children: children3
  }, props), {
    ref: useMergeRefs(store.setDisclosureElement, props.ref),
    onClick,
    onFocus
  });
  props = useDialogDisclosure(__spreadValues({ store }, props));
  return props;
});
var HovercardDisclosure = forwardRef2(function HovercardDisclosure2(props) {
  const htmlProps = useHovercardDisclosure(props);
  return createElement(TagName95, htmlProps);
});

// node_modules/@ariakit/core/esm/tooltip/tooltip-store.js
function createTooltipStore(props = {}) {
  var _a2;
  if (true) {
    if (props.type === "label") {
      console.warn(
        "The `type` option on the tooltip store is deprecated.",
        "Render a visually hidden label or use the `aria-label` or `aria-labelledby` attributes on the anchor element instead.",
        "See https://ariakit.org/components/tooltip#tooltip-anchors-must-have-accessible-names"
      );
    }
  }
  const syncState = (_a2 = props.store) == null ? void 0 : _a2.getState();
  const hovercard = createHovercardStore(__spreadProps2(__spreadValues2({}, props), {
    placement: defaultValue(
      props.placement,
      syncState == null ? void 0 : syncState.placement,
      "top"
    ),
    hideTimeout: defaultValue(props.hideTimeout, syncState == null ? void 0 : syncState.hideTimeout, 0)
  }));
  const initialState = __spreadProps2(__spreadValues2({}, hovercard.getState()), {
    type: defaultValue(props.type, syncState == null ? void 0 : syncState.type, "description"),
    skipTimeout: defaultValue(props.skipTimeout, syncState == null ? void 0 : syncState.skipTimeout, 300)
  });
  const tooltip = createStore(initialState, hovercard, props.store);
  return __spreadValues2(__spreadValues2({}, hovercard), tooltip);
}

// node_modules/@ariakit/react-core/esm/__chunks/K3WOCAES.js
function useTooltipStoreProps(store, update, props) {
  useStoreProps(store, props, "type");
  useStoreProps(store, props, "skipTimeout");
  return useHovercardStoreProps(store, update, props);
}
function useTooltipStore(props = {}) {
  const [store, update] = useStore(createTooltipStore, props);
  return useTooltipStoreProps(store, update, props);
}

// node_modules/@ariakit/react-core/esm/__chunks/IEMWKLTV.js
var ctx12 = createStoreContext(
  [HovercardContextProvider],
  [HovercardScopedContextProvider]
);
var useTooltipContext = ctx12.useContext;
var useTooltipScopedContext = ctx12.useScopedContext;
var useTooltipProviderContext = ctx12.useProviderContext;
var TooltipContextProvider = ctx12.ContextProvider;
var TooltipScopedContextProvider = ctx12.ScopedContextProvider;

// node_modules/@ariakit/react-core/esm/tooltip/tooltip.js
var import_jsx_runtime50 = __toESM(require_jsx_runtime());
var TagName96 = "div";
var useTooltip = createHook(
  function useTooltip2(_a2) {
    var _b = _a2, {
      store,
      portal = true,
      gutter = 8,
      preserveTabOrder = false,
      hideOnHoverOutside = true,
      hideOnInteractOutside = true
    } = _b, props = __objRest(_b, [
      "store",
      "portal",
      "gutter",
      "preserveTabOrder",
      "hideOnHoverOutside",
      "hideOnInteractOutside"
    ]);
    const context = useTooltipProviderContext();
    store = store || context;
    invariant(
      store,
      "Tooltip must receive a `store` prop or be wrapped in a TooltipProvider component."
    );
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime50.jsx)(TooltipScopedContextProvider, { value: store, children: element }),
      [store]
    );
    const role = store.useState(
      (state) => state.type === "description" ? "tooltip" : "none"
    );
    props = __spreadValues({ role }, props);
    props = useHovercard(__spreadProps(__spreadValues({}, props), {
      store,
      portal,
      gutter,
      preserveTabOrder,
      hideOnHoverOutside(event) {
        if (isFalsyBooleanCallback(hideOnHoverOutside, event)) return false;
        const anchorElement = store == null ? void 0 : store.getState().anchorElement;
        if (!anchorElement) return true;
        if ("focusVisible" in anchorElement.dataset) return false;
        return true;
      },
      hideOnInteractOutside: (event) => {
        if (isFalsyBooleanCallback(hideOnInteractOutside, event)) return false;
        const anchorElement = store == null ? void 0 : store.getState().anchorElement;
        if (!anchorElement) return true;
        if (contains(anchorElement, event.target)) return false;
        return true;
      }
    }));
    return props;
  }
);
var Tooltip = createDialogComponent(
  forwardRef2(function Tooltip2(props) {
    const htmlProps = useTooltip(props);
    return createElement(TagName96, htmlProps);
  }),
  useTooltipProviderContext
);

// node_modules/@ariakit/react-core/esm/tooltip/tooltip-provider.js
var import_jsx_runtime51 = __toESM(require_jsx_runtime());
function TooltipProvider(props = {}) {
  const store = useTooltipStore(props);
  return (0, import_jsx_runtime51.jsx)(TooltipContextProvider, { value: store, children: props.children });
}

// node_modules/@ariakit/react-core/esm/tooltip/tooltip-anchor.js
var import_react73 = __toESM(require_react());
var TagName97 = "div";
var globalStore = createStore({
  activeStore: null
});
function createRemoveStoreCallback(store) {
  return () => {
    const { activeStore } = globalStore.getState();
    if (activeStore !== store) return;
    globalStore.setState("activeStore", null);
  };
}
var useTooltipAnchor = createHook(
  function useTooltipAnchor2(_a2) {
    var _b = _a2, { store, showOnHover = true } = _b, props = __objRest(_b, ["store", "showOnHover"]);
    const context = useTooltipProviderContext();
    store = store || context;
    invariant(
      store,
      "TooltipAnchor must receive a `store` prop or be wrapped in a TooltipProvider component."
    );
    const canShowOnHoverRef = (0, import_react73.useRef)(false);
    (0, import_react73.useEffect)(() => {
      return sync(store, ["mounted"], (state) => {
        if (state.mounted) return;
        canShowOnHoverRef.current = false;
      });
    }, [store]);
    (0, import_react73.useEffect)(() => {
      if (!store) return;
      return chain(
        // Immediately remove the current store from the global store when
        // the component unmounts. This is useful, for example, to avoid
        // showing tooltips immediately on serial tests.
        createRemoveStoreCallback(store),
        sync(store, ["mounted", "skipTimeout"], (state) => {
          if (!store) return;
          if (state.mounted) {
            const { activeStore } = globalStore.getState();
            if (activeStore !== store) {
              activeStore == null ? void 0 : activeStore.hide();
            }
            return globalStore.setState("activeStore", store);
          }
          const id = setTimeout(
            createRemoveStoreCallback(store),
            state.skipTimeout
          );
          return () => clearTimeout(id);
        })
      );
    }, [store]);
    const onMouseEnterProp = props.onMouseEnter;
    const onMouseEnter = useEvent((event) => {
      onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);
      canShowOnHoverRef.current = true;
    });
    const onFocusVisibleProp = props.onFocusVisible;
    const onFocusVisible = useEvent((event) => {
      onFocusVisibleProp == null ? void 0 : onFocusVisibleProp(event);
      if (event.defaultPrevented) return;
      store == null ? void 0 : store.setAnchorElement(event.currentTarget);
      store == null ? void 0 : store.show();
    });
    const onBlurProp = props.onBlur;
    const onBlur = useEvent((event) => {
      onBlurProp == null ? void 0 : onBlurProp(event);
      if (event.defaultPrevented) return;
      const { activeStore } = globalStore.getState();
      canShowOnHoverRef.current = false;
      if (activeStore === store) {
        globalStore.setState("activeStore", null);
      }
    });
    const type = store.useState("type");
    const contentId = store.useState((state) => {
      var _a22;
      return (_a22 = state.contentElement) == null ? void 0 : _a22.id;
    });
    props = __spreadProps(__spreadValues({
      "aria-labelledby": type === "label" ? contentId : void 0
    }, props), {
      onMouseEnter,
      onFocusVisible,
      onBlur
    });
    props = useHovercardAnchor(__spreadValues({
      store,
      showOnHover(event) {
        if (!canShowOnHoverRef.current) return false;
        if (isFalsyBooleanCallback(showOnHover, event)) return false;
        const { activeStore } = globalStore.getState();
        if (!activeStore) return true;
        store == null ? void 0 : store.show();
        return false;
      }
    }, props));
    return props;
  }
);
var TooltipAnchor = forwardRef2(function TooltipAnchor2(props) {
  const htmlProps = useTooltipAnchor(props);
  return createElement(TagName97, htmlProps);
});

// node_modules/@ariakit/react-core/esm/tooltip/tooltip-arrow.js
var TagName98 = "div";
var useTooltipArrow = createHook(
  function useTooltipArrow2(_a2) {
    var _b = _a2, { store, size: size3 = 16 } = _b, props = __objRest(_b, ["store", "size"]);
    const context = useTooltipContext();
    store = store || context;
    invariant(
      store,
      "TooltipArrow must be wrapped in a Tooltip component."
    );
    props = usePopoverArrow(__spreadValues({ store, size: size3 }, props));
    return props;
  }
);
var TooltipArrow = forwardRef2(function TooltipArrow2(props) {
  const htmlProps = useTooltipArrow(props);
  return createElement(TagName98, htmlProps);
});

// node_modules/@ariakit/core/esm/toolbar/toolbar-store.js
function createToolbarStore(props = {}) {
  var _a2;
  const syncState = (_a2 = props.store) == null ? void 0 : _a2.getState();
  return createCompositeStore(__spreadProps2(__spreadValues2({}, props), {
    orientation: defaultValue(
      props.orientation,
      syncState == null ? void 0 : syncState.orientation,
      "horizontal"
    ),
    focusLoop: defaultValue(props.focusLoop, syncState == null ? void 0 : syncState.focusLoop, true)
  }));
}

// node_modules/@ariakit/react-core/esm/__chunks/CHKZWOVX.js
function useToolbarStoreProps(store, update, props) {
  return useCompositeStoreProps(store, update, props);
}
function useToolbarStore(props = {}) {
  const [store, update] = useStore(createToolbarStore, props);
  return useToolbarStoreProps(store, update, props);
}

// node_modules/@ariakit/react-core/esm/__chunks/LDHO2NSJ.js
var ctx13 = createStoreContext(
  [CompositeContextProvider],
  [CompositeScopedContextProvider]
);
var useToolbarContext = ctx13.useContext;
var useToolbarScopedContext = ctx13.useScopedContext;
var useToolbarProviderContext = ctx13.useProviderContext;
var ToolbarContextProvider = ctx13.ContextProvider;
var ToolbarScopedContextProvider = ctx13.ScopedContextProvider;

// node_modules/@ariakit/react-core/esm/toolbar/toolbar.js
var import_jsx_runtime52 = __toESM(require_jsx_runtime());
var TagName99 = "div";
var useToolbar = createHook(
  function useToolbar2(_a2) {
    var _b = _a2, {
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    } = _b, props = __objRest(_b, [
      "store",
      "orientation",
      "virtualFocus",
      "focusLoop",
      "rtl"
    ]);
    const context = useToolbarProviderContext();
    storeProp = storeProp || context;
    const store = useToolbarStore({
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    });
    const orientation = store.useState(
      (state) => state.orientation === "both" ? void 0 : state.orientation
    );
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime52.jsx)(ToolbarScopedContextProvider, { value: store, children: element }),
      [store]
    );
    props = __spreadValues({
      role: "toolbar",
      "aria-orientation": orientation
    }, props);
    props = useComposite(__spreadValues({ store }, props));
    return props;
  }
);
var Toolbar = forwardRef2(function Toolbar2(props) {
  const htmlProps = useToolbar(props);
  return createElement(TagName99, htmlProps);
});

// node_modules/@ariakit/react-core/esm/toolbar/toolbar-provider.js
var import_jsx_runtime53 = __toESM(require_jsx_runtime());

// node_modules/@ariakit/react-core/esm/__chunks/5EJKZ5JM.js
var import_react74 = __toESM(require_react(), 1);
var TagName100 = "div";
function getFirstTabbable(container) {
  restoreFocusIn(container);
  const tabbable = getFirstTabbableIn(container);
  disableFocusIn(container);
  return tabbable;
}
var useCompositeContainer = createHook(function useCompositeContainer2(_a2) {
  var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
  const context = useCompositeContext();
  store = store || context;
  const ref = (0, import_react74.useRef)(null);
  const isOpenRef = (0, import_react74.useRef)(false);
  const open = (collapseToEnd = false) => {
    const container = ref.current;
    if (!container) return;
    restoreFocusIn(container);
    const tabbable = getFirstTabbableIn(container);
    if (!tabbable) {
      disableFocusIn(container);
      return;
    }
    isOpenRef.current = true;
    queueMicrotask(() => {
      tabbable.focus();
      if (isTextField(tabbable) || tabbable.isContentEditable) {
        selectTextField(tabbable, collapseToEnd);
      }
    });
  };
  const close = () => {
    const container = ref.current;
    if (!container) return;
    isOpenRef.current = false;
    disableFocusIn(container);
  };
  const renderedItems = useStoreState(store, "renderedItems");
  (0, import_react74.useEffect)(() => {
    const container = ref.current;
    if (!container) return;
    const isOpen = isOpenRef.current;
    if (!isOpen && (renderedItems == null ? void 0 : renderedItems.length)) {
      disableFocusIn(container);
    }
  }, [renderedItems]);
  const onFocusProp = props.onFocus;
  const onFocus = useEvent((event) => {
    onFocusProp == null ? void 0 : onFocusProp(event);
    if (event.defaultPrevented) return;
    if (!store) return;
    const isOpen = isOpenRef.current;
    if (isSelfTarget(event)) {
      isOpenRef.current = false;
      const { baseElement } = store.getState();
      const composite = baseElement;
      const selector2 = "[data-composite-container]";
      const containers = composite == null ? void 0 : composite.querySelectorAll(selector2);
      if (containers) {
        for (const container of containers) {
          disableFocusIn(container);
        }
      }
    } else if (!isOpen) {
      isOpenRef.current = true;
      restoreFocusIn(event.currentTarget);
      store == null ? void 0 : store.setState("moves", 0);
    }
  });
  const onBlurProp = props.onBlur;
  const onBlur = useEvent((event) => {
    onBlurProp == null ? void 0 : onBlurProp(event);
    if (event.defaultPrevented) return;
    if (isFocusEventOutside(event)) {
      close();
    }
  });
  const onKeyDownProp = props.onKeyDown;
  const onKeyDown = useEvent((event) => {
    onKeyDownProp == null ? void 0 : onKeyDownProp(event);
    if (event.defaultPrevented) return;
    if (event.altKey) return;
    if (event.ctrlKey) return;
    if (event.metaKey) return;
    if (event.shiftKey) return;
    const container = event.currentTarget;
    if (isSelfTarget(event)) {
      if (event.key.length === 1 && event.key !== " ") {
        const tabbable = getFirstTabbable(container);
        if (!tabbable) return;
        if (isTextField(tabbable) || tabbable.isContentEditable) {
          event.stopPropagation();
          open();
        }
      } else if (event.key === "Delete" || event.key === "Backspace") {
        const tabbable = getFirstTabbable(container);
        if (!tabbable) return;
        if (isTextField(tabbable) || tabbable.isContentEditable) {
          open();
          const onInput = () => queueMicrotask(() => container.focus());
          container.addEventListener("input", onInput, { once: true });
        }
      }
    } else if (event.key === "Escape") {
      queueMicrotask(() => container.focus());
    } else if (event.key === "Enter") {
      const target = event.target;
      const isInput2 = target.tagName === "INPUT" && !isButton(target) || target.tagName === "TEXTAREA";
      if (isInput2 || target.isContentEditable) {
        event.preventDefault();
        queueMicrotask(() => container.focus());
      }
    }
  });
  const onClickProp = props.onClick;
  const onClick = useEvent((event) => {
    onClickProp == null ? void 0 : onClickProp(event);
    if (event.defaultPrevented) return;
    if (isSelfTarget(event) && !event.detail) {
      open(true);
    }
  });
  props = __spreadProps(__spreadValues({
    "data-composite-container": ""
  }, props), {
    ref: useMergeRefs(ref, props.ref),
    onFocus,
    onBlur,
    onKeyDown,
    onClick
  });
  return removeUndefinedValues(props);
});
var CompositeContainer = forwardRef2(function CompositeContainer2(props) {
  const htmlProps = useCompositeContainer(props);
  return createElement(TagName100, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/45NMHJPK.js
var TagName101 = "button";
var useToolbarItem = createHook(
  function useToolbarItem2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useToolbarContext();
    store = store || context;
    props = useCompositeItem(__spreadValues({ store }, props));
    return props;
  }
);
var ToolbarItem = memo2(
  forwardRef2(function ToolbarItem2(props) {
    const htmlProps = useToolbarItem(props);
    return createElement(TagName101, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/toolbar/toolbar-container.js
var TagName102 = "div";
var useToolbarContainer = createHook(
  function useToolbarContainer2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useToolbarContext();
    store = store || context;
    props = useCompositeContainer(__spreadValues({ store }, props));
    props = useToolbarItem(__spreadValues({ store }, props));
    return props;
  }
);
var ToolbarContainer = memo2(
  forwardRef2(function ToolbarContainer2(props) {
    const htmlProps = useToolbarContainer(props);
    return createElement(TagName102, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/toolbar/toolbar-input.js
var TagName103 = "input";
var useToolbarInput = createHook(
  function useToolbarInput2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useToolbarContext();
    store = store || context;
    props = useToolbarItem(__spreadValues({ store }, props));
    return props;
  }
);
var ToolbarInput = memo2(
  forwardRef2(function ToolbarInput2(props) {
    const htmlProps = useToolbarInput(props);
    return createElement(TagName103, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/toolbar/toolbar-separator.js
var TagName104 = "hr";
var useToolbarSeparator = createHook(
  function useToolbarSeparator2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useToolbarContext();
    store = store || context;
    props = useCompositeSeparator(__spreadValues({ store }, props));
    return props;
  }
);
var ToolbarSeparator = forwardRef2(function ToolbarSeparator2(props) {
  const htmlProps = useToolbarSeparator(props);
  return createElement(TagName104, htmlProps);
});

// node_modules/@ariakit/react-core/esm/__chunks/SLHXTMPQ.js
var import_react75 = __toESM(require_react(), 1);
var ctx14 = createStoreContext(
  [PopoverContextProvider, CompositeContextProvider],
  [PopoverScopedContextProvider, CompositeScopedContextProvider]
);
var useSelectContext = ctx14.useContext;
var useSelectScopedContext = ctx14.useScopedContext;
var useSelectProviderContext = ctx14.useProviderContext;
var SelectContextProvider = ctx14.ContextProvider;
var SelectScopedContextProvider = ctx14.ScopedContextProvider;
var SelectItemCheckedContext = (0, import_react75.createContext)(false);
var SelectHeadingContext = (0, import_react75.createContext)(null);

// node_modules/@ariakit/core/esm/tab/tab-store.js
function createTabStore(_a2 = {}) {
  var _b = _a2, {
    composite: parentComposite,
    combobox
  } = _b, props = __objRest2(_b, [
    "composite",
    "combobox"
  ]);
  const independentKeys = [
    "items",
    "renderedItems",
    "moves",
    "orientation",
    "virtualFocus",
    "includesBaseElement",
    "baseElement",
    "focusLoop",
    "focusShift",
    "focusWrap"
  ];
  const store = mergeStore(
    props.store,
    omit2(parentComposite, independentKeys),
    omit2(combobox, independentKeys)
  );
  const syncState = store == null ? void 0 : store.getState();
  const composite = createCompositeStore(__spreadProps2(__spreadValues2({}, props), {
    store,
    // We need to explicitly set the default value of `includesBaseElement` to
    // `false` since we don't want the composite store to default it to `true`
    // when the activeId state is null, which could be the case when rendering
    // combobox with tab.
    includesBaseElement: defaultValue(
      props.includesBaseElement,
      syncState == null ? void 0 : syncState.includesBaseElement,
      false
    ),
    orientation: defaultValue(
      props.orientation,
      syncState == null ? void 0 : syncState.orientation,
      "horizontal"
    ),
    focusLoop: defaultValue(props.focusLoop, syncState == null ? void 0 : syncState.focusLoop, true)
  }));
  const panels = createCollectionStore();
  const initialState = __spreadProps2(__spreadValues2({}, composite.getState()), {
    selectedId: defaultValue(
      props.selectedId,
      syncState == null ? void 0 : syncState.selectedId,
      props.defaultSelectedId
    ),
    selectOnMove: defaultValue(
      props.selectOnMove,
      syncState == null ? void 0 : syncState.selectOnMove,
      true
    )
  });
  const tab = createStore(initialState, composite, store);
  setup(
    tab,
    () => sync(tab, ["moves"], () => {
      const { activeId, selectOnMove } = tab.getState();
      if (!selectOnMove) return;
      if (!activeId) return;
      const tabItem = composite.item(activeId);
      if (!tabItem) return;
      if (tabItem.dimmed) return;
      if (tabItem.disabled) return;
      tab.setState("selectedId", tabItem.id);
    })
  );
  let syncActiveId = true;
  setup(
    tab,
    () => batch(tab, ["selectedId"], (state, prev) => {
      if (!syncActiveId) {
        syncActiveId = true;
        return;
      }
      if (parentComposite && state.selectedId === prev.selectedId) return;
      tab.setState("activeId", state.selectedId);
    })
  );
  setup(
    tab,
    () => sync(tab, ["selectedId", "renderedItems"], (state) => {
      if (state.selectedId !== void 0) return;
      const { activeId, renderedItems } = tab.getState();
      const tabItem = composite.item(activeId);
      if (tabItem && !tabItem.disabled && !tabItem.dimmed) {
        tab.setState("selectedId", tabItem.id);
      } else {
        const tabItem2 = renderedItems.find(
          (item) => !item.disabled && !item.dimmed
        );
        tab.setState("selectedId", tabItem2 == null ? void 0 : tabItem2.id);
      }
    })
  );
  setup(
    tab,
    () => sync(tab, ["renderedItems"], (state) => {
      const tabs = state.renderedItems;
      if (!tabs.length) return;
      return sync(panels, ["renderedItems"], (state2) => {
        const items = state2.renderedItems;
        const hasOrphanPanels = items.some((panel) => !panel.tabId);
        if (!hasOrphanPanels) return;
        items.forEach((panel, i) => {
          if (panel.tabId) return;
          const tabItem = tabs[i];
          if (!tabItem) return;
          panels.renderItem(__spreadProps2(__spreadValues2({}, panel), { tabId: tabItem.id }));
        });
      });
    })
  );
  let selectedIdFromSelectedValue = null;
  setup(tab, () => {
    const backupSelectedId = () => {
      selectedIdFromSelectedValue = tab.getState().selectedId;
    };
    const restoreSelectedId = () => {
      syncActiveId = false;
      tab.setState("selectedId", selectedIdFromSelectedValue);
    };
    if (parentComposite && "setSelectElement" in parentComposite) {
      return chain(
        sync(parentComposite, ["value"], backupSelectedId),
        sync(parentComposite, ["mounted"], restoreSelectedId)
      );
    }
    if (!combobox) return;
    return chain(
      sync(combobox, ["selectedValue"], backupSelectedId),
      sync(combobox, ["mounted"], restoreSelectedId)
    );
  });
  return __spreadProps2(__spreadValues2(__spreadValues2({}, composite), tab), {
    panels,
    setSelectedId: (id) => tab.setState("selectedId", id),
    select: (id) => {
      tab.setState("selectedId", id);
      composite.move(id);
    }
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/ESGPC4B7.js
var import_react76 = __toESM(require_react(), 1);
function useTabStoreProps(store, update, props) {
  useUpdateEffect(update, [props.composite, props.combobox]);
  store = useCompositeStoreProps(store, update, props);
  useStoreProps(store, props, "selectedId", "setSelectedId");
  useStoreProps(store, props, "selectOnMove");
  const [panels, updatePanels] = useStore(() => store.panels, {});
  useUpdateEffect(updatePanels, [store, updatePanels]);
  return Object.assign(
    (0, import_react76.useMemo)(() => __spreadProps(__spreadValues({}, store), { panels }), [store, panels]),
    { composite: props.composite, combobox: props.combobox }
  );
}
function useTabStore(props = {}) {
  const combobox = useComboboxContext();
  const composite = useSelectContext() || combobox;
  props = __spreadProps(__spreadValues({}, props), {
    composite: props.composite !== void 0 ? props.composite : composite,
    combobox: props.combobox !== void 0 ? props.combobox : combobox
  });
  const [store, update] = useStore(createTabStore, props);
  return useTabStoreProps(store, update, props);
}

// node_modules/@ariakit/react-core/esm/__chunks/BSRZWVZO.js
var ctx15 = createStoreContext(
  [CompositeContextProvider],
  [CompositeScopedContextProvider]
);
var useTabContext = ctx15.useContext;
var useTabScopedContext = ctx15.useScopedContext;
var useTabProviderContext = ctx15.useProviderContext;
var TabContextProvider = ctx15.ContextProvider;
var TabScopedContextProvider = ctx15.ScopedContextProvider;

// node_modules/@ariakit/react-core/esm/tab/tab.js
var import_react77 = __toESM(require_react());
var import_jsx_runtime54 = __toESM(require_jsx_runtime());
var TagName105 = "button";
var useTab = createHook(function useTab2(_a2) {
  var _b = _a2, {
    store,
    getItem: getItemProp
  } = _b, props = __objRest(_b, [
    "store",
    "getItem"
  ]);
  var _a22;
  const context = useTabScopedContext();
  store = store || context;
  invariant(
    store,
    "Tab must be wrapped in a TabList component."
  );
  const defaultId = useId();
  const id = props.id || defaultId;
  const dimmed = disabledFromProps(props);
  const getItem = (0, import_react77.useCallback)(
    (item) => {
      const nextItem = __spreadProps(__spreadValues({}, item), { dimmed });
      if (getItemProp) {
        return getItemProp(nextItem);
      }
      return nextItem;
    },
    [dimmed, getItemProp]
  );
  const onClickProp = props.onClick;
  const onClick = useEvent((event) => {
    onClickProp == null ? void 0 : onClickProp(event);
    if (event.defaultPrevented) return;
    store == null ? void 0 : store.setSelectedId(id);
  });
  const panelId = store.panels.useState(
    (state) => {
      var _a3;
      return (_a3 = state.items.find((item) => item.tabId === id)) == null ? void 0 : _a3.id;
    }
  );
  const shouldRegisterItem = defaultId ? props.shouldRegisterItem : false;
  const isActive = store.useState((state) => !!id && state.activeId === id);
  const selected = store.useState((state) => !!id && state.selectedId === id);
  const hasActiveItem2 = store.useState((state) => !!store.item(state.activeId));
  const canRegisterComposedItem = isActive || selected && !hasActiveItem2;
  const accessibleWhenDisabled = selected || ((_a22 = props.accessibleWhenDisabled) != null ? _a22 : true);
  const isWithinVirtualFocusComposite = useStoreState(
    store.combobox || store.composite,
    "virtualFocus"
  );
  if (isWithinVirtualFocusComposite) {
    props = __spreadProps(__spreadValues({}, props), {
      tabIndex: -1
    });
  }
  props = __spreadProps(__spreadValues({
    id,
    role: "tab",
    "aria-selected": selected,
    "aria-controls": panelId || void 0
  }, props), {
    onClick
  });
  if (store.composite) {
    const defaultProps = {
      id,
      accessibleWhenDisabled,
      store: store.composite,
      shouldRegisterItem: canRegisterComposedItem && shouldRegisterItem,
      rowId: props.rowId,
      render: props.render
    };
    props = __spreadProps(__spreadValues({}, props), {
      render: (0, import_jsx_runtime54.jsx)(
        CompositeItem,
        __spreadProps(__spreadValues({}, defaultProps), {
          render: store.combobox && store.composite !== store.combobox ? (0, import_jsx_runtime54.jsx)(CompositeItem, __spreadProps(__spreadValues({}, defaultProps), { store: store.combobox })) : defaultProps.render
        })
      )
    });
  }
  props = useCompositeItem(__spreadProps(__spreadValues({
    store
  }, props), {
    accessibleWhenDisabled,
    getItem,
    shouldRegisterItem
  }));
  return props;
});
var Tab = memo2(
  forwardRef2(function Tab2(props) {
    const htmlProps = useTab(props);
    return createElement(TagName105, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/tab/tab-provider.js
var import_jsx_runtime55 = __toESM(require_jsx_runtime());
function TabProvider(props = {}) {
  const store = useTabStore(props);
  return (0, import_jsx_runtime55.jsx)(TabContextProvider, { value: store, children: props.children });
}

// node_modules/@ariakit/react-core/esm/tab/tab-list.js
var import_jsx_runtime56 = __toESM(require_jsx_runtime());
var TagName106 = "div";
var useTabList = createHook(
  function useTabList2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useTabProviderContext();
    store = store || context;
    invariant(
      store,
      "TabList must receive a `store` prop or be wrapped in a TabProvider component."
    );
    const orientation = store.useState(
      (state) => state.orientation === "both" ? void 0 : state.orientation
    );
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime56.jsx)(TabScopedContextProvider, { value: store, children: element }),
      [store]
    );
    if (store.composite) {
      props = __spreadValues({
        focusable: false
      }, props);
    }
    props = __spreadValues({
      role: "tablist",
      "aria-orientation": orientation
    }, props);
    props = useComposite(__spreadValues({ store }, props));
    return props;
  }
);
var TabList = forwardRef2(function TabList2(props) {
  const htmlProps = useTabList(props);
  return createElement(TagName106, htmlProps);
});

// node_modules/@ariakit/react-core/esm/tab/tab-panel.js
var import_react78 = __toESM(require_react());
var import_jsx_runtime57 = __toESM(require_jsx_runtime());
var TagName107 = "div";
var useTabPanel = createHook(
  function useTabPanel2(_a2) {
    var _b = _a2, {
      store,
      unmountOnHide,
      tabId: tabIdProp,
      getItem: getItemProp,
      scrollRestoration,
      scrollElement
    } = _b, props = __objRest(_b, [
      "store",
      "unmountOnHide",
      "tabId",
      "getItem",
      "scrollRestoration",
      "scrollElement"
    ]);
    const context = useTabProviderContext();
    store = store || context;
    invariant(
      store,
      "TabPanel must receive a `store` prop or be wrapped in a TabProvider component."
    );
    const ref = (0, import_react78.useRef)(null);
    const id = useId(props.id);
    const tabId = useStoreState(
      store.panels,
      () => {
        var _a22;
        return tabIdProp || ((_a22 = store == null ? void 0 : store.panels.item(id)) == null ? void 0 : _a22.tabId);
      }
    );
    const open = useStoreState(
      store,
      (state) => !!tabId && state.selectedId === tabId
    );
    const disclosure = useDisclosureStore({ open });
    const mounted = useStoreState(disclosure, "mounted");
    const scrollPositionRef = (0, import_react78.useRef)(
      /* @__PURE__ */ new Map()
    );
    const getScrollElement = useEvent(() => {
      const panelElement = ref.current;
      if (!panelElement) return null;
      if (!scrollElement) return panelElement;
      if (typeof scrollElement === "function") {
        return scrollElement(panelElement);
      }
      if ("current" in scrollElement) {
        return scrollElement.current;
      }
      return scrollElement;
    });
    (0, import_react78.useEffect)(() => {
      var _a22, _b2;
      if (!scrollRestoration) return;
      if (!mounted) return;
      const element = getScrollElement();
      if (!element) return;
      if (scrollRestoration === "reset") {
        element.scroll(0, 0);
        return;
      }
      if (!tabId) return;
      const position = scrollPositionRef.current.get(tabId);
      element.scroll((_a22 = position == null ? void 0 : position.x) != null ? _a22 : 0, (_b2 = position == null ? void 0 : position.y) != null ? _b2 : 0);
      const onScroll = () => {
        scrollPositionRef.current.set(tabId, {
          x: element.scrollLeft,
          y: element.scrollTop
        });
      };
      element.addEventListener("scroll", onScroll);
      return () => {
        element.removeEventListener("scroll", onScroll);
      };
    }, [scrollRestoration, mounted, tabId, getScrollElement, store]);
    const [hasTabbableChildren, setHasTabbableChildren] = (0, import_react78.useState)(false);
    (0, import_react78.useEffect)(() => {
      const element = ref.current;
      if (!element) return;
      const tabbable = getAllTabbableIn(element);
      setHasTabbableChildren(!!tabbable.length);
    }, []);
    const getItem = (0, import_react78.useCallback)(
      (item) => {
        const nextItem = __spreadProps(__spreadValues({}, item), { id: id || item.id, tabId: tabIdProp });
        if (getItemProp) {
          return getItemProp(nextItem);
        }
        return nextItem;
      },
      [id, tabIdProp, getItemProp]
    );
    const onKeyDownProp = props.onKeyDown;
    const onKeyDown = useEvent((event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (event.defaultPrevented) return;
      if (!(store == null ? void 0 : store.composite)) return;
      const keyMap = {
        ArrowLeft: store.previous,
        ArrowRight: store.next,
        Home: store.first,
        End: store.last
      };
      const action = keyMap[event.key];
      if (!action) return;
      const { selectedId } = store.getState();
      const nextId = action({ activeId: selectedId });
      if (!nextId) return;
      event.preventDefault();
      store.move(nextId);
    });
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime57.jsx)(TabScopedContextProvider, { value: store, children: element }),
      [store]
    );
    props = __spreadProps(__spreadValues({
      id,
      role: "tabpanel",
      "aria-labelledby": tabId || void 0
    }, props), {
      children: unmountOnHide && !mounted ? null : props.children,
      ref: useMergeRefs(ref, props.ref),
      onKeyDown
    });
    props = useFocusable(__spreadValues({
      // If the tab panel is rendered as part of another composite widget such
      // as combobox, it should not be focusable.
      focusable: !store.composite && !hasTabbableChildren
    }, props));
    props = useDisclosureContent(__spreadValues({ store: disclosure }, props));
    props = useCollectionItem(__spreadProps(__spreadValues({ store: store.panels }, props), { getItem }));
    return props;
  }
);
var TabPanel = forwardRef2(function TabPanel2(props) {
  const htmlProps = useTabPanel(props);
  return createElement(TagName107, htmlProps);
});

// node_modules/@ariakit/core/esm/select/select-store.js
function createSelectStore(_a2 = {}) {
  var _b = _a2, {
    combobox
  } = _b, props = __objRest2(_b, [
    "combobox"
  ]);
  const store = mergeStore(
    props.store,
    omit2(combobox, [
      "value",
      "items",
      "renderedItems",
      "baseElement",
      "arrowElement",
      "anchorElement",
      "contentElement",
      "popoverElement",
      "disclosureElement"
    ])
  );
  throwOnConflictingProps(props, store);
  const syncState = store.getState();
  const composite = createCompositeStore(__spreadProps2(__spreadValues2({}, props), {
    store,
    virtualFocus: defaultValue(
      props.virtualFocus,
      syncState.virtualFocus,
      true
    ),
    includesBaseElement: defaultValue(
      props.includesBaseElement,
      syncState.includesBaseElement,
      false
    ),
    activeId: defaultValue(
      props.activeId,
      syncState.activeId,
      props.defaultActiveId,
      null
    ),
    orientation: defaultValue(
      props.orientation,
      syncState.orientation,
      "vertical"
    )
  }));
  const popover = createPopoverStore(__spreadProps2(__spreadValues2({}, props), {
    store,
    placement: defaultValue(
      props.placement,
      syncState.placement,
      "bottom-start"
    )
  }));
  const initialValue = new String("");
  const initialState = __spreadProps2(__spreadValues2(__spreadValues2({}, composite.getState()), popover.getState()), {
    value: defaultValue(
      props.value,
      syncState.value,
      props.defaultValue,
      initialValue
    ),
    setValueOnMove: defaultValue(
      props.setValueOnMove,
      syncState.setValueOnMove,
      false
    ),
    labelElement: defaultValue(syncState.labelElement, null),
    selectElement: defaultValue(syncState.selectElement, null),
    listElement: defaultValue(syncState.listElement, null)
  });
  const select = createStore(initialState, composite, popover, store);
  setup(
    select,
    () => sync(select, ["value", "items"], (state) => {
      if (state.value !== initialValue) return;
      if (!state.items.length) return;
      const item = state.items.find(
        (item2) => !item2.disabled && item2.value != null
      );
      if ((item == null ? void 0 : item.value) == null) return;
      select.setState("value", item.value);
    })
  );
  setup(
    select,
    () => sync(select, ["mounted"], (state) => {
      if (state.mounted) return;
      select.setState("activeId", initialState.activeId);
    })
  );
  setup(
    select,
    () => sync(select, ["mounted", "items", "value"], (state) => {
      if (combobox) return;
      if (state.mounted) return;
      const values = toArray(state.value);
      const lastValue = values[values.length - 1];
      if (lastValue == null) return;
      const item = state.items.find(
        (item2) => !item2.disabled && item2.value === lastValue
      );
      if (!item) return;
      select.setState("activeId", item.id);
    })
  );
  setup(
    select,
    () => batch(select, ["setValueOnMove", "moves"], (state) => {
      const { mounted, value, activeId } = select.getState();
      if (!state.setValueOnMove && mounted) return;
      if (Array.isArray(value)) return;
      if (!state.moves) return;
      if (!activeId) return;
      const item = composite.item(activeId);
      if (!item || item.disabled || item.value == null) return;
      select.setState("value", item.value);
    })
  );
  return __spreadProps2(__spreadValues2(__spreadValues2(__spreadValues2({}, composite), popover), select), {
    combobox,
    setValue: (value) => select.setState("value", value),
    setLabelElement: (element) => select.setState("labelElement", element),
    setSelectElement: (element) => select.setState("selectElement", element),
    setListElement: (element) => select.setState("listElement", element)
  });
}

// node_modules/@ariakit/react-core/esm/__chunks/Y7TEGSHG.js
function useSelectStoreProps(store, update, props) {
  useUpdateEffect(update, [props.combobox]);
  useStoreProps(store, props, "value", "setValue");
  useStoreProps(store, props, "setValueOnMove");
  return Object.assign(
    usePopoverStoreProps(
      useCompositeStoreProps(store, update, props),
      update,
      props
    ),
    { combobox: props.combobox }
  );
}
function useSelectStore(props = {}) {
  const combobox = useComboboxProviderContext();
  props = __spreadProps(__spreadValues({}, props), {
    combobox: props.combobox !== void 0 ? props.combobox : combobox
  });
  const [store, update] = useStore(createSelectStore, props);
  return useSelectStoreProps(store, update, props);
}

// node_modules/@ariakit/react-core/esm/__chunks/R7IT6RIP.js
var TagName108 = "span";
var useSelectArrow = createHook(
  function useSelectArrow2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useSelectContext();
    store = store || context;
    props = usePopoverDisclosureArrow(__spreadValues({ store }, props));
    return props;
  }
);
var SelectArrow = forwardRef2(function SelectArrow2(props) {
  const htmlProps = useSelectArrow(props);
  return createElement(TagName108, htmlProps);
});

// node_modules/@ariakit/react-core/esm/select/select.js
var import_react79 = __toESM(require_react());
var import_jsx_runtime58 = __toESM(require_jsx_runtime());
var TagName109 = "button";
function getSelectedValues(select) {
  return Array.from(select.selectedOptions).map((option) => option.value);
}
function nextWithValue(store, next) {
  return () => {
    const nextId = next();
    if (!nextId) return;
    let i = 0;
    let nextItem = store.item(nextId);
    const firstItem = nextItem;
    while (nextItem && nextItem.value == null) {
      const nextId2 = next(++i);
      if (!nextId2) return;
      nextItem = store.item(nextId2);
      if (nextItem === firstItem) break;
    }
    return nextItem == null ? void 0 : nextItem.id;
  };
}
var useSelect = createHook(function useSelect2(_a2) {
  var _b = _a2, {
    store,
    name,
    form,
    required,
    showOnKeyDown = true,
    moveOnKeyDown = true,
    toggleOnPress = true,
    toggleOnClick = toggleOnPress
  } = _b, props = __objRest(_b, [
    "store",
    "name",
    "form",
    "required",
    "showOnKeyDown",
    "moveOnKeyDown",
    "toggleOnPress",
    "toggleOnClick"
  ]);
  const context = useSelectProviderContext();
  store = store || context;
  invariant(
    store,
    "Select must receive a `store` prop or be wrapped in a SelectProvider component."
  );
  const onKeyDownProp = props.onKeyDown;
  const showOnKeyDownProp = useBooleanEvent(showOnKeyDown);
  const moveOnKeyDownProp = useBooleanEvent(moveOnKeyDown);
  const placement = store.useState("placement");
  const dir = placement.split("-")[0];
  const value = store.useState("value");
  const multiSelectable = Array.isArray(value);
  const onKeyDown = useEvent((event) => {
    var _a22;
    onKeyDownProp == null ? void 0 : onKeyDownProp(event);
    if (event.defaultPrevented) return;
    if (!store) return;
    const { orientation, items: items2, activeId } = store.getState();
    const isVertical2 = orientation !== "horizontal";
    const isHorizontal = orientation !== "vertical";
    const isGrid2 = !!((_a22 = items2.find((item) => !item.disabled && item.value != null)) == null ? void 0 : _a22.rowId);
    const moveKeyMap = {
      ArrowUp: (isGrid2 || isVertical2) && nextWithValue(store, store.up),
      ArrowRight: (isGrid2 || isHorizontal) && nextWithValue(store, store.next),
      ArrowDown: (isGrid2 || isVertical2) && nextWithValue(store, store.down),
      ArrowLeft: (isGrid2 || isHorizontal) && nextWithValue(store, store.previous)
    };
    const getId = moveKeyMap[event.key];
    if (getId && moveOnKeyDownProp(event)) {
      event.preventDefault();
      store.move(getId());
    }
    const isTopOrBottom = dir === "top" || dir === "bottom";
    const isLeft = dir === "left";
    const isRight = dir === "right";
    const canShowKeyMap = {
      ArrowDown: isTopOrBottom,
      ArrowUp: isTopOrBottom,
      ArrowLeft: isLeft,
      ArrowRight: isRight
    };
    const canShow = canShowKeyMap[event.key];
    if (canShow && showOnKeyDownProp(event)) {
      event.preventDefault();
      store.move(activeId);
      queueBeforeEvent(event.currentTarget, "keyup", store.show);
    }
  });
  props = useWrapElement(
    props,
    (element) => (0, import_jsx_runtime58.jsx)(SelectScopedContextProvider, { value: store, children: element }),
    [store]
  );
  const [autofill, setAutofill] = (0, import_react79.useState)(false);
  const nativeSelectChangedRef = (0, import_react79.useRef)(false);
  (0, import_react79.useEffect)(() => {
    const nativeSelectChanged = nativeSelectChangedRef.current;
    nativeSelectChangedRef.current = false;
    if (nativeSelectChanged) return;
    setAutofill(false);
  }, [value]);
  const labelId = store.useState((state) => {
    var _a22;
    return (_a22 = state.labelElement) == null ? void 0 : _a22.id;
  });
  const label = props["aria-label"];
  const labelledBy = props["aria-labelledby"] || labelId;
  const items = store.useState((state) => {
    if (!name) return;
    return state.items;
  });
  const values = (0, import_react79.useMemo)(() => {
    return [...new Set(items == null ? void 0 : items.map((i) => i.value).filter((v2) => v2 != null))];
  }, [items]);
  props = useWrapElement(
    props,
    (element) => {
      if (!name) return element;
      return (0, import_jsx_runtime58.jsxs)(import_jsx_runtime58.Fragment, { children: [
        (0, import_jsx_runtime58.jsxs)(
          "select",
          {
            style: {
              border: 0,
              clip: "rect(0 0 0 0)",
              height: "1px",
              margin: "-1px",
              overflow: "hidden",
              padding: 0,
              position: "absolute",
              whiteSpace: "nowrap",
              width: "1px"
            },
            tabIndex: -1,
            "aria-hidden": true,
            "aria-label": label,
            "aria-labelledby": labelledBy,
            name,
            form,
            required,
            value,
            multiple: multiSelectable,
            onFocus: () => {
              var _a22;
              return (_a22 = store == null ? void 0 : store.getState().selectElement) == null ? void 0 : _a22.focus();
            },
            onChange: (event) => {
              nativeSelectChangedRef.current = true;
              setAutofill(true);
              store == null ? void 0 : store.setValue(
                multiSelectable ? getSelectedValues(event.target) : event.target.value
              );
            },
            children: [
              toArray(value).map((value2) => {
                if (value2 == null) return null;
                if (values.includes(value2)) return null;
                return (0, import_jsx_runtime58.jsx)("option", { value: value2, children: value2 }, value2);
              }),
              values.map((value2) => (0, import_jsx_runtime58.jsx)("option", { value: value2, children: value2 }, value2))
            ]
          }
        ),
        element
      ] });
    },
    [
      store,
      label,
      labelledBy,
      name,
      form,
      required,
      value,
      multiSelectable,
      values
    ]
  );
  const children3 = (0, import_jsx_runtime58.jsxs)(import_jsx_runtime58.Fragment, { children: [
    value,
    (0, import_jsx_runtime58.jsx)(SelectArrow, {})
  ] });
  const contentElement = store.useState("contentElement");
  props = __spreadProps(__spreadValues({
    role: "combobox",
    "aria-autocomplete": "none",
    "aria-labelledby": labelId,
    "aria-haspopup": getPopupRole(contentElement, "listbox"),
    "data-autofill": autofill || void 0,
    "data-name": name,
    children: children3
  }, props), {
    ref: useMergeRefs(store.setSelectElement, props.ref),
    onKeyDown
  });
  props = usePopoverDisclosure(__spreadValues({ store, toggleOnClick }, props));
  props = useCompositeTypeahead(__spreadValues({ store }, props));
  return props;
});
var Select = forwardRef2(function Select2(props) {
  const htmlProps = useSelect(props);
  return createElement(TagName109, htmlProps);
});

// node_modules/@ariakit/react-core/esm/select/select-provider.js
var import_jsx_runtime59 = __toESM(require_jsx_runtime());
function SelectProvider(props = {}) {
  const store = useSelectStore(props);
  return (0, import_jsx_runtime59.jsx)(SelectContextProvider, { value: store, children: props.children });
}

// node_modules/@ariakit/react-core/esm/select/select-dismiss.js
var TagName110 = "button";
var useSelectDismiss = createHook(
  function useSelectDismiss2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useSelectScopedContext();
    store = store || context;
    props = usePopoverDismiss(__spreadValues({ store }, props));
    return props;
  }
);
var SelectDismiss = forwardRef2(function SelectDismiss2(props) {
  const htmlProps = useSelectDismiss(props);
  return createElement(TagName110, htmlProps);
});

// node_modules/@ariakit/react-core/esm/select/select-group-label.js
var TagName111 = "div";
var useSelectGroupLabel = createHook(
  function useSelectGroupLabel2(props) {
    props = useCompositeGroupLabel(props);
    return props;
  }
);
var SelectGroupLabel = forwardRef2(function SelectGroupLabel2(props) {
  const htmlProps = useSelectGroupLabel(props);
  return createElement(TagName111, htmlProps);
});

// node_modules/@ariakit/react-core/esm/select/select-group.js
var TagName112 = "div";
var useSelectGroup = createHook(
  function useSelectGroup2(props) {
    props = useCompositeGroup(props);
    return props;
  }
);
var SelectGroup = forwardRef2(function SelectGroup2(props) {
  const htmlProps = useSelectGroup(props);
  return createElement(TagName112, htmlProps);
});

// node_modules/@ariakit/react-core/esm/select/select-heading.js
var import_react80 = __toESM(require_react());
var TagName113 = "h1";
var useSelectHeading = createHook(
  function useSelectHeading2(props) {
    const [, setHeadingId] = (0, import_react80.useContext)(SelectHeadingContext) || [];
    const id = useId(props.id);
    useSafeLayoutEffect(() => {
      setHeadingId == null ? void 0 : setHeadingId(id);
      return () => setHeadingId == null ? void 0 : setHeadingId(void 0);
    }, [setHeadingId, id]);
    props = __spreadValues({
      id
    }, props);
    props = usePopoverHeading(props);
    return props;
  }
);
var SelectHeading = forwardRef2(function SelectHeading2(props) {
  const htmlProps = useSelectHeading(props);
  return createElement(TagName113, htmlProps);
});

// node_modules/@ariakit/react-core/esm/select/select-item-check.js
var import_react81 = __toESM(require_react());
var TagName114 = "span";
var useSelectItemCheck = createHook(
  function useSelectItemCheck2(_a2) {
    var _b = _a2, { store, checked } = _b, props = __objRest(_b, ["store", "checked"]);
    const context = (0, import_react81.useContext)(SelectItemCheckedContext);
    checked = checked != null ? checked : context;
    props = useCheckboxCheck(__spreadProps(__spreadValues({}, props), { checked }));
    return props;
  }
);
var SelectItemCheck = forwardRef2(function SelectItemCheck2(props) {
  const htmlProps = useSelectItemCheck(props);
  return createElement(TagName114, htmlProps);
});

// node_modules/@ariakit/react-core/esm/select/select-item.js
var import_react82 = __toESM(require_react());
var import_jsx_runtime60 = __toESM(require_jsx_runtime());
var TagName115 = "div";
function isSelected2(storeValue, itemValue) {
  if (itemValue == null) return;
  if (storeValue == null) return false;
  if (Array.isArray(storeValue)) {
    return storeValue.includes(itemValue);
  }
  return storeValue === itemValue;
}
var useSelectItem = createHook(
  function useSelectItem2(_a2) {
    var _b = _a2, {
      store,
      value,
      getItem: getItemProp,
      hideOnClick,
      setValueOnClick = value != null,
      preventScrollOnKeyDown = true,
      focusOnHover = true
    } = _b, props = __objRest(_b, [
      "store",
      "value",
      "getItem",
      "hideOnClick",
      "setValueOnClick",
      "preventScrollOnKeyDown",
      "focusOnHover"
    ]);
    var _a22;
    const context = useSelectScopedContext();
    store = store || context;
    invariant(
      store,
      "SelectItem must be wrapped in a SelectList or SelectPopover component."
    );
    const id = useId(props.id);
    const disabled = disabledFromProps(props);
    const getItem = (0, import_react82.useCallback)(
      (item) => {
        const nextItem = __spreadProps(__spreadValues({}, item), {
          value: disabled ? void 0 : value,
          children: value
        });
        if (getItemProp) {
          return getItemProp(nextItem);
        }
        return nextItem;
      },
      [disabled, value, getItemProp]
    );
    const multiSelectable = store.useState(
      (state) => Array.isArray(state.value)
    );
    hideOnClick = hideOnClick != null ? hideOnClick : value != null && !multiSelectable;
    const onClickProp = props.onClick;
    const setValueOnClickProp = useBooleanEvent(setValueOnClick);
    const hideOnClickProp = useBooleanEvent(hideOnClick);
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      if (isDownloading(event)) return;
      if (isOpeningInNewTab(event)) return;
      if (setValueOnClickProp(event) && value != null) {
        store == null ? void 0 : store.setValue((prevValue) => {
          if (!Array.isArray(prevValue)) return value;
          if (prevValue.includes(value)) {
            return prevValue.filter((v2) => v2 !== value);
          }
          return [...prevValue, value];
        });
      }
      if (hideOnClickProp(event)) {
        store == null ? void 0 : store.hide();
      }
    });
    const selected = store.useState((state) => isSelected2(state.value, value));
    props = useWrapElement(
      props,
      (element) => (0, import_jsx_runtime60.jsx)(SelectItemCheckedContext.Provider, { value: selected != null ? selected : false, children: element }),
      [selected]
    );
    const listElement = store.useState("listElement");
    const autoFocus = store.useState((state) => {
      if (value == null) return false;
      if (state.value == null) return false;
      if (state.activeId !== id && (store == null ? void 0 : store.item(state.activeId))) return false;
      if (Array.isArray(state.value)) {
        return state.value[state.value.length - 1] === value;
      }
      return state.value === value;
    });
    props = __spreadProps(__spreadValues({
      id,
      role: getPopupItemRole(listElement),
      "aria-selected": selected,
      children: value
    }, props), {
      autoFocus: (_a22 = props.autoFocus) != null ? _a22 : autoFocus,
      onClick
    });
    props = useCompositeItem(__spreadValues({
      store,
      getItem,
      preventScrollOnKeyDown
    }, props));
    const focusOnHoverProp = useBooleanEvent(focusOnHover);
    props = useCompositeHover(__spreadProps(__spreadValues({
      store
    }, props), {
      // We have to disable focusOnHover when the popup is closed, otherwise
      // the active item will change to null (the container) when the popup is
      // closed by clicking on an item.
      focusOnHover(event) {
        if (!focusOnHoverProp(event)) return false;
        const state = store == null ? void 0 : store.getState();
        return !!(state == null ? void 0 : state.open);
      }
    }));
    return props;
  }
);
var SelectItem = memo2(
  forwardRef2(function SelectItem2(props) {
    const htmlProps = useSelectItem(props);
    return createElement(TagName115, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/select/select-label.js
var TagName116 = "div";
var useSelectLabel = createHook(
  function useSelectLabel2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useSelectProviderContext();
    store = store || context;
    invariant(
      store,
      "SelectLabel must receive a `store` prop or be wrapped in a SelectProvider component."
    );
    const id = useId(props.id);
    const onClickProp = props.onClick;
    const onClick = useEvent((event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      queueMicrotask(() => {
        const select = store == null ? void 0 : store.getState().selectElement;
        select == null ? void 0 : select.focus();
      });
    });
    props = __spreadProps(__spreadValues({
      id
    }, props), {
      ref: useMergeRefs(store.setLabelElement, props.ref),
      onClick,
      style: __spreadValues({
        cursor: "default"
      }, props.style)
    });
    return removeUndefinedValues(props);
  }
);
var SelectLabel = memo2(
  forwardRef2(function SelectLabel2(props) {
    const htmlProps = useSelectLabel(props);
    return createElement(TagName116, htmlProps);
  })
);

// node_modules/@ariakit/react-core/esm/__chunks/XEUP4RXI.js
var import_react83 = __toESM(require_react(), 1);
var import_jsx_runtime61 = __toESM(require_jsx_runtime(), 1);
var TagName117 = "div";
var SelectListContext = (0, import_react83.createContext)(null);
var useSelectList = createHook(
  function useSelectList2(_a2) {
    var _b = _a2, {
      store,
      resetOnEscape = true,
      hideOnEnter = true,
      focusOnMove = true,
      composite,
      alwaysVisible
    } = _b, props = __objRest(_b, [
      "store",
      "resetOnEscape",
      "hideOnEnter",
      "focusOnMove",
      "composite",
      "alwaysVisible"
    ]);
    const context = useSelectContext();
    store = store || context;
    invariant(
      store,
      "SelectList must receive a `store` prop or be wrapped in a SelectProvider component."
    );
    const id = useId(props.id);
    const value = store.useState("value");
    const multiSelectable = Array.isArray(value);
    const [defaultValue2, setDefaultValue] = (0, import_react83.useState)(value);
    const mounted = store.useState("mounted");
    (0, import_react83.useEffect)(() => {
      if (mounted) return;
      setDefaultValue(value);
    }, [mounted, value]);
    resetOnEscape = resetOnEscape && !multiSelectable;
    const onKeyDownProp = props.onKeyDown;
    const resetOnEscapeProp = useBooleanEvent(resetOnEscape);
    const hideOnEnterProp = useBooleanEvent(hideOnEnter);
    const onKeyDown = useEvent((event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (event.defaultPrevented) return;
      if (event.key === "Escape" && resetOnEscapeProp(event)) {
        store == null ? void 0 : store.setValue(defaultValue2);
      }
      if (event.key === " " || event.key === "Enter") {
        if (isSelfTarget(event) && hideOnEnterProp(event)) {
          event.preventDefault();
          store == null ? void 0 : store.hide();
        }
      }
    });
    const headingContext = (0, import_react83.useContext)(SelectHeadingContext);
    const headingState = (0, import_react83.useState)();
    const [headingId, setHeadingId] = headingContext || headingState;
    const headingContextValue = (0, import_react83.useMemo)(
      () => [headingId, setHeadingId],
      [headingId]
    );
    const [childStore, setChildStore] = (0, import_react83.useState)(null);
    const setStore = (0, import_react83.useContext)(SelectListContext);
    (0, import_react83.useEffect)(() => {
      if (!setStore) return;
      setStore(store);
      return () => setStore(null);
    }, [setStore, store]);
    props = useWrapElement(
      props,
      (element2) => (0, import_jsx_runtime61.jsx)(SelectScopedContextProvider, { value: store, children: (0, import_jsx_runtime61.jsx)(SelectListContext.Provider, { value: setChildStore, children: (0, import_jsx_runtime61.jsx)(SelectHeadingContext.Provider, { value: headingContextValue, children: element2 }) }) }),
      [store, headingContextValue]
    );
    const hasCombobox = !!store.combobox;
    composite = composite != null ? composite : !hasCombobox && childStore !== store;
    const [element, setElement] = useTransactionState(
      composite ? store.setListElement : null
    );
    const role = useAttribute(element, "role", props.role);
    const isCompositeRole = role === "listbox" || role === "menu" || role === "tree" || role === "grid";
    const ariaMultiSelectable = composite || isCompositeRole ? multiSelectable || void 0 : void 0;
    const hidden = isHidden(mounted, props.hidden, alwaysVisible);
    const style2 = hidden ? __spreadProps(__spreadValues({}, props.style), { display: "none" }) : props.style;
    if (composite) {
      props = __spreadValues({
        role: "listbox",
        "aria-multiselectable": ariaMultiSelectable
      }, props);
    }
    const labelId = store.useState(
      (state) => {
        var _a22;
        return headingId || ((_a22 = state.labelElement) == null ? void 0 : _a22.id);
      }
    );
    props = __spreadProps(__spreadValues({
      id,
      "aria-labelledby": labelId,
      hidden
    }, props), {
      ref: useMergeRefs(setElement, props.ref),
      style: style2,
      onKeyDown
    });
    props = useComposite(__spreadProps(__spreadValues({ store }, props), { composite }));
    props = useCompositeTypeahead(__spreadValues({ store, typeahead: !hasCombobox }, props));
    return props;
  }
);
var SelectList = forwardRef2(function SelectList2(props) {
  const htmlProps = useSelectList(props);
  return createElement(TagName117, htmlProps);
});

// node_modules/@ariakit/react-core/esm/select/select-popover.js
var TagName118 = "div";
var useSelectPopover = createHook(
  function useSelectPopover2(_a2) {
    var _b = _a2, { store, alwaysVisible } = _b, props = __objRest(_b, ["store", "alwaysVisible"]);
    const context = useSelectProviderContext();
    store = store || context;
    props = useSelectList(__spreadValues({ store, alwaysVisible }, props));
    props = usePopover(__spreadValues({ store, alwaysVisible }, props));
    return props;
  }
);
var SelectPopover = createDialogComponent(
  forwardRef2(function SelectPopover2(props) {
    const htmlProps = useSelectPopover(props);
    return createElement(TagName118, htmlProps);
  }),
  useSelectProviderContext
);

// node_modules/@ariakit/react-core/esm/select/select-row.js
var TagName119 = "div";
var useSelectRow = createHook(
  function useSelectRow2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useSelectContext();
    store = store || context;
    invariant(
      store,
      "SelectRow must be wrapped in a SelectList or SelectPopover component"
    );
    const listElement = store.useState("listElement");
    const popupRole = getPopupRole(listElement);
    const role = popupRole === "grid" ? "row" : "presentation";
    props = __spreadValues({ role }, props);
    props = useCompositeRow(__spreadValues({ store }, props));
    return props;
  }
);
var SelectRow = forwardRef2(function SelectRow2(props) {
  const htmlProps = useSelectRow(props);
  return createElement(TagName119, htmlProps);
});

// node_modules/@ariakit/react-core/esm/select/select-separator.js
var TagName120 = "hr";
var useSelectSeparator = createHook(
  function useSelectSeparator2(_a2) {
    var _b = _a2, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useSelectContext();
    store = store || context;
    props = useCompositeSeparator(__spreadValues({ store }, props));
    return props;
  }
);
var SelectSeparator = forwardRef2(function SelectSeparator2(props) {
  const htmlProps = useSelectSeparator(props);
  return createElement(TagName120, htmlProps);
});

// node_modules/@vtex/shoreline/dist/index.mjs
var import_jsx_runtime69 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime70 = __toESM(require_jsx_runtime(), 1);
var import_react204 = __toESM(require_react(), 1);

// node_modules/@vtex/shoreline-utils/dist/esm/index.js
var import_deepmerge = __toESM(require_cjs());
var React4 = __toESM(require_react());
var React32 = __toESM(require_react());
var React22 = __toESM(require_react());
var import_react84 = __toESM(require_react());

// node_modules/scule/dist/index.mjs
var NUMBER_CHAR_RE = /\d/;
var STR_SPLITTERS = ["-", "_", "/", "."];
function isUppercase(char = "") {
  if (NUMBER_CHAR_RE.test(char)) {
    return void 0;
  }
  return char.toUpperCase() === char;
}
function splitByCase(str, separators) {
  const splitters = separators ?? STR_SPLITTERS;
  const parts = [];
  if (!str || typeof str !== "string") {
    return parts;
  }
  let buff = "";
  let previousUpper;
  let previousSplitter;
  for (const char of str) {
    const isSplitter = splitters.includes(char);
    if (isSplitter === true) {
      parts.push(buff);
      buff = "";
      previousUpper = void 0;
      continue;
    }
    const isUpper = isUppercase(char);
    if (previousSplitter === false) {
      if (previousUpper === false && isUpper === true) {
        parts.push(buff);
        buff = char;
        previousUpper = isUpper;
        continue;
      }
      if (previousUpper === true && isUpper === false && buff.length > 1) {
        const lastChar = buff.at(-1);
        parts.push(buff.slice(0, Math.max(0, buff.length - 1)));
        buff = lastChar + char;
        previousUpper = isUpper;
        continue;
      }
    }
    buff += char;
    previousUpper = isUpper;
    previousSplitter = isSplitter;
  }
  parts.push(buff);
  return parts;
}
function upperFirst(str) {
  return str ? str[0].toUpperCase() + str.slice(1) : "";
}
function lowerFirst(str) {
  return str ? str[0].toLowerCase() + str.slice(1) : "";
}
function pascalCase(str, opts) {
  return str ? (Array.isArray(str) ? str : splitByCase(str)).map((p2) => upperFirst((opts == null ? void 0 : opts.normalize) ? p2.toLowerCase() : p2)).join("") : "";
}
function camelCase(str, opts) {
  return lowerFirst(pascalCase(str || "", opts));
}
function kebabCase(str, joiner) {
  return str ? (Array.isArray(str) ? str : splitByCase(str)).map((p2) => p2.toLowerCase()).join(joiner ?? "-") : "";
}
function snakeCase(str) {
  return kebabCase(str || "", "_");
}

// node_modules/tiny-invariant/dist/esm/tiny-invariant.js
var isProduction = false;
var prefix = "Invariant failed";
function invariant2(condition, message) {
  if (condition) {
    return;
  }
  if (isProduction) {
    throw new Error(prefix);
  }
  var provided = typeof message === "function" ? message() : message;
  var value = provided ? "".concat(prefix, ": ").concat(provided) : prefix;
  throw new Error(value);
}

// node_modules/tiny-warning/dist/tiny-warning.esm.js
var isProduction2 = false;
function warning(condition, message) {
  if (!isProduction2) {
    if (condition) {
      return;
    }
    var text = "Warning: " + message;
    if (typeof console !== "undefined") {
      console.warn(text);
    }
    try {
      throw Error(text);
    } catch (x2) {
    }
  }
}
var tiny_warning_esm_default = warning;

// node_modules/@vtex/shoreline-utils/dist/esm/index.js
var import_react85 = __toESM(require_react());
var import_with_selector = __toESM(require_with_selector());
var __defProp3 = Object.defineProperty;
var __getOwnPropSymbols3 = Object.getOwnPropertySymbols;
var __hasOwnProp3 = Object.prototype.hasOwnProperty;
var __propIsEnum3 = Object.prototype.propertyIsEnumerable;
var __defNormalProp3 = (obj, key, value) => key in obj ? __defProp3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues3 = (a2, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp3.call(b2, prop))
      __defNormalProp3(a2, prop, b2[prop]);
  if (__getOwnPropSymbols3)
    for (var prop of __getOwnPropSymbols3(b2)) {
      if (__propIsEnum3.call(b2, prop))
        __defNormalProp3(a2, prop, b2[prop]);
    }
  return a2;
};
var constants = {
  tokenPrefix: "$",
  dsPrefix: "sl",
  comma: ",",
  whiteSpace: " ",
  emptyString: ""
};
function isFunction(value) {
  return typeof value === "function";
}
function isStringEmpty(value) {
  return isString(value) && value.trim() === constants.emptyString;
}
function isString(value) {
  return typeof value === "string";
}
function chain2(...fns) {
  return (...args) => {
    for (const fn of fns) {
      if (isFunction(fn)) {
        fn(...args);
      }
    }
  };
}
function isToken(token) {
  return isString(token) && token.startsWith(constants.tokenPrefix);
}
function cleanTokenString(token) {
  if (isToken(token)) {
    const sanitizedToken = String(token).trim();
    return sanitizedToken.substring(1);
  }
  return token;
}
function cssVar(props) {
  const { token, deepSearch = false, prefix: prefix2 = constants.dsPrefix } = props;
  if (!token || isStringEmpty(token)) {
    return constants.emptyString;
  }
  if (deepSearch) {
    return _deepParse(token, prefix2);
  }
  return tokenToVar(token, prefix2);
}
function tokenToVar(token, prefix2) {
  if (!isToken(token)) {
    return token;
  }
  const cleanedToken = cleanTokenString(token);
  if (cleanedToken.endsWith(constants.comma)) {
    return `var(--${prefix2}-${cleanedToken.slice(0, -1)}),`;
  }
  return `var(--${prefix2}-${cleanedToken})`;
}
function _deepParse(token, prefix2) {
  const tokenizedValues = token.trim().split(constants.whiteSpace).map((value) => {
    return tokenToVar(value, prefix2);
  });
  return tokenizedValues.join(constants.whiteSpace);
}
function cx2(...args) {
  const classNames = args.reduce((acc, argument) => {
    if (!argument) {
      return acc != null ? acc : constants.emptyString;
    }
    const trimmedArgument = argument.trim();
    const trimmedClassNames = `${acc}${constants.whiteSpace}${trimmedArgument}`.trim();
    return trimmedClassNames;
  }, constants.emptyString);
  return classNames != null ? classNames : constants.emptyString;
}
function isNativeHandler(propName) {
  return propName[0] === "o" && propName[1] === "n" && propName.charCodeAt(2) >= /* 'A' */
  65 && propName.charCodeAt(2) <= /* 'Z' */
  90;
}
function mergeProps2(...args) {
  const mergedProps = __spreadValues3({}, args[0]);
  for (let i = 1; i < args.length; i++) {
    const props = args[i];
    for (const prop in props) {
      const a2 = mergedProps[prop];
      const b2 = props[prop];
      if (isFunction(a2) && isFunction(b2) && isNativeHandler(prop)) {
        mergedProps[prop] = chain2(a2, b2);
      } else if (prop === "className" && isString(a2) && isString(b2)) {
        mergedProps[prop] = cx2(a2, b2);
      } else {
        mergedProps[prop] = b2 !== void 0 ? b2 : a2;
      }
    }
  }
  return mergedProps;
}
function mergeRefs(...refs) {
  if (refs.length === 1) {
    return refs[0];
  }
  return (value) => {
    for (const ref of refs) {
      if (typeof ref === "function") {
        ref(value);
      } else if (ref != null) {
        ref.current = value;
      }
    }
  };
}
function merge(...params) {
  return import_deepmerge.default.all([...params].filter((p2) => p2));
}
function flattenObject(object, joinString = "-", defaultString = "*") {
  const result = {};
  for (const i in object) {
    if (typeof object[i] === "object" && !Array.isArray(object[i])) {
      const temp = flattenObject(object[i], joinString, defaultString);
      for (const j in temp) {
        if (j === defaultString) {
          result[`${i}`] = temp[j];
        } else {
          result[`${i}${joinString}${j}`] = temp[j];
        }
      }
    } else {
      result[i] = object[i];
    }
  }
  return result;
}
function toVar(value, prefix2 = constants.dsPrefix) {
  return `--${prefix2}-${value}`;
}
function parseTokens(props) {
  const { tokens = {}, unprefixed = false, prefix: prefix2 = constants.dsPrefix } = props;
  const flatTokens = flattenObject(tokens);
  const tokenDict = {};
  for (const key in flatTokens) {
    const token = flatTokens[key];
    const resultKey = unprefixed ? key : toVar(key, prefix2);
    tokenDict[resultKey] = cssVar({ token, deepSearch: true, prefix: prefix2 });
  }
  return tokenDict;
}
function forwardRef22(render) {
  return React4.forwardRef(render);
}
var canUseDOM2 = checkIsBrowser2();
function checkIsBrowser2() {
  var _a2;
  return typeof window !== "undefined" && !!((_a2 = window.document) == null ? void 0 : _a2.createElement);
}
var useSafeLayoutEffect2 = canUseDOM2 ? React22.useLayoutEffect : React22.useEffect;
var _React2 = __spreadValues3({}, React32);
var useReactId2 = _React2.useId;
function useId2(defaultId) {
  if (useReactId2) {
    const reactId = useReactId2();
    if (defaultId) return defaultId;
    return reactId;
  }
  const [id, setId] = React32.useState(defaultId);
  useSafeLayoutEffect2(() => {
    if (defaultId || id) return;
    const random = Math.random().toString(36).substr(2, 6);
    setId(`id-${random}`);
  }, [defaultId, id]);
  return defaultId || String(id);
}
function setRef2(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}
function useMergeRef(...refs) {
  return (0, import_react84.useMemo)(() => {
    if (!refs.some(Boolean)) return;
    return (value) => {
      refs.forEach((ref) => {
        setRef2(ref, value);
      });
    };
  }, refs);
}
function hasSomeTextSelected() {
  var _a2, _b;
  if (!canUseDOM2) return false;
  return !!((_b = (_a2 = window == null ? void 0 : window.getSelection) == null ? void 0 : _a2.call(window)) == null ? void 0 : _b.toString());
}
function useControlledState(value, defaultValue2, onChange) {
  const [stateValue, setStateValue] = (0, import_react85.useState)(value || defaultValue2);
  const isControlledRef = (0, import_react85.useRef)(value !== void 0);
  const isControlled = value !== void 0;
  (0, import_react85.useEffect)(() => {
    const wasControlled = isControlledRef.current;
    if (wasControlled !== isControlled) {
      console.warn(
        `WARN: A component changed from ${wasControlled ? "controlled" : "uncontrolled"} to ${isControlled ? "controlled" : "uncontrolled"}.`
      );
    }
    isControlledRef.current = isControlled;
  }, [isControlled]);
  let currentValue = isControlled ? value : stateValue;
  const setValue = (0, import_react85.useCallback)(
    (value2, ...args) => {
      const onChangeCaller = (value3, ...onChangeArgs) => {
        if (onChange) {
          if (!Object.is(currentValue, value3)) {
            onChange(value3, ...onChangeArgs);
          }
        }
        if (!isControlled) {
          currentValue = value3;
        }
      };
      if (typeof value2 === "function") {
        console.warn(
          "We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320"
        );
        const updateFunction = (oldValue, ...functionArgs) => {
          const interceptedValue = value2(
            isControlled ? currentValue : oldValue,
            ...functionArgs
          );
          onChangeCaller(interceptedValue, ...args);
          if (!isControlled) {
            return interceptedValue;
          }
          return oldValue;
        };
        setStateValue(updateFunction);
      } else {
        if (!isControlled) {
          setStateValue(value2);
        }
        onChangeCaller(value2, ...args);
      }
    },
    [isControlled, currentValue, onChange]
  );
  return [currentValue, setValue];
}
function style(cssProps) {
  const result = {};
  for (const prop in cssProps) {
    const value = cssProps[prop];
    const variable = typeof value === "string" ? cssVar({ token: String(value), deepSearch: true }) : value;
    result[prop] = variable;
  }
  return result;
}
function shallowCompare(objA, objB) {
  if (Object.is(objA, objB)) {
    return true;
  }
  if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
    return false;
  }
  const keysA = Object.keys(objA);
  if (keysA.length !== Object.keys(objB).length) {
    return false;
  }
  for (let i = 0; i < keysA.length; i++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }
  return true;
}
var Store = class {
  constructor(initialState, options) {
    this.listeners = /* @__PURE__ */ new Set();
    this._batching = false;
    this._flushing = 0;
    this.subscribe = (listener) => {
      var _a2, _b;
      this.listeners.add(listener);
      const unsub = (_b = (_a2 = this._options) == null ? void 0 : _a2.onSubscribe) == null ? void 0 : _b.call(_a2, listener, this);
      return () => {
        this.listeners.delete(listener);
        unsub == null ? void 0 : unsub();
      };
    };
    this.setState = (updater) => {
      var _a2, _b, _c;
      const previous = this._state;
      this._state = ((_a2 = this._options) == null ? void 0 : _a2.updateFn) ? this._options.updateFn(previous)(updater) : updater(previous);
      (_c = (_b = this._options) == null ? void 0 : _b.onUpdate) == null ? void 0 : _c.call(_b);
      this._flush();
    };
    this._flush = () => {
      if (this._batching) return;
      const flushId = ++this._flushing;
      this.listeners.forEach((listener) => {
        if (this._flushing !== flushId) return;
        listener();
      });
    };
    this.batch = (cb) => {
      if (this._batching) return cb();
      this._batching = true;
      cb();
      this._batching = false;
      this._flush();
    };
    this._state = initialState;
    this._options = options;
  }
  get state() {
    return this._state;
  }
};
function useStore2(store, selector2 = (d) => d) {
  const slice = (0, import_with_selector.useSyncExternalStoreWithSelector)(
    store.subscribe,
    () => store.state,
    () => store.state,
    selector2,
    shallowCompare
  );
  return slice;
}

// node_modules/@vtex/shoreline/dist/index.mjs
var import_react205 = __toESM(require_react(), 1);
var import_react206 = __toESM(require_react(), 1);
var import_react207 = __toESM(require_react(), 1);
var import_jsx_runtime71 = __toESM(require_jsx_runtime(), 1);
var import_react208 = __toESM(require_react(), 1);
var import_jsx_runtime72 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime73 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime74 = __toESM(require_jsx_runtime(), 1);
var import_react209 = __toESM(require_react(), 1);
var import_jsx_runtime75 = __toESM(require_jsx_runtime(), 1);
var import_react210 = __toESM(require_react(), 1);
var import_jsx_runtime76 = __toESM(require_jsx_runtime(), 1);
var import_react213 = __toESM(require_react(), 1);
var import_jsx_runtime77 = __toESM(require_jsx_runtime(), 1);
var import_react215 = __toESM(require_react(), 1);
var import_jsx_runtime78 = __toESM(require_jsx_runtime(), 1);
var import_react217 = __toESM(require_react(), 1);
var import_jsx_runtime79 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime80 = __toESM(require_jsx_runtime(), 1);
var import_react219 = __toESM(require_react(), 1);
var import_react220 = __toESM(require_react(), 1);

// node_modules/@react-aria/i18n/dist/utils.mjs
var $148a7a147e38ea7f$var$RTL_SCRIPTS = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
var $148a7a147e38ea7f$var$RTL_LANGS = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd764(localeString) {
  if (Intl.Locale) {
    let locale = new Intl.Locale(localeString).maximize();
    let textInfo = typeof locale.getTextInfo === "function" ? locale.getTextInfo() : locale.textInfo;
    if (textInfo) return textInfo.direction === "rtl";
    if (locale.script) return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(locale.script);
  }
  let lang = localeString.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);
}

// node_modules/@react-aria/i18n/dist/useDefaultLocale.mjs
var import_react87 = __toESM(require_react(), 1);

// node_modules/@react-aria/ssr/dist/SSRProvider.mjs
var import_react86 = __toESM(require_react(), 1);
var $b5e257d569688ac6$var$defaultContext = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0
};
var $b5e257d569688ac6$var$SSRContext = (0, import_react86.default).createContext($b5e257d569688ac6$var$defaultContext);
var $b5e257d569688ac6$var$IsSSRContext = (0, import_react86.default).createContext(false);
var $b5e257d569688ac6$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $b5e257d569688ac6$var$componentIds = /* @__PURE__ */ new WeakMap();
function $b5e257d569688ac6$var$useCounter(isDisabled = false) {
  let ctx16 = (0, import_react86.useContext)($b5e257d569688ac6$var$SSRContext);
  let ref = (0, import_react86.useRef)(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, import_react86.default).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $b5e257d569688ac6$var$componentIds.get(currentOwner);
      if (prevComponentValue == null)
        $b5e257d569688ac6$var$componentIds.set(currentOwner, {
          id: ctx16.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx16.current = prevComponentValue.id;
        $b5e257d569688ac6$var$componentIds.delete(currentOwner);
      }
    }
    ref.current = ++ctx16.current;
  }
  return ref.current;
}
function $b5e257d569688ac6$var$useLegacySSRSafeId(defaultId) {
  let ctx16 = (0, import_react86.useContext)($b5e257d569688ac6$var$SSRContext);
  if (ctx16 === $b5e257d569688ac6$var$defaultContext && !$b5e257d569688ac6$var$canUseDOM && true) console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $b5e257d569688ac6$var$useCounter(!!defaultId);
  let prefix2 = ctx16 === $b5e257d569688ac6$var$defaultContext && false ? "react-aria" : `react-aria${ctx16.prefix}`;
  return defaultId || `${prefix2}-${counter}`;
}
function $b5e257d569688ac6$var$useModernSSRSafeId(defaultId) {
  let id = (0, import_react86.default).useId();
  let [didSSR] = (0, import_react86.useState)($b5e257d569688ac6$export$535bd6ca7f90a273());
  let prefix2 = didSSR || false ? "react-aria" : `react-aria${$b5e257d569688ac6$var$defaultContext.prefix}`;
  return defaultId || `${prefix2}-${id}`;
}
var $b5e257d569688ac6$export$619500959fc48b26 = typeof (0, import_react86.default)["useId"] === "function" ? $b5e257d569688ac6$var$useModernSSRSafeId : $b5e257d569688ac6$var$useLegacySSRSafeId;
function $b5e257d569688ac6$var$getSnapshot() {
  return false;
}
function $b5e257d569688ac6$var$getServerSnapshot() {
  return true;
}
function $b5e257d569688ac6$var$subscribe(onStoreChange) {
  return () => {
  };
}
function $b5e257d569688ac6$export$535bd6ca7f90a273() {
  if (typeof (0, import_react86.default)["useSyncExternalStore"] === "function") return (0, import_react86.default)["useSyncExternalStore"]($b5e257d569688ac6$var$subscribe, $b5e257d569688ac6$var$getSnapshot, $b5e257d569688ac6$var$getServerSnapshot);
  return (0, import_react86.useContext)($b5e257d569688ac6$var$IsSSRContext);
}

// node_modules/@react-aria/i18n/dist/useDefaultLocale.mjs
var $1e5a04cdaf7d1af8$var$localeSymbol = Symbol.for("react-aria.i18n.locale");
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {
  let locale = typeof window !== "undefined" && window[$1e5a04cdaf7d1af8$var$localeSymbol] || typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      locale
    ]);
  } catch (_err) {
    locale = "en-US";
  }
  return {
    locale,
    direction: (0, $148a7a147e38ea7f$export$702d680b21cbd764)(locale) ? "rtl" : "ltr"
  };
}
var $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
var $1e5a04cdaf7d1af8$var$listeners = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale() {
  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners) listener($1e5a04cdaf7d1af8$var$currentLocale);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let [defaultLocale, setDefaultLocale] = (0, import_react87.useState)($1e5a04cdaf7d1af8$var$currentLocale);
  (0, import_react87.useEffect)(() => {
    if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    };
  }, []);
  if (isSSR) return {
    locale: "en-US",
    direction: "ltr"
  };
  return defaultLocale;
}

// node_modules/@react-aria/i18n/dist/context.mjs
var import_react88 = __toESM(require_react(), 1);
var $18f2051aff69b9bf$var$I18nContext = (0, import_react88.default).createContext(null);
function $18f2051aff69b9bf$export$a54013f0d02a8f82(props) {
  let { locale, children: children3 } = props;
  let defaultLocale = (0, $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a)();
  let value = (0, import_react88.default).useMemo(() => {
    if (!locale) return defaultLocale;
    return {
      locale,
      direction: (0, $148a7a147e38ea7f$export$702d680b21cbd764)(locale) ? "rtl" : "ltr"
    };
  }, [
    defaultLocale,
    locale
  ]);
  return (0, import_react88.default).createElement($18f2051aff69b9bf$var$I18nContext.Provider, {
    value
  }, children3);
}
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {
  let defaultLocale = (0, $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a)();
  let context = (0, import_react88.useContext)($18f2051aff69b9bf$var$I18nContext);
  return context || defaultLocale;
}

// node_modules/tslib/tslib.es6.mjs
var extendStatics = function(d, b2) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {
    d2.__proto__ = b3;
  } || function(d2, b3) {
    for (var p2 in b3) if (Object.prototype.hasOwnProperty.call(b3, p2)) d2[p2] = b3[p2];
  };
  return extendStatics(d, b2);
};
function __extends(d, b2) {
  if (typeof b2 !== "function" && b2 !== null)
    throw new TypeError("Class extends value " + String(b2) + " is not a constructor or null");
  extendStatics(d, b2);
  function __() {
    this.constructor = d;
  }
  d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s) if (Object.prototype.hasOwnProperty.call(s, p2)) t[p2] = s[p2];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function __rest(s, e) {
  var t = {};
  for (var p2 in s) if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
    t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l2 = from.length, ar; i < l2; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}

// node_modules/@formatjs/fast-memoize/lib/index.js
function memoize(fn, options) {
  var cache2 = options && options.cache ? options.cache : cacheDefault;
  var serializer = options && options.serializer ? options.serializer : serializerDefault;
  var strategy = options && options.strategy ? options.strategy : strategyDefault;
  return strategy(fn, {
    cache: cache2,
    serializer
  });
}
function isPrimitive(value) {
  return value == null || typeof value === "number" || typeof value === "boolean";
}
function monadic(fn, cache2, serializer, arg) {
  var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
  var computedValue = cache2.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.call(this, arg);
    cache2.set(cacheKey, computedValue);
  }
  return computedValue;
}
function variadic(fn, cache2, serializer) {
  var args = Array.prototype.slice.call(arguments, 3);
  var cacheKey = serializer(args);
  var computedValue = cache2.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.apply(this, args);
    cache2.set(cacheKey, computedValue);
  }
  return computedValue;
}
function assemble(fn, context, strategy, cache2, serialize) {
  return strategy.bind(context, fn, cache2, serialize);
}
function strategyDefault(fn, options) {
  var strategy = fn.length === 1 ? monadic : variadic;
  return assemble(fn, this, strategy, options.cache.create(), options.serializer);
}
function strategyVariadic(fn, options) {
  return assemble(fn, this, variadic, options.cache.create(), options.serializer);
}
function strategyMonadic(fn, options) {
  return assemble(fn, this, monadic, options.cache.create(), options.serializer);
}
var serializerDefault = function() {
  return JSON.stringify(arguments);
};
var ObjectWithoutPrototypeCache = (
  /** @class */
  function() {
    function ObjectWithoutPrototypeCache2() {
      this.cache = /* @__PURE__ */ Object.create(null);
    }
    ObjectWithoutPrototypeCache2.prototype.get = function(key) {
      return this.cache[key];
    };
    ObjectWithoutPrototypeCache2.prototype.set = function(key, value) {
      this.cache[key] = value;
    };
    return ObjectWithoutPrototypeCache2;
  }()
);
var cacheDefault = {
  create: function create() {
    return new ObjectWithoutPrototypeCache();
  }
};
var strategies = {
  variadic: strategyVariadic,
  monadic: strategyMonadic
};

// node_modules/@formatjs/icu-messageformat-parser/lib/error.js
var ErrorKind;
(function(ErrorKind2) {
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
  ErrorKind2[ErrorKind2["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
  ErrorKind2[ErrorKind2["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
  ErrorKind2[ErrorKind2["INVALID_TAG"] = 23] = "INVALID_TAG";
  ErrorKind2[ErrorKind2["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
  ErrorKind2[ErrorKind2["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
  ErrorKind2[ErrorKind2["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
})(ErrorKind || (ErrorKind = {}));

// node_modules/@formatjs/icu-messageformat-parser/lib/types.js
var TYPE;
(function(TYPE2) {
  TYPE2[TYPE2["literal"] = 0] = "literal";
  TYPE2[TYPE2["argument"] = 1] = "argument";
  TYPE2[TYPE2["number"] = 2] = "number";
  TYPE2[TYPE2["date"] = 3] = "date";
  TYPE2[TYPE2["time"] = 4] = "time";
  TYPE2[TYPE2["select"] = 5] = "select";
  TYPE2[TYPE2["plural"] = 6] = "plural";
  TYPE2[TYPE2["pound"] = 7] = "pound";
  TYPE2[TYPE2["tag"] = 8] = "tag";
})(TYPE || (TYPE = {}));
var SKELETON_TYPE;
(function(SKELETON_TYPE2) {
  SKELETON_TYPE2[SKELETON_TYPE2["number"] = 0] = "number";
  SKELETON_TYPE2[SKELETON_TYPE2["dateTime"] = 1] = "dateTime";
})(SKELETON_TYPE || (SKELETON_TYPE = {}));
function isLiteralElement(el) {
  return el.type === TYPE.literal;
}
function isArgumentElement(el) {
  return el.type === TYPE.argument;
}
function isNumberElement(el) {
  return el.type === TYPE.number;
}
function isDateElement(el) {
  return el.type === TYPE.date;
}
function isTimeElement(el) {
  return el.type === TYPE.time;
}
function isSelectElement(el) {
  return el.type === TYPE.select;
}
function isPluralElement(el) {
  return el.type === TYPE.plural;
}
function isPoundElement(el) {
  return el.type === TYPE.pound;
}
function isTagElement(el) {
  return el.type === TYPE.tag;
}
function isNumberSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.number);
}
function isDateTimeSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.dateTime);
}

// node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js
var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;

// node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js
var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
function parseDateTimeSkeleton(skeleton) {
  var result = {};
  skeleton.replace(DATE_TIME_REGEX, function(match) {
    var len = match.length;
    switch (match[0]) {
      case "G":
        result.era = len === 4 ? "long" : len === 5 ? "narrow" : "short";
        break;
      case "y":
        result.year = len === 2 ? "2-digit" : "numeric";
        break;
      case "Y":
      case "u":
      case "U":
      case "r":
        throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");
      case "q":
      case "Q":
        throw new RangeError("`q/Q` (quarter) patterns are not supported");
      case "M":
      case "L":
        result.month = ["numeric", "2-digit", "short", "long", "narrow"][len - 1];
        break;
      case "w":
      case "W":
        throw new RangeError("`w/W` (week) patterns are not supported");
      case "d":
        result.day = ["numeric", "2-digit"][len - 1];
        break;
      case "D":
      case "F":
      case "g":
        throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");
      case "E":
        result.weekday = len === 4 ? "long" : len === 5 ? "narrow" : "short";
        break;
      case "e":
        if (len < 4) {
          throw new RangeError("`e..eee` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "c":
        if (len < 4) {
          throw new RangeError("`c..ccc` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "a":
        result.hour12 = true;
        break;
      case "b":
      case "B":
        throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");
      case "h":
        result.hourCycle = "h12";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "H":
        result.hourCycle = "h23";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "K":
        result.hourCycle = "h11";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "k":
        result.hourCycle = "h24";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "j":
      case "J":
      case "C":
        throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
      case "m":
        result.minute = ["numeric", "2-digit"][len - 1];
        break;
      case "s":
        result.second = ["numeric", "2-digit"][len - 1];
        break;
      case "S":
      case "A":
        throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");
      case "z":
        result.timeZoneName = len < 4 ? "short" : "long";
        break;
      case "Z":
      case "O":
      case "v":
      case "V":
      case "X":
      case "x":
        throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead");
    }
    return "";
  });
  return result;
}

// node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;

// node_modules/@formatjs/icu-skeleton-parser/lib/number.js
function parseNumberSkeletonFromString(skeleton) {
  if (skeleton.length === 0) {
    throw new Error("Number skeleton cannot be empty");
  }
  var stringTokens = skeleton.split(WHITE_SPACE_REGEX).filter(function(x2) {
    return x2.length > 0;
  });
  var tokens = [];
  for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
    var stringToken = stringTokens_1[_i];
    var stemAndOptions = stringToken.split("/");
    if (stemAndOptions.length === 0) {
      throw new Error("Invalid number skeleton");
    }
    var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
    for (var _a2 = 0, options_1 = options; _a2 < options_1.length; _a2++) {
      var option = options_1[_a2];
      if (option.length === 0) {
        throw new Error("Invalid number skeleton");
      }
    }
    tokens.push({ stem, options });
  }
  return tokens;
}
function icuUnitToEcma(unit) {
  return unit.replace(/^(.*?)-/, "");
}
var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
function parseSignificantPrecision(str) {
  var result = {};
  if (str[str.length - 1] === "r") {
    result.roundingPriority = "morePrecision";
  } else if (str[str.length - 1] === "s") {
    result.roundingPriority = "lessPrecision";
  }
  str.replace(SIGNIFICANT_PRECISION_REGEX, function(_, g1, g2) {
    if (typeof g2 !== "string") {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length;
    } else if (g2 === "+") {
      result.minimumSignificantDigits = g1.length;
    } else if (g1[0] === "#") {
      result.maximumSignificantDigits = g1.length;
    } else {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length + (typeof g2 === "string" ? g2.length : 0);
    }
    return "";
  });
  return result;
}
function parseSign(str) {
  switch (str) {
    case "sign-auto":
      return {
        signDisplay: "auto"
      };
    case "sign-accounting":
    case "()":
      return {
        currencySign: "accounting"
      };
    case "sign-always":
    case "+!":
      return {
        signDisplay: "always"
      };
    case "sign-accounting-always":
    case "()!":
      return {
        signDisplay: "always",
        currencySign: "accounting"
      };
    case "sign-except-zero":
    case "+?":
      return {
        signDisplay: "exceptZero"
      };
    case "sign-accounting-except-zero":
    case "()?":
      return {
        signDisplay: "exceptZero",
        currencySign: "accounting"
      };
    case "sign-never":
    case "+_":
      return {
        signDisplay: "never"
      };
  }
}
function parseConciseScientificAndEngineeringStem(stem) {
  var result;
  if (stem[0] === "E" && stem[1] === "E") {
    result = {
      notation: "engineering"
    };
    stem = stem.slice(2);
  } else if (stem[0] === "E") {
    result = {
      notation: "scientific"
    };
    stem = stem.slice(1);
  }
  if (result) {
    var signDisplay = stem.slice(0, 2);
    if (signDisplay === "+!") {
      result.signDisplay = "always";
      stem = stem.slice(2);
    } else if (signDisplay === "+?") {
      result.signDisplay = "exceptZero";
      stem = stem.slice(2);
    }
    if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
      throw new Error("Malformed concise eng/scientific notation");
    }
    result.minimumIntegerDigits = stem.length;
  }
  return result;
}
function parseNotationOptions(opt) {
  var result = {};
  var signOpts = parseSign(opt);
  if (signOpts) {
    return signOpts;
  }
  return result;
}
function parseNumberSkeleton(tokens) {
  var result = {};
  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
    var token = tokens_1[_i];
    switch (token.stem) {
      case "percent":
      case "%":
        result.style = "percent";
        continue;
      case "%x100":
        result.style = "percent";
        result.scale = 100;
        continue;
      case "currency":
        result.style = "currency";
        result.currency = token.options[0];
        continue;
      case "group-off":
      case ",_":
        result.useGrouping = false;
        continue;
      case "precision-integer":
      case ".":
        result.maximumFractionDigits = 0;
        continue;
      case "measure-unit":
      case "unit":
        result.style = "unit";
        result.unit = icuUnitToEcma(token.options[0]);
        continue;
      case "compact-short":
      case "K":
        result.notation = "compact";
        result.compactDisplay = "short";
        continue;
      case "compact-long":
      case "KK":
        result.notation = "compact";
        result.compactDisplay = "long";
        continue;
      case "scientific":
        result = __assign(__assign(__assign({}, result), { notation: "scientific" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "engineering":
        result = __assign(__assign(__assign({}, result), { notation: "engineering" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "notation-simple":
        result.notation = "standard";
        continue;
      case "unit-width-narrow":
        result.currencyDisplay = "narrowSymbol";
        result.unitDisplay = "narrow";
        continue;
      case "unit-width-short":
        result.currencyDisplay = "code";
        result.unitDisplay = "short";
        continue;
      case "unit-width-full-name":
        result.currencyDisplay = "name";
        result.unitDisplay = "long";
        continue;
      case "unit-width-iso-code":
        result.currencyDisplay = "symbol";
        continue;
      case "scale":
        result.scale = parseFloat(token.options[0]);
        continue;
      case "rounding-mode-floor":
        result.roundingMode = "floor";
        continue;
      case "rounding-mode-ceiling":
        result.roundingMode = "ceil";
        continue;
      case "rounding-mode-down":
        result.roundingMode = "trunc";
        continue;
      case "rounding-mode-up":
        result.roundingMode = "expand";
        continue;
      case "rounding-mode-half-even":
        result.roundingMode = "halfEven";
        continue;
      case "rounding-mode-half-down":
        result.roundingMode = "halfTrunc";
        continue;
      case "rounding-mode-half-up":
        result.roundingMode = "halfExpand";
        continue;
      case "integer-width":
        if (token.options.length > 1) {
          throw new RangeError("integer-width stems only accept a single optional option");
        }
        token.options[0].replace(INTEGER_WIDTH_REGEX, function(_, g1, g2, g3, g4, g5) {
          if (g1) {
            result.minimumIntegerDigits = g2.length;
          } else if (g3 && g4) {
            throw new Error("We currently do not support maximum integer digits");
          } else if (g5) {
            throw new Error("We currently do not support exact integer digits");
          }
          return "";
        });
        continue;
    }
    if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
      result.minimumIntegerDigits = token.stem.length;
      continue;
    }
    if (FRACTION_PRECISION_REGEX.test(token.stem)) {
      if (token.options.length > 1) {
        throw new RangeError("Fraction-precision stems only accept a single optional option");
      }
      token.stem.replace(FRACTION_PRECISION_REGEX, function(_, g1, g2, g3, g4, g5) {
        if (g2 === "*") {
          result.minimumFractionDigits = g1.length;
        } else if (g3 && g3[0] === "#") {
          result.maximumFractionDigits = g3.length;
        } else if (g4 && g5) {
          result.minimumFractionDigits = g4.length;
          result.maximumFractionDigits = g4.length + g5.length;
        } else {
          result.minimumFractionDigits = g1.length;
          result.maximumFractionDigits = g1.length;
        }
        return "";
      });
      var opt = token.options[0];
      if (opt === "w") {
        result = __assign(__assign({}, result), { trailingZeroDisplay: "stripIfInteger" });
      } else if (opt) {
        result = __assign(__assign({}, result), parseSignificantPrecision(opt));
      }
      continue;
    }
    if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
      result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));
      continue;
    }
    var signOpts = parseSign(token.stem);
    if (signOpts) {
      result = __assign(__assign({}, result), signOpts);
    }
    var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
    if (conciseScientificAndEngineeringOpts) {
      result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);
    }
  }
  return result;
}

// node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js
var timeData = {
  "001": [
    "H",
    "h"
  ],
  "419": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "AC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AD": [
    "H",
    "hB"
  ],
  "AE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "AF": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "AG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AL": [
    "h",
    "H",
    "hB"
  ],
  "AM": [
    "H",
    "hB"
  ],
  "AO": [
    "H",
    "hB"
  ],
  "AR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "AS": [
    "h",
    "H"
  ],
  "AT": [
    "H",
    "hB"
  ],
  "AU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AW": [
    "H",
    "hB"
  ],
  "AX": [
    "H"
  ],
  "AZ": [
    "H",
    "hB",
    "h"
  ],
  "BA": [
    "H",
    "hB",
    "h"
  ],
  "BB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BD": [
    "h",
    "hB",
    "H"
  ],
  "BE": [
    "H",
    "hB"
  ],
  "BF": [
    "H",
    "hB"
  ],
  "BG": [
    "H",
    "hB",
    "h"
  ],
  "BH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "BI": [
    "H",
    "h"
  ],
  "BJ": [
    "H",
    "hB"
  ],
  "BL": [
    "H",
    "hB"
  ],
  "BM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BN": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "BO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "BQ": [
    "H"
  ],
  "BR": [
    "H",
    "hB"
  ],
  "BS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BT": [
    "h",
    "H"
  ],
  "BW": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "BY": [
    "H",
    "h"
  ],
  "BZ": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CA": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "CC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CD": [
    "hB",
    "H"
  ],
  "CF": [
    "H",
    "h",
    "hB"
  ],
  "CG": [
    "H",
    "hB"
  ],
  "CH": [
    "H",
    "hB",
    "h"
  ],
  "CI": [
    "H",
    "hB"
  ],
  "CK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CL": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CM": [
    "H",
    "h",
    "hB"
  ],
  "CN": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "CO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CP": [
    "H"
  ],
  "CR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CU": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CV": [
    "H",
    "hB"
  ],
  "CW": [
    "H",
    "hB"
  ],
  "CX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CY": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "CZ": [
    "H"
  ],
  "DE": [
    "H",
    "hB"
  ],
  "DG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "DJ": [
    "h",
    "H"
  ],
  "DK": [
    "H"
  ],
  "DM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "DO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "DZ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "EC": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "EE": [
    "H",
    "hB"
  ],
  "EG": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ER": [
    "h",
    "H"
  ],
  "ES": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "ET": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "FI": [
    "H"
  ],
  "FJ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "FM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FO": [
    "H",
    "h"
  ],
  "FR": [
    "H",
    "hB"
  ],
  "GA": [
    "H",
    "hB"
  ],
  "GB": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GD": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GE": [
    "H",
    "hB",
    "h"
  ],
  "GF": [
    "H",
    "hB"
  ],
  "GG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GH": [
    "h",
    "H"
  ],
  "GI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GL": [
    "H",
    "h"
  ],
  "GM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GN": [
    "H",
    "hB"
  ],
  "GP": [
    "H",
    "hB"
  ],
  "GQ": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "GR": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "GT": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "GU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GW": [
    "H",
    "hB"
  ],
  "GY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "HK": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "HN": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "HR": [
    "H",
    "hB"
  ],
  "HU": [
    "H",
    "h"
  ],
  "IC": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "ID": [
    "H"
  ],
  "IE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IL": [
    "H",
    "hB"
  ],
  "IM": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IN": [
    "h",
    "H"
  ],
  "IO": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IQ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "IR": [
    "hB",
    "H"
  ],
  "IS": [
    "H"
  ],
  "IT": [
    "H",
    "hB"
  ],
  "JE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "JM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "JO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "JP": [
    "H",
    "K",
    "h"
  ],
  "KE": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "KG": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KH": [
    "hB",
    "h",
    "H",
    "hb"
  ],
  "KI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KM": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KN": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KP": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KW": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "KY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KZ": [
    "H",
    "hB"
  ],
  "LA": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "LB": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "LC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LI": [
    "H",
    "hB",
    "h"
  ],
  "LK": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "LR": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LS": [
    "h",
    "H"
  ],
  "LT": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "LU": [
    "H",
    "h",
    "hB"
  ],
  "LV": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "LY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "MC": [
    "H",
    "hB"
  ],
  "MD": [
    "H",
    "hB"
  ],
  "ME": [
    "H",
    "hB",
    "h"
  ],
  "MF": [
    "H",
    "hB"
  ],
  "MG": [
    "H",
    "h"
  ],
  "MH": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ML": [
    "H"
  ],
  "MM": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "MN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MP": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MQ": [
    "H",
    "hB"
  ],
  "MR": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MS": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MT": [
    "H",
    "h"
  ],
  "MU": [
    "H",
    "h"
  ],
  "MV": [
    "H",
    "h"
  ],
  "MW": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MX": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "MY": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "MZ": [
    "H",
    "hB"
  ],
  "NA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "NC": [
    "H",
    "hB"
  ],
  "NE": [
    "H"
  ],
  "NF": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NI": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "NL": [
    "H",
    "hB"
  ],
  "NO": [
    "H",
    "h"
  ],
  "NP": [
    "H",
    "h",
    "hB"
  ],
  "NR": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NU": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "OM": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PE": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PF": [
    "H",
    "h",
    "hB"
  ],
  "PG": [
    "h",
    "H"
  ],
  "PH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PK": [
    "h",
    "hB",
    "H"
  ],
  "PL": [
    "H",
    "h"
  ],
  "PM": [
    "H",
    "hB"
  ],
  "PN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "PR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PS": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PT": [
    "H",
    "hB"
  ],
  "PW": [
    "h",
    "H"
  ],
  "PY": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "QA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "RE": [
    "H",
    "hB"
  ],
  "RO": [
    "H",
    "hB"
  ],
  "RS": [
    "H",
    "hB",
    "h"
  ],
  "RU": [
    "H"
  ],
  "RW": [
    "H",
    "h"
  ],
  "SA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SC": [
    "H",
    "h",
    "hB"
  ],
  "SD": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SE": [
    "H"
  ],
  "SG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SH": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SI": [
    "H",
    "hB"
  ],
  "SJ": [
    "H"
  ],
  "SK": [
    "H"
  ],
  "SL": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SM": [
    "H",
    "h",
    "hB"
  ],
  "SN": [
    "H",
    "h",
    "hB"
  ],
  "SO": [
    "h",
    "H"
  ],
  "SR": [
    "H",
    "hB"
  ],
  "SS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "ST": [
    "H",
    "hB"
  ],
  "SV": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "SX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "TC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TD": [
    "h",
    "H",
    "hB"
  ],
  "TF": [
    "H",
    "h",
    "hB"
  ],
  "TG": [
    "H",
    "hB"
  ],
  "TH": [
    "H",
    "h"
  ],
  "TJ": [
    "H",
    "h"
  ],
  "TL": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "TM": [
    "H",
    "h"
  ],
  "TN": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "TO": [
    "h",
    "H"
  ],
  "TR": [
    "H",
    "hB"
  ],
  "TT": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TW": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "TZ": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UA": [
    "H",
    "hB",
    "h"
  ],
  "UG": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "US": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "UY": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "UZ": [
    "H",
    "hB",
    "h"
  ],
  "VA": [
    "H",
    "h",
    "hB"
  ],
  "VC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VE": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "VG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VN": [
    "H",
    "h"
  ],
  "VU": [
    "h",
    "H"
  ],
  "WF": [
    "H",
    "hB"
  ],
  "WS": [
    "h",
    "H"
  ],
  "XK": [
    "H",
    "hB",
    "h"
  ],
  "YE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "YT": [
    "H",
    "hB"
  ],
  "ZA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ZM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "ZW": [
    "H",
    "h"
  ],
  "af-ZA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "ar-001": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ca-ES": [
    "H",
    "h",
    "hB"
  ],
  "en-001": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "en-HK": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "en-IL": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "en-MY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "es-BR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-ES": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-GQ": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "fr-CA": [
    "H",
    "h",
    "hB"
  ],
  "gl-ES": [
    "H",
    "h",
    "hB"
  ],
  "gu-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "hi-IN": [
    "hB",
    "h",
    "H"
  ],
  "it-CH": [
    "H",
    "h",
    "hB"
  ],
  "it-IT": [
    "H",
    "h",
    "hB"
  ],
  "kn-IN": [
    "hB",
    "h",
    "H"
  ],
  "ml-IN": [
    "hB",
    "h",
    "H"
  ],
  "mr-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "pa-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "ta-IN": [
    "hB",
    "h",
    "hb",
    "H"
  ],
  "te-IN": [
    "hB",
    "h",
    "H"
  ],
  "zu-ZA": [
    "H",
    "hB",
    "hb",
    "h"
  ]
};

// node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js
function getBestPattern(skeleton, locale) {
  var skeletonCopy = "";
  for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {
    var patternChar = skeleton.charAt(patternPos);
    if (patternChar === "j") {
      var extraLength = 0;
      while (patternPos + 1 < skeleton.length && skeleton.charAt(patternPos + 1) === patternChar) {
        extraLength++;
        patternPos++;
      }
      var hourLen = 1 + (extraLength & 1);
      var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);
      var dayPeriodChar = "a";
      var hourChar = getDefaultHourSymbolFromLocale(locale);
      if (hourChar == "H" || hourChar == "k") {
        dayPeriodLen = 0;
      }
      while (dayPeriodLen-- > 0) {
        skeletonCopy += dayPeriodChar;
      }
      while (hourLen-- > 0) {
        skeletonCopy = hourChar + skeletonCopy;
      }
    } else if (patternChar === "J") {
      skeletonCopy += "H";
    } else {
      skeletonCopy += patternChar;
    }
  }
  return skeletonCopy;
}
function getDefaultHourSymbolFromLocale(locale) {
  var hourCycle = locale.hourCycle;
  if (hourCycle === void 0 && // @ts-ignore hourCycle(s) is not identified yet
  locale.hourCycles && // @ts-ignore
  locale.hourCycles.length) {
    hourCycle = locale.hourCycles[0];
  }
  if (hourCycle) {
    switch (hourCycle) {
      case "h24":
        return "k";
      case "h23":
        return "H";
      case "h12":
        return "h";
      case "h11":
        return "K";
      default:
        throw new Error("Invalid hourCycle");
    }
  }
  var languageTag = locale.language;
  var regionTag;
  if (languageTag !== "root") {
    regionTag = locale.maximize().region;
  }
  var hourCycles = timeData[regionTag || ""] || timeData[languageTag || ""] || timeData["".concat(languageTag, "-001")] || timeData["001"];
  return hourCycles[0];
}

// node_modules/@formatjs/icu-messageformat-parser/lib/parser.js
var _a;
var SPACE_SEPARATOR_START_REGEX = new RegExp("^".concat(SPACE_SEPARATOR_REGEX.source, "*"));
var SPACE_SEPARATOR_END_REGEX = new RegExp("".concat(SPACE_SEPARATOR_REGEX.source, "*$"));
function createLocation(start, end) {
  return { start, end };
}
var hasNativeStartsWith = !!String.prototype.startsWith && "_a".startsWith("a", 1);
var hasNativeFromCodePoint = !!String.fromCodePoint;
var hasNativeFromEntries = !!Object.fromEntries;
var hasNativeCodePointAt = !!String.prototype.codePointAt;
var hasTrimStart = !!String.prototype.trimStart;
var hasTrimEnd = !!String.prototype.trimEnd;
var hasNativeIsSafeInteger = !!Number.isSafeInteger;
var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function(n) {
  return typeof n === "number" && isFinite(n) && Math.floor(n) === n && Math.abs(n) <= 9007199254740991;
};
var REGEX_SUPPORTS_U_AND_Y = true;
try {
  re = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec("a")) === null || _a === void 0 ? void 0 : _a[0]) === "a";
} catch (_) {
  REGEX_SUPPORTS_U_AND_Y = false;
}
var re;
var startsWith = hasNativeStartsWith ? (
  // Native
  function startsWith2(s, search, position) {
    return s.startsWith(search, position);
  }
) : (
  // For IE11
  function startsWith3(s, search, position) {
    return s.slice(position, position + search.length) === search;
  }
);
var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint : (
  // IE11
  function fromCodePoint2() {
    var codePoints = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      codePoints[_i] = arguments[_i];
    }
    var elements2 = "";
    var length = codePoints.length;
    var i = 0;
    var code;
    while (length > i) {
      code = codePoints[i++];
      if (code > 1114111)
        throw RangeError(code + " is not a valid code point");
      elements2 += code < 65536 ? String.fromCharCode(code) : String.fromCharCode(((code -= 65536) >> 10) + 55296, code % 1024 + 56320);
    }
    return elements2;
  }
);
var fromEntries = (
  // native
  hasNativeFromEntries ? Object.fromEntries : (
    // Ponyfill
    function fromEntries2(entries) {
      var obj = {};
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var _a2 = entries_1[_i], k2 = _a2[0], v2 = _a2[1];
        obj[k2] = v2;
      }
      return obj;
    }
  )
);
var codePointAt = hasNativeCodePointAt ? (
  // Native
  function codePointAt2(s, index) {
    return s.codePointAt(index);
  }
) : (
  // IE 11
  function codePointAt3(s, index) {
    var size3 = s.length;
    if (index < 0 || index >= size3) {
      return void 0;
    }
    var first = s.charCodeAt(index);
    var second;
    return first < 55296 || first > 56319 || index + 1 === size3 || (second = s.charCodeAt(index + 1)) < 56320 || second > 57343 ? first : (first - 55296 << 10) + (second - 56320) + 65536;
  }
);
var trimStart = hasTrimStart ? (
  // Native
  function trimStart2(s) {
    return s.trimStart();
  }
) : (
  // Ponyfill
  function trimStart3(s) {
    return s.replace(SPACE_SEPARATOR_START_REGEX, "");
  }
);
var trimEnd = hasTrimEnd ? (
  // Native
  function trimEnd2(s) {
    return s.trimEnd();
  }
) : (
  // Ponyfill
  function trimEnd3(s) {
    return s.replace(SPACE_SEPARATOR_END_REGEX, "");
  }
);
function RE(s, flag) {
  return new RegExp(s, flag);
}
var matchIdentifierAtIndex;
if (REGEX_SUPPORTS_U_AND_Y) {
  IDENTIFIER_PREFIX_RE_1 = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {
    var _a2;
    IDENTIFIER_PREFIX_RE_1.lastIndex = index;
    var match = IDENTIFIER_PREFIX_RE_1.exec(s);
    return (_a2 = match[1]) !== null && _a2 !== void 0 ? _a2 : "";
  };
} else {
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {
    var match = [];
    while (true) {
      var c = codePointAt(s, index);
      if (c === void 0 || _isWhiteSpace(c) || _isPatternSyntax(c)) {
        break;
      }
      match.push(c);
      index += c >= 65536 ? 2 : 1;
    }
    return fromCodePoint.apply(void 0, match);
  };
}
var IDENTIFIER_PREFIX_RE_1;
var Parser = (
  /** @class */
  function() {
    function Parser2(message, options) {
      if (options === void 0) {
        options = {};
      }
      this.message = message;
      this.position = { offset: 0, line: 1, column: 1 };
      this.ignoreTag = !!options.ignoreTag;
      this.locale = options.locale;
      this.requiresOtherClause = !!options.requiresOtherClause;
      this.shouldParseSkeletons = !!options.shouldParseSkeletons;
    }
    Parser2.prototype.parse = function() {
      if (this.offset() !== 0) {
        throw Error("parser can only be used once");
      }
      return this.parseMessage(0, "", false);
    };
    Parser2.prototype.parseMessage = function(nestingLevel, parentArgType, expectingCloseTag) {
      var elements2 = [];
      while (!this.isEOF()) {
        var char = this.char();
        if (char === 123) {
          var result = this.parseArgument(nestingLevel, expectingCloseTag);
          if (result.err) {
            return result;
          }
          elements2.push(result.val);
        } else if (char === 125 && nestingLevel > 0) {
          break;
        } else if (char === 35 && (parentArgType === "plural" || parentArgType === "selectordinal")) {
          var position = this.clonePosition();
          this.bump();
          elements2.push({
            type: TYPE.pound,
            location: createLocation(position, this.clonePosition())
          });
        } else if (char === 60 && !this.ignoreTag && this.peek() === 47) {
          if (expectingCloseTag) {
            break;
          } else {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
          }
        } else if (char === 60 && !this.ignoreTag && _isAlpha(this.peek() || 0)) {
          var result = this.parseTag(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements2.push(result.val);
        } else {
          var result = this.parseLiteral(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements2.push(result.val);
        }
      }
      return { val: elements2, err: null };
    };
    Parser2.prototype.parseTag = function(nestingLevel, parentArgType) {
      var startPosition = this.clonePosition();
      this.bump();
      var tagName = this.parseTagName();
      this.bumpSpace();
      if (this.bumpIf("/>")) {
        return {
          val: {
            type: TYPE.literal,
            value: "<".concat(tagName, "/>"),
            location: createLocation(startPosition, this.clonePosition())
          },
          err: null
        };
      } else if (this.bumpIf(">")) {
        var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
        if (childrenResult.err) {
          return childrenResult;
        }
        var children3 = childrenResult.val;
        var endTagStartPosition = this.clonePosition();
        if (this.bumpIf("</")) {
          if (this.isEOF() || !_isAlpha(this.char())) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          var closingTagNameStartPosition = this.clonePosition();
          var closingTagName = this.parseTagName();
          if (tagName !== closingTagName) {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
          }
          this.bumpSpace();
          if (!this.bumpIf(">")) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          return {
            val: {
              type: TYPE.tag,
              value: tagName,
              children: children3,
              location: createLocation(startPosition, this.clonePosition())
            },
            err: null
          };
        } else {
          return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
        }
      } else {
        return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseTagName = function() {
      var startOffset = this.offset();
      this.bump();
      while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
        this.bump();
      }
      return this.message.slice(startOffset, this.offset());
    };
    Parser2.prototype.parseLiteral = function(nestingLevel, parentArgType) {
      var start = this.clonePosition();
      var value = "";
      while (true) {
        var parseQuoteResult = this.tryParseQuote(parentArgType);
        if (parseQuoteResult) {
          value += parseQuoteResult;
          continue;
        }
        var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
        if (parseUnquotedResult) {
          value += parseUnquotedResult;
          continue;
        }
        var parseLeftAngleResult = this.tryParseLeftAngleBracket();
        if (parseLeftAngleResult) {
          value += parseLeftAngleResult;
          continue;
        }
        break;
      }
      var location2 = createLocation(start, this.clonePosition());
      return {
        val: { type: TYPE.literal, value, location: location2 },
        err: null
      };
    };
    Parser2.prototype.tryParseLeftAngleBracket = function() {
      if (!this.isEOF() && this.char() === 60 && (this.ignoreTag || // If at the opening tag or closing tag position, bail.
      !_isAlphaOrSlash(this.peek() || 0))) {
        this.bump();
        return "<";
      }
      return null;
    };
    Parser2.prototype.tryParseQuote = function(parentArgType) {
      if (this.isEOF() || this.char() !== 39) {
        return null;
      }
      switch (this.peek()) {
        case 39:
          this.bump();
          this.bump();
          return "'";
        case 123:
        case 60:
        case 62:
        case 125:
          break;
        case 35:
          if (parentArgType === "plural" || parentArgType === "selectordinal") {
            break;
          }
          return null;
        default:
          return null;
      }
      this.bump();
      var codePoints = [this.char()];
      this.bump();
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch === 39) {
          if (this.peek() === 39) {
            codePoints.push(39);
            this.bump();
          } else {
            this.bump();
            break;
          }
        } else {
          codePoints.push(ch);
        }
        this.bump();
      }
      return fromCodePoint.apply(void 0, codePoints);
    };
    Parser2.prototype.tryParseUnquoted = function(nestingLevel, parentArgType) {
      if (this.isEOF()) {
        return null;
      }
      var ch = this.char();
      if (ch === 60 || ch === 123 || ch === 35 && (parentArgType === "plural" || parentArgType === "selectordinal") || ch === 125 && nestingLevel > 0) {
        return null;
      } else {
        this.bump();
        return fromCodePoint(ch);
      }
    };
    Parser2.prototype.parseArgument = function(nestingLevel, expectingCloseTag) {
      var openingBracePosition = this.clonePosition();
      this.bump();
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      if (this.char() === 125) {
        this.bump();
        return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      var value = this.parseIdentifierIfPossible().value;
      if (!value) {
        return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      switch (this.char()) {
        case 125: {
          this.bump();
          return {
            val: {
              type: TYPE.argument,
              // value does not include the opening and closing braces.
              value,
              location: createLocation(openingBracePosition, this.clonePosition())
            },
            err: null
          };
        }
        case 44: {
          this.bump();
          this.bumpSpace();
          if (this.isEOF()) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
          }
          return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);
        }
        default:
          return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseIdentifierIfPossible = function() {
      var startingPosition = this.clonePosition();
      var startOffset = this.offset();
      var value = matchIdentifierAtIndex(this.message, startOffset);
      var endOffset = startOffset + value.length;
      this.bumpTo(endOffset);
      var endPosition = this.clonePosition();
      var location2 = createLocation(startingPosition, endPosition);
      return { value, location: location2 };
    };
    Parser2.prototype.parseArgumentOptions = function(nestingLevel, expectingCloseTag, value, openingBracePosition) {
      var _a2;
      var typeStartPosition = this.clonePosition();
      var argType = this.parseIdentifierIfPossible().value;
      var typeEndPosition = this.clonePosition();
      switch (argType) {
        case "":
          return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
        case "number":
        case "date":
        case "time": {
          this.bumpSpace();
          var styleAndLocation = null;
          if (this.bumpIf(",")) {
            this.bumpSpace();
            var styleStartPosition = this.clonePosition();
            var result = this.parseSimpleArgStyleIfPossible();
            if (result.err) {
              return result;
            }
            var style2 = trimEnd(result.val);
            if (style2.length === 0) {
              return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            var styleLocation = createLocation(styleStartPosition, this.clonePosition());
            styleAndLocation = { style: style2, styleLocation };
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_1 = createLocation(openingBracePosition, this.clonePosition());
          if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, "::", 0)) {
            var skeleton = trimStart(styleAndLocation.style.slice(2));
            if (argType === "number") {
              var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
              if (result.err) {
                return result;
              }
              return {
                val: { type: TYPE.number, value, location: location_1, style: result.val },
                err: null
              };
            } else {
              if (skeleton.length === 0) {
                return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
              }
              var dateTimePattern = skeleton;
              if (this.locale) {
                dateTimePattern = getBestPattern(skeleton, this.locale);
              }
              var style2 = {
                type: SKELETON_TYPE.dateTime,
                pattern: dateTimePattern,
                location: styleAndLocation.styleLocation,
                parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(dateTimePattern) : {}
              };
              var type = argType === "date" ? TYPE.date : TYPE.time;
              return {
                val: { type, value, location: location_1, style: style2 },
                err: null
              };
            }
          }
          return {
            val: {
              type: argType === "number" ? TYPE.number : argType === "date" ? TYPE.date : TYPE.time,
              value,
              location: location_1,
              style: (_a2 = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a2 !== void 0 ? _a2 : null
            },
            err: null
          };
        }
        case "plural":
        case "selectordinal":
        case "select": {
          var typeEndPosition_1 = this.clonePosition();
          this.bumpSpace();
          if (!this.bumpIf(",")) {
            return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));
          }
          this.bumpSpace();
          var identifierAndLocation = this.parseIdentifierIfPossible();
          var pluralOffset = 0;
          if (argType !== "select" && identifierAndLocation.value === "offset") {
            if (!this.bumpIf(":")) {
              return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            this.bumpSpace();
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
            if (result.err) {
              return result;
            }
            this.bumpSpace();
            identifierAndLocation = this.parseIdentifierIfPossible();
            pluralOffset = result.val;
          }
          var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
          if (optionsResult.err) {
            return optionsResult;
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_2 = createLocation(openingBracePosition, this.clonePosition());
          if (argType === "select") {
            return {
              val: {
                type: TYPE.select,
                value,
                options: fromEntries(optionsResult.val),
                location: location_2
              },
              err: null
            };
          } else {
            return {
              val: {
                type: TYPE.plural,
                value,
                options: fromEntries(optionsResult.val),
                offset: pluralOffset,
                pluralType: argType === "plural" ? "cardinal" : "ordinal",
                location: location_2
              },
              err: null
            };
          }
        }
        default:
          return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
      }
    };
    Parser2.prototype.tryParseArgumentClose = function(openingBracePosition) {
      if (this.isEOF() || this.char() !== 125) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bump();
      return { val: true, err: null };
    };
    Parser2.prototype.parseSimpleArgStyleIfPossible = function() {
      var nestedBraces = 0;
      var startPosition = this.clonePosition();
      while (!this.isEOF()) {
        var ch = this.char();
        switch (ch) {
          case 39: {
            this.bump();
            var apostrophePosition = this.clonePosition();
            if (!this.bumpUntil("'")) {
              return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
            }
            this.bump();
            break;
          }
          case 123: {
            nestedBraces += 1;
            this.bump();
            break;
          }
          case 125: {
            if (nestedBraces > 0) {
              nestedBraces -= 1;
            } else {
              return {
                val: this.message.slice(startPosition.offset, this.offset()),
                err: null
              };
            }
            break;
          }
          default:
            this.bump();
            break;
        }
      }
      return {
        val: this.message.slice(startPosition.offset, this.offset()),
        err: null
      };
    };
    Parser2.prototype.parseNumberSkeletonFromString = function(skeleton, location2) {
      var tokens = [];
      try {
        tokens = parseNumberSkeletonFromString(skeleton);
      } catch (e) {
        return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location2);
      }
      return {
        val: {
          type: SKELETON_TYPE.number,
          tokens,
          location: location2,
          parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens) : {}
        },
        err: null
      };
    };
    Parser2.prototype.tryParsePluralOrSelectOptions = function(nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
      var _a2;
      var hasOtherClause = false;
      var options = [];
      var parsedSelectors = /* @__PURE__ */ new Set();
      var selector2 = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
      while (true) {
        if (selector2.length === 0) {
          var startPosition = this.clonePosition();
          if (parentArgType !== "select" && this.bumpIf("=")) {
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
            if (result.err) {
              return result;
            }
            selectorLocation = createLocation(startPosition, this.clonePosition());
            selector2 = this.message.slice(startPosition.offset, this.offset());
          } else {
            break;
          }
        }
        if (parsedSelectors.has(selector2)) {
          return this.error(parentArgType === "select" ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
        }
        if (selector2 === "other") {
          hasOtherClause = true;
        }
        this.bumpSpace();
        var openingBracePosition = this.clonePosition();
        if (!this.bumpIf("{")) {
          return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
        }
        var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
        if (fragmentResult.err) {
          return fragmentResult;
        }
        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
        if (argCloseResult.err) {
          return argCloseResult;
        }
        options.push([
          selector2,
          {
            value: fragmentResult.val,
            location: createLocation(openingBracePosition, this.clonePosition())
          }
        ]);
        parsedSelectors.add(selector2);
        this.bumpSpace();
        _a2 = this.parseIdentifierIfPossible(), selector2 = _a2.value, selectorLocation = _a2.location;
      }
      if (options.length === 0) {
        return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
      }
      if (this.requiresOtherClause && !hasOtherClause) {
        return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
      }
      return { val: options, err: null };
    };
    Parser2.prototype.tryParseDecimalInteger = function(expectNumberError, invalidNumberError) {
      var sign = 1;
      var startingPosition = this.clonePosition();
      if (this.bumpIf("+")) {
      } else if (this.bumpIf("-")) {
        sign = -1;
      }
      var hasDigits = false;
      var decimal = 0;
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch >= 48 && ch <= 57) {
          hasDigits = true;
          decimal = decimal * 10 + (ch - 48);
          this.bump();
        } else {
          break;
        }
      }
      var location2 = createLocation(startingPosition, this.clonePosition());
      if (!hasDigits) {
        return this.error(expectNumberError, location2);
      }
      decimal *= sign;
      if (!isSafeInteger(decimal)) {
        return this.error(invalidNumberError, location2);
      }
      return { val: decimal, err: null };
    };
    Parser2.prototype.offset = function() {
      return this.position.offset;
    };
    Parser2.prototype.isEOF = function() {
      return this.offset() === this.message.length;
    };
    Parser2.prototype.clonePosition = function() {
      return {
        offset: this.position.offset,
        line: this.position.line,
        column: this.position.column
      };
    };
    Parser2.prototype.char = function() {
      var offset3 = this.position.offset;
      if (offset3 >= this.message.length) {
        throw Error("out of bound");
      }
      var code = codePointAt(this.message, offset3);
      if (code === void 0) {
        throw Error("Offset ".concat(offset3, " is at invalid UTF-16 code unit boundary"));
      }
      return code;
    };
    Parser2.prototype.error = function(kind, location2) {
      return {
        val: null,
        err: {
          kind,
          message: this.message,
          location: location2
        }
      };
    };
    Parser2.prototype.bump = function() {
      if (this.isEOF()) {
        return;
      }
      var code = this.char();
      if (code === 10) {
        this.position.line += 1;
        this.position.column = 1;
        this.position.offset += 1;
      } else {
        this.position.column += 1;
        this.position.offset += code < 65536 ? 1 : 2;
      }
    };
    Parser2.prototype.bumpIf = function(prefix2) {
      if (startsWith(this.message, prefix2, this.offset())) {
        for (var i = 0; i < prefix2.length; i++) {
          this.bump();
        }
        return true;
      }
      return false;
    };
    Parser2.prototype.bumpUntil = function(pattern) {
      var currentOffset = this.offset();
      var index = this.message.indexOf(pattern, currentOffset);
      if (index >= 0) {
        this.bumpTo(index);
        return true;
      } else {
        this.bumpTo(this.message.length);
        return false;
      }
    };
    Parser2.prototype.bumpTo = function(targetOffset) {
      if (this.offset() > targetOffset) {
        throw Error("targetOffset ".concat(targetOffset, " must be greater than or equal to the current offset ").concat(this.offset()));
      }
      targetOffset = Math.min(targetOffset, this.message.length);
      while (true) {
        var offset3 = this.offset();
        if (offset3 === targetOffset) {
          break;
        }
        if (offset3 > targetOffset) {
          throw Error("targetOffset ".concat(targetOffset, " is at invalid UTF-16 code unit boundary"));
        }
        this.bump();
        if (this.isEOF()) {
          break;
        }
      }
    };
    Parser2.prototype.bumpSpace = function() {
      while (!this.isEOF() && _isWhiteSpace(this.char())) {
        this.bump();
      }
    };
    Parser2.prototype.peek = function() {
      if (this.isEOF()) {
        return null;
      }
      var code = this.char();
      var offset3 = this.offset();
      var nextCode = this.message.charCodeAt(offset3 + (code >= 65536 ? 2 : 1));
      return nextCode !== null && nextCode !== void 0 ? nextCode : null;
    };
    return Parser2;
  }()
);
function _isAlpha(codepoint) {
  return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;
}
function _isAlphaOrSlash(codepoint) {
  return _isAlpha(codepoint) || codepoint === 47;
}
function _isPotentialElementNameChar(c) {
  return c === 45 || c === 46 || c >= 48 && c <= 57 || c === 95 || c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 183 || c >= 192 && c <= 214 || c >= 216 && c <= 246 || c >= 248 && c <= 893 || c >= 895 && c <= 8191 || c >= 8204 && c <= 8205 || c >= 8255 && c <= 8256 || c >= 8304 && c <= 8591 || c >= 11264 && c <= 12271 || c >= 12289 && c <= 55295 || c >= 63744 && c <= 64975 || c >= 65008 && c <= 65533 || c >= 65536 && c <= 983039;
}
function _isWhiteSpace(c) {
  return c >= 9 && c <= 13 || c === 32 || c === 133 || c >= 8206 && c <= 8207 || c === 8232 || c === 8233;
}
function _isPatternSyntax(c) {
  return c >= 33 && c <= 35 || c === 36 || c >= 37 && c <= 39 || c === 40 || c === 41 || c === 42 || c === 43 || c === 44 || c === 45 || c >= 46 && c <= 47 || c >= 58 && c <= 59 || c >= 60 && c <= 62 || c >= 63 && c <= 64 || c === 91 || c === 92 || c === 93 || c === 94 || c === 96 || c === 123 || c === 124 || c === 125 || c === 126 || c === 161 || c >= 162 && c <= 165 || c === 166 || c === 167 || c === 169 || c === 171 || c === 172 || c === 174 || c === 176 || c === 177 || c === 182 || c === 187 || c === 191 || c === 215 || c === 247 || c >= 8208 && c <= 8213 || c >= 8214 && c <= 8215 || c === 8216 || c === 8217 || c === 8218 || c >= 8219 && c <= 8220 || c === 8221 || c === 8222 || c === 8223 || c >= 8224 && c <= 8231 || c >= 8240 && c <= 8248 || c === 8249 || c === 8250 || c >= 8251 && c <= 8254 || c >= 8257 && c <= 8259 || c === 8260 || c === 8261 || c === 8262 || c >= 8263 && c <= 8273 || c === 8274 || c === 8275 || c >= 8277 && c <= 8286 || c >= 8592 && c <= 8596 || c >= 8597 && c <= 8601 || c >= 8602 && c <= 8603 || c >= 8604 && c <= 8607 || c === 8608 || c >= 8609 && c <= 8610 || c === 8611 || c >= 8612 && c <= 8613 || c === 8614 || c >= 8615 && c <= 8621 || c === 8622 || c >= 8623 && c <= 8653 || c >= 8654 && c <= 8655 || c >= 8656 && c <= 8657 || c === 8658 || c === 8659 || c === 8660 || c >= 8661 && c <= 8691 || c >= 8692 && c <= 8959 || c >= 8960 && c <= 8967 || c === 8968 || c === 8969 || c === 8970 || c === 8971 || c >= 8972 && c <= 8991 || c >= 8992 && c <= 8993 || c >= 8994 && c <= 9e3 || c === 9001 || c === 9002 || c >= 9003 && c <= 9083 || c === 9084 || c >= 9085 && c <= 9114 || c >= 9115 && c <= 9139 || c >= 9140 && c <= 9179 || c >= 9180 && c <= 9185 || c >= 9186 && c <= 9254 || c >= 9255 && c <= 9279 || c >= 9280 && c <= 9290 || c >= 9291 && c <= 9311 || c >= 9472 && c <= 9654 || c === 9655 || c >= 9656 && c <= 9664 || c === 9665 || c >= 9666 && c <= 9719 || c >= 9720 && c <= 9727 || c >= 9728 && c <= 9838 || c === 9839 || c >= 9840 && c <= 10087 || c === 10088 || c === 10089 || c === 10090 || c === 10091 || c === 10092 || c === 10093 || c === 10094 || c === 10095 || c === 10096 || c === 10097 || c === 10098 || c === 10099 || c === 10100 || c === 10101 || c >= 10132 && c <= 10175 || c >= 10176 && c <= 10180 || c === 10181 || c === 10182 || c >= 10183 && c <= 10213 || c === 10214 || c === 10215 || c === 10216 || c === 10217 || c === 10218 || c === 10219 || c === 10220 || c === 10221 || c === 10222 || c === 10223 || c >= 10224 && c <= 10239 || c >= 10240 && c <= 10495 || c >= 10496 && c <= 10626 || c === 10627 || c === 10628 || c === 10629 || c === 10630 || c === 10631 || c === 10632 || c === 10633 || c === 10634 || c === 10635 || c === 10636 || c === 10637 || c === 10638 || c === 10639 || c === 10640 || c === 10641 || c === 10642 || c === 10643 || c === 10644 || c === 10645 || c === 10646 || c === 10647 || c === 10648 || c >= 10649 && c <= 10711 || c === 10712 || c === 10713 || c === 10714 || c === 10715 || c >= 10716 && c <= 10747 || c === 10748 || c === 10749 || c >= 10750 && c <= 11007 || c >= 11008 && c <= 11055 || c >= 11056 && c <= 11076 || c >= 11077 && c <= 11078 || c >= 11079 && c <= 11084 || c >= 11085 && c <= 11123 || c >= 11124 && c <= 11125 || c >= 11126 && c <= 11157 || c === 11158 || c >= 11159 && c <= 11263 || c >= 11776 && c <= 11777 || c === 11778 || c === 11779 || c === 11780 || c === 11781 || c >= 11782 && c <= 11784 || c === 11785 || c === 11786 || c === 11787 || c === 11788 || c === 11789 || c >= 11790 && c <= 11798 || c === 11799 || c >= 11800 && c <= 11801 || c === 11802 || c === 11803 || c === 11804 || c === 11805 || c >= 11806 && c <= 11807 || c === 11808 || c === 11809 || c === 11810 || c === 11811 || c === 11812 || c === 11813 || c === 11814 || c === 11815 || c === 11816 || c === 11817 || c >= 11818 && c <= 11822 || c === 11823 || c >= 11824 && c <= 11833 || c >= 11834 && c <= 11835 || c >= 11836 && c <= 11839 || c === 11840 || c === 11841 || c === 11842 || c >= 11843 && c <= 11855 || c >= 11856 && c <= 11857 || c === 11858 || c >= 11859 && c <= 11903 || c >= 12289 && c <= 12291 || c === 12296 || c === 12297 || c === 12298 || c === 12299 || c === 12300 || c === 12301 || c === 12302 || c === 12303 || c === 12304 || c === 12305 || c >= 12306 && c <= 12307 || c === 12308 || c === 12309 || c === 12310 || c === 12311 || c === 12312 || c === 12313 || c === 12314 || c === 12315 || c === 12316 || c === 12317 || c >= 12318 && c <= 12319 || c === 12320 || c === 12336 || c === 64830 || c === 64831 || c >= 65093 && c <= 65094;
}

// node_modules/@formatjs/icu-messageformat-parser/lib/index.js
function pruneLocation(els) {
  els.forEach(function(el) {
    delete el.location;
    if (isSelectElement(el) || isPluralElement(el)) {
      for (var k2 in el.options) {
        delete el.options[k2].location;
        pruneLocation(el.options[k2].value);
      }
    } else if (isNumberElement(el) && isNumberSkeleton(el.style)) {
      delete el.style.location;
    } else if ((isDateElement(el) || isTimeElement(el)) && isDateTimeSkeleton(el.style)) {
      delete el.style.location;
    } else if (isTagElement(el)) {
      pruneLocation(el.children);
    }
  });
}
function parse(message, opts) {
  if (opts === void 0) {
    opts = {};
  }
  opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
  var result = new Parser(message, opts).parse();
  if (result.err) {
    var error = SyntaxError(ErrorKind[result.err.kind]);
    error.location = result.err.location;
    error.originalMessage = result.err.message;
    throw error;
  }
  if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
    pruneLocation(result.val);
  }
  return result.val;
}

// node_modules/intl-messageformat/lib/src/error.js
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2["MISSING_VALUE"] = "MISSING_VALUE";
  ErrorCode2["INVALID_VALUE"] = "INVALID_VALUE";
  ErrorCode2["MISSING_INTL_API"] = "MISSING_INTL_API";
})(ErrorCode || (ErrorCode = {}));
var FormatError = (
  /** @class */
  function(_super) {
    __extends(FormatError2, _super);
    function FormatError2(msg, code, originalMessage) {
      var _this = _super.call(this, msg) || this;
      _this.code = code;
      _this.originalMessage = originalMessage;
      return _this;
    }
    FormatError2.prototype.toString = function() {
      return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
    };
    return FormatError2;
  }(Error)
);
var InvalidValueError = (
  /** @class */
  function(_super) {
    __extends(InvalidValueError2, _super);
    function InvalidValueError2(variableId, value, options, originalMessage) {
      return _super.call(this, 'Invalid values for "'.concat(variableId, '": "').concat(value, '". Options are "').concat(Object.keys(options).join('", "'), '"'), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueError2;
  }(FormatError)
);
var InvalidValueTypeError = (
  /** @class */
  function(_super) {
    __extends(InvalidValueTypeError2, _super);
    function InvalidValueTypeError2(value, type, originalMessage) {
      return _super.call(this, 'Value for "'.concat(value, '" must be of type ').concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueTypeError2;
  }(FormatError)
);
var MissingValueError = (
  /** @class */
  function(_super) {
    __extends(MissingValueError2, _super);
    function MissingValueError2(variableId, originalMessage) {
      return _super.call(this, 'The intl string context variable "'.concat(variableId, '" was not provided to the string "').concat(originalMessage, '"'), ErrorCode.MISSING_VALUE, originalMessage) || this;
    }
    return MissingValueError2;
  }(FormatError)
);

// node_modules/intl-messageformat/lib/src/formatters.js
var PART_TYPE;
(function(PART_TYPE2) {
  PART_TYPE2[PART_TYPE2["literal"] = 0] = "literal";
  PART_TYPE2[PART_TYPE2["object"] = 1] = "object";
})(PART_TYPE || (PART_TYPE = {}));
function mergeLiteral(parts) {
  if (parts.length < 2) {
    return parts;
  }
  return parts.reduce(function(all, part) {
    var lastPart = all[all.length - 1];
    if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {
      all.push(part);
    } else {
      lastPart.value += part.value;
    }
    return all;
  }, []);
}
function isFormatXMLElementFn(el) {
  return typeof el === "function";
}
function formatToParts(els, locales, formatters, formats, values, currentPluralValue, originalMessage) {
  if (els.length === 1 && isLiteralElement(els[0])) {
    return [
      {
        type: PART_TYPE.literal,
        value: els[0].value
      }
    ];
  }
  var result = [];
  for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
    var el = els_1[_i];
    if (isLiteralElement(el)) {
      result.push({
        type: PART_TYPE.literal,
        value: el.value
      });
      continue;
    }
    if (isPoundElement(el)) {
      if (typeof currentPluralValue === "number") {
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getNumberFormat(locales).format(currentPluralValue)
        });
      }
      continue;
    }
    var varName = el.value;
    if (!(values && varName in values)) {
      throw new MissingValueError(varName, originalMessage);
    }
    var value = values[varName];
    if (isArgumentElement(el)) {
      if (!value || typeof value === "string" || typeof value === "number") {
        value = typeof value === "string" || typeof value === "number" ? String(value) : "";
      }
      result.push({
        type: typeof value === "string" ? PART_TYPE.literal : PART_TYPE.object,
        value
      });
      continue;
    }
    if (isDateElement(el)) {
      var style2 = typeof el.style === "string" ? formats.date[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style2).format(value)
      });
      continue;
    }
    if (isTimeElement(el)) {
      var style2 = typeof el.style === "string" ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : formats.time.medium;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style2).format(value)
      });
      continue;
    }
    if (isNumberElement(el)) {
      var style2 = typeof el.style === "string" ? formats.number[el.style] : isNumberSkeleton(el.style) ? el.style.parsedOptions : void 0;
      if (style2 && style2.scale) {
        value = value * (style2.scale || 1);
      }
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getNumberFormat(locales, style2).format(value)
      });
      continue;
    }
    if (isTagElement(el)) {
      var children3 = el.children, value_1 = el.value;
      var formatFn = values[value_1];
      if (!isFormatXMLElementFn(formatFn)) {
        throw new InvalidValueTypeError(value_1, "function", originalMessage);
      }
      var parts = formatToParts(children3, locales, formatters, formats, values, currentPluralValue);
      var chunks = formatFn(parts.map(function(p2) {
        return p2.value;
      }));
      if (!Array.isArray(chunks)) {
        chunks = [chunks];
      }
      result.push.apply(result, chunks.map(function(c) {
        return {
          type: typeof c === "string" ? PART_TYPE.literal : PART_TYPE.object,
          value: c
        };
      }));
    }
    if (isSelectElement(el)) {
      var opt = el.options[value] || el.options.other;
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
      continue;
    }
    if (isPluralElement(el)) {
      var opt = el.options["=".concat(value)];
      if (!opt) {
        if (!Intl.PluralRules) {
          throw new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API, originalMessage);
        }
        var rule = formatters.getPluralRules(locales, { type: el.pluralType }).select(value - (el.offset || 0));
        opt = el.options[rule] || el.options.other;
      }
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));
      continue;
    }
  }
  return mergeLiteral(result);
}

// node_modules/intl-messageformat/lib/src/core.js
function mergeConfig(c1, c2) {
  if (!c2) {
    return c1;
  }
  return __assign(__assign(__assign({}, c1 || {}), c2 || {}), Object.keys(c1).reduce(function(all, k2) {
    all[k2] = __assign(__assign({}, c1[k2]), c2[k2] || {});
    return all;
  }, {}));
}
function mergeConfigs(defaultConfig, configs) {
  if (!configs) {
    return defaultConfig;
  }
  return Object.keys(defaultConfig).reduce(function(all, k2) {
    all[k2] = mergeConfig(defaultConfig[k2], configs[k2]);
    return all;
  }, __assign({}, defaultConfig));
}
function createFastMemoizeCache(store) {
  return {
    create: function() {
      return {
        get: function(key) {
          return store[key];
        },
        set: function(key, value) {
          store[key] = value;
        }
      };
    }
  };
}
function createDefaultFormatters(cache2) {
  if (cache2 === void 0) {
    cache2 = {
      number: {},
      dateTime: {},
      pluralRules: {}
    };
  }
  return {
    getNumberFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.NumberFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache2.number),
      strategy: strategies.variadic
    }),
    getDateTimeFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.DateTimeFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache2.dateTime),
      strategy: strategies.variadic
    }),
    getPluralRules: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.PluralRules).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache2.pluralRules),
      strategy: strategies.variadic
    })
  };
}
var IntlMessageFormat = (
  /** @class */
  function() {
    function IntlMessageFormat2(message, locales, overrideFormats, opts) {
      if (locales === void 0) {
        locales = IntlMessageFormat2.defaultLocale;
      }
      var _this = this;
      this.formatterCache = {
        number: {},
        dateTime: {},
        pluralRules: {}
      };
      this.format = function(values) {
        var parts = _this.formatToParts(values);
        if (parts.length === 1) {
          return parts[0].value;
        }
        var result = parts.reduce(function(all, part) {
          if (!all.length || part.type !== PART_TYPE.literal || typeof all[all.length - 1] !== "string") {
            all.push(part.value);
          } else {
            all[all.length - 1] += part.value;
          }
          return all;
        }, []);
        if (result.length <= 1) {
          return result[0] || "";
        }
        return result;
      };
      this.formatToParts = function(values) {
        return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, void 0, _this.message);
      };
      this.resolvedOptions = function() {
        var _a3;
        return {
          locale: ((_a3 = _this.resolvedLocale) === null || _a3 === void 0 ? void 0 : _a3.toString()) || Intl.NumberFormat.supportedLocalesOf(_this.locales)[0]
        };
      };
      this.getAst = function() {
        return _this.ast;
      };
      this.locales = locales;
      this.resolvedLocale = IntlMessageFormat2.resolveLocale(locales);
      if (typeof message === "string") {
        this.message = message;
        if (!IntlMessageFormat2.__parse) {
          throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
        }
        var _a2 = opts || {}, formatters = _a2.formatters, parseOpts = __rest(_a2, ["formatters"]);
        this.ast = IntlMessageFormat2.__parse(message, __assign(__assign({}, parseOpts), { locale: this.resolvedLocale }));
      } else {
        this.ast = message;
      }
      if (!Array.isArray(this.ast)) {
        throw new TypeError("A message must be provided as a String or AST.");
      }
      this.formats = mergeConfigs(IntlMessageFormat2.formats, overrideFormats);
      this.formatters = opts && opts.formatters || createDefaultFormatters(this.formatterCache);
    }
    Object.defineProperty(IntlMessageFormat2, "defaultLocale", {
      get: function() {
        if (!IntlMessageFormat2.memoizedDefaultLocale) {
          IntlMessageFormat2.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;
        }
        return IntlMessageFormat2.memoizedDefaultLocale;
      },
      enumerable: false,
      configurable: true
    });
    IntlMessageFormat2.memoizedDefaultLocale = null;
    IntlMessageFormat2.resolveLocale = function(locales) {
      if (typeof Intl.Locale === "undefined") {
        return;
      }
      var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);
      if (supportedLocales.length > 0) {
        return new Intl.Locale(supportedLocales[0]);
      }
      return new Intl.Locale(typeof locales === "string" ? locales : locales[0]);
    };
    IntlMessageFormat2.__parse = parse;
    IntlMessageFormat2.formats = {
      number: {
        integer: {
          maximumFractionDigits: 0
        },
        currency: {
          style: "currency"
        },
        percent: {
          style: "percent"
        }
      },
      date: {
        short: {
          month: "numeric",
          day: "numeric",
          year: "2-digit"
        },
        medium: {
          month: "short",
          day: "numeric",
          year: "numeric"
        },
        long: {
          month: "long",
          day: "numeric",
          year: "numeric"
        },
        full: {
          weekday: "long",
          month: "long",
          day: "numeric",
          year: "numeric"
        }
      },
      time: {
        short: {
          hour: "numeric",
          minute: "numeric"
        },
        medium: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric"
        },
        long: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        },
        full: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        }
      }
    };
    return IntlMessageFormat2;
  }()
);

// node_modules/@react-aria/i18n/dist/useMessageFormatter.mjs
var import_react89 = __toESM(require_react(), 1);

// node_modules/@internationalized/string/dist/LocalizedStringDictionary.mjs
var $5b160d28a433310d$var$localeSymbol = Symbol.for("react-aria.i18n.locale");
var $5b160d28a433310d$var$stringsSymbol = Symbol.for("react-aria.i18n.strings");
var $5b160d28a433310d$var$cachedGlobalStrings = void 0;
var $5b160d28a433310d$export$c17fa47878dc55b6 = class _$5b160d28a433310d$export$c17fa47878dc55b6 {
  /** Returns a localized string for the given key and locale. */
  getStringForLocale(key, locale) {
    let strings = this.getStringsForLocale(locale);
    let string = strings[key];
    if (!string) throw new Error(`Could not find intl message ${key} in ${locale} locale`);
    return string;
  }
  /** Returns all localized strings for the given locale. */
  getStringsForLocale(locale) {
    let strings = this.strings[locale];
    if (!strings) {
      strings = $5b160d28a433310d$var$getStringsForLocale(locale, this.strings, this.defaultLocale);
      this.strings[locale] = strings;
    }
    return strings;
  }
  static getGlobalDictionaryForPackage(packageName) {
    if (typeof window === "undefined") return null;
    let locale = window[$5b160d28a433310d$var$localeSymbol];
    if ($5b160d28a433310d$var$cachedGlobalStrings === void 0) {
      let globalStrings = window[$5b160d28a433310d$var$stringsSymbol];
      if (!globalStrings) return null;
      $5b160d28a433310d$var$cachedGlobalStrings = {};
      for (let pkg in globalStrings) $5b160d28a433310d$var$cachedGlobalStrings[pkg] = new _$5b160d28a433310d$export$c17fa47878dc55b6({
        [locale]: globalStrings[pkg]
      }, locale);
    }
    let dictionary = $5b160d28a433310d$var$cachedGlobalStrings === null || $5b160d28a433310d$var$cachedGlobalStrings === void 0 ? void 0 : $5b160d28a433310d$var$cachedGlobalStrings[packageName];
    if (!dictionary) throw new Error(`Strings for package "${packageName}" were not included by LocalizedStringProvider. Please add it to the list passed to createLocalizedStringDictionary.`);
    return dictionary;
  }
  constructor(messages8, defaultLocale = "en-US") {
    this.strings = Object.fromEntries(Object.entries(messages8).filter(([, v2]) => v2));
    this.defaultLocale = defaultLocale;
  }
};
function $5b160d28a433310d$var$getStringsForLocale(locale, strings, defaultLocale = "en-US") {
  if (strings[locale]) return strings[locale];
  let language = $5b160d28a433310d$var$getLanguage(locale);
  if (strings[language]) return strings[language];
  for (let key in strings) {
    if (key.startsWith(language + "-")) return strings[key];
  }
  return strings[defaultLocale];
}
function $5b160d28a433310d$var$getLanguage(locale) {
  if (Intl.Locale)
    return new Intl.Locale(locale).language;
  return locale.split("-")[0];
}

// node_modules/@internationalized/string/dist/LocalizedStringFormatter.mjs
var $6db58dc88e78b024$var$pluralRulesCache = /* @__PURE__ */ new Map();
var $6db58dc88e78b024$var$numberFormatCache = /* @__PURE__ */ new Map();
var $6db58dc88e78b024$export$2f817fcdc4b89ae0 = class {
  /** Formats a localized string for the given key with the provided variables. */
  format(key, variables) {
    let message = this.strings.getStringForLocale(key, this.locale);
    return typeof message === "function" ? message(variables, this) : message;
  }
  plural(count3, options, type = "cardinal") {
    let opt = options["=" + count3];
    if (opt) return typeof opt === "function" ? opt() : opt;
    let key = this.locale + ":" + type;
    let pluralRules = $6db58dc88e78b024$var$pluralRulesCache.get(key);
    if (!pluralRules) {
      pluralRules = new Intl.PluralRules(this.locale, {
        type
      });
      $6db58dc88e78b024$var$pluralRulesCache.set(key, pluralRules);
    }
    let selected = pluralRules.select(count3);
    opt = options[selected] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  number(value) {
    let numberFormat = $6db58dc88e78b024$var$numberFormatCache.get(this.locale);
    if (!numberFormat) {
      numberFormat = new Intl.NumberFormat(this.locale);
      $6db58dc88e78b024$var$numberFormatCache.set(this.locale, numberFormat);
    }
    return numberFormat.format(value);
  }
  select(options, value) {
    let opt = options[value] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  constructor(locale, strings) {
    this.locale = locale;
    this.strings = strings;
  }
};

// node_modules/@react-aria/i18n/dist/useLocalizedStringFormatter.mjs
var import_react90 = __toESM(require_react(), 1);
var $fca6afa0e843324b$var$cache = /* @__PURE__ */ new WeakMap();
function $fca6afa0e843324b$var$getCachedDictionary(strings) {
  let dictionary = $fca6afa0e843324b$var$cache.get(strings);
  if (!dictionary) {
    dictionary = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)(strings);
    $fca6afa0e843324b$var$cache.set(strings, dictionary);
  }
  return dictionary;
}
function $fca6afa0e843324b$export$87b761675e8eaa10(strings, packageName) {
  return packageName && (0, $5b160d28a433310d$export$c17fa47878dc55b6).getGlobalDictionaryForPackage(packageName) || $fca6afa0e843324b$var$getCachedDictionary(strings);
}
function $fca6afa0e843324b$export$f12b703ca79dfbb1(strings, packageName) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let dictionary = $fca6afa0e843324b$export$87b761675e8eaa10(strings, packageName);
  return (0, import_react90.useMemo)(() => new (0, $6db58dc88e78b024$export$2f817fcdc4b89ae0)(locale, dictionary), [
    locale,
    dictionary
  ]);
}

// node_modules/@react-aria/i18n/dist/useListFormatter.mjs
var import_react91 = __toESM(require_react(), 1);

// node_modules/@internationalized/date/dist/utils.mjs
function $2b4dce13dd5a17fa$export$842a2cf37af977e1(amount, numerator) {
  return amount - numerator * Math.floor(amount / numerator);
}

// node_modules/@internationalized/date/dist/GregorianCalendar.mjs
var $3b62074eb05584b2$var$EPOCH = 1721426;
function $3b62074eb05584b2$export$f297eb839006d339(era, year, month, day) {
  year = $3b62074eb05584b2$export$c36e0ecb2d4fa69d(era, year);
  let y1 = year - 1;
  let monthOffset = -2;
  if (month <= 2) monthOffset = 0;
  else if ($3b62074eb05584b2$export$553d7fa8e3805fc0(year)) monthOffset = -1;
  return $3b62074eb05584b2$var$EPOCH - 1 + 365 * y1 + Math.floor(y1 / 4) - Math.floor(y1 / 100) + Math.floor(y1 / 400) + Math.floor((367 * month - 362) / 12 + monthOffset + day);
}
function $3b62074eb05584b2$export$553d7fa8e3805fc0(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function $3b62074eb05584b2$export$c36e0ecb2d4fa69d(era, year) {
  return era === "BC" ? 1 - year : year;
}
function $3b62074eb05584b2$export$4475b7e617eb123c(year) {
  let era = "AD";
  if (year <= 0) {
    era = "BC";
    year = 1 - year;
  }
  return [
    era,
    year
  ];
}
var $3b62074eb05584b2$var$daysInMonth = {
  standard: [
    31,
    28,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
  ],
  leapyear: [
    31,
    29,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
  ]
};
var $3b62074eb05584b2$export$80ee6245ec4f29ec = class {
  fromJulianDay(jd) {
    let jd0 = jd;
    let depoch = jd0 - $3b62074eb05584b2$var$EPOCH;
    let quadricent = Math.floor(depoch / 146097);
    let dqc = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(depoch, 146097);
    let cent = Math.floor(dqc / 36524);
    let dcent = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(dqc, 36524);
    let quad = Math.floor(dcent / 1461);
    let dquad = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(dcent, 1461);
    let yindex = Math.floor(dquad / 365);
    let extendedYear = quadricent * 400 + cent * 100 + quad * 4 + yindex + (cent !== 4 && yindex !== 4 ? 1 : 0);
    let [era, year] = $3b62074eb05584b2$export$4475b7e617eb123c(extendedYear);
    let yearDay = jd0 - $3b62074eb05584b2$export$f297eb839006d339(era, year, 1, 1);
    let leapAdj = 2;
    if (jd0 < $3b62074eb05584b2$export$f297eb839006d339(era, year, 3, 1)) leapAdj = 0;
    else if ($3b62074eb05584b2$export$553d7fa8e3805fc0(year)) leapAdj = 1;
    let month = Math.floor(((yearDay + leapAdj) * 12 + 373) / 367);
    let day = jd0 - $3b62074eb05584b2$export$f297eb839006d339(era, year, month, 1) + 1;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(era, year, month, day);
  }
  toJulianDay(date) {
    return $3b62074eb05584b2$export$f297eb839006d339(date.era, date.year, date.month, date.day);
  }
  getDaysInMonth(date) {
    return $3b62074eb05584b2$var$daysInMonth[$3b62074eb05584b2$export$553d7fa8e3805fc0(date.year) ? "leapyear" : "standard"][date.month - 1];
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getMonthsInYear(date) {
    return 12;
  }
  getDaysInYear(date) {
    return $3b62074eb05584b2$export$553d7fa8e3805fc0(date.year) ? 366 : 365;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getYearsInEra(date) {
    return 9999;
  }
  getEras() {
    return [
      "BC",
      "AD"
    ];
  }
  isInverseEra(date) {
    return date.era === "BC";
  }
  balanceDate(date) {
    if (date.year <= 0) {
      date.era = date.era === "BC" ? "AD" : "BC";
      date.year = 1 - date.year;
    }
  }
  constructor() {
    this.identifier = "gregory";
  }
};

// node_modules/@internationalized/date/dist/weekStartData.mjs
var $2fe286d2fb449abb$export$7a5acbd77d414bd9 = {
  "001": 1,
  AD: 1,
  AE: 6,
  AF: 6,
  AI: 1,
  AL: 1,
  AM: 1,
  AN: 1,
  AR: 1,
  AT: 1,
  AU: 1,
  AX: 1,
  AZ: 1,
  BA: 1,
  BE: 1,
  BG: 1,
  BH: 6,
  BM: 1,
  BN: 1,
  BY: 1,
  CH: 1,
  CL: 1,
  CM: 1,
  CN: 1,
  CR: 1,
  CY: 1,
  CZ: 1,
  DE: 1,
  DJ: 6,
  DK: 1,
  DZ: 6,
  EC: 1,
  EE: 1,
  EG: 6,
  ES: 1,
  FI: 1,
  FJ: 1,
  FO: 1,
  FR: 1,
  GB: 1,
  GE: 1,
  GF: 1,
  GP: 1,
  GR: 1,
  HR: 1,
  HU: 1,
  IE: 1,
  IQ: 6,
  IR: 6,
  IS: 1,
  IT: 1,
  JO: 6,
  KG: 1,
  KW: 6,
  KZ: 1,
  LB: 1,
  LI: 1,
  LK: 1,
  LT: 1,
  LU: 1,
  LV: 1,
  LY: 6,
  MC: 1,
  MD: 1,
  ME: 1,
  MK: 1,
  MN: 1,
  MQ: 1,
  MV: 5,
  MY: 1,
  NL: 1,
  NO: 1,
  NZ: 1,
  OM: 6,
  PL: 1,
  QA: 6,
  RE: 1,
  RO: 1,
  RS: 1,
  RU: 1,
  SD: 6,
  SE: 1,
  SI: 1,
  SK: 1,
  SM: 1,
  SY: 6,
  TJ: 1,
  TM: 1,
  TR: 1,
  UA: 1,
  UY: 1,
  UZ: 1,
  VA: 1,
  VN: 1,
  XK: 1
};

// node_modules/@internationalized/date/dist/queries.mjs
function $14e0f24ef4ac5c92$export$ea39ec197993aef0(a2, b2) {
  b2 = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(b2, a2.calendar);
  return a2.era === b2.era && a2.year === b2.year && a2.month === b2.month && a2.day === b2.day;
}
function $14e0f24ef4ac5c92$export$a18c89cbd24170ff(a2, b2) {
  b2 = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(b2, a2.calendar);
  a2 = $14e0f24ef4ac5c92$export$a5a3b454ada2268e(a2);
  b2 = $14e0f24ef4ac5c92$export$a5a3b454ada2268e(b2);
  return a2.era === b2.era && a2.year === b2.year && a2.month === b2.month;
}
function $14e0f24ef4ac5c92$export$5841f9eb9773f25f(a2, b2) {
  b2 = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(b2, a2.calendar);
  a2 = $14e0f24ef4ac5c92$export$f91e89d3d0406102(a2);
  b2 = $14e0f24ef4ac5c92$export$f91e89d3d0406102(b2);
  return a2.era === b2.era && a2.year === b2.year;
}
function $14e0f24ef4ac5c92$export$91b62ebf2ba703ee(a2, b2) {
  return a2.calendar.identifier === b2.calendar.identifier && a2.era === b2.era && a2.year === b2.year && a2.month === b2.month && a2.day === b2.day;
}
function $14e0f24ef4ac5c92$export$629b0a497aa65267(date, timeZone) {
  return $14e0f24ef4ac5c92$export$ea39ec197993aef0(date, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3(timeZone));
}
function $14e0f24ef4ac5c92$export$2061056d06d7cdf7(date, locale) {
  let julian = date.calendar.toJulianDay(date);
  let dayOfWeek = Math.ceil(julian + 1 - $14e0f24ef4ac5c92$var$getWeekStart(locale)) % 7;
  if (dayOfWeek < 0) dayOfWeek += 7;
  return dayOfWeek;
}
function $14e0f24ef4ac5c92$export$461939dd4422153(timeZone) {
  return (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(Date.now(), timeZone);
}
function $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3(timeZone) {
  return (0, $11d87f3f76e88657$export$93522d1a439f3617)($14e0f24ef4ac5c92$export$461939dd4422153(timeZone));
}
function $14e0f24ef4ac5c92$export$68781ddf31c0090f(a2, b2) {
  return a2.calendar.toJulianDay(a2) - b2.calendar.toJulianDay(b2);
}
function $14e0f24ef4ac5c92$export$c19a80a9721b80f6(a2, b2) {
  return $14e0f24ef4ac5c92$var$timeToMs(a2) - $14e0f24ef4ac5c92$var$timeToMs(b2);
}
function $14e0f24ef4ac5c92$var$timeToMs(a2) {
  return a2.hour * 36e5 + a2.minute * 6e4 + a2.second * 1e3 + a2.millisecond;
}
var $14e0f24ef4ac5c92$var$localTimeZone = null;
function $14e0f24ef4ac5c92$export$aa8b41735afcabd2() {
  if ($14e0f24ef4ac5c92$var$localTimeZone == null) $14e0f24ef4ac5c92$var$localTimeZone = new Intl.DateTimeFormat().resolvedOptions().timeZone;
  return $14e0f24ef4ac5c92$var$localTimeZone;
}
function $14e0f24ef4ac5c92$export$a5a3b454ada2268e(date) {
  return date.subtract({
    days: date.day - 1
  });
}
function $14e0f24ef4ac5c92$export$a2258d9c4118825c(date) {
  return date.add({
    days: date.calendar.getDaysInMonth(date) - date.day
  });
}
function $14e0f24ef4ac5c92$export$f91e89d3d0406102(date) {
  return $14e0f24ef4ac5c92$export$a5a3b454ada2268e(date.subtract({
    months: date.month - 1
  }));
}
function $14e0f24ef4ac5c92$export$5412ac11713b72ad(date) {
  if (date.calendar.getMinimumMonthInYear) return date.calendar.getMinimumMonthInYear(date);
  return 1;
}
function $14e0f24ef4ac5c92$export$b2f4953d301981d5(date) {
  if (date.calendar.getMinimumDayInMonth) return date.calendar.getMinimumDayInMonth(date);
  return 1;
}
function $14e0f24ef4ac5c92$export$42c81a444fbfb5d4(date, locale) {
  let dayOfWeek = $14e0f24ef4ac5c92$export$2061056d06d7cdf7(date, locale);
  return date.subtract({
    days: dayOfWeek
  });
}
function $14e0f24ef4ac5c92$export$ef8b6d9133084f4e(date, locale) {
  return $14e0f24ef4ac5c92$export$42c81a444fbfb5d4(date, locale).add({
    days: 6
  });
}
var $14e0f24ef4ac5c92$var$cachedRegions = /* @__PURE__ */ new Map();
function $14e0f24ef4ac5c92$var$getRegion(locale) {
  if (Intl.Locale) {
    let region = $14e0f24ef4ac5c92$var$cachedRegions.get(locale);
    if (!region) {
      region = new Intl.Locale(locale).maximize().region;
      if (region) $14e0f24ef4ac5c92$var$cachedRegions.set(locale, region);
    }
    return region;
  }
  let part = locale.split("-")[1];
  return part === "u" ? void 0 : part;
}
function $14e0f24ef4ac5c92$var$getWeekStart(locale) {
  let region = $14e0f24ef4ac5c92$var$getRegion(locale);
  return region ? (0, $2fe286d2fb449abb$export$7a5acbd77d414bd9)[region] || 0 : 0;
}
function $14e0f24ef4ac5c92$export$ccc1b2479e7dd654(date, locale) {
  let days = date.calendar.getDaysInMonth(date);
  return Math.ceil(($14e0f24ef4ac5c92$export$2061056d06d7cdf7($14e0f24ef4ac5c92$export$a5a3b454ada2268e(date), locale) + days) / 7);
}
function $14e0f24ef4ac5c92$export$5c333a116e949cdd(a2, b2) {
  if (a2 && b2) return a2.compare(b2) <= 0 ? a2 : b2;
  return a2 || b2;
}
function $14e0f24ef4ac5c92$export$a75f2bff57811055(a2, b2) {
  if (a2 && b2) return a2.compare(b2) >= 0 ? a2 : b2;
  return a2 || b2;
}

// node_modules/@internationalized/date/dist/conversion.mjs
function $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) {
  date = $11d87f3f76e88657$export$b4a036af3fc0b032(date, new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
  let year = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(date.era, date.year);
  return $11d87f3f76e88657$var$epochFromParts(year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);
}
function $11d87f3f76e88657$var$epochFromParts(year, month, day, hour, minute, second, millisecond) {
  let date = /* @__PURE__ */ new Date();
  date.setUTCHours(hour, minute, second, millisecond);
  date.setUTCFullYear(year, month - 1, day);
  return date.getTime();
}
function $11d87f3f76e88657$export$59c99f3515d3493f(ms, timeZone) {
  if (timeZone === "UTC") return 0;
  if (ms > 0 && timeZone === (0, $14e0f24ef4ac5c92$export$aa8b41735afcabd2)()) return new Date(ms).getTimezoneOffset() * -6e4;
  let { year, month, day, hour, minute, second } = $11d87f3f76e88657$var$getTimeZoneParts(ms, timeZone);
  let utc = $11d87f3f76e88657$var$epochFromParts(year, month, day, hour, minute, second, 0);
  return utc - Math.floor(ms / 1e3) * 1e3;
}
var $11d87f3f76e88657$var$formattersByTimeZone = /* @__PURE__ */ new Map();
function $11d87f3f76e88657$var$getTimeZoneParts(ms, timeZone) {
  let formatter = $11d87f3f76e88657$var$formattersByTimeZone.get(timeZone);
  if (!formatter) {
    formatter = new Intl.DateTimeFormat("en-US", {
      timeZone,
      hour12: false,
      era: "short",
      year: "numeric",
      month: "numeric",
      day: "numeric",
      hour: "numeric",
      minute: "numeric",
      second: "numeric"
    });
    $11d87f3f76e88657$var$formattersByTimeZone.set(timeZone, formatter);
  }
  let parts = formatter.formatToParts(new Date(ms));
  let namedParts = {};
  for (let part of parts) if (part.type !== "literal") namedParts[part.type] = part.value;
  return {
    // Firefox returns B instead of BC... https://bugzilla.mozilla.org/show_bug.cgi?id=1752253
    year: namedParts.era === "BC" || namedParts.era === "B" ? -namedParts.year + 1 : +namedParts.year,
    month: +namedParts.month,
    day: +namedParts.day,
    hour: namedParts.hour === "24" ? 0 : +namedParts.hour,
    minute: +namedParts.minute,
    second: +namedParts.second
  };
}
var $11d87f3f76e88657$var$DAYMILLIS = 864e5;
function $11d87f3f76e88657$export$136f38efe7caf549(date, timeZone) {
  let ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date);
  let earlier = ms - $11d87f3f76e88657$export$59c99f3515d3493f(ms - $11d87f3f76e88657$var$DAYMILLIS, timeZone);
  let later = ms - $11d87f3f76e88657$export$59c99f3515d3493f(ms + $11d87f3f76e88657$var$DAYMILLIS, timeZone);
  return $11d87f3f76e88657$var$getValidWallTimes(date, timeZone, earlier, later);
}
function $11d87f3f76e88657$var$getValidWallTimes(date, timeZone, earlier, later) {
  let found = earlier === later ? [
    earlier
  ] : [
    earlier,
    later
  ];
  return found.filter((absolute) => $11d87f3f76e88657$var$isValidWallTime(date, timeZone, absolute));
}
function $11d87f3f76e88657$var$isValidWallTime(date, timeZone, absolute) {
  let parts = $11d87f3f76e88657$var$getTimeZoneParts(absolute, timeZone);
  return date.year === parts.year && date.month === parts.month && date.day === parts.day && date.hour === parts.hour && date.minute === parts.minute && date.second === parts.second;
}
function $11d87f3f76e88657$export$5107c82f94518f5c(date, timeZone, disambiguation = "compatible") {
  let dateTime = $11d87f3f76e88657$export$b21e0b124e224484(date);
  if (timeZone === "UTC") return $11d87f3f76e88657$export$bd4fb2bc8bb06fb(dateTime);
  if (timeZone === (0, $14e0f24ef4ac5c92$export$aa8b41735afcabd2)() && disambiguation === "compatible") {
    dateTime = $11d87f3f76e88657$export$b4a036af3fc0b032(dateTime, new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
    let date2 = /* @__PURE__ */ new Date();
    let year = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(dateTime.era, dateTime.year);
    date2.setFullYear(year, dateTime.month - 1, dateTime.day);
    date2.setHours(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);
    return date2.getTime();
  }
  let ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(dateTime);
  let offsetBefore = $11d87f3f76e88657$export$59c99f3515d3493f(ms - $11d87f3f76e88657$var$DAYMILLIS, timeZone);
  let offsetAfter = $11d87f3f76e88657$export$59c99f3515d3493f(ms + $11d87f3f76e88657$var$DAYMILLIS, timeZone);
  let valid = $11d87f3f76e88657$var$getValidWallTimes(dateTime, timeZone, ms - offsetBefore, ms - offsetAfter);
  if (valid.length === 1) return valid[0];
  if (valid.length > 1) switch (disambiguation) {
    case "compatible":
    case "earlier":
      return valid[0];
    case "later":
      return valid[valid.length - 1];
    case "reject":
      throw new RangeError("Multiple possible absolute times found");
  }
  switch (disambiguation) {
    case "earlier":
      return Math.min(ms - offsetBefore, ms - offsetAfter);
    case "compatible":
    case "later":
      return Math.max(ms - offsetBefore, ms - offsetAfter);
    case "reject":
      throw new RangeError("No such absolute time found");
  }
}
function $11d87f3f76e88657$export$e67a095c620b86fe(dateTime, timeZone, disambiguation = "compatible") {
  return new Date($11d87f3f76e88657$export$5107c82f94518f5c(dateTime, timeZone, disambiguation));
}
function $11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone) {
  let offset3 = $11d87f3f76e88657$export$59c99f3515d3493f(ms, timeZone);
  let date = new Date(ms + offset3);
  let year = date.getUTCFullYear();
  let month = date.getUTCMonth() + 1;
  let day = date.getUTCDate();
  let hour = date.getUTCHours();
  let minute = date.getUTCMinutes();
  let second = date.getUTCSeconds();
  let millisecond = date.getUTCMilliseconds();
  return new (0, $35ea8db9cb2ccb90$export$d3b7288e7994edea)(year, month, day, timeZone, offset3, hour, minute, second, millisecond);
}
function $11d87f3f76e88657$export$93522d1a439f3617(dateTime) {
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(dateTime.calendar, dateTime.era, dateTime.year, dateTime.month, dateTime.day);
}
function $11d87f3f76e88657$export$b21e0b124e224484(date, time) {
  let hour = 0, minute = 0, second = 0, millisecond = 0;
  if ("timeZone" in date) ({ hour, minute, second, millisecond } = date);
  else if ("hour" in date && !time) return date;
  if (time) ({ hour, minute, second, millisecond } = time);
  return new (0, $35ea8db9cb2ccb90$export$ca871e8dbb80966f)(date.calendar, date.era, date.year, date.month, date.day, hour, minute, second, millisecond);
}
function $11d87f3f76e88657$export$d33f79e3ffc3dc83(dateTime) {
  return new (0, $35ea8db9cb2ccb90$export$680ea196effce5f)(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);
}
function $11d87f3f76e88657$export$b4a036af3fc0b032(date, calendar) {
  if (date.calendar.identifier === calendar.identifier) return date;
  let calendarDate = calendar.fromJulianDay(date.calendar.toJulianDay(date));
  let copy = date.copy();
  copy.calendar = calendar;
  copy.era = calendarDate.era;
  copy.year = calendarDate.year;
  copy.month = calendarDate.month;
  copy.day = calendarDate.day;
  (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(copy);
  return copy;
}
function $11d87f3f76e88657$export$84c95a83c799e074(date, timeZone, disambiguation) {
  if (date instanceof (0, $35ea8db9cb2ccb90$export$d3b7288e7994edea)) {
    if (date.timeZone === timeZone) return date;
    return $11d87f3f76e88657$export$538b00033cc11c75(date, timeZone);
  }
  let ms = $11d87f3f76e88657$export$5107c82f94518f5c(date, timeZone, disambiguation);
  return $11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone);
}
function $11d87f3f76e88657$export$83aac07b4c37b25(date) {
  let ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) - date.offset;
  return new Date(ms);
}
function $11d87f3f76e88657$export$538b00033cc11c75(date, timeZone) {
  let ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) - date.offset;
  return $11d87f3f76e88657$export$b4a036af3fc0b032($11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone), date.calendar);
}

// node_modules/@internationalized/date/dist/manipulation.mjs
var $735220c2d4774dd3$var$ONE_HOUR = 36e5;
function $735220c2d4774dd3$export$e16d8520af44a096(date, duration) {
  let mutableDate = date.copy();
  let days = "hour" in mutableDate ? $735220c2d4774dd3$var$addTimeFields(mutableDate, duration) : 0;
  $735220c2d4774dd3$var$addYears(mutableDate, duration.years || 0);
  if (mutableDate.calendar.balanceYearMonth) mutableDate.calendar.balanceYearMonth(mutableDate, date);
  mutableDate.month += duration.months || 0;
  $735220c2d4774dd3$var$balanceYearMonth(mutableDate);
  $735220c2d4774dd3$var$constrainMonthDay(mutableDate);
  mutableDate.day += (duration.weeks || 0) * 7;
  mutableDate.day += duration.days || 0;
  mutableDate.day += days;
  $735220c2d4774dd3$var$balanceDay(mutableDate);
  if (mutableDate.calendar.balanceDate) mutableDate.calendar.balanceDate(mutableDate);
  if (mutableDate.year < 1) {
    mutableDate.year = 1;
    mutableDate.month = 1;
    mutableDate.day = 1;
  }
  let maxYear = mutableDate.calendar.getYearsInEra(mutableDate);
  if (mutableDate.year > maxYear) {
    var _mutableDate_calendar_isInverseEra, _mutableDate_calendar;
    let isInverseEra = (_mutableDate_calendar_isInverseEra = (_mutableDate_calendar = mutableDate.calendar).isInverseEra) === null || _mutableDate_calendar_isInverseEra === void 0 ? void 0 : _mutableDate_calendar_isInverseEra.call(_mutableDate_calendar, mutableDate);
    mutableDate.year = maxYear;
    mutableDate.month = isInverseEra ? 1 : mutableDate.calendar.getMonthsInYear(mutableDate);
    mutableDate.day = isInverseEra ? 1 : mutableDate.calendar.getDaysInMonth(mutableDate);
  }
  if (mutableDate.month < 1) {
    mutableDate.month = 1;
    mutableDate.day = 1;
  }
  let maxMonth = mutableDate.calendar.getMonthsInYear(mutableDate);
  if (mutableDate.month > maxMonth) {
    mutableDate.month = maxMonth;
    mutableDate.day = mutableDate.calendar.getDaysInMonth(mutableDate);
  }
  mutableDate.day = Math.max(1, Math.min(mutableDate.calendar.getDaysInMonth(mutableDate), mutableDate.day));
  return mutableDate;
}
function $735220c2d4774dd3$var$addYears(date, years) {
  var _date_calendar_isInverseEra, _date_calendar;
  if ((_date_calendar_isInverseEra = (_date_calendar = date.calendar).isInverseEra) === null || _date_calendar_isInverseEra === void 0 ? void 0 : _date_calendar_isInverseEra.call(_date_calendar, date)) years = -years;
  date.year += years;
}
function $735220c2d4774dd3$var$balanceYearMonth(date) {
  while (date.month < 1) {
    $735220c2d4774dd3$var$addYears(date, -1);
    date.month += date.calendar.getMonthsInYear(date);
  }
  let monthsInYear = 0;
  while (date.month > (monthsInYear = date.calendar.getMonthsInYear(date))) {
    date.month -= monthsInYear;
    $735220c2d4774dd3$var$addYears(date, 1);
  }
}
function $735220c2d4774dd3$var$balanceDay(date) {
  while (date.day < 1) {
    date.month--;
    $735220c2d4774dd3$var$balanceYearMonth(date);
    date.day += date.calendar.getDaysInMonth(date);
  }
  while (date.day > date.calendar.getDaysInMonth(date)) {
    date.day -= date.calendar.getDaysInMonth(date);
    date.month++;
    $735220c2d4774dd3$var$balanceYearMonth(date);
  }
}
function $735220c2d4774dd3$var$constrainMonthDay(date) {
  date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));
  date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));
}
function $735220c2d4774dd3$export$c4e2ecac49351ef2(date) {
  if (date.calendar.constrainDate) date.calendar.constrainDate(date);
  date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));
  $735220c2d4774dd3$var$constrainMonthDay(date);
}
function $735220c2d4774dd3$export$3e2544e88a25bff8(duration) {
  let inverseDuration = {};
  for (let key in duration) if (typeof duration[key] === "number") inverseDuration[key] = -duration[key];
  return inverseDuration;
}
function $735220c2d4774dd3$export$4e2d2ead65e5f7e3(date, duration) {
  return $735220c2d4774dd3$export$e16d8520af44a096(date, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));
}
function $735220c2d4774dd3$export$adaa4cf7ef1b65be(date, fields) {
  let mutableDate = date.copy();
  if (fields.era != null) mutableDate.era = fields.era;
  if (fields.year != null) mutableDate.year = fields.year;
  if (fields.month != null) mutableDate.month = fields.month;
  if (fields.day != null) mutableDate.day = fields.day;
  $735220c2d4774dd3$export$c4e2ecac49351ef2(mutableDate);
  return mutableDate;
}
function $735220c2d4774dd3$export$e5d5e1c1822b6e56(value, fields) {
  let mutableValue = value.copy();
  if (fields.hour != null) mutableValue.hour = fields.hour;
  if (fields.minute != null) mutableValue.minute = fields.minute;
  if (fields.second != null) mutableValue.second = fields.second;
  if (fields.millisecond != null) mutableValue.millisecond = fields.millisecond;
  $735220c2d4774dd3$export$7555de1e070510cb(mutableValue);
  return mutableValue;
}
function $735220c2d4774dd3$var$balanceTime(time) {
  time.second += Math.floor(time.millisecond / 1e3);
  time.millisecond = $735220c2d4774dd3$var$nonNegativeMod(time.millisecond, 1e3);
  time.minute += Math.floor(time.second / 60);
  time.second = $735220c2d4774dd3$var$nonNegativeMod(time.second, 60);
  time.hour += Math.floor(time.minute / 60);
  time.minute = $735220c2d4774dd3$var$nonNegativeMod(time.minute, 60);
  let days = Math.floor(time.hour / 24);
  time.hour = $735220c2d4774dd3$var$nonNegativeMod(time.hour, 24);
  return days;
}
function $735220c2d4774dd3$export$7555de1e070510cb(time) {
  time.millisecond = Math.max(0, Math.min(time.millisecond, 1e3));
  time.second = Math.max(0, Math.min(time.second, 59));
  time.minute = Math.max(0, Math.min(time.minute, 59));
  time.hour = Math.max(0, Math.min(time.hour, 23));
}
function $735220c2d4774dd3$var$nonNegativeMod(a2, b2) {
  let result = a2 % b2;
  if (result < 0) result += b2;
  return result;
}
function $735220c2d4774dd3$var$addTimeFields(time, duration) {
  time.hour += duration.hours || 0;
  time.minute += duration.minutes || 0;
  time.second += duration.seconds || 0;
  time.millisecond += duration.milliseconds || 0;
  return $735220c2d4774dd3$var$balanceTime(time);
}
function $735220c2d4774dd3$export$7ed87b6bc2506470(time, duration) {
  let res = time.copy();
  $735220c2d4774dd3$var$addTimeFields(res, duration);
  return res;
}
function $735220c2d4774dd3$export$fe34d3a381cd7501(time, duration) {
  return $735220c2d4774dd3$export$7ed87b6bc2506470(time, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));
}
function $735220c2d4774dd3$export$d52ced6badfb9a4c(value, field, amount, options) {
  let mutable = value.copy();
  switch (field) {
    case "era": {
      let eras = value.calendar.getEras();
      let eraIndex = eras.indexOf(value.era);
      if (eraIndex < 0) throw new Error("Invalid era: " + value.era);
      eraIndex = $735220c2d4774dd3$var$cycleValue(eraIndex, amount, 0, eras.length - 1, options === null || options === void 0 ? void 0 : options.round);
      mutable.era = eras[eraIndex];
      $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);
      break;
    }
    case "year":
      var _mutable_calendar_isInverseEra, _mutable_calendar;
      if ((_mutable_calendar_isInverseEra = (_mutable_calendar = mutable.calendar).isInverseEra) === null || _mutable_calendar_isInverseEra === void 0 ? void 0 : _mutable_calendar_isInverseEra.call(_mutable_calendar, mutable)) amount = -amount;
      mutable.year = $735220c2d4774dd3$var$cycleValue(value.year, amount, -Infinity, 9999, options === null || options === void 0 ? void 0 : options.round);
      if (mutable.year === -Infinity) mutable.year = 1;
      if (mutable.calendar.balanceYearMonth) mutable.calendar.balanceYearMonth(mutable, value);
      break;
    case "month":
      mutable.month = $735220c2d4774dd3$var$cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options === null || options === void 0 ? void 0 : options.round);
      break;
    case "day":
      mutable.day = $735220c2d4774dd3$var$cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options === null || options === void 0 ? void 0 : options.round);
      break;
    default:
      throw new Error("Unsupported field " + field);
  }
  if (value.calendar.balanceDate) value.calendar.balanceDate(mutable);
  $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);
  return mutable;
}
function $735220c2d4774dd3$export$dd02b3e0007dfe28(value, field, amount, options) {
  let mutable = value.copy();
  switch (field) {
    case "hour": {
      let hours = value.hour;
      let min2 = 0;
      let max2 = 23;
      if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {
        let isPM = hours >= 12;
        min2 = isPM ? 12 : 0;
        max2 = isPM ? 23 : 11;
      }
      mutable.hour = $735220c2d4774dd3$var$cycleValue(hours, amount, min2, max2, options === null || options === void 0 ? void 0 : options.round);
      break;
    }
    case "minute":
      mutable.minute = $735220c2d4774dd3$var$cycleValue(value.minute, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);
      break;
    case "second":
      mutable.second = $735220c2d4774dd3$var$cycleValue(value.second, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);
      break;
    case "millisecond":
      mutable.millisecond = $735220c2d4774dd3$var$cycleValue(value.millisecond, amount, 0, 999, options === null || options === void 0 ? void 0 : options.round);
      break;
    default:
      throw new Error("Unsupported field " + field);
  }
  return mutable;
}
function $735220c2d4774dd3$var$cycleValue(value, amount, min2, max2, round2 = false) {
  if (round2) {
    value += Math.sign(amount);
    if (value < min2) value = max2;
    let div = Math.abs(amount);
    if (amount > 0) value = Math.ceil(value / div) * div;
    else value = Math.floor(value / div) * div;
    if (value > max2) value = min2;
  } else {
    value += amount;
    if (value < min2) value = max2 - (min2 - value - 1);
    else if (value > max2) value = min2 + (value - max2 - 1);
  }
  return value;
}
function $735220c2d4774dd3$export$96b1d28349274637(dateTime, duration) {
  let ms;
  if (duration.years != null && duration.years !== 0 || duration.months != null && duration.months !== 0 || duration.weeks != null && duration.weeks !== 0 || duration.days != null && duration.days !== 0) {
    let res2 = $735220c2d4774dd3$export$e16d8520af44a096((0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime), {
      years: duration.years,
      months: duration.months,
      weeks: duration.weeks,
      days: duration.days
    });
    ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res2, dateTime.timeZone);
  } else
    ms = (0, $11d87f3f76e88657$export$bd4fb2bc8bb06fb)(dateTime) - dateTime.offset;
  ms += duration.milliseconds || 0;
  ms += (duration.seconds || 0) * 1e3;
  ms += (duration.minutes || 0) * 6e4;
  ms += (duration.hours || 0) * 36e5;
  let res = (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone);
  return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(res, dateTime.calendar);
}
function $735220c2d4774dd3$export$6814caac34ca03c7(dateTime, duration) {
  return $735220c2d4774dd3$export$96b1d28349274637(dateTime, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));
}
function $735220c2d4774dd3$export$9a297d111fc86b79(dateTime, field, amount, options) {
  switch (field) {
    case "hour": {
      let min2 = 0;
      let max2 = 23;
      if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {
        let isPM = dateTime.hour >= 12;
        min2 = isPM ? 12 : 0;
        max2 = isPM ? 23 : 11;
      }
      let plainDateTime = (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime);
      let minDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {
        hour: min2
      }), new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      let minAbsolute = [
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(minDate, dateTime.timeZone, "earlier"),
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(minDate, dateTime.timeZone, "later")
      ].filter((ms2) => (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms2, dateTime.timeZone).day === minDate.day)[0];
      let maxDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {
        hour: max2
      }), new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      let maxAbsolute = [
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(maxDate, dateTime.timeZone, "earlier"),
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(maxDate, dateTime.timeZone, "later")
      ].filter((ms2) => (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms2, dateTime.timeZone).day === maxDate.day).pop();
      let ms = (0, $11d87f3f76e88657$export$bd4fb2bc8bb06fb)(dateTime) - dateTime.offset;
      let hours = Math.floor(ms / $735220c2d4774dd3$var$ONE_HOUR);
      let remainder = ms % $735220c2d4774dd3$var$ONE_HOUR;
      ms = $735220c2d4774dd3$var$cycleValue(hours, amount, Math.floor(minAbsolute / $735220c2d4774dd3$var$ONE_HOUR), Math.floor(maxAbsolute / $735220c2d4774dd3$var$ONE_HOUR), options === null || options === void 0 ? void 0 : options.round) * $735220c2d4774dd3$var$ONE_HOUR + remainder;
      return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);
    }
    case "minute":
    case "second":
    case "millisecond":
      return $735220c2d4774dd3$export$dd02b3e0007dfe28(dateTime, field, amount, options);
    case "era":
    case "year":
    case "month":
    case "day": {
      let res = $735220c2d4774dd3$export$d52ced6badfb9a4c((0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime), field, amount, options);
      let ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone);
      return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);
    }
    default:
      throw new Error("Unsupported field " + field);
  }
}
function $735220c2d4774dd3$export$31b5430eb18be4f8(dateTime, fields, disambiguation) {
  let plainDateTime = (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime);
  let res = $735220c2d4774dd3$export$e5d5e1c1822b6e56($735220c2d4774dd3$export$adaa4cf7ef1b65be(plainDateTime, fields), fields);
  if (res.compare(plainDateTime) === 0) return dateTime;
  let ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone, disambiguation);
  return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);
}

// node_modules/@internationalized/date/dist/string.mjs
var $fae977aafc393c5c$var$TIME_RE = /^(\d{2})(?::(\d{2}))?(?::(\d{2}))?(\.\d+)?$/;
var $fae977aafc393c5c$var$DATE_RE = /^(\d{4})-(\d{2})-(\d{2})$/;
var $fae977aafc393c5c$var$DATE_TIME_RE = /^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}))?(?::(\d{2}))?(?::(\d{2}))?(\.\d+)?$/;
var $fae977aafc393c5c$var$ZONED_DATE_TIME_RE = /^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}))?(?::(\d{2}))?(?::(\d{2}))?(\.\d+)?(?:([+-]\d{2})(?::?(\d{2}))?)?\[(.*?)\]$/;
var $fae977aafc393c5c$var$ABSOLUTE_RE = /^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}))?(?::(\d{2}))?(?::(\d{2}))?(\.\d+)?(?:(?:([+-]\d{2})(?::?(\d{2}))?)|Z)$/;
var $fae977aafc393c5c$var$requiredDurationTimeGroups = [
  "hours",
  "minutes",
  "seconds"
];
var $fae977aafc393c5c$var$requiredDurationGroups = [
  "years",
  "months",
  "weeks",
  "days",
  ...$fae977aafc393c5c$var$requiredDurationTimeGroups
];
function $fae977aafc393c5c$export$c9698ec7f05a07e1(value) {
  let m2 = value.match($fae977aafc393c5c$var$TIME_RE);
  if (!m2) throw new Error("Invalid ISO 8601 time string: " + value);
  return new (0, $35ea8db9cb2ccb90$export$680ea196effce5f)($fae977aafc393c5c$var$parseNumber(m2[1], 0, 23), m2[2] ? $fae977aafc393c5c$var$parseNumber(m2[2], 0, 59) : 0, m2[3] ? $fae977aafc393c5c$var$parseNumber(m2[3], 0, 59) : 0, m2[4] ? $fae977aafc393c5c$var$parseNumber(m2[4], 0, Infinity) * 1e3 : 0);
}
function $fae977aafc393c5c$export$6b862160d295c8e(value) {
  let m2 = value.match($fae977aafc393c5c$var$DATE_RE);
  if (!m2) throw new Error("Invalid ISO 8601 date string: " + value);
  let date = new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)($fae977aafc393c5c$var$parseNumber(m2[1], 0, 9999), $fae977aafc393c5c$var$parseNumber(m2[2], 1, 12), 1);
  date.day = $fae977aafc393c5c$var$parseNumber(m2[3], 0, date.calendar.getDaysInMonth(date));
  return date;
}
function $fae977aafc393c5c$export$588937bcd60ade55(value) {
  let m2 = value.match($fae977aafc393c5c$var$DATE_TIME_RE);
  if (!m2) throw new Error("Invalid ISO 8601 date time string: " + value);
  let date = new (0, $35ea8db9cb2ccb90$export$ca871e8dbb80966f)($fae977aafc393c5c$var$parseNumber(m2[1], 1, 9999), $fae977aafc393c5c$var$parseNumber(m2[2], 1, 12), 1, m2[4] ? $fae977aafc393c5c$var$parseNumber(m2[4], 0, 23) : 0, m2[5] ? $fae977aafc393c5c$var$parseNumber(m2[5], 0, 59) : 0, m2[6] ? $fae977aafc393c5c$var$parseNumber(m2[6], 0, 59) : 0, m2[7] ? $fae977aafc393c5c$var$parseNumber(m2[7], 0, Infinity) * 1e3 : 0);
  date.day = $fae977aafc393c5c$var$parseNumber(m2[3], 0, date.calendar.getDaysInMonth(date));
  return date;
}
function $fae977aafc393c5c$export$fd7893f06e92a6a4(value, disambiguation) {
  let m2 = value.match($fae977aafc393c5c$var$ZONED_DATE_TIME_RE);
  if (!m2) throw new Error("Invalid ISO 8601 date time string: " + value);
  let date = new (0, $35ea8db9cb2ccb90$export$d3b7288e7994edea)($fae977aafc393c5c$var$parseNumber(m2[1], 1, 9999), $fae977aafc393c5c$var$parseNumber(m2[2], 1, 12), 1, m2[10], 0, m2[4] ? $fae977aafc393c5c$var$parseNumber(m2[4], 0, 23) : 0, m2[5] ? $fae977aafc393c5c$var$parseNumber(m2[5], 0, 59) : 0, m2[6] ? $fae977aafc393c5c$var$parseNumber(m2[6], 0, 59) : 0, m2[7] ? $fae977aafc393c5c$var$parseNumber(m2[7], 0, Infinity) * 1e3 : 0);
  date.day = $fae977aafc393c5c$var$parseNumber(m2[3], 0, date.calendar.getDaysInMonth(date));
  let plainDateTime = (0, $11d87f3f76e88657$export$b21e0b124e224484)(date);
  let ms;
  if (m2[8]) {
    var _m_;
    date.offset = $fae977aafc393c5c$var$parseNumber(m2[8], -23, 23) * 36e5 + $fae977aafc393c5c$var$parseNumber((_m_ = m2[9]) !== null && _m_ !== void 0 ? _m_ : "0", 0, 59) * 6e4;
    ms = (0, $11d87f3f76e88657$export$bd4fb2bc8bb06fb)(date) - date.offset;
    let absolutes = (0, $11d87f3f76e88657$export$136f38efe7caf549)(plainDateTime, date.timeZone);
    if (!absolutes.includes(ms)) throw new Error(`Offset ${$fae977aafc393c5c$var$offsetToString(date.offset)} is invalid for ${$fae977aafc393c5c$export$4223de14708adc63(date)} in ${date.timeZone}`);
  } else
    ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)((0, $11d87f3f76e88657$export$b21e0b124e224484)(plainDateTime), date.timeZone, disambiguation);
  return (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, date.timeZone);
}
function $fae977aafc393c5c$export$5adfdab05168c219(value, timeZone) {
  let m2 = value.match($fae977aafc393c5c$var$ABSOLUTE_RE);
  if (!m2) throw new Error("Invalid ISO 8601 date time string: " + value);
  let date = new (0, $35ea8db9cb2ccb90$export$d3b7288e7994edea)($fae977aafc393c5c$var$parseNumber(m2[1], 1, 9999), $fae977aafc393c5c$var$parseNumber(m2[2], 1, 12), 1, timeZone, 0, m2[4] ? $fae977aafc393c5c$var$parseNumber(m2[4], 0, 23) : 0, m2[5] ? $fae977aafc393c5c$var$parseNumber(m2[5], 0, 59) : 0, m2[6] ? $fae977aafc393c5c$var$parseNumber(m2[6], 0, 59) : 0, m2[7] ? $fae977aafc393c5c$var$parseNumber(m2[7], 0, Infinity) * 1e3 : 0);
  date.day = $fae977aafc393c5c$var$parseNumber(m2[3], 0, date.calendar.getDaysInMonth(date));
  var _m_;
  if (m2[8]) date.offset = $fae977aafc393c5c$var$parseNumber(m2[8], -23, 23) * 36e5 + $fae977aafc393c5c$var$parseNumber((_m_ = m2[9]) !== null && _m_ !== void 0 ? _m_ : "0", 0, 59) * 6e4;
  return (0, $11d87f3f76e88657$export$538b00033cc11c75)(date, timeZone);
}
function $fae977aafc393c5c$export$8e384432362ed0f0(value) {
  return $fae977aafc393c5c$export$5adfdab05168c219(value, (0, $14e0f24ef4ac5c92$export$aa8b41735afcabd2)());
}
function $fae977aafc393c5c$var$parseNumber(value, min2, max2) {
  let val = Number(value);
  if (val < min2 || val > max2) throw new RangeError(`Value out of range: ${min2} <= ${val} <= ${max2}`);
  return val;
}
function $fae977aafc393c5c$export$f59dee82248f5ad4(time) {
  return `${String(time.hour).padStart(2, "0")}:${String(time.minute).padStart(2, "0")}:${String(time.second).padStart(2, "0")}${time.millisecond ? String(time.millisecond / 1e3).slice(1) : ""}`;
}
function $fae977aafc393c5c$export$60dfd74aa96791bd(date) {
  let gregorianDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(date, new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
  return `${String(gregorianDate.year).padStart(4, "0")}-${String(gregorianDate.month).padStart(2, "0")}-${String(gregorianDate.day).padStart(2, "0")}`;
}
function $fae977aafc393c5c$export$4223de14708adc63(date) {
  return `${$fae977aafc393c5c$export$60dfd74aa96791bd(date)}T${$fae977aafc393c5c$export$f59dee82248f5ad4(date)}`;
}
function $fae977aafc393c5c$var$offsetToString(offset3) {
  let sign = Math.sign(offset3) < 0 ? "-" : "+";
  offset3 = Math.abs(offset3);
  let offsetHours = Math.floor(offset3 / 36e5);
  let offsetMinutes = offset3 % 36e5 / 6e4;
  return `${sign}${String(offsetHours).padStart(2, "0")}:${String(offsetMinutes).padStart(2, "0")}`;
}
function $fae977aafc393c5c$export$bf79f1ebf4b18792(date) {
  return `${$fae977aafc393c5c$export$4223de14708adc63(date)}${$fae977aafc393c5c$var$offsetToString(date.offset)}[${date.timeZone}]`;
}

// node_modules/@swc/helpers/esm/_check_private_redeclaration.js
function _check_private_redeclaration(obj, privateCollection) {
  if (privateCollection.has(obj)) {
    throw new TypeError("Cannot initialize the same private elements twice on an object");
  }
}

// node_modules/@swc/helpers/esm/_class_private_field_init.js
function _class_private_field_init(obj, privateMap, value) {
  _check_private_redeclaration(obj, privateMap);
  privateMap.set(obj, value);
}

// node_modules/@internationalized/date/dist/CalendarDate.mjs
function $35ea8db9cb2ccb90$var$shiftArgs(args) {
  let calendar = typeof args[0] === "object" ? args.shift() : new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)();
  let era;
  if (typeof args[0] === "string") era = args.shift();
  else {
    let eras = calendar.getEras();
    era = eras[eras.length - 1];
  }
  let year = args.shift();
  let month = args.shift();
  let day = args.shift();
  return [
    calendar,
    era,
    year,
    month,
    day
  ];
}
var $35ea8db9cb2ccb90$var$_type = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$99faa760c7908e4f = class _$35ea8db9cb2ccb90$export$99faa760c7908e4f {
  /** Returns a copy of this date. */
  copy() {
    if (this.era) return new _$35ea8db9cb2ccb90$export$99faa760c7908e4f(this.calendar, this.era, this.year, this.month, this.day);
    else return new _$35ea8db9cb2ccb90$export$99faa760c7908e4f(this.calendar, this.year, this.month, this.day);
  }
  /** Returns a new `CalendarDate` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$e16d8520af44a096)(this, duration);
  }
  /** Returns a new `CalendarDate` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$4e2d2ead65e5f7e3)(this, duration);
  }
  /** Returns a new `CalendarDate` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields) {
    return (0, $735220c2d4774dd3$export$adaa4cf7ef1b65be)(this, fields);
  }
  /**
  * Returns a new `CalendarDate` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    return (0, $735220c2d4774dd3$export$d52ced6badfb9a4c)(this, field, amount, options);
  }
  /** Converts the date to a native JavaScript Date object, with the time set to midnight in the given time zone. */
  toDate(timeZone) {
    return (0, $11d87f3f76e88657$export$e67a095c620b86fe)(this, timeZone);
  }
  /** Converts the date to an ISO 8601 formatted string. */
  toString() {
    return (0, $fae977aafc393c5c$export$60dfd74aa96791bd)(this);
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(b2) {
    return (0, $14e0f24ef4ac5c92$export$68781ddf31c0090f)(this, b2);
  }
  constructor(...args) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type, {
      writable: true,
      value: void 0
    });
    let [calendar, era, year, month, day] = $35ea8db9cb2ccb90$var$shiftArgs(args);
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(this);
  }
};
var $35ea8db9cb2ccb90$var$_type1 = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$680ea196effce5f = class _$35ea8db9cb2ccb90$export$680ea196effce5f {
  /** Returns a copy of this time. */
  copy() {
    return new _$35ea8db9cb2ccb90$export$680ea196effce5f(this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `Time` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$7ed87b6bc2506470)(this, duration);
  }
  /** Returns a new `Time` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$fe34d3a381cd7501)(this, duration);
  }
  /** Returns a new `Time` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields) {
    return (0, $735220c2d4774dd3$export$e5d5e1c1822b6e56)(this, fields);
  }
  /**
  * Returns a new `Time` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    return (0, $735220c2d4774dd3$export$dd02b3e0007dfe28)(this, field, amount, options);
  }
  /** Converts the time to an ISO 8601 formatted string. */
  toString() {
    return (0, $fae977aafc393c5c$export$f59dee82248f5ad4)(this);
  }
  /** Compares this time with another. A negative result indicates that this time is before the given one, and a positive time indicates that it is after. */
  compare(b2) {
    return (0, $14e0f24ef4ac5c92$export$c19a80a9721b80f6)(this, b2);
  }
  constructor(hour = 0, minute = 0, second = 0, millisecond = 0) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type1, {
      writable: true,
      value: void 0
    });
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.millisecond = millisecond;
    (0, $735220c2d4774dd3$export$7555de1e070510cb)(this);
  }
};
var $35ea8db9cb2ccb90$var$_type2 = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$ca871e8dbb80966f = class _$35ea8db9cb2ccb90$export$ca871e8dbb80966f {
  /** Returns a copy of this date. */
  copy() {
    if (this.era) return new _$35ea8db9cb2ccb90$export$ca871e8dbb80966f(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);
    else return new _$35ea8db9cb2ccb90$export$ca871e8dbb80966f(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `CalendarDateTime` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$e16d8520af44a096)(this, duration);
  }
  /** Returns a new `CalendarDateTime` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$4e2d2ead65e5f7e3)(this, duration);
  }
  /** Returns a new `CalendarDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields) {
    return (0, $735220c2d4774dd3$export$adaa4cf7ef1b65be)((0, $735220c2d4774dd3$export$e5d5e1c1822b6e56)(this, fields), fields);
  }
  /**
  * Returns a new `CalendarDateTime` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    switch (field) {
      case "era":
      case "year":
      case "month":
      case "day":
        return (0, $735220c2d4774dd3$export$d52ced6badfb9a4c)(this, field, amount, options);
      default:
        return (0, $735220c2d4774dd3$export$dd02b3e0007dfe28)(this, field, amount, options);
    }
  }
  /** Converts the date to a native JavaScript Date object in the given time zone. */
  toDate(timeZone, disambiguation) {
    return (0, $11d87f3f76e88657$export$e67a095c620b86fe)(this, timeZone, disambiguation);
  }
  /** Converts the date to an ISO 8601 formatted string. */
  toString() {
    return (0, $fae977aafc393c5c$export$4223de14708adc63)(this);
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(b2) {
    let res = (0, $14e0f24ef4ac5c92$export$68781ddf31c0090f)(this, b2);
    if (res === 0) return (0, $14e0f24ef4ac5c92$export$c19a80a9721b80f6)(this, (0, $11d87f3f76e88657$export$b21e0b124e224484)(b2));
    return res;
  }
  constructor(...args) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type2, {
      writable: true,
      value: void 0
    });
    let [calendar, era, year, month, day] = $35ea8db9cb2ccb90$var$shiftArgs(args);
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = args.shift() || 0;
    this.minute = args.shift() || 0;
    this.second = args.shift() || 0;
    this.millisecond = args.shift() || 0;
    (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(this);
  }
};
var $35ea8db9cb2ccb90$var$_type3 = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$d3b7288e7994edea = class _$35ea8db9cb2ccb90$export$d3b7288e7994edea {
  /** Returns a copy of this date. */
  copy() {
    if (this.era) return new _$35ea8db9cb2ccb90$export$d3b7288e7994edea(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);
    else return new _$35ea8db9cb2ccb90$export$d3b7288e7994edea(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `ZonedDateTime` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$96b1d28349274637)(this, duration);
  }
  /** Returns a new `ZonedDateTime` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$6814caac34ca03c7)(this, duration);
  }
  /** Returns a new `ZonedDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields, disambiguation) {
    return (0, $735220c2d4774dd3$export$31b5430eb18be4f8)(this, fields, disambiguation);
  }
  /**
  * Returns a new `ZonedDateTime` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    return (0, $735220c2d4774dd3$export$9a297d111fc86b79)(this, field, amount, options);
  }
  /** Converts the date to a native JavaScript Date object. */
  toDate() {
    return (0, $11d87f3f76e88657$export$83aac07b4c37b25)(this);
  }
  /** Converts the date to an ISO 8601 formatted string, including the UTC offset and time zone identifier. */
  toString() {
    return (0, $fae977aafc393c5c$export$bf79f1ebf4b18792)(this);
  }
  /** Converts the date to an ISO 8601 formatted string in UTC. */
  toAbsoluteString() {
    return this.toDate().toISOString();
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(b2) {
    return this.toDate().getTime() - (0, $11d87f3f76e88657$export$84c95a83c799e074)(b2, this.timeZone).toDate().getTime();
  }
  constructor(...args) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type3, {
      writable: true,
      value: void 0
    });
    let [calendar, era, year, month, day] = $35ea8db9cb2ccb90$var$shiftArgs(args);
    let timeZone = args.shift();
    let offset3 = args.shift();
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    this.timeZone = timeZone;
    this.offset = offset3;
    this.hour = args.shift() || 0;
    this.minute = args.shift() || 0;
    this.second = args.shift() || 0;
    this.millisecond = args.shift() || 0;
    (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(this);
  }
};

// node_modules/@internationalized/date/dist/JapaneseCalendar.mjs
var $62225008020f0a13$var$ERA_START_DATES = [
  [
    1868,
    9,
    8
  ],
  [
    1912,
    7,
    30
  ],
  [
    1926,
    12,
    25
  ],
  [
    1989,
    1,
    8
  ],
  [
    2019,
    5,
    1
  ]
];
var $62225008020f0a13$var$ERA_END_DATES = [
  [
    1912,
    7,
    29
  ],
  [
    1926,
    12,
    24
  ],
  [
    1989,
    1,
    7
  ],
  [
    2019,
    4,
    30
  ]
];
var $62225008020f0a13$var$ERA_ADDENDS = [
  1867,
  1911,
  1925,
  1988,
  2018
];
var $62225008020f0a13$var$ERA_NAMES = [
  "meiji",
  "taisho",
  "showa",
  "heisei",
  "reiwa"
];
function $62225008020f0a13$var$findEraFromGregorianDate(date) {
  const idx = $62225008020f0a13$var$ERA_START_DATES.findIndex(([year, month, day]) => {
    if (date.year < year) return true;
    if (date.year === year && date.month < month) return true;
    if (date.year === year && date.month === month && date.day < day) return true;
    return false;
  });
  if (idx === -1) return $62225008020f0a13$var$ERA_START_DATES.length - 1;
  if (idx === 0) return 0;
  return idx - 1;
}
function $62225008020f0a13$var$toGregorian(date) {
  let eraAddend = $62225008020f0a13$var$ERA_ADDENDS[$62225008020f0a13$var$ERA_NAMES.indexOf(date.era)];
  if (!eraAddend) throw new Error("Unknown era: " + date.era);
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(date.year + eraAddend, date.month, date.day);
}
var $62225008020f0a13$export$b746ab2b60cdffbf = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    let era = $62225008020f0a13$var$findEraFromGregorianDate(date);
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, $62225008020f0a13$var$ERA_NAMES[era], date.year - $62225008020f0a13$var$ERA_ADDENDS[era], date.month, date.day);
  }
  toJulianDay(date) {
    return super.toJulianDay($62225008020f0a13$var$toGregorian(date));
  }
  balanceDate(date) {
    let gregorianDate = $62225008020f0a13$var$toGregorian(date);
    let era = $62225008020f0a13$var$findEraFromGregorianDate(gregorianDate);
    if ($62225008020f0a13$var$ERA_NAMES[era] !== date.era) {
      date.era = $62225008020f0a13$var$ERA_NAMES[era];
      date.year = gregorianDate.year - $62225008020f0a13$var$ERA_ADDENDS[era];
    }
    this.constrainDate(date);
  }
  constrainDate(date) {
    let idx = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);
    let end = $62225008020f0a13$var$ERA_END_DATES[idx];
    if (end != null) {
      let [endYear, endMonth, endDay] = end;
      let maxYear = endYear - $62225008020f0a13$var$ERA_ADDENDS[idx];
      date.year = Math.max(1, Math.min(maxYear, date.year));
      if (date.year === maxYear) {
        date.month = Math.min(endMonth, date.month);
        if (date.month === endMonth) date.day = Math.min(endDay, date.day);
      }
    }
    if (date.year === 1 && idx >= 0) {
      let [, startMonth, startDay] = $62225008020f0a13$var$ERA_START_DATES[idx];
      date.month = Math.max(startMonth, date.month);
      if (date.month === startMonth) date.day = Math.max(startDay, date.day);
    }
  }
  getEras() {
    return $62225008020f0a13$var$ERA_NAMES;
  }
  getYearsInEra(date) {
    let era = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);
    let cur = $62225008020f0a13$var$ERA_START_DATES[era];
    let next = $62225008020f0a13$var$ERA_START_DATES[era + 1];
    if (next == null)
      return 9999 - cur[0] + 1;
    let years = next[0] - cur[0];
    if (date.month < next[1] || date.month === next[1] && date.day < next[2]) years++;
    return years;
  }
  getDaysInMonth(date) {
    return super.getDaysInMonth($62225008020f0a13$var$toGregorian(date));
  }
  getMinimumMonthInYear(date) {
    let start = $62225008020f0a13$var$getMinimums(date);
    return start ? start[1] : 1;
  }
  getMinimumDayInMonth(date) {
    let start = $62225008020f0a13$var$getMinimums(date);
    return start && date.month === start[1] ? start[2] : 1;
  }
  constructor(...args) {
    super(...args);
    this.identifier = "japanese";
  }
};
function $62225008020f0a13$var$getMinimums(date) {
  if (date.year === 1) {
    let idx = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);
    return $62225008020f0a13$var$ERA_START_DATES[idx];
  }
}

// node_modules/@internationalized/date/dist/BuddhistCalendar.mjs
var $8d73d47422ca7302$var$BUDDHIST_ERA_START = -543;
var $8d73d47422ca7302$export$42d20a78301dee44 = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let gregorianDate = super.fromJulianDay(jd);
    let year = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(gregorianDate.era, gregorianDate.year);
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, year - $8d73d47422ca7302$var$BUDDHIST_ERA_START, gregorianDate.month, gregorianDate.day);
  }
  toJulianDay(date) {
    return super.toJulianDay($8d73d47422ca7302$var$toGregorian(date));
  }
  getEras() {
    return [
      "BE"
    ];
  }
  getDaysInMonth(date) {
    return super.getDaysInMonth($8d73d47422ca7302$var$toGregorian(date));
  }
  balanceDate() {
  }
  constructor(...args) {
    super(...args);
    this.identifier = "buddhist";
  }
};
function $8d73d47422ca7302$var$toGregorian(date) {
  let [era, year] = (0, $3b62074eb05584b2$export$4475b7e617eb123c)(date.year + $8d73d47422ca7302$var$BUDDHIST_ERA_START);
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(era, year, date.month, date.day);
}

// node_modules/@internationalized/date/dist/TaiwanCalendar.mjs
var $5f31bd6f0c8940b2$var$TAIWAN_ERA_START = 1911;
function $5f31bd6f0c8940b2$var$gregorianYear(date) {
  return date.era === "minguo" ? date.year + $5f31bd6f0c8940b2$var$TAIWAN_ERA_START : 1 - date.year + $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;
}
function $5f31bd6f0c8940b2$var$gregorianToTaiwan(year) {
  let y = year - $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;
  if (y > 0) return [
    "minguo",
    y
  ];
  else return [
    "before_minguo",
    1 - y
  ];
}
var $5f31bd6f0c8940b2$export$65e01080afcb0799 = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    let extendedYear = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(date.era, date.year);
    let [era, year] = $5f31bd6f0c8940b2$var$gregorianToTaiwan(extendedYear);
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, era, year, date.month, date.day);
  }
  toJulianDay(date) {
    return super.toJulianDay($5f31bd6f0c8940b2$var$toGregorian(date));
  }
  getEras() {
    return [
      "before_minguo",
      "minguo"
    ];
  }
  balanceDate(date) {
    let [era, year] = $5f31bd6f0c8940b2$var$gregorianToTaiwan($5f31bd6f0c8940b2$var$gregorianYear(date));
    date.era = era;
    date.year = year;
  }
  isInverseEra(date) {
    return date.era === "before_minguo";
  }
  getDaysInMonth(date) {
    return super.getDaysInMonth($5f31bd6f0c8940b2$var$toGregorian(date));
  }
  getYearsInEra(date) {
    return date.era === "before_minguo" ? 9999 : 9999 - $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;
  }
  constructor(...args) {
    super(...args);
    this.identifier = "roc";
  }
};
function $5f31bd6f0c8940b2$var$toGregorian(date) {
  let [era, year] = (0, $3b62074eb05584b2$export$4475b7e617eb123c)($5f31bd6f0c8940b2$var$gregorianYear(date));
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(era, year, date.month, date.day);
}

// node_modules/@internationalized/date/dist/PersianCalendar.mjs
var $f3ed2e4472ae7e25$var$PERSIAN_EPOCH = 1948320;
var $f3ed2e4472ae7e25$var$MONTH_START = [
  0,
  31,
  62,
  93,
  124,
  155,
  186,
  216,
  246,
  276,
  306,
  336
  // Esfand
];
var $f3ed2e4472ae7e25$export$37fccdbfd14c5939 = class {
  fromJulianDay(jd) {
    let daysSinceEpoch = jd - $f3ed2e4472ae7e25$var$PERSIAN_EPOCH;
    let year = 1 + Math.floor((33 * daysSinceEpoch + 3) / 12053);
    let farvardin1 = 365 * (year - 1) + Math.floor((8 * year + 21) / 33);
    let dayOfYear = daysSinceEpoch - farvardin1;
    let month = dayOfYear < 216 ? Math.floor(dayOfYear / 31) : Math.floor((dayOfYear - 6) / 30);
    let day = dayOfYear - $f3ed2e4472ae7e25$var$MONTH_START[month] + 1;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, year, month + 1, day);
  }
  toJulianDay(date) {
    let jd = $f3ed2e4472ae7e25$var$PERSIAN_EPOCH - 1 + 365 * (date.year - 1) + Math.floor((8 * date.year + 21) / 33);
    jd += $f3ed2e4472ae7e25$var$MONTH_START[date.month - 1];
    jd += date.day;
    return jd;
  }
  getMonthsInYear() {
    return 12;
  }
  getDaysInMonth(date) {
    if (date.month <= 6) return 31;
    if (date.month <= 11) return 30;
    let isLeapYear = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(25 * date.year + 11, 33) < 8;
    return isLeapYear ? 30 : 29;
  }
  getEras() {
    return [
      "AP"
    ];
  }
  getYearsInEra() {
    return 9377;
  }
  constructor() {
    this.identifier = "persian";
  }
};

// node_modules/@internationalized/date/dist/IndianCalendar.mjs
var $82c358003bdda0a8$var$INDIAN_ERA_START = 78;
var $82c358003bdda0a8$var$INDIAN_YEAR_START = 80;
var $82c358003bdda0a8$export$39f31c639fa15726 = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    let indianYear = date.year - $82c358003bdda0a8$var$INDIAN_ERA_START;
    let yDay = jd - (0, $3b62074eb05584b2$export$f297eb839006d339)(date.era, date.year, 1, 1);
    let leapMonth;
    if (yDay < $82c358003bdda0a8$var$INDIAN_YEAR_START) {
      indianYear--;
      leapMonth = (0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(date.year - 1) ? 31 : 30;
      yDay += leapMonth + 155 + 90 + 10;
    } else {
      leapMonth = (0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(date.year) ? 31 : 30;
      yDay -= $82c358003bdda0a8$var$INDIAN_YEAR_START;
    }
    let indianMonth;
    let indianDay;
    if (yDay < leapMonth) {
      indianMonth = 1;
      indianDay = yDay + 1;
    } else {
      let mDay = yDay - leapMonth;
      if (mDay < 155) {
        indianMonth = Math.floor(mDay / 31) + 2;
        indianDay = mDay % 31 + 1;
      } else {
        mDay -= 155;
        indianMonth = Math.floor(mDay / 30) + 7;
        indianDay = mDay % 30 + 1;
      }
    }
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, indianYear, indianMonth, indianDay);
  }
  toJulianDay(date) {
    let extendedYear = date.year + $82c358003bdda0a8$var$INDIAN_ERA_START;
    let [era, year] = (0, $3b62074eb05584b2$export$4475b7e617eb123c)(extendedYear);
    let leapMonth;
    let jd;
    if ((0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(year)) {
      leapMonth = 31;
      jd = (0, $3b62074eb05584b2$export$f297eb839006d339)(era, year, 3, 21);
    } else {
      leapMonth = 30;
      jd = (0, $3b62074eb05584b2$export$f297eb839006d339)(era, year, 3, 22);
    }
    if (date.month === 1) return jd + date.day - 1;
    jd += leapMonth + Math.min(date.month - 2, 5) * 31;
    if (date.month >= 8) jd += (date.month - 7) * 30;
    jd += date.day - 1;
    return jd;
  }
  getDaysInMonth(date) {
    if (date.month === 1 && (0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(date.year + $82c358003bdda0a8$var$INDIAN_ERA_START)) return 31;
    if (date.month >= 2 && date.month <= 6) return 31;
    return 30;
  }
  getYearsInEra() {
    return 9919;
  }
  getEras() {
    return [
      "saka"
    ];
  }
  balanceDate() {
  }
  constructor(...args) {
    super(...args);
    this.identifier = "indian";
  }
};

// node_modules/@internationalized/date/dist/IslamicCalendar.mjs
var $f2f3e0e3a817edbd$var$CIVIL_EPOC = 1948440;
var $f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC = 1948439;
var $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START = 1300;
var $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END = 1600;
var $f2f3e0e3a817edbd$var$UMALQURA_START_DAYS = 460322;
function $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, month, day) {
  return day + Math.ceil(29.5 * (month - 1)) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30) + epoch - 1;
}
function $f2f3e0e3a817edbd$var$julianDayToIslamic(calendar, epoch, jd) {
  let year = Math.floor((30 * (jd - epoch) + 10646) / 10631);
  let month = Math.min(12, Math.ceil((jd - (29 + $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, 1, 1))) / 29.5) + 1);
  let day = jd - $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, month, 1) + 1;
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(calendar, year, month, day);
}
function $f2f3e0e3a817edbd$var$isLeapYear(year) {
  return (14 + 11 * year) % 30 < 11;
}
var $f2f3e0e3a817edbd$export$2066795aadd37bfc = class {
  fromJulianDay(jd) {
    return $f2f3e0e3a817edbd$var$julianDayToIslamic(this, $f2f3e0e3a817edbd$var$CIVIL_EPOC, jd);
  }
  toJulianDay(date) {
    return $f2f3e0e3a817edbd$var$islamicToJulianDay($f2f3e0e3a817edbd$var$CIVIL_EPOC, date.year, date.month, date.day);
  }
  getDaysInMonth(date) {
    let length = 29 + date.month % 2;
    if (date.month === 12 && $f2f3e0e3a817edbd$var$isLeapYear(date.year)) length++;
    return length;
  }
  getMonthsInYear() {
    return 12;
  }
  getDaysInYear(date) {
    return $f2f3e0e3a817edbd$var$isLeapYear(date.year) ? 355 : 354;
  }
  getYearsInEra() {
    return 9665;
  }
  getEras() {
    return [
      "AH"
    ];
  }
  constructor() {
    this.identifier = "islamic-civil";
  }
};
var $f2f3e0e3a817edbd$export$37f0887f2f9d22f7 = class extends $f2f3e0e3a817edbd$export$2066795aadd37bfc {
  fromJulianDay(jd) {
    return $f2f3e0e3a817edbd$var$julianDayToIslamic(this, $f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC, jd);
  }
  toJulianDay(date) {
    return $f2f3e0e3a817edbd$var$islamicToJulianDay($f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC, date.year, date.month, date.day);
  }
  constructor(...args) {
    super(...args);
    this.identifier = "islamic-tbla";
  }
};
var $f2f3e0e3a817edbd$var$UMALQURA_DATA = "qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=";
var $f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH;
var $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE;
function $f2f3e0e3a817edbd$var$umalquraYearStart(year) {
  return $f2f3e0e3a817edbd$var$UMALQURA_START_DAYS + $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START];
}
function $f2f3e0e3a817edbd$var$umalquraMonthLength(year, month) {
  let idx = year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START;
  let mask = 1 << 11 - (month - 1);
  if (($f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH[idx] & mask) === 0) return 29;
  else return 30;
}
function $f2f3e0e3a817edbd$var$umalquraMonthStart(year, month) {
  let day = $f2f3e0e3a817edbd$var$umalquraYearStart(year);
  for (let i = 1; i < month; i++) day += $f2f3e0e3a817edbd$var$umalquraMonthLength(year, i);
  return day;
}
function $f2f3e0e3a817edbd$var$umalquraYearLength(year) {
  return $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year + 1 - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START] - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START];
}
var $f2f3e0e3a817edbd$export$5baab4758c231076 = class extends $f2f3e0e3a817edbd$export$2066795aadd37bfc {
  fromJulianDay(jd) {
    let days = jd - $f2f3e0e3a817edbd$var$CIVIL_EPOC;
    let startDays = $f2f3e0e3a817edbd$var$umalquraYearStart($f2f3e0e3a817edbd$var$UMALQURA_YEAR_START);
    let endDays = $f2f3e0e3a817edbd$var$umalquraYearStart($f2f3e0e3a817edbd$var$UMALQURA_YEAR_END);
    if (days < startDays || days > endDays) return super.fromJulianDay(jd);
    else {
      let y = $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START - 1;
      let m2 = 1;
      let d = 1;
      while (d > 0) {
        y++;
        d = days - $f2f3e0e3a817edbd$var$umalquraYearStart(y) + 1;
        let yearLength = $f2f3e0e3a817edbd$var$umalquraYearLength(y);
        if (d === yearLength) {
          m2 = 12;
          break;
        } else if (d < yearLength) {
          let monthLength = $f2f3e0e3a817edbd$var$umalquraMonthLength(y, m2);
          m2 = 1;
          while (d > monthLength) {
            d -= monthLength;
            m2++;
            monthLength = $f2f3e0e3a817edbd$var$umalquraMonthLength(y, m2);
          }
          break;
        }
      }
      return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, y, m2, days - $f2f3e0e3a817edbd$var$umalquraMonthStart(y, m2) + 1);
    }
  }
  toJulianDay(date) {
    if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END) return super.toJulianDay(date);
    return $f2f3e0e3a817edbd$var$CIVIL_EPOC + $f2f3e0e3a817edbd$var$umalquraMonthStart(date.year, date.month) + (date.day - 1);
  }
  getDaysInMonth(date) {
    if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END) return super.getDaysInMonth(date);
    return $f2f3e0e3a817edbd$var$umalquraMonthLength(date.year, date.month);
  }
  getDaysInYear(date) {
    if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END) return super.getDaysInYear(date);
    return $f2f3e0e3a817edbd$var$umalquraYearLength(date.year);
  }
  constructor() {
    super();
    this.identifier = "islamic-umalqura";
    if (!$f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH) $f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH = new Uint16Array(Uint8Array.from(atob($f2f3e0e3a817edbd$var$UMALQURA_DATA), (c) => c.charCodeAt(0)).buffer);
    if (!$f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE) {
      $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE = new Uint32Array($f2f3e0e3a817edbd$var$UMALQURA_YEAR_END - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START + 1);
      let yearStart = 0;
      for (let year = $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START; year <= $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END; year++) {
        $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START] = yearStart;
        for (let i = 1; i <= 12; i++) yearStart += $f2f3e0e3a817edbd$var$umalquraMonthLength(year, i);
      }
    }
  }
};

// node_modules/@internationalized/date/dist/HebrewCalendar.mjs
var $7c5f6fbf42389787$var$HEBREW_EPOCH = 347997;
var $7c5f6fbf42389787$var$HOUR_PARTS = 1080;
var $7c5f6fbf42389787$var$DAY_PARTS = 24 * $7c5f6fbf42389787$var$HOUR_PARTS;
var $7c5f6fbf42389787$var$MONTH_DAYS = 29;
var $7c5f6fbf42389787$var$MONTH_FRACT = 12 * $7c5f6fbf42389787$var$HOUR_PARTS + 793;
var $7c5f6fbf42389787$var$MONTH_PARTS = $7c5f6fbf42389787$var$MONTH_DAYS * $7c5f6fbf42389787$var$DAY_PARTS + $7c5f6fbf42389787$var$MONTH_FRACT;
function $7c5f6fbf42389787$var$isLeapYear(year) {
  return (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(year * 7 + 1, 19) < 7;
}
function $7c5f6fbf42389787$var$hebrewDelay1(year) {
  let months = Math.floor((235 * year - 234) / 19);
  let parts = 12084 + 13753 * months;
  let day = months * 29 + Math.floor(parts / 25920);
  if ((0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(3 * (day + 1), 7) < 3) day += 1;
  return day;
}
function $7c5f6fbf42389787$var$hebrewDelay2(year) {
  let last = $7c5f6fbf42389787$var$hebrewDelay1(year - 1);
  let present = $7c5f6fbf42389787$var$hebrewDelay1(year);
  let next = $7c5f6fbf42389787$var$hebrewDelay1(year + 1);
  if (next - present === 356) return 2;
  if (present - last === 382) return 1;
  return 0;
}
function $7c5f6fbf42389787$var$startOfYear(year) {
  return $7c5f6fbf42389787$var$hebrewDelay1(year) + $7c5f6fbf42389787$var$hebrewDelay2(year);
}
function $7c5f6fbf42389787$var$getDaysInYear(year) {
  return $7c5f6fbf42389787$var$startOfYear(year + 1) - $7c5f6fbf42389787$var$startOfYear(year);
}
function $7c5f6fbf42389787$var$getYearType(year) {
  let yearLength = $7c5f6fbf42389787$var$getDaysInYear(year);
  if (yearLength > 380) yearLength -= 30;
  switch (yearLength) {
    case 353:
      return 0;
    case 354:
      return 1;
    case 355:
      return 2;
  }
}
function $7c5f6fbf42389787$var$getDaysInMonth(year, month) {
  if (month >= 6 && !$7c5f6fbf42389787$var$isLeapYear(year)) month++;
  if (month === 4 || month === 7 || month === 9 || month === 11 || month === 13) return 29;
  let yearType = $7c5f6fbf42389787$var$getYearType(year);
  if (month === 2) return yearType === 2 ? 30 : 29;
  if (month === 3) return yearType === 0 ? 29 : 30;
  if (month === 6) return $7c5f6fbf42389787$var$isLeapYear(year) ? 30 : 0;
  return 30;
}
var $7c5f6fbf42389787$export$ca405048b8fb5af = class {
  fromJulianDay(jd) {
    let d = jd - $7c5f6fbf42389787$var$HEBREW_EPOCH;
    let m2 = d * $7c5f6fbf42389787$var$DAY_PARTS / $7c5f6fbf42389787$var$MONTH_PARTS;
    let year = Math.floor((19 * m2 + 234) / 235) + 1;
    let ys = $7c5f6fbf42389787$var$startOfYear(year);
    let dayOfYear = Math.floor(d - ys);
    while (dayOfYear < 1) {
      year--;
      ys = $7c5f6fbf42389787$var$startOfYear(year);
      dayOfYear = Math.floor(d - ys);
    }
    let month = 1;
    let monthStart = 0;
    while (monthStart < dayOfYear) {
      monthStart += $7c5f6fbf42389787$var$getDaysInMonth(year, month);
      month++;
    }
    month--;
    monthStart -= $7c5f6fbf42389787$var$getDaysInMonth(year, month);
    let day = dayOfYear - monthStart;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, year, month, day);
  }
  toJulianDay(date) {
    let jd = $7c5f6fbf42389787$var$startOfYear(date.year);
    for (let month = 1; month < date.month; month++) jd += $7c5f6fbf42389787$var$getDaysInMonth(date.year, month);
    return jd + date.day + $7c5f6fbf42389787$var$HEBREW_EPOCH;
  }
  getDaysInMonth(date) {
    return $7c5f6fbf42389787$var$getDaysInMonth(date.year, date.month);
  }
  getMonthsInYear(date) {
    return $7c5f6fbf42389787$var$isLeapYear(date.year) ? 13 : 12;
  }
  getDaysInYear(date) {
    return $7c5f6fbf42389787$var$getDaysInYear(date.year);
  }
  getYearsInEra() {
    return 9999;
  }
  getEras() {
    return [
      "AM"
    ];
  }
  balanceYearMonth(date, previousDate) {
    if (previousDate.year !== date.year) {
      if ($7c5f6fbf42389787$var$isLeapYear(previousDate.year) && !$7c5f6fbf42389787$var$isLeapYear(date.year) && previousDate.month > 6) date.month--;
      else if (!$7c5f6fbf42389787$var$isLeapYear(previousDate.year) && $7c5f6fbf42389787$var$isLeapYear(date.year) && previousDate.month > 6) date.month++;
    }
  }
  constructor() {
    this.identifier = "hebrew";
  }
};

// node_modules/@internationalized/date/dist/EthiopicCalendar.mjs
var $b956b2d7a6cf451f$var$ETHIOPIC_EPOCH = 1723856;
var $b956b2d7a6cf451f$var$COPTIC_EPOCH = 1824665;
var $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA = 5500;
function $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, month, day) {
  return epoch + 365 * year + Math.floor(year / 4) + 30 * (month - 1) + day - 1;
}
function $b956b2d7a6cf451f$var$julianDayToCE(epoch, jd) {
  let year = Math.floor(4 * (jd - epoch) / 1461);
  let month = 1 + Math.floor((jd - $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, 1, 1)) / 30);
  let day = jd + 1 - $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, month, 1);
  return [
    year,
    month,
    day
  ];
}
function $b956b2d7a6cf451f$var$getLeapDay(year) {
  return Math.floor(year % 4 / 3);
}
function $b956b2d7a6cf451f$var$getDaysInMonth(year, month) {
  if (month % 13 !== 0)
    return 30;
  else
    return $b956b2d7a6cf451f$var$getLeapDay(year) + 5;
}
var $b956b2d7a6cf451f$export$26ba6eab5e20cd7d = class {
  fromJulianDay(jd) {
    let [year, month, day] = $b956b2d7a6cf451f$var$julianDayToCE($b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, jd);
    let era = "AM";
    if (year <= 0) {
      era = "AA";
      year += $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;
    }
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, era, year, month, day);
  }
  toJulianDay(date) {
    let year = date.year;
    if (date.era === "AA") year -= $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;
    return $b956b2d7a6cf451f$var$ceToJulianDay($b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, year, date.month, date.day);
  }
  getDaysInMonth(date) {
    return $b956b2d7a6cf451f$var$getDaysInMonth(date.year, date.month);
  }
  getMonthsInYear() {
    return 13;
  }
  getDaysInYear(date) {
    return 365 + $b956b2d7a6cf451f$var$getLeapDay(date.year);
  }
  getYearsInEra(date) {
    return date.era === "AA" ? 9999 : 9991;
  }
  getEras() {
    return [
      "AA",
      "AM"
    ];
  }
  constructor() {
    this.identifier = "ethiopic";
  }
};
var $b956b2d7a6cf451f$export$d72e0c37005a4914 = class extends $b956b2d7a6cf451f$export$26ba6eab5e20cd7d {
  fromJulianDay(jd) {
    let [year, month, day] = $b956b2d7a6cf451f$var$julianDayToCE($b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, jd);
    year += $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, "AA", year, month, day);
  }
  getEras() {
    return [
      "AA"
    ];
  }
  getYearsInEra() {
    return 9999;
  }
  constructor(...args) {
    super(...args);
    this.identifier = "ethioaa";
  }
};
var $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1 = class extends $b956b2d7a6cf451f$export$26ba6eab5e20cd7d {
  fromJulianDay(jd) {
    let [year, month, day] = $b956b2d7a6cf451f$var$julianDayToCE($b956b2d7a6cf451f$var$COPTIC_EPOCH, jd);
    let era = "CE";
    if (year <= 0) {
      era = "BCE";
      year = 1 - year;
    }
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, era, year, month, day);
  }
  toJulianDay(date) {
    let year = date.year;
    if (date.era === "BCE") year = 1 - year;
    return $b956b2d7a6cf451f$var$ceToJulianDay($b956b2d7a6cf451f$var$COPTIC_EPOCH, year, date.month, date.day);
  }
  getDaysInMonth(date) {
    let year = date.year;
    if (date.era === "BCE") year = 1 - year;
    return $b956b2d7a6cf451f$var$getDaysInMonth(year, date.month);
  }
  isInverseEra(date) {
    return date.era === "BCE";
  }
  balanceDate(date) {
    if (date.year <= 0) {
      date.era = date.era === "BCE" ? "CE" : "BCE";
      date.year = 1 - date.year;
    }
  }
  getEras() {
    return [
      "BCE",
      "CE"
    ];
  }
  getYearsInEra(date) {
    return date.era === "BCE" ? 9999 : 9715;
  }
  constructor(...args) {
    super(...args);
    this.identifier = "coptic";
  }
};

// node_modules/@internationalized/date/dist/createCalendar.mjs
function $64244302c3013299$export$dd0bbc9b26defe37(name) {
  switch (name) {
    case "buddhist":
      return new (0, $8d73d47422ca7302$export$42d20a78301dee44)();
    case "ethiopic":
      return new (0, $b956b2d7a6cf451f$export$26ba6eab5e20cd7d)();
    case "ethioaa":
      return new (0, $b956b2d7a6cf451f$export$d72e0c37005a4914)();
    case "coptic":
      return new (0, $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1)();
    case "hebrew":
      return new (0, $7c5f6fbf42389787$export$ca405048b8fb5af)();
    case "indian":
      return new (0, $82c358003bdda0a8$export$39f31c639fa15726)();
    case "islamic-civil":
      return new (0, $f2f3e0e3a817edbd$export$2066795aadd37bfc)();
    case "islamic-tbla":
      return new (0, $f2f3e0e3a817edbd$export$37f0887f2f9d22f7)();
    case "islamic-umalqura":
      return new (0, $f2f3e0e3a817edbd$export$5baab4758c231076)();
    case "japanese":
      return new (0, $62225008020f0a13$export$b746ab2b60cdffbf)();
    case "persian":
      return new (0, $f3ed2e4472ae7e25$export$37fccdbfd14c5939)();
    case "roc":
      return new (0, $5f31bd6f0c8940b2$export$65e01080afcb0799)();
    case "gregory":
    default:
      return new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)();
  }
}

// node_modules/@internationalized/date/dist/DateFormatter.mjs
var $fb18d541ea1ad717$var$formatterCache = /* @__PURE__ */ new Map();
var $fb18d541ea1ad717$export$ad991b66133851cf = class {
  /** Formats a date as a string according to the locale and format options passed to the constructor. */
  format(value) {
    return this.formatter.format(value);
  }
  /** Formats a date to an array of parts such as separators, numbers, punctuation, and more. */
  formatToParts(value) {
    return this.formatter.formatToParts(value);
  }
  /** Formats a date range as a string. */
  formatRange(start, end) {
    if (typeof this.formatter.formatRange === "function")
      return this.formatter.formatRange(start, end);
    if (end < start) throw new RangeError("End date must be >= start date");
    return `${this.formatter.format(start)} – ${this.formatter.format(end)}`;
  }
  /** Formats a date range as an array of parts. */
  formatRangeToParts(start, end) {
    if (typeof this.formatter.formatRangeToParts === "function")
      return this.formatter.formatRangeToParts(start, end);
    if (end < start) throw new RangeError("End date must be >= start date");
    let startParts = this.formatter.formatToParts(start);
    let endParts = this.formatter.formatToParts(end);
    return [
      ...startParts.map((p2) => ({
        ...p2,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...endParts.map((p2) => ({
        ...p2,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let resolvedOptions = this.formatter.resolvedOptions();
    if ($fb18d541ea1ad717$var$hasBuggyResolvedHourCycle()) {
      if (!this.resolvedHourCycle) this.resolvedHourCycle = $fb18d541ea1ad717$var$getResolvedHourCycle(resolvedOptions.locale, this.options);
      resolvedOptions.hourCycle = this.resolvedHourCycle;
      resolvedOptions.hour12 = this.resolvedHourCycle === "h11" || this.resolvedHourCycle === "h12";
    }
    if (resolvedOptions.calendar === "ethiopic-amete-alem") resolvedOptions.calendar = "ethioaa";
    return resolvedOptions;
  }
  constructor(locale, options = {}) {
    this.formatter = $fb18d541ea1ad717$var$getCachedDateFormatter(locale, options);
    this.options = options;
  }
};
var $fb18d541ea1ad717$var$hour12Preferences = {
  true: {
    // Only Japanese uses the h11 style for 12 hour time. All others use h12.
    ja: "h11"
  },
  false: {}
};
function $fb18d541ea1ad717$var$getCachedDateFormatter(locale, options = {}) {
  if (typeof options.hour12 === "boolean" && $fb18d541ea1ad717$var$hasBuggyHour12Behavior()) {
    options = {
      ...options
    };
    let pref = $fb18d541ea1ad717$var$hour12Preferences[String(options.hour12)][locale.split("-")[0]];
    let defaultHourCycle = options.hour12 ? "h12" : "h23";
    options.hourCycle = pref !== null && pref !== void 0 ? pref : defaultHourCycle;
    delete options.hour12;
  }
  let cacheKey = locale + (options ? Object.entries(options).sort((a2, b2) => a2[0] < b2[0] ? -1 : 1).join() : "");
  if ($fb18d541ea1ad717$var$formatterCache.has(cacheKey)) return $fb18d541ea1ad717$var$formatterCache.get(cacheKey);
  let numberFormatter = new Intl.DateTimeFormat(locale, options);
  $fb18d541ea1ad717$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}
var $fb18d541ea1ad717$var$_hasBuggyHour12Behavior = null;
function $fb18d541ea1ad717$var$hasBuggyHour12Behavior() {
  if ($fb18d541ea1ad717$var$_hasBuggyHour12Behavior == null) $fb18d541ea1ad717$var$_hasBuggyHour12Behavior = new Intl.DateTimeFormat("en-US", {
    hour: "numeric",
    hour12: false
  }).format(new Date(2020, 2, 3, 0)) === "24";
  return $fb18d541ea1ad717$var$_hasBuggyHour12Behavior;
}
var $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle = null;
function $fb18d541ea1ad717$var$hasBuggyResolvedHourCycle() {
  if ($fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle == null) $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle = new Intl.DateTimeFormat("fr", {
    hour: "numeric",
    hour12: false
  }).resolvedOptions().hourCycle === "h12";
  return $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle;
}
function $fb18d541ea1ad717$var$getResolvedHourCycle(locale, options) {
  if (!options.timeStyle && !options.hour) return void 0;
  locale = locale.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, "");
  locale += (locale.includes("-u-") ? "" : "-u") + "-nu-latn";
  let formatter = $fb18d541ea1ad717$var$getCachedDateFormatter(locale, {
    ...options,
    timeZone: void 0
    // use local timezone
  });
  let min2 = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 0)).find((p2) => p2.type === "hour").value, 10);
  let max2 = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 23)).find((p2) => p2.type === "hour").value, 10);
  if (min2 === 0 && max2 === 23) return "h23";
  if (min2 === 24 && max2 === 23) return "h24";
  if (min2 === 0 && max2 === 11) return "h11";
  if (min2 === 12 && max2 === 11) return "h12";
  throw new Error("Unexpected hour cycle result");
}

// node_modules/@react-aria/utils/dist/useLayoutEffect.mjs
var import_react92 = __toESM(require_react(), 1);
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c = typeof document !== "undefined" ? (0, import_react92.default).useLayoutEffect : () => {
};

// node_modules/@react-aria/utils/dist/useEffectEvent.mjs
var import_react93 = __toESM(require_react(), 1);
function $8ae05eaa5c114e9c$export$7f54fc3180508a52(fn) {
  const ref = (0, import_react93.useRef)(null);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    ref.current = fn;
  }, [
    fn
  ]);
  return (0, import_react93.useCallback)((...args) => {
    const f2 = ref.current;
    return f2 === null || f2 === void 0 ? void 0 : f2(...args);
  }, []);
}

// node_modules/@react-aria/utils/dist/useValueEffect.mjs
var import_react94 = __toESM(require_react(), 1);
function $1dbecbe27a04f9af$export$14d238f342723f25(defaultValue2) {
  let [value, setValue] = (0, import_react94.useState)(defaultValue2);
  let effect = (0, import_react94.useRef)(null);
  let nextRef = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    if (!effect.current) return;
    let newValue = effect.current.next();
    if (newValue.done) {
      effect.current = null;
      return;
    }
    if (value === newValue.value) nextRef();
    else setValue(newValue.value);
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (effect.current) nextRef();
  });
  let queue = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((fn) => {
    effect.current = fn(value);
    nextRef();
  });
  return [
    value,
    queue
  ];
}

// node_modules/@react-aria/utils/dist/useId.mjs
var import_react95 = __toESM(require_react(), 1);
var $bdb11010cef70236$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $bdb11010cef70236$export$d41a04c74483c6ef = /* @__PURE__ */ new Map();
var $bdb11010cef70236$var$registry;
if (typeof FinalizationRegistry !== "undefined") $bdb11010cef70236$var$registry = new FinalizationRegistry((heldValue) => {
  $bdb11010cef70236$export$d41a04c74483c6ef.delete(heldValue);
});
function $bdb11010cef70236$export$f680877a34711e37(defaultId) {
  let [value, setValue] = (0, import_react95.useState)(defaultId);
  let nextId = (0, import_react95.useRef)(null);
  let res = (0, $b5e257d569688ac6$export$619500959fc48b26)(value);
  let cleanupRef = (0, import_react95.useRef)(null);
  if ($bdb11010cef70236$var$registry) $bdb11010cef70236$var$registry.register(cleanupRef, res);
  if ($bdb11010cef70236$var$canUseDOM) {
    const cacheIdRef = $bdb11010cef70236$export$d41a04c74483c6ef.get(res);
    if (cacheIdRef && !cacheIdRef.includes(nextId)) cacheIdRef.push(nextId);
    else $bdb11010cef70236$export$d41a04c74483c6ef.set(res, [
      nextId
    ]);
  }
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let r2 = res;
    return () => {
      if ($bdb11010cef70236$var$registry) $bdb11010cef70236$var$registry.unregister(cleanupRef);
      $bdb11010cef70236$export$d41a04c74483c6ef.delete(r2);
    };
  }, [
    res
  ]);
  (0, import_react95.useEffect)(() => {
    let newId = nextId.current;
    if (newId) setValue(newId);
    return () => {
      if (newId) nextId.current = null;
    };
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f842629(idA, idB) {
  if (idA === idB) return idA;
  let setIdsA = $bdb11010cef70236$export$d41a04c74483c6ef.get(idA);
  if (setIdsA) {
    setIdsA.forEach((ref) => ref.current = idB);
    return idB;
  }
  let setIdsB = $bdb11010cef70236$export$d41a04c74483c6ef.get(idB);
  if (setIdsB) {
    setIdsB.forEach((ref) => ref.current = idA);
    return idA;
  }
  return idB;
}
function $bdb11010cef70236$export$b4cc09c592e8fdb8(depArray = []) {
  let id = $bdb11010cef70236$export$f680877a34711e37();
  let [resolvedId, setResolvedId] = (0, $1dbecbe27a04f9af$export$14d238f342723f25)(id);
  let updateId = (0, import_react95.useCallback)(() => {
    setResolvedId(function* () {
      yield id;
      yield document.getElementById(id) ? id : void 0;
    });
  }, [
    id,
    setResolvedId
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(updateId, [
    id,
    updateId,
    ...depArray
  ]);
  return resolvedId;
}

// node_modules/@react-aria/utils/dist/chain.mjs
function $ff5963eb1fccf552$export$e08e3b67e392101e(...callbacks) {
  return (...args) => {
    for (let callback of callbacks) if (typeof callback === "function") callback(...args);
  };
}

// node_modules/@react-aria/utils/dist/domHelpers.mjs
var $431fbd86ca7dc216$export$b204af158042fbac = (el) => {
  var _el_ownerDocument;
  return (_el_ownerDocument = el === null || el === void 0 ? void 0 : el.ownerDocument) !== null && _el_ownerDocument !== void 0 ? _el_ownerDocument : document;
};
var $431fbd86ca7dc216$export$f21a1ffae260145a = (el) => {
  if (el && "window" in el && el.window === el) return el;
  const doc = $431fbd86ca7dc216$export$b204af158042fbac(el);
  return doc.defaultView || window;
};
function $431fbd86ca7dc216$var$isNode(value) {
  return value !== null && typeof value === "object" && "nodeType" in value && typeof value.nodeType === "number";
}
function $431fbd86ca7dc216$export$af51f0f06c0f328a(node) {
  return $431fbd86ca7dc216$var$isNode(node) && node.nodeType === Node.DOCUMENT_FRAGMENT_NODE && "host" in node;
}

// node_modules/@react-stately/flags/dist/import.mjs
var $f4e2df6bd15f8569$var$_shadowDOM = false;
function $f4e2df6bd15f8569$export$98658e8c59125e6a() {
  return $f4e2df6bd15f8569$var$_shadowDOM;
}

// node_modules/@react-aria/utils/dist/DOMFunctions.mjs
function $d4ee10de306f2510$export$4282f70798064fe0(node, otherNode) {
  if (!(0, $f4e2df6bd15f8569$export$98658e8c59125e6a)()) return otherNode && node ? node.contains(otherNode) : false;
  if (!node || !otherNode) return false;
  let currentNode = otherNode;
  while (currentNode !== null) {
    if (currentNode === node) return true;
    if (currentNode.tagName === "SLOT" && currentNode.assignedSlot)
      currentNode = currentNode.assignedSlot.parentNode;
    else if ((0, $431fbd86ca7dc216$export$af51f0f06c0f328a)(currentNode))
      currentNode = currentNode.host;
    else currentNode = currentNode.parentNode;
  }
  return false;
}
var $d4ee10de306f2510$export$cd4e5573fbe2b576 = (doc = document) => {
  var _activeElement_shadowRoot;
  if (!(0, $f4e2df6bd15f8569$export$98658e8c59125e6a)()) return doc.activeElement;
  let activeElement = doc.activeElement;
  while (activeElement && "shadowRoot" in activeElement && ((_activeElement_shadowRoot = activeElement.shadowRoot) === null || _activeElement_shadowRoot === void 0 ? void 0 : _activeElement_shadowRoot.activeElement)) activeElement = activeElement.shadowRoot.activeElement;
  return activeElement;
};
function $d4ee10de306f2510$export$e58f029f0fbfdb29(event) {
  if ((0, $f4e2df6bd15f8569$export$98658e8c59125e6a)() && event.target.shadowRoot) {
    if (event.composedPath) return event.composedPath()[0];
  }
  return event.target;
}

// node_modules/clsx/dist/clsx.mjs
function r(e) {
  var t, f2, n = "";
  if ("string" == typeof e || "number" == typeof e) n += e;
  else if ("object" == typeof e) if (Array.isArray(e)) {
    var o = e.length;
    for (t = 0; t < o; t++) e[t] && (f2 = r(e[t])) && (n && (n += " "), n += f2);
  } else for (f2 in e) e[f2] && (n && (n += " "), n += f2);
  return n;
}
function clsx() {
  for (var e, t, f2 = 0, n = "", o = arguments.length; f2 < o; f2++) (e = arguments[f2]) && (t = r(e)) && (n && (n += " "), n += t);
  return n;
}
var clsx_default = clsx;

// node_modules/@react-aria/utils/dist/mergeProps.mjs
function $3ef42575df84b30b$export$9d1611c77c2fe928(...args) {
  let result = {
    ...args[0]
  };
  for (let i = 1; i < args.length; i++) {
    let props = args[i];
    for (let key in props) {
      let a2 = result[key];
      let b2 = props[key];
      if (typeof a2 === "function" && typeof b2 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90) result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(a2, b2);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a2 === "string" && typeof b2 === "string") result[key] = (0, clsx_default)(a2, b2);
      else if (key === "id" && a2 && b2) result.id = (0, $bdb11010cef70236$export$cd8c9cb68f842629)(a2, b2);
      else result[key] = b2 !== void 0 ? b2 : a2;
    }
  }
  return result;
}

// node_modules/@react-aria/utils/dist/mergeRefs.mjs
function $5dc95899b306f630$export$c9058316764c140e(...refs) {
  if (refs.length === 1 && refs[0]) return refs[0];
  return (value) => {
    let hasCleanup = false;
    const cleanups2 = refs.map((ref) => {
      const cleanup = $5dc95899b306f630$var$setRef(ref, value);
      hasCleanup || (hasCleanup = typeof cleanup == "function");
      return cleanup;
    });
    if (hasCleanup) return () => {
      cleanups2.forEach((cleanup, i) => {
        if (typeof cleanup === "function") cleanup();
        else $5dc95899b306f630$var$setRef(refs[i], null);
      });
    };
  };
}
function $5dc95899b306f630$var$setRef(ref, value) {
  if (typeof ref === "function") return ref(value);
  else if (ref != null) ref.current = value;
}

// node_modules/@react-aria/utils/dist/filterDOMProps.mjs
var $65484d02dcb7eb3e$var$DOMPropNames = /* @__PURE__ */ new Set([
  "id"
]);
var $65484d02dcb7eb3e$var$labelablePropNames = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
var $65484d02dcb7eb3e$var$linkPropNames = /* @__PURE__ */ new Set([
  "href",
  "hrefLang",
  "target",
  "rel",
  "download",
  "ping",
  "referrerPolicy"
]);
var $65484d02dcb7eb3e$var$propRe = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, opts = {}) {
  let { labelable, isLink, propNames } = opts;
  let filteredProps = {};
  for (const prop in props) if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames.has(prop) || isLink && $65484d02dcb7eb3e$var$linkPropNames.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe.test(prop))) filteredProps[prop] = props[prop];
  return filteredProps;
}

// node_modules/@react-aria/utils/dist/focusWithoutScrolling.mjs
function $7215afc6de606d6b$export$de79e2c695e052f3(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll()) element.focus({
    preventScroll: true
  });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached = null;
function $7215afc6de606d6b$var$supportsPreventScroll() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached = false;
    try {
      let focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached = true;
          return true;
        }
      });
    } catch {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached;
}
function $7215afc6de606d6b$var$getScrollableElements(element) {
  let parent = element.parentNode;
  let scrollableElements = [];
  let rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) scrollableElements.push({
      element: parent,
      scrollTop: parent.scrollTop,
      scrollLeft: parent.scrollLeft
    });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement) scrollableElements.push({
    element: rootScrollingElement,
    scrollTop: rootScrollingElement.scrollTop,
    scrollLeft: rootScrollingElement.scrollLeft
  });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}

// node_modules/@react-aria/utils/dist/platform.mjs
function $c87311424ea30a05$var$testUserAgent(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null) return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$var$cached(fn) {
  if (false) return fn;
  let res = null;
  return () => {
    if (res == null) res = fn();
    return res;
  };
}
var $c87311424ea30a05$export$9ac100e40613ea10 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testPlatform(/^Mac/i);
});
var $c87311424ea30a05$export$186c6964ca17d99 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testPlatform(/^iPhone/i);
});
var $c87311424ea30a05$export$7bef049ce92e4224 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea10() && navigator.maxTouchPoints > 1;
});
var $c87311424ea30a05$export$fedb369cb70207f1 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$export$186c6964ca17d99() || $c87311424ea30a05$export$7bef049ce92e4224();
});
var $c87311424ea30a05$export$e1865c3bedcd822b = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$export$9ac100e40613ea10() || $c87311424ea30a05$export$fedb369cb70207f1();
});
var $c87311424ea30a05$export$78551043582a6a98 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/AppleWebKit/i) && !$c87311424ea30a05$export$6446a186d09e379e();
});
var $c87311424ea30a05$export$6446a186d09e379e = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/Chrome/i);
});
var $c87311424ea30a05$export$a11b0059900ceec8 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/Android/i);
});
var $c87311424ea30a05$export$b7d78993b74f766d = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/Firefox/i);
});

// node_modules/@react-aria/utils/dist/openLink.mjs
var import_react96 = __toESM(require_react(), 1);
var $ea8dcbcb9ea1b556$var$RouterContext = (0, import_react96.createContext)({
  isNative: true,
  open: $ea8dcbcb9ea1b556$var$openSyntheticLink,
  useHref: (href) => href
});
function $ea8dcbcb9ea1b556$export$95185d699e05d4d7(target, modifiers, setOpening = true) {
  var _window_event_type, _window_event;
  let { metaKey, ctrlKey, altKey, shiftKey } = modifiers;
  if ((0, $c87311424ea30a05$export$b7d78993b74f766d)() && ((_window_event = window.event) === null || _window_event === void 0 ? void 0 : (_window_event_type = _window_event.type) === null || _window_event_type === void 0 ? void 0 : _window_event_type.startsWith("key")) && target.target === "_blank") {
    if ((0, $c87311424ea30a05$export$9ac100e40613ea10)()) metaKey = true;
    else ctrlKey = true;
  }
  let event = (0, $c87311424ea30a05$export$78551043582a6a98)() && (0, $c87311424ea30a05$export$9ac100e40613ea10)() && !(0, $c87311424ea30a05$export$7bef049ce92e4224)() && true ? new KeyboardEvent("keydown", {
    keyIdentifier: "Enter",
    metaKey,
    ctrlKey,
    altKey,
    shiftKey
  }) : new MouseEvent("click", {
    metaKey,
    ctrlKey,
    altKey,
    shiftKey,
    bubbles: true,
    cancelable: true
  });
  $ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = setOpening;
  (0, $7215afc6de606d6b$export$de79e2c695e052f3)(target);
  target.dispatchEvent(event);
  $ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = false;
}
$ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = false;
function $ea8dcbcb9ea1b556$var$getSyntheticLink(target, open) {
  if (target instanceof HTMLAnchorElement) open(target);
  else if (target.hasAttribute("data-href")) {
    let link = document.createElement("a");
    link.href = target.getAttribute("data-href");
    if (target.hasAttribute("data-target")) link.target = target.getAttribute("data-target");
    if (target.hasAttribute("data-rel")) link.rel = target.getAttribute("data-rel");
    if (target.hasAttribute("data-download")) link.download = target.getAttribute("data-download");
    if (target.hasAttribute("data-ping")) link.ping = target.getAttribute("data-ping");
    if (target.hasAttribute("data-referrer-policy")) link.referrerPolicy = target.getAttribute("data-referrer-policy");
    target.appendChild(link);
    open(link);
    target.removeChild(link);
  }
}
function $ea8dcbcb9ea1b556$var$openSyntheticLink(target, modifiers) {
  $ea8dcbcb9ea1b556$var$getSyntheticLink(target, (link) => $ea8dcbcb9ea1b556$export$95185d699e05d4d7(link, modifiers));
}

// node_modules/@react-aria/utils/dist/runAfterTransition.mjs
var $bbed8b41f857bcc0$var$transitionsByElement = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents() {
  if (typeof window === "undefined") return;
  function isTransitionEvent(event) {
    return "propertyName" in event;
  }
  let onTransitionStart = (e) => {
    if (!isTransitionEvent(e) || !e.target) return;
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement.get(e.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement.set(e.target, transitions);
      e.target.addEventListener("transitioncancel", onTransitionEnd, {
        once: true
      });
    }
    transitions.add(e.propertyName);
  };
  let onTransitionEnd = (e) => {
    if (!isTransitionEvent(e) || !e.target) return;
    let properties = $bbed8b41f857bcc0$var$transitionsByElement.get(e.target);
    if (!properties) return;
    properties.delete(e.propertyName);
    if (properties.size === 0) {
      e.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement.delete(e.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks) cb();
      $bbed8b41f857bcc0$var$transitionCallbacks.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading") $bbed8b41f857bcc0$var$setupGlobalEvents();
  else document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents);
}
function $bbed8b41f857bcc0$var$cleanupDetachedElements() {
  for (const [eventTarget] of $bbed8b41f857bcc0$var$transitionsByElement)
    if ("isConnected" in eventTarget && !eventTarget.isConnected) $bbed8b41f857bcc0$var$transitionsByElement.delete(eventTarget);
}
function $bbed8b41f857bcc0$export$24490316f764c430(fn) {
  requestAnimationFrame(() => {
    $bbed8b41f857bcc0$var$cleanupDetachedElements();
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) fn();
    else $bbed8b41f857bcc0$var$transitionCallbacks.add(fn);
  });
}

// node_modules/@react-aria/utils/dist/useDrag1D.mjs
var import_react97 = __toESM(require_react(), 1);

// node_modules/@react-aria/utils/dist/useGlobalListeners.mjs
var import_react98 = __toESM(require_react(), 1);
function $03deb23ff14920c4$export$4eaf04e54aa8eed6() {
  let globalListeners = (0, import_react98.useRef)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, import_react98.useCallback)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, fn, options);
  }, []);
  let removeGlobalListener = (0, import_react98.useCallback)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, import_react98.useCallback)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, import_react98.useEffect)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}

// node_modules/@react-aria/utils/dist/useLabels.mjs
function $313b98861ee5dd6c$export$d6875122194c7b44(props, defaultLabel) {
  let { id, "aria-label": label, "aria-labelledby": labelledBy } = props;
  id = (0, $bdb11010cef70236$export$f680877a34711e37)(id);
  if (labelledBy && label) {
    let ids = /* @__PURE__ */ new Set([
      id,
      ...labelledBy.trim().split(/\s+/)
    ]);
    labelledBy = [
      ...ids
    ].join(" ");
  } else if (labelledBy) labelledBy = labelledBy.trim().split(/\s+/).join(" ");
  if (!label && !labelledBy && defaultLabel) label = defaultLabel;
  return {
    id,
    "aria-label": label,
    "aria-labelledby": labelledBy
  };
}

// node_modules/@react-aria/utils/dist/useObjectRef.mjs
var import_react99 = __toESM(require_react(), 1);
function $df56164dff5785e2$export$4338b53315abf666(ref) {
  const objRef = (0, import_react99.useRef)(null);
  const cleanupRef = (0, import_react99.useRef)(void 0);
  const refEffect = (0, import_react99.useCallback)((instance) => {
    if (typeof ref === "function") {
      const refCallback = ref;
      const refCleanup = refCallback(instance);
      return () => {
        if (typeof refCleanup === "function") refCleanup();
        else refCallback(null);
      };
    } else if (ref) {
      ref.current = instance;
      return () => {
        ref.current = null;
      };
    }
  }, [
    ref
  ]);
  return (0, import_react99.useMemo)(() => ({
    get current() {
      return objRef.current;
    },
    set current(value) {
      objRef.current = value;
      if (cleanupRef.current) {
        cleanupRef.current();
        cleanupRef.current = void 0;
      }
      if (value != null) cleanupRef.current = refEffect(value);
    }
  }), [
    refEffect
  ]);
}

// node_modules/@react-aria/utils/dist/useUpdateEffect.mjs
var import_react100 = __toESM(require_react(), 1);
function $4f58c5f72bcf79f7$export$496315a1608d9602(effect, dependencies) {
  const isInitialMount = (0, import_react100.useRef)(true);
  const lastDeps = (0, import_react100.useRef)(null);
  (0, import_react100.useEffect)(() => {
    isInitialMount.current = true;
    return () => {
      isInitialMount.current = false;
    };
  }, []);
  (0, import_react100.useEffect)(() => {
    let prevDeps = lastDeps.current;
    if (isInitialMount.current) isInitialMount.current = false;
    else if (!prevDeps || dependencies.some((dep, i) => !Object.is(dep, prevDeps[i]))) effect();
    lastDeps.current = dependencies;
  }, dependencies);
}

// node_modules/@react-aria/utils/dist/useUpdateLayoutEffect.mjs
var import_react101 = __toESM(require_react(), 1);

// node_modules/@react-aria/utils/dist/useResizeObserver.mjs
var import_react102 = __toESM(require_react(), 1);

// node_modules/@react-aria/utils/dist/useSyncRef.mjs
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        if (context.ref) context.ref.current = null;
      };
    }
  });
}

// node_modules/@react-aria/utils/dist/isScrollable.mjs
function $cc38e7bd3fc7b213$export$2bb74740c4e19def(node, checkForOverflow) {
  if (!node) return false;
  let style2 = window.getComputedStyle(node);
  let isScrollable2 = /(auto|scroll)/.test(style2.overflow + style2.overflowX + style2.overflowY);
  if (isScrollable2 && checkForOverflow) isScrollable2 = node.scrollHeight !== node.clientHeight || node.scrollWidth !== node.clientWidth;
  return isScrollable2;
}

// node_modules/@react-aria/utils/dist/getScrollParent.mjs
function $62d8ded9296f3872$export$cfa2225e87938781(node, checkForOverflow) {
  let scrollableNode = node;
  if ((0, $cc38e7bd3fc7b213$export$2bb74740c4e19def)(scrollableNode, checkForOverflow)) scrollableNode = scrollableNode.parentElement;
  while (scrollableNode && !(0, $cc38e7bd3fc7b213$export$2bb74740c4e19def)(scrollableNode, checkForOverflow)) scrollableNode = scrollableNode.parentElement;
  return scrollableNode || document.scrollingElement || document.documentElement;
}

// node_modules/@react-aria/utils/dist/getScrollParents.mjs
function $a40c673dc9f6d9c7$export$94ed1c92c7beeb22(node, checkForOverflow) {
  const scrollParents = [];
  while (node && node !== document.documentElement) {
    if ((0, $cc38e7bd3fc7b213$export$2bb74740c4e19def)(node, checkForOverflow)) scrollParents.push(node);
    node = node.parentElement;
  }
  return scrollParents;
}

// node_modules/@react-aria/utils/dist/useViewportSize.mjs
var import_react103 = __toESM(require_react(), 1);
var $5df64b3807dc15ee$var$visualViewport = typeof document !== "undefined" && window.visualViewport;

// node_modules/@react-aria/utils/dist/useDescription.mjs
var import_react104 = __toESM(require_react(), 1);
var $ef06256079686ba0$var$descriptionId = 0;
var $ef06256079686ba0$var$descriptionNodes = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa1(description) {
  let [id, setId] = (0, import_react104.useState)();
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (!description) return;
    let desc = $ef06256079686ba0$var$descriptionNodes.get(description);
    if (!desc) {
      let id2 = `react-aria-description-${$ef06256079686ba0$var$descriptionId++}`;
      setId(id2);
      let node = document.createElement("div");
      node.id = id2;
      node.style.display = "none";
      node.textContent = description;
      document.body.appendChild(node);
      desc = {
        refCount: 0,
        element: node
      };
      $ef06256079686ba0$var$descriptionNodes.set(description, desc);
    } else setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (desc && --desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id : void 0
  };
}

// node_modules/@react-aria/utils/dist/useEvent.mjs
var import_react105 = __toESM(require_react(), 1);
function $e9faafb641e167db$export$90fc3a17d93f704c(ref, event, handler, options) {
  let handleEvent = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(handler);
  let isDisabled = handler == null;
  (0, import_react105.useEffect)(() => {
    if (isDisabled || !ref.current) return;
    let element = ref.current;
    element.addEventListener(event, handleEvent, options);
    return () => {
      element.removeEventListener(event, handleEvent, options);
    };
  }, [
    ref,
    event,
    options,
    isDisabled,
    handleEvent
  ]);
}

// node_modules/@react-aria/utils/dist/scrollIntoView.mjs
function $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollView, element) {
  let offsetX = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "left");
  let offsetY = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "top");
  let width = element.offsetWidth;
  let height = element.offsetHeight;
  let x2 = scrollView.scrollLeft;
  let y = scrollView.scrollTop;
  let { borderTopWidth, borderLeftWidth, scrollPaddingTop, scrollPaddingRight, scrollPaddingBottom, scrollPaddingLeft } = getComputedStyle(scrollView);
  let borderAdjustedX = x2 + parseInt(borderLeftWidth, 10);
  let borderAdjustedY = y + parseInt(borderTopWidth, 10);
  let maxX = borderAdjustedX + scrollView.clientWidth;
  let maxY = borderAdjustedY + scrollView.clientHeight;
  let scrollPaddingTopNumber = parseInt(scrollPaddingTop, 10) || 0;
  let scrollPaddingBottomNumber = parseInt(scrollPaddingBottom, 10) || 0;
  let scrollPaddingRightNumber = parseInt(scrollPaddingRight, 10) || 0;
  let scrollPaddingLeftNumber = parseInt(scrollPaddingLeft, 10) || 0;
  if (offsetX <= x2 + scrollPaddingLeftNumber) x2 = offsetX - parseInt(borderLeftWidth, 10) - scrollPaddingLeftNumber;
  else if (offsetX + width > maxX - scrollPaddingRightNumber) x2 += offsetX + width - maxX + scrollPaddingRightNumber;
  if (offsetY <= borderAdjustedY + scrollPaddingTopNumber) y = offsetY - parseInt(borderTopWidth, 10) - scrollPaddingTopNumber;
  else if (offsetY + height > maxY - scrollPaddingBottomNumber) y += offsetY + height - maxY + scrollPaddingBottomNumber;
  scrollView.scrollLeft = x2;
  scrollView.scrollTop = y;
}
function $2f04cbc44ee30ce0$var$relativeOffset(ancestor, child, axis) {
  const prop = axis === "left" ? "offsetLeft" : "offsetTop";
  let sum = 0;
  while (child.offsetParent) {
    sum += child[prop];
    if (child.offsetParent === ancestor) break;
    else if (child.offsetParent.contains(ancestor)) {
      sum -= ancestor[prop];
      break;
    }
    child = child.offsetParent;
  }
  return sum;
}
function $2f04cbc44ee30ce0$export$c826860796309d1b(targetElement, opts) {
  if (targetElement && document.contains(targetElement)) {
    let root = document.scrollingElement || document.documentElement;
    let isScrollPrevented = window.getComputedStyle(root).overflow === "hidden";
    if (!isScrollPrevented) {
      var _targetElement_scrollIntoView;
      let { left: originalLeft, top: originalTop } = targetElement.getBoundingClientRect();
      targetElement === null || targetElement === void 0 ? void 0 : (_targetElement_scrollIntoView = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView === void 0 ? void 0 : _targetElement_scrollIntoView.call(targetElement, {
        block: "nearest"
      });
      let { left: newLeft, top: newTop } = targetElement.getBoundingClientRect();
      if (Math.abs(originalLeft - newLeft) > 1 || Math.abs(originalTop - newTop) > 1) {
        var _opts_containingElement_scrollIntoView, _opts_containingElement, _targetElement_scrollIntoView1;
        opts === null || opts === void 0 ? void 0 : (_opts_containingElement = opts.containingElement) === null || _opts_containingElement === void 0 ? void 0 : (_opts_containingElement_scrollIntoView = _opts_containingElement.scrollIntoView) === null || _opts_containingElement_scrollIntoView === void 0 ? void 0 : _opts_containingElement_scrollIntoView.call(_opts_containingElement, {
          block: "center",
          inline: "center"
        });
        (_targetElement_scrollIntoView1 = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView1 === void 0 ? void 0 : _targetElement_scrollIntoView1.call(targetElement, {
          block: "nearest"
        });
      }
    } else {
      let scrollParents = (0, $a40c673dc9f6d9c7$export$94ed1c92c7beeb22)(targetElement);
      for (let scrollParent of scrollParents) $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollParent, targetElement);
    }
  }
}

// node_modules/@react-aria/utils/dist/isVirtualEvent.mjs
function $6a7db85432448f7f$export$60278871457622de(event) {
  if (event.mozInputSource === 0 && event.isTrusted) return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec8)() && event.pointerType) return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf63(event) {
  return !(0, $c87311424ea30a05$export$a11b0059900ceec8)() && event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/utils/dist/useDeepMemo.mjs
var import_react106 = __toESM(require_react(), 1);
function $5a387cc49350e6db$export$722debc0e56fea39(value, isEqual) {
  let lastValue = (0, import_react106.useRef)(null);
  if (value && lastValue.current && isEqual(value, lastValue.current)) value = lastValue.current;
  lastValue.current = value;
  return value;
}

// node_modules/@react-aria/utils/dist/useFormReset.mjs
var import_react107 = __toESM(require_react(), 1);
function $99facab73266f662$export$5add1d006293d136(ref, initialValue, onReset) {
  let resetValue = (0, import_react107.useRef)(initialValue);
  let handleReset = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    if (onReset) onReset(resetValue.current);
  });
  (0, import_react107.useEffect)(() => {
    var _ref_current;
    let form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;
    form === null || form === void 0 ? void 0 : form.addEventListener("reset", handleReset);
    return () => {
      form === null || form === void 0 ? void 0 : form.removeEventListener("reset", handleReset);
    };
  }, [
    ref,
    handleReset
  ]);
}

// node_modules/@react-aria/utils/dist/useLoadMore.mjs
var import_react108 = __toESM(require_react(), 1);

// node_modules/@react-aria/utils/dist/useLoadMoreSentinel.mjs
var import_react109 = __toESM(require_react(), 1);

// node_modules/@react-aria/utils/dist/inertValue.mjs
var import_react110 = __toESM(require_react(), 1);

// node_modules/@react-aria/utils/dist/animation.mjs
var import_react_dom4 = __toESM(require_react_dom(), 1);
var import_react111 = __toESM(require_react(), 1);

// node_modules/@react-aria/utils/dist/isFocusable.mjs
var $b4b717babfbb907b$var$focusableElements = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  '[contenteditable]:not([contenteditable^="false"])'
];
var $b4b717babfbb907b$var$FOCUSABLE_ELEMENT_SELECTOR = $b4b717babfbb907b$var$focusableElements.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$b4b717babfbb907b$var$focusableElements.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $b4b717babfbb907b$var$TABBABLE_ELEMENT_SELECTOR = $b4b717babfbb907b$var$focusableElements.join(':not([hidden]):not([tabindex="-1"]),');
function $b4b717babfbb907b$export$4c063cf1350e6fed(element) {
  return element.matches($b4b717babfbb907b$var$FOCUSABLE_ELEMENT_SELECTOR);
}

// node_modules/@react-stately/utils/dist/useControlledState.mjs
var import_react112 = __toESM(require_react(), 1);
function $458b0a5536c1a7cf$export$40bfa8c7b0832715(value, defaultValue2, onChange) {
  let [stateValue, setStateValue] = (0, import_react112.useState)(value || defaultValue2);
  let isControlledRef = (0, import_react112.useRef)(value !== void 0);
  let isControlled = value !== void 0;
  (0, import_react112.useEffect)(() => {
    let wasControlled = isControlledRef.current;
    if (wasControlled !== isControlled && true) console.warn(`WARN: A component changed from ${wasControlled ? "controlled" : "uncontrolled"} to ${isControlled ? "controlled" : "uncontrolled"}.`);
    isControlledRef.current = isControlled;
  }, [
    isControlled
  ]);
  let currentValue = isControlled ? value : stateValue;
  let setValue = (0, import_react112.useCallback)((value2, ...args) => {
    let onChangeCaller = (value3, ...onChangeArgs) => {
      if (onChange) {
        if (!Object.is(currentValue, value3)) onChange(value3, ...onChangeArgs);
      }
      if (!isControlled)
        currentValue = value3;
    };
    if (typeof value2 === "function") {
      if (true) console.warn("We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320");
      let updateFunction = (oldValue, ...functionArgs) => {
        let interceptedValue = value2(isControlled ? currentValue : oldValue, ...functionArgs);
        onChangeCaller(interceptedValue, ...args);
        if (!isControlled) return interceptedValue;
        return oldValue;
      };
      setStateValue(updateFunction);
    } else {
      if (!isControlled) setStateValue(value2);
      onChangeCaller(value2, ...args);
    }
  }, [
    isControlled,
    currentValue,
    onChange
  ]);
  return [
    currentValue,
    setValue
  ];
}

// node_modules/@react-aria/i18n/dist/useDateFormatter.mjs
var import_react113 = __toESM(require_react(), 1);
function $896ba0a80a8f4d36$export$85fd5fdf27bacc79(options) {
  options = (0, $5a387cc49350e6db$export$722debc0e56fea39)(options !== null && options !== void 0 ? options : {}, $896ba0a80a8f4d36$var$isEqual);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  return (0, import_react113.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, options), [
    locale,
    options
  ]);
}
function $896ba0a80a8f4d36$var$isEqual(a2, b2) {
  if (a2 === b2) return true;
  let aKeys = Object.keys(a2);
  let bKeys = Object.keys(b2);
  if (aKeys.length !== bKeys.length) return false;
  for (let key of aKeys) {
    if (b2[key] !== a2[key]) return false;
  }
  return true;
}

// node_modules/@internationalized/number/dist/NumberFormatter.mjs
var $488c6ddbf4ef74c2$var$formatterCache = /* @__PURE__ */ new Map();
var $488c6ddbf4ef74c2$var$supportsSignDisplay = false;
try {
  $488c6ddbf4ef74c2$var$supportsSignDisplay = new Intl.NumberFormat("de-DE", {
    signDisplay: "exceptZero"
  }).resolvedOptions().signDisplay === "exceptZero";
} catch {
}
var $488c6ddbf4ef74c2$var$supportsUnit = false;
try {
  $488c6ddbf4ef74c2$var$supportsUnit = new Intl.NumberFormat("de-DE", {
    style: "unit",
    unit: "degree"
  }).resolvedOptions().style === "unit";
} catch {
}
var $488c6ddbf4ef74c2$var$UNITS = {
  degree: {
    narrow: {
      default: "°",
      "ja-JP": " 度",
      "zh-TW": "度",
      "sl-SI": " °"
    }
  }
};
var $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5 = class {
  /** Formats a number value as a string, according to the locale and options provided to the constructor. */
  format(value) {
    let res = "";
    if (!$488c6ddbf4ef74c2$var$supportsSignDisplay && this.options.signDisplay != null) res = $488c6ddbf4ef74c2$export$711b50b3c525e0f2(this.numberFormatter, this.options.signDisplay, value);
    else res = this.numberFormatter.format(value);
    if (this.options.style === "unit" && !$488c6ddbf4ef74c2$var$supportsUnit) {
      var _UNITS_unit;
      let { unit, unitDisplay = "short", locale } = this.resolvedOptions();
      if (!unit) return res;
      let values = (_UNITS_unit = $488c6ddbf4ef74c2$var$UNITS[unit]) === null || _UNITS_unit === void 0 ? void 0 : _UNITS_unit[unitDisplay];
      res += values[locale] || values.default;
    }
    return res;
  }
  /** Formats a number to an array of parts such as separators, digits, punctuation, and more. */
  formatToParts(value) {
    return this.numberFormatter.formatToParts(value);
  }
  /** Formats a number range as a string. */
  formatRange(start, end) {
    if (typeof this.numberFormatter.formatRange === "function") return this.numberFormatter.formatRange(start, end);
    if (end < start) throw new RangeError("End date must be >= start date");
    return `${this.format(start)} – ${this.format(end)}`;
  }
  /** Formats a number range as an array of parts. */
  formatRangeToParts(start, end) {
    if (typeof this.numberFormatter.formatRangeToParts === "function") return this.numberFormatter.formatRangeToParts(start, end);
    if (end < start) throw new RangeError("End date must be >= start date");
    let startParts = this.numberFormatter.formatToParts(start);
    let endParts = this.numberFormatter.formatToParts(end);
    return [
      ...startParts.map((p2) => ({
        ...p2,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...endParts.map((p2) => ({
        ...p2,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let options = this.numberFormatter.resolvedOptions();
    if (!$488c6ddbf4ef74c2$var$supportsSignDisplay && this.options.signDisplay != null) options = {
      ...options,
      signDisplay: this.options.signDisplay
    };
    if (!$488c6ddbf4ef74c2$var$supportsUnit && this.options.style === "unit") options = {
      ...options,
      style: "unit",
      unit: this.options.unit,
      unitDisplay: this.options.unitDisplay
    };
    return options;
  }
  constructor(locale, options = {}) {
    this.numberFormatter = $488c6ddbf4ef74c2$var$getCachedNumberFormatter(locale, options);
    this.options = options;
  }
};
function $488c6ddbf4ef74c2$var$getCachedNumberFormatter(locale, options = {}) {
  let { numberingSystem } = options;
  if (numberingSystem && locale.includes("-nu-")) {
    if (!locale.includes("-u-")) locale += "-u-";
    locale += `-nu-${numberingSystem}`;
  }
  if (options.style === "unit" && !$488c6ddbf4ef74c2$var$supportsUnit) {
    var _UNITS_unit;
    let { unit, unitDisplay = "short" } = options;
    if (!unit) throw new Error('unit option must be provided with style: "unit"');
    if (!((_UNITS_unit = $488c6ddbf4ef74c2$var$UNITS[unit]) === null || _UNITS_unit === void 0 ? void 0 : _UNITS_unit[unitDisplay])) throw new Error(`Unsupported unit ${unit} with unitDisplay = ${unitDisplay}`);
    options = {
      ...options,
      style: "decimal"
    };
  }
  let cacheKey = locale + (options ? Object.entries(options).sort((a2, b2) => a2[0] < b2[0] ? -1 : 1).join() : "");
  if ($488c6ddbf4ef74c2$var$formatterCache.has(cacheKey)) return $488c6ddbf4ef74c2$var$formatterCache.get(cacheKey);
  let numberFormatter = new Intl.NumberFormat(locale, options);
  $488c6ddbf4ef74c2$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}
function $488c6ddbf4ef74c2$export$711b50b3c525e0f2(numberFormat, signDisplay, num) {
  if (signDisplay === "auto") return numberFormat.format(num);
  else if (signDisplay === "never") return numberFormat.format(Math.abs(num));
  else {
    let needsPositiveSign = false;
    if (signDisplay === "always") needsPositiveSign = num > 0 || Object.is(num, 0);
    else if (signDisplay === "exceptZero") {
      if (Object.is(num, -0) || Object.is(num, 0)) num = Math.abs(num);
      else needsPositiveSign = num > 0;
    }
    if (needsPositiveSign) {
      let negative = numberFormat.format(-num);
      let noSign = numberFormat.format(num);
      let minus = negative.replace(noSign, "").replace(/\u200e|\u061C/, "");
      if ([
        ...minus
      ].length !== 1) console.warn("@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case");
      let positive = negative.replace(noSign, "!!!").replace(minus, "+").replace("!!!", noSign);
      return positive;
    } else return numberFormat.format(num);
  }
}

// node_modules/@internationalized/number/dist/NumberParser.mjs
var $6c7bd7858deea686$var$CURRENCY_SIGN_REGEX = new RegExp("^.*\\(.*\\).*$");
var $6c7bd7858deea686$var$NUMBERING_SYSTEMS = [
  "latn",
  "arab",
  "hanidec",
  "deva",
  "beng"
];
var $6c7bd7858deea686$export$cd11ab140839f11d = class {
  /**
  * Parses the given string to a number. Returns NaN if a valid number could not be parsed.
  */
  parse(value) {
    return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).parse(value);
  }
  /**
  * Returns whether the given string could potentially be a valid number. This should be used to
  * validate user input as the user types. If a `minValue` or `maxValue` is provided, the validity
  * of the minus/plus sign characters can be checked.
  */
  isValidPartialNumber(value, minValue, maxValue) {
    return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).isValidPartialNumber(value, minValue, maxValue);
  }
  /**
  * Returns a numbering system for which the given string is valid in the current locale.
  * If no numbering system could be detected, the default numbering system for the current
  * locale is returned.
  */
  getNumberingSystem(value) {
    return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).options.numberingSystem;
  }
  constructor(locale, options = {}) {
    this.locale = locale;
    this.options = options;
  }
};
var $6c7bd7858deea686$var$numberParserCache = /* @__PURE__ */ new Map();
function $6c7bd7858deea686$var$getNumberParserImpl(locale, options, value) {
  let defaultParser = $6c7bd7858deea686$var$getCachedNumberParser(locale, options);
  if (!locale.includes("-nu-") && !defaultParser.isValidPartialNumber(value)) {
    for (let numberingSystem of $6c7bd7858deea686$var$NUMBERING_SYSTEMS) if (numberingSystem !== defaultParser.options.numberingSystem) {
      let parser = $6c7bd7858deea686$var$getCachedNumberParser(locale + (locale.includes("-u-") ? "-nu-" : "-u-nu-") + numberingSystem, options);
      if (parser.isValidPartialNumber(value)) return parser;
    }
  }
  return defaultParser;
}
function $6c7bd7858deea686$var$getCachedNumberParser(locale, options) {
  let cacheKey = locale + (options ? Object.entries(options).sort((a2, b2) => a2[0] < b2[0] ? -1 : 1).join() : "");
  let parser = $6c7bd7858deea686$var$numberParserCache.get(cacheKey);
  if (!parser) {
    parser = new $6c7bd7858deea686$var$NumberParserImpl(locale, options);
    $6c7bd7858deea686$var$numberParserCache.set(cacheKey, parser);
  }
  return parser;
}
var $6c7bd7858deea686$var$NumberParserImpl = class {
  parse(value) {
    let fullySanitizedValue = this.sanitize(value);
    if (this.symbols.group)
      fullySanitizedValue = $6c7bd7858deea686$var$replaceAll(fullySanitizedValue, this.symbols.group, "");
    if (this.symbols.decimal) fullySanitizedValue = fullySanitizedValue.replace(this.symbols.decimal, ".");
    if (this.symbols.minusSign) fullySanitizedValue = fullySanitizedValue.replace(this.symbols.minusSign, "-");
    fullySanitizedValue = fullySanitizedValue.replace(this.symbols.numeral, this.symbols.index);
    if (this.options.style === "percent") {
      let isNegative = fullySanitizedValue.indexOf("-");
      fullySanitizedValue = fullySanitizedValue.replace("-", "");
      fullySanitizedValue = fullySanitizedValue.replace("+", "");
      let index = fullySanitizedValue.indexOf(".");
      if (index === -1) index = fullySanitizedValue.length;
      fullySanitizedValue = fullySanitizedValue.replace(".", "");
      if (index - 2 === 0) fullySanitizedValue = `0.${fullySanitizedValue}`;
      else if (index - 2 === -1) fullySanitizedValue = `0.0${fullySanitizedValue}`;
      else if (index - 2 === -2) fullySanitizedValue = "0.00";
      else fullySanitizedValue = `${fullySanitizedValue.slice(0, index - 2)}.${fullySanitizedValue.slice(index - 2)}`;
      if (isNegative > -1) fullySanitizedValue = `-${fullySanitizedValue}`;
    }
    let newValue = fullySanitizedValue ? +fullySanitizedValue : NaN;
    if (isNaN(newValue)) return NaN;
    if (this.options.style === "percent") {
      var _this_options_minimumFractionDigits, _this_options_maximumFractionDigits;
      let options = {
        ...this.options,
        style: "decimal",
        minimumFractionDigits: Math.min(((_this_options_minimumFractionDigits = this.options.minimumFractionDigits) !== null && _this_options_minimumFractionDigits !== void 0 ? _this_options_minimumFractionDigits : 0) + 2, 20),
        maximumFractionDigits: Math.min(((_this_options_maximumFractionDigits = this.options.maximumFractionDigits) !== null && _this_options_maximumFractionDigits !== void 0 ? _this_options_maximumFractionDigits : 0) + 2, 20)
      };
      return new $6c7bd7858deea686$export$cd11ab140839f11d(this.locale, options).parse(new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(this.locale, options).format(newValue));
    }
    if (this.options.currencySign === "accounting" && $6c7bd7858deea686$var$CURRENCY_SIGN_REGEX.test(value)) newValue = -1 * newValue;
    return newValue;
  }
  sanitize(value) {
    value = value.replace(this.symbols.literals, "");
    if (this.symbols.minusSign) value = value.replace("-", this.symbols.minusSign);
    if (this.options.numberingSystem === "arab") {
      if (this.symbols.decimal) {
        value = value.replace(",", this.symbols.decimal);
        value = value.replace(String.fromCharCode(1548), this.symbols.decimal);
      }
      if (this.symbols.group) value = $6c7bd7858deea686$var$replaceAll(value, ".", this.symbols.group);
    }
    if (this.options.locale === "fr-FR" && this.symbols.group) {
      value = $6c7bd7858deea686$var$replaceAll(value, " ", this.symbols.group);
      value = $6c7bd7858deea686$var$replaceAll(value, /\u00A0/g, this.symbols.group);
    }
    return value;
  }
  isValidPartialNumber(value, minValue = -Infinity, maxValue = Infinity) {
    value = this.sanitize(value);
    if (this.symbols.minusSign && value.startsWith(this.symbols.minusSign) && minValue < 0) value = value.slice(this.symbols.minusSign.length);
    else if (this.symbols.plusSign && value.startsWith(this.symbols.plusSign) && maxValue > 0) value = value.slice(this.symbols.plusSign.length);
    if (this.symbols.group && value.startsWith(this.symbols.group)) return false;
    if (this.symbols.decimal && value.indexOf(this.symbols.decimal) > -1 && this.options.maximumFractionDigits === 0) return false;
    if (this.symbols.group) value = $6c7bd7858deea686$var$replaceAll(value, this.symbols.group, "");
    value = value.replace(this.symbols.numeral, "");
    if (this.symbols.decimal) value = value.replace(this.symbols.decimal, "");
    return value.length === 0;
  }
  constructor(locale, options = {}) {
    this.locale = locale;
    if (options.roundingIncrement !== 1 && options.roundingIncrement != null) {
      if (options.maximumFractionDigits == null && options.minimumFractionDigits == null) {
        options.maximumFractionDigits = 0;
        options.minimumFractionDigits = 0;
      } else if (options.maximumFractionDigits == null) options.maximumFractionDigits = options.minimumFractionDigits;
      else if (options.minimumFractionDigits == null) options.minimumFractionDigits = options.maximumFractionDigits;
    }
    this.formatter = new Intl.NumberFormat(locale, options);
    this.options = this.formatter.resolvedOptions();
    this.symbols = $6c7bd7858deea686$var$getSymbols(locale, this.formatter, this.options, options);
    var _this_options_minimumFractionDigits, _this_options_maximumFractionDigits;
    if (this.options.style === "percent" && (((_this_options_minimumFractionDigits = this.options.minimumFractionDigits) !== null && _this_options_minimumFractionDigits !== void 0 ? _this_options_minimumFractionDigits : 0) > 18 || ((_this_options_maximumFractionDigits = this.options.maximumFractionDigits) !== null && _this_options_maximumFractionDigits !== void 0 ? _this_options_maximumFractionDigits : 0) > 18)) console.warn("NumberParser cannot handle percentages with greater than 18 decimal places, please reduce the number in your options.");
  }
};
var $6c7bd7858deea686$var$nonLiteralParts = /* @__PURE__ */ new Set([
  "decimal",
  "fraction",
  "integer",
  "minusSign",
  "plusSign",
  "group"
]);
var $6c7bd7858deea686$var$pluralNumbers = [
  0,
  4,
  2,
  1,
  11,
  20,
  3,
  7,
  100,
  21,
  0.1,
  1.1
];
function $6c7bd7858deea686$var$getSymbols(locale, formatter, intlOptions, originalOptions) {
  var _allParts_find, _posAllParts_find, _decimalParts_find, _allParts_find1;
  let symbolFormatter = new Intl.NumberFormat(locale, {
    ...intlOptions,
    // Resets so we get the full range of symbols
    minimumSignificantDigits: 1,
    maximumSignificantDigits: 21,
    roundingIncrement: 1,
    roundingPriority: "auto",
    roundingMode: "halfExpand"
  });
  let allParts = symbolFormatter.formatToParts(-10000.111);
  let posAllParts = symbolFormatter.formatToParts(10000.111);
  let pluralParts = $6c7bd7858deea686$var$pluralNumbers.map((n) => symbolFormatter.formatToParts(n));
  var _allParts_find_value;
  let minusSign = (_allParts_find_value = (_allParts_find = allParts.find((p2) => p2.type === "minusSign")) === null || _allParts_find === void 0 ? void 0 : _allParts_find.value) !== null && _allParts_find_value !== void 0 ? _allParts_find_value : "-";
  let plusSign = (_posAllParts_find = posAllParts.find((p2) => p2.type === "plusSign")) === null || _posAllParts_find === void 0 ? void 0 : _posAllParts_find.value;
  if (!plusSign && ((originalOptions === null || originalOptions === void 0 ? void 0 : originalOptions.signDisplay) === "exceptZero" || (originalOptions === null || originalOptions === void 0 ? void 0 : originalOptions.signDisplay) === "always")) plusSign = "+";
  let decimalParts = new Intl.NumberFormat(locale, {
    ...intlOptions,
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  }).formatToParts(1e-3);
  let decimal = (_decimalParts_find = decimalParts.find((p2) => p2.type === "decimal")) === null || _decimalParts_find === void 0 ? void 0 : _decimalParts_find.value;
  let group = (_allParts_find1 = allParts.find((p2) => p2.type === "group")) === null || _allParts_find1 === void 0 ? void 0 : _allParts_find1.value;
  let allPartsLiterals = allParts.filter((p2) => !$6c7bd7858deea686$var$nonLiteralParts.has(p2.type)).map((p2) => $6c7bd7858deea686$var$escapeRegex(p2.value));
  let pluralPartsLiterals = pluralParts.flatMap((p2) => p2.filter((p3) => !$6c7bd7858deea686$var$nonLiteralParts.has(p3.type)).map((p3) => $6c7bd7858deea686$var$escapeRegex(p3.value)));
  let sortedLiterals = [
    .../* @__PURE__ */ new Set([
      ...allPartsLiterals,
      ...pluralPartsLiterals
    ])
  ].sort((a2, b2) => b2.length - a2.length);
  let literals = sortedLiterals.length === 0 ? new RegExp("[\\p{White_Space}]", "gu") : new RegExp(`${sortedLiterals.join("|")}|[\\p{White_Space}]`, "gu");
  let numerals = [
    ...new Intl.NumberFormat(intlOptions.locale, {
      useGrouping: false
    }).format(9876543210)
  ].reverse();
  let indexes = new Map(numerals.map((d, i) => [
    d,
    i
  ]));
  let numeral = new RegExp(`[${numerals.join("")}]`, "g");
  let index = (d) => String(indexes.get(d));
  return {
    minusSign,
    plusSign,
    decimal,
    group,
    literals,
    numeral,
    index
  };
}
function $6c7bd7858deea686$var$replaceAll(str, find, replace) {
  if (str.replaceAll) return str.replaceAll(find, replace);
  return str.split(find).join(replace);
}
function $6c7bd7858deea686$var$escapeRegex(string) {
  return string.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}

// node_modules/@react-aria/i18n/dist/useNumberFormatter.mjs
var import_react114 = __toESM(require_react(), 1);

// node_modules/@react-aria/i18n/dist/useCollator.mjs
var $325a3faab7a68acd$var$cache = /* @__PURE__ */ new Map();
function $325a3faab7a68acd$export$a16aca283550c30d(options) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let cacheKey = locale + (options ? Object.entries(options).sort((a2, b2) => a2[0] < b2[0] ? -1 : 1).join() : "");
  if ($325a3faab7a68acd$var$cache.has(cacheKey)) return $325a3faab7a68acd$var$cache.get(cacheKey);
  let formatter = new Intl.Collator(locale, options);
  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);
  return formatter;
}

// node_modules/@react-aria/i18n/dist/useFilter.mjs
var import_react115 = __toESM(require_react(), 1);
function $bb77f239b46e8c72$export$3274cf84b703fff(options) {
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    ...options
  });
  let startsWith4 = (0, import_react115.useCallback)((string, substring) => {
    if (substring.length === 0) return true;
    string = string.normalize("NFC");
    substring = substring.normalize("NFC");
    return collator.compare(string.slice(0, substring.length), substring) === 0;
  }, [
    collator
  ]);
  let endsWith = (0, import_react115.useCallback)((string, substring) => {
    if (substring.length === 0) return true;
    string = string.normalize("NFC");
    substring = substring.normalize("NFC");
    return collator.compare(string.slice(-substring.length), substring) === 0;
  }, [
    collator
  ]);
  let contains2 = (0, import_react115.useCallback)((string, substring) => {
    if (substring.length === 0) return true;
    string = string.normalize("NFC");
    substring = substring.normalize("NFC");
    let scan = 0;
    let sliceLen = substring.length;
    for (; scan + sliceLen <= string.length; scan++) {
      let slice = string.slice(scan, scan + sliceLen);
      if (collator.compare(substring, slice) === 0) return true;
    }
    return false;
  }, [
    collator
  ]);
  return (0, import_react115.useMemo)(() => ({
    startsWith: startsWith4,
    endsWith,
    contains: contains2
  }), [
    startsWith4,
    endsWith,
    contains2
  ]);
}

// node_modules/@vtex/shoreline/dist/index.mjs
var import_jsx_runtime81 = __toESM(require_jsx_runtime(), 1);
var import_react221 = __toESM(require_react(), 1);
var import_react222 = __toESM(require_react(), 1);
var import_jsx_runtime82 = __toESM(require_jsx_runtime(), 1);
var import_react223 = __toESM(require_react(), 1);
var import_jsx_runtime83 = __toESM(require_jsx_runtime(), 1);
var import_react224 = __toESM(require_react(), 1);
var import_jsx_runtime84 = __toESM(require_jsx_runtime(), 1);
var import_react225 = __toESM(require_react(), 1);
var import_jsx_runtime85 = __toESM(require_jsx_runtime(), 1);
var import_react226 = __toESM(require_react(), 1);
var import_jsx_runtime86 = __toESM(require_jsx_runtime(), 1);
var import_react227 = __toESM(require_react(), 1);
var import_jsx_runtime87 = __toESM(require_jsx_runtime(), 1);
var import_react228 = __toESM(require_react(), 1);
var import_jsx_runtime88 = __toESM(require_jsx_runtime(), 1);
var import_react229 = __toESM(require_react(), 1);
var import_jsx_runtime89 = __toESM(require_jsx_runtime(), 1);
var import_react230 = __toESM(require_react(), 1);
var import_jsx_runtime90 = __toESM(require_jsx_runtime(), 1);
var import_react231 = __toESM(require_react(), 1);
var import_jsx_runtime91 = __toESM(require_jsx_runtime(), 1);
var import_react232 = __toESM(require_react(), 1);
var import_jsx_runtime92 = __toESM(require_jsx_runtime(), 1);
var import_react233 = __toESM(require_react(), 1);
var import_jsx_runtime93 = __toESM(require_jsx_runtime(), 1);
var import_react234 = __toESM(require_react(), 1);
var import_jsx_runtime94 = __toESM(require_jsx_runtime(), 1);
var import_react235 = __toESM(require_react(), 1);
var import_jsx_runtime95 = __toESM(require_jsx_runtime(), 1);
var import_react236 = __toESM(require_react(), 1);
var import_jsx_runtime96 = __toESM(require_jsx_runtime(), 1);
var import_react237 = __toESM(require_react(), 1);
var import_jsx_runtime97 = __toESM(require_jsx_runtime(), 1);
var import_react238 = __toESM(require_react(), 1);
var import_jsx_runtime98 = __toESM(require_jsx_runtime(), 1);
var import_react239 = __toESM(require_react(), 1);
var import_jsx_runtime99 = __toESM(require_jsx_runtime(), 1);
var import_react240 = __toESM(require_react(), 1);
var import_jsx_runtime100 = __toESM(require_jsx_runtime(), 1);
var import_react241 = __toESM(require_react(), 1);
var import_jsx_runtime101 = __toESM(require_jsx_runtime(), 1);
var import_react242 = __toESM(require_react(), 1);
var import_jsx_runtime102 = __toESM(require_jsx_runtime(), 1);
var import_react243 = __toESM(require_react(), 1);
var import_jsx_runtime103 = __toESM(require_jsx_runtime(), 1);
var import_react244 = __toESM(require_react(), 1);
var import_jsx_runtime104 = __toESM(require_jsx_runtime(), 1);
var import_react245 = __toESM(require_react(), 1);
var import_jsx_runtime105 = __toESM(require_jsx_runtime(), 1);
var import_react246 = __toESM(require_react(), 1);
var import_jsx_runtime106 = __toESM(require_jsx_runtime(), 1);
var import_react247 = __toESM(require_react(), 1);
var import_jsx_runtime107 = __toESM(require_jsx_runtime(), 1);
var import_react248 = __toESM(require_react(), 1);
var import_jsx_runtime108 = __toESM(require_jsx_runtime(), 1);
var import_react249 = __toESM(require_react(), 1);
var import_jsx_runtime109 = __toESM(require_jsx_runtime(), 1);
var import_react250 = __toESM(require_react(), 1);
var import_jsx_runtime110 = __toESM(require_jsx_runtime(), 1);
var import_react251 = __toESM(require_react(), 1);
var import_jsx_runtime111 = __toESM(require_jsx_runtime(), 1);
var import_react252 = __toESM(require_react(), 1);
var import_jsx_runtime112 = __toESM(require_jsx_runtime(), 1);
var import_react253 = __toESM(require_react(), 1);
var import_jsx_runtime113 = __toESM(require_jsx_runtime(), 1);
var import_react254 = __toESM(require_react(), 1);
var import_jsx_runtime114 = __toESM(require_jsx_runtime(), 1);
var import_react255 = __toESM(require_react(), 1);
var import_jsx_runtime115 = __toESM(require_jsx_runtime(), 1);
var import_react256 = __toESM(require_react(), 1);
var import_jsx_runtime116 = __toESM(require_jsx_runtime(), 1);
var import_react257 = __toESM(require_react(), 1);
var import_jsx_runtime117 = __toESM(require_jsx_runtime(), 1);
var import_react258 = __toESM(require_react(), 1);
var import_jsx_runtime118 = __toESM(require_jsx_runtime(), 1);
var import_react259 = __toESM(require_react(), 1);
var import_jsx_runtime119 = __toESM(require_jsx_runtime(), 1);
var import_react260 = __toESM(require_react(), 1);
var import_jsx_runtime120 = __toESM(require_jsx_runtime(), 1);
var import_react261 = __toESM(require_react(), 1);
var import_jsx_runtime121 = __toESM(require_jsx_runtime(), 1);
var import_react262 = __toESM(require_react(), 1);
var import_jsx_runtime122 = __toESM(require_jsx_runtime(), 1);
var import_react263 = __toESM(require_react(), 1);
var import_jsx_runtime123 = __toESM(require_jsx_runtime(), 1);
var import_react264 = __toESM(require_react(), 1);
var import_jsx_runtime124 = __toESM(require_jsx_runtime(), 1);
var import_react265 = __toESM(require_react(), 1);
var import_jsx_runtime125 = __toESM(require_jsx_runtime(), 1);
var import_react266 = __toESM(require_react(), 1);
var import_jsx_runtime126 = __toESM(require_jsx_runtime(), 1);
var import_react267 = __toESM(require_react(), 1);
var import_jsx_runtime127 = __toESM(require_jsx_runtime(), 1);
var import_react268 = __toESM(require_react(), 1);
var import_jsx_runtime128 = __toESM(require_jsx_runtime(), 1);
var import_react269 = __toESM(require_react(), 1);
var import_jsx_runtime129 = __toESM(require_jsx_runtime(), 1);
var import_react270 = __toESM(require_react(), 1);
var import_jsx_runtime130 = __toESM(require_jsx_runtime(), 1);
var import_react271 = __toESM(require_react(), 1);
var import_jsx_runtime131 = __toESM(require_jsx_runtime(), 1);
var import_react272 = __toESM(require_react(), 1);
var import_jsx_runtime132 = __toESM(require_jsx_runtime(), 1);
var import_react273 = __toESM(require_react(), 1);
var import_jsx_runtime133 = __toESM(require_jsx_runtime(), 1);
var import_react274 = __toESM(require_react(), 1);
var import_jsx_runtime134 = __toESM(require_jsx_runtime(), 1);
var import_react275 = __toESM(require_react(), 1);
var import_jsx_runtime135 = __toESM(require_jsx_runtime(), 1);
var import_react276 = __toESM(require_react(), 1);
var import_jsx_runtime136 = __toESM(require_jsx_runtime(), 1);
var import_react277 = __toESM(require_react(), 1);
var import_jsx_runtime137 = __toESM(require_jsx_runtime(), 1);
var import_react278 = __toESM(require_react(), 1);
var import_jsx_runtime138 = __toESM(require_jsx_runtime(), 1);
var import_react279 = __toESM(require_react(), 1);
var import_jsx_runtime139 = __toESM(require_jsx_runtime(), 1);
var import_react280 = __toESM(require_react(), 1);
var import_jsx_runtime140 = __toESM(require_jsx_runtime(), 1);
var import_react281 = __toESM(require_react(), 1);
var import_jsx_runtime141 = __toESM(require_jsx_runtime(), 1);
var import_react282 = __toESM(require_react(), 1);
var import_jsx_runtime142 = __toESM(require_jsx_runtime(), 1);
var import_react283 = __toESM(require_react(), 1);
var import_jsx_runtime143 = __toESM(require_jsx_runtime(), 1);
var import_react284 = __toESM(require_react(), 1);
var import_jsx_runtime144 = __toESM(require_jsx_runtime(), 1);
var import_react285 = __toESM(require_react(), 1);
var import_jsx_runtime145 = __toESM(require_jsx_runtime(), 1);
var import_react286 = __toESM(require_react(), 1);
var import_jsx_runtime146 = __toESM(require_jsx_runtime(), 1);
var import_react287 = __toESM(require_react(), 1);
var import_jsx_runtime147 = __toESM(require_jsx_runtime(), 1);
var import_react288 = __toESM(require_react(), 1);
var import_jsx_runtime148 = __toESM(require_jsx_runtime(), 1);
var import_react289 = __toESM(require_react(), 1);
var import_jsx_runtime149 = __toESM(require_jsx_runtime(), 1);
var import_react290 = __toESM(require_react(), 1);
var import_jsx_runtime150 = __toESM(require_jsx_runtime(), 1);
var import_react291 = __toESM(require_react(), 1);
var import_jsx_runtime151 = __toESM(require_jsx_runtime(), 1);
var import_react292 = __toESM(require_react(), 1);
var import_jsx_runtime152 = __toESM(require_jsx_runtime(), 1);
var import_react293 = __toESM(require_react(), 1);
var import_jsx_runtime153 = __toESM(require_jsx_runtime(), 1);
var import_react294 = __toESM(require_react(), 1);
var import_jsx_runtime154 = __toESM(require_jsx_runtime(), 1);
var import_react295 = __toESM(require_react(), 1);
var import_jsx_runtime155 = __toESM(require_jsx_runtime(), 1);
var import_react296 = __toESM(require_react(), 1);
var import_jsx_runtime156 = __toESM(require_jsx_runtime(), 1);
var import_react297 = __toESM(require_react(), 1);
var import_jsx_runtime157 = __toESM(require_jsx_runtime(), 1);
var import_react298 = __toESM(require_react(), 1);
var import_jsx_runtime158 = __toESM(require_jsx_runtime(), 1);
var import_react299 = __toESM(require_react(), 1);
var import_jsx_runtime159 = __toESM(require_jsx_runtime(), 1);
var import_react300 = __toESM(require_react(), 1);
var import_jsx_runtime160 = __toESM(require_jsx_runtime(), 1);
var import_react301 = __toESM(require_react(), 1);
var import_jsx_runtime161 = __toESM(require_jsx_runtime(), 1);
var import_react302 = __toESM(require_react(), 1);
var import_jsx_runtime162 = __toESM(require_jsx_runtime(), 1);
var import_react303 = __toESM(require_react(), 1);
var import_jsx_runtime163 = __toESM(require_jsx_runtime(), 1);
var import_react304 = __toESM(require_react(), 1);
var import_jsx_runtime164 = __toESM(require_jsx_runtime(), 1);
var import_react305 = __toESM(require_react(), 1);
var import_jsx_runtime165 = __toESM(require_jsx_runtime(), 1);
var import_react306 = __toESM(require_react(), 1);
var import_jsx_runtime166 = __toESM(require_jsx_runtime(), 1);
var import_react307 = __toESM(require_react(), 1);
var import_jsx_runtime167 = __toESM(require_jsx_runtime(), 1);
var import_react308 = __toESM(require_react(), 1);
var import_jsx_runtime168 = __toESM(require_jsx_runtime(), 1);
var import_react309 = __toESM(require_react(), 1);
var import_jsx_runtime169 = __toESM(require_jsx_runtime(), 1);
var import_react310 = __toESM(require_react(), 1);
var import_jsx_runtime170 = __toESM(require_jsx_runtime(), 1);
var import_react311 = __toESM(require_react(), 1);
var import_jsx_runtime171 = __toESM(require_jsx_runtime(), 1);
var import_react312 = __toESM(require_react(), 1);
var import_jsx_runtime172 = __toESM(require_jsx_runtime(), 1);
var import_react313 = __toESM(require_react(), 1);
var import_jsx_runtime173 = __toESM(require_jsx_runtime(), 1);
var import_react314 = __toESM(require_react(), 1);
var import_jsx_runtime174 = __toESM(require_jsx_runtime(), 1);
var import_react315 = __toESM(require_react(), 1);
var import_jsx_runtime175 = __toESM(require_jsx_runtime(), 1);
var import_react316 = __toESM(require_react(), 1);
var import_jsx_runtime176 = __toESM(require_jsx_runtime(), 1);
var import_react317 = __toESM(require_react(), 1);
var import_jsx_runtime177 = __toESM(require_jsx_runtime(), 1);
var import_react318 = __toESM(require_react(), 1);
var import_jsx_runtime178 = __toESM(require_jsx_runtime(), 1);
var import_react319 = __toESM(require_react(), 1);
var import_jsx_runtime179 = __toESM(require_jsx_runtime(), 1);
var import_react320 = __toESM(require_react(), 1);
var import_jsx_runtime180 = __toESM(require_jsx_runtime(), 1);
var import_react321 = __toESM(require_react(), 1);
var import_jsx_runtime181 = __toESM(require_jsx_runtime(), 1);
var import_react322 = __toESM(require_react(), 1);
var import_jsx_runtime182 = __toESM(require_jsx_runtime(), 1);
var import_react323 = __toESM(require_react(), 1);
var import_jsx_runtime183 = __toESM(require_jsx_runtime(), 1);
var import_react324 = __toESM(require_react(), 1);
var import_jsx_runtime184 = __toESM(require_jsx_runtime(), 1);
var import_react325 = __toESM(require_react(), 1);
var import_jsx_runtime185 = __toESM(require_jsx_runtime(), 1);
var import_react326 = __toESM(require_react(), 1);
var import_jsx_runtime186 = __toESM(require_jsx_runtime(), 1);
var import_react327 = __toESM(require_react(), 1);
var import_jsx_runtime187 = __toESM(require_jsx_runtime(), 1);
var import_react328 = __toESM(require_react(), 1);
var import_jsx_runtime188 = __toESM(require_jsx_runtime(), 1);
var import_react329 = __toESM(require_react(), 1);
var import_jsx_runtime189 = __toESM(require_jsx_runtime(), 1);
var import_react330 = __toESM(require_react(), 1);
var import_jsx_runtime190 = __toESM(require_jsx_runtime(), 1);
var import_react331 = __toESM(require_react(), 1);
var import_jsx_runtime191 = __toESM(require_jsx_runtime(), 1);
var import_react332 = __toESM(require_react(), 1);
var import_jsx_runtime192 = __toESM(require_jsx_runtime(), 1);
var import_react333 = __toESM(require_react(), 1);
var import_jsx_runtime193 = __toESM(require_jsx_runtime(), 1);
var import_react334 = __toESM(require_react(), 1);
var import_jsx_runtime194 = __toESM(require_jsx_runtime(), 1);
var import_react335 = __toESM(require_react(), 1);
var import_jsx_runtime195 = __toESM(require_jsx_runtime(), 1);
var import_react336 = __toESM(require_react(), 1);
var import_jsx_runtime196 = __toESM(require_jsx_runtime(), 1);
var import_react337 = __toESM(require_react(), 1);
var import_jsx_runtime197 = __toESM(require_jsx_runtime(), 1);
var import_react338 = __toESM(require_react(), 1);
var import_jsx_runtime198 = __toESM(require_jsx_runtime(), 1);
var import_react339 = __toESM(require_react(), 1);
var import_jsx_runtime199 = __toESM(require_jsx_runtime(), 1);
var import_react340 = __toESM(require_react(), 1);
var import_jsx_runtime200 = __toESM(require_jsx_runtime(), 1);
var import_react341 = __toESM(require_react(), 1);
var import_jsx_runtime201 = __toESM(require_jsx_runtime(), 1);
var import_react342 = __toESM(require_react(), 1);
var import_jsx_runtime202 = __toESM(require_jsx_runtime(), 1);
var import_react343 = __toESM(require_react(), 1);
var import_jsx_runtime203 = __toESM(require_jsx_runtime(), 1);
var import_react344 = __toESM(require_react(), 1);
var import_jsx_runtime204 = __toESM(require_jsx_runtime(), 1);
var import_react345 = __toESM(require_react(), 1);
var import_jsx_runtime205 = __toESM(require_jsx_runtime(), 1);
var import_react346 = __toESM(require_react(), 1);
var import_jsx_runtime206 = __toESM(require_jsx_runtime(), 1);
var import_react347 = __toESM(require_react(), 1);
var import_jsx_runtime207 = __toESM(require_jsx_runtime(), 1);
var import_react348 = __toESM(require_react(), 1);
var import_jsx_runtime208 = __toESM(require_jsx_runtime(), 1);
var import_react349 = __toESM(require_react(), 1);
var import_jsx_runtime209 = __toESM(require_jsx_runtime(), 1);
var import_react350 = __toESM(require_react(), 1);
var import_jsx_runtime210 = __toESM(require_jsx_runtime(), 1);
var import_react351 = __toESM(require_react(), 1);
var import_jsx_runtime211 = __toESM(require_jsx_runtime(), 1);
var import_react352 = __toESM(require_react(), 1);
var import_jsx_runtime212 = __toESM(require_jsx_runtime(), 1);
var import_react353 = __toESM(require_react(), 1);
var import_jsx_runtime213 = __toESM(require_jsx_runtime(), 1);
var import_react354 = __toESM(require_react(), 1);
var import_jsx_runtime214 = __toESM(require_jsx_runtime(), 1);
var import_react355 = __toESM(require_react(), 1);
var import_jsx_runtime215 = __toESM(require_jsx_runtime(), 1);
var import_react356 = __toESM(require_react(), 1);
var import_jsx_runtime216 = __toESM(require_jsx_runtime(), 1);
var import_react357 = __toESM(require_react(), 1);
var import_jsx_runtime217 = __toESM(require_jsx_runtime(), 1);
var import_react358 = __toESM(require_react(), 1);
var import_jsx_runtime218 = __toESM(require_jsx_runtime(), 1);
var import_react359 = __toESM(require_react(), 1);
var import_jsx_runtime219 = __toESM(require_jsx_runtime(), 1);
var import_react360 = __toESM(require_react(), 1);
var import_jsx_runtime220 = __toESM(require_jsx_runtime(), 1);
var import_react361 = __toESM(require_react(), 1);
var import_jsx_runtime221 = __toESM(require_jsx_runtime(), 1);
var import_react362 = __toESM(require_react(), 1);
var import_jsx_runtime222 = __toESM(require_jsx_runtime(), 1);
var import_react363 = __toESM(require_react(), 1);
var import_jsx_runtime223 = __toESM(require_jsx_runtime(), 1);
var import_react364 = __toESM(require_react(), 1);
var import_jsx_runtime224 = __toESM(require_jsx_runtime(), 1);
var import_react365 = __toESM(require_react(), 1);
var import_jsx_runtime225 = __toESM(require_jsx_runtime(), 1);
var import_react366 = __toESM(require_react(), 1);
var import_react367 = __toESM(require_react(), 1);
var import_react368 = __toESM(require_react(), 1);
var import_react370 = __toESM(require_react(), 1);
var import_jsx_runtime226 = __toESM(require_jsx_runtime(), 1);
var import_react371 = __toESM(require_react(), 1);
var import_jsx_runtime227 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime228 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime229 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime230 = __toESM(require_jsx_runtime(), 1);
var import_react372 = __toESM(require_react(), 1);
var import_jsx_runtime231 = __toESM(require_jsx_runtime(), 1);
var import_react373 = __toESM(require_react(), 1);

// node_modules/@react-stately/toggle/dist/useToggleState.mjs
function $3017fa7ffdddec74$export$8042c6c013fd5226(props = {}) {
  let { isReadOnly } = props;
  let [isSelected3, setSelected] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.isSelected, props.defaultSelected || false, props.onChange);
  function updateSelected(value) {
    if (!isReadOnly) setSelected(value);
  }
  function toggleState() {
    if (!isReadOnly) setSelected(!isSelected3);
  }
  return {
    isSelected: isSelected3,
    setSelected: updateSelected,
    toggle: toggleState
  };
}

// node_modules/@react-aria/checkbox/dist/useCheckbox.mjs
var import_react146 = __toESM(require_react(), 1);

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/utils.mjs
var import_react116 = __toESM(require_react(), 1);
function $8a9cb279dc87e130$export$525bc4921d56d4a(nativeEvent) {
  let event = nativeEvent;
  event.nativeEvent = nativeEvent;
  event.isDefaultPrevented = () => event.defaultPrevented;
  event.isPropagationStopped = () => event.cancelBubble;
  event.persist = () => {
  };
  return event;
}
function $8a9cb279dc87e130$export$c2b7abe5d61ec696(event, target) {
  Object.defineProperty(event, "target", {
    value: target
  });
  Object.defineProperty(event, "currentTarget", {
    value: target
  });
}
function $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {
  let stateRef = (0, import_react116.useRef)({
    isFocused: false,
    observer: null
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  let dispatchBlur = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);
  });
  return (0, import_react116.useCallback)((e) => {
    if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e.target;
      let onBlurHandler = (e2) => {
        stateRef.current.isFocused = false;
        if (target.disabled) {
          let event = $8a9cb279dc87e130$export$525bc4921d56d4a(e2);
          dispatchBlur(event);
        }
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          var _stateRef_current_observer;
          (_stateRef_current_observer = stateRef.current.observer) === null || _stateRef_current_observer === void 0 ? void 0 : _stateRef_current_observer.disconnect();
          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;
          target.dispatchEvent(new FocusEvent("blur", {
            relatedTarget: relatedTargetEl
          }));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true,
            relatedTarget: relatedTargetEl
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, [
    dispatchBlur
  ]);
}
var $8a9cb279dc87e130$export$fda7da73ab5d4c48 = false;
function $8a9cb279dc87e130$export$cabe61c495ee3649(target) {
  while (target && !(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(target)) target = target.parentElement;
  let window2 = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(target);
  let activeElement = window2.document.activeElement;
  if (!activeElement || activeElement === target) return;
  $8a9cb279dc87e130$export$fda7da73ab5d4c48 = true;
  let isRefocusing = false;
  let onBlur = (e) => {
    if (e.target === activeElement || isRefocusing) e.stopImmediatePropagation();
  };
  let onFocusOut = (e) => {
    if (e.target === activeElement || isRefocusing) {
      e.stopImmediatePropagation();
      if (!target && !isRefocusing) {
        isRefocusing = true;
        (0, $7215afc6de606d6b$export$de79e2c695e052f3)(activeElement);
        cleanup();
      }
    }
  };
  let onFocus = (e) => {
    if (e.target === target || isRefocusing) e.stopImmediatePropagation();
  };
  let onFocusIn = (e) => {
    if (e.target === target || isRefocusing) {
      e.stopImmediatePropagation();
      if (!isRefocusing) {
        isRefocusing = true;
        (0, $7215afc6de606d6b$export$de79e2c695e052f3)(activeElement);
        cleanup();
      }
    }
  };
  window2.addEventListener("blur", onBlur, true);
  window2.addEventListener("focusout", onFocusOut, true);
  window2.addEventListener("focusin", onFocusIn, true);
  window2.addEventListener("focus", onFocus, true);
  let cleanup = () => {
    cancelAnimationFrame(raf);
    window2.removeEventListener("blur", onBlur, true);
    window2.removeEventListener("focusout", onFocusOut, true);
    window2.removeEventListener("focusin", onFocusIn, true);
    window2.removeEventListener("focus", onFocus, true);
    $8a9cb279dc87e130$export$fda7da73ab5d4c48 = false;
    isRefocusing = false;
  };
  let raf = requestAnimationFrame(cleanup);
  return cleanup;
}

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/textSelection.mjs
var $14c0b72509d70225$var$state = "default";
var $14c0b72509d70225$var$savedUserSelect = "";
var $14c0b72509d70225$var$modifiedElementMap = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state === "default") {
      const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(target);
      $14c0b72509d70225$var$savedUserSelect = documentObject.documentElement.style.webkitUserSelect;
      documentObject.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    let property = "userSelect" in target.style ? "userSelect" : "webkitUserSelect";
    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style[property]);
    target.style[property] = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state !== "disabled") return;
    $14c0b72509d70225$var$state = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
        if ($14c0b72509d70225$var$state === "restoring") {
          const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(target);
          if (documentObject.documentElement.style.webkitUserSelect === "none") documentObject.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || "";
          $14c0b72509d70225$var$savedUserSelect = "";
          $14c0b72509d70225$var$state = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);
      let property = "userSelect" in target.style ? "userSelect" : "webkitUserSelect";
      if (target.style[property] === "none") target.style[property] = targetOldUserSelect;
      if (target.getAttribute("style") === "") target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap.delete(target);
    }
  }
}

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/context.mjs
var import_react117 = __toESM(require_react(), 1);
var $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = (0, import_react117.default).createContext({
  register: () => {
  }
});
$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = "PressResponderContext";

// node_modules/@swc/helpers/esm/_class_apply_descriptor_get.js
function _class_apply_descriptor_get(receiver, descriptor) {
  if (descriptor.get) return descriptor.get.call(receiver);
  return descriptor.value;
}

// node_modules/@swc/helpers/esm/_class_extract_field_descriptor.js
function _class_extract_field_descriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver)) throw new TypeError("attempted to " + action + " private field on non-instance");
  return privateMap.get(receiver);
}

// node_modules/@swc/helpers/esm/_class_private_field_get.js
function _class_private_field_get(receiver, privateMap) {
  var descriptor = _class_extract_field_descriptor(receiver, privateMap, "get");
  return _class_apply_descriptor_get(receiver, descriptor);
}

// node_modules/@swc/helpers/esm/_class_apply_descriptor_set.js
function _class_apply_descriptor_set(receiver, descriptor, value) {
  if (descriptor.set) descriptor.set.call(receiver, value);
  else {
    if (!descriptor.writable) {
      throw new TypeError("attempted to set read only private field");
    }
    descriptor.value = value;
  }
}

// node_modules/@swc/helpers/esm/_class_private_field_set.js
function _class_private_field_set(receiver, privateMap, value) {
  var descriptor = _class_extract_field_descriptor(receiver, privateMap, "set");
  _class_apply_descriptor_set(receiver, descriptor, value);
  return value;
}

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/usePress.mjs
var import_react_dom5 = __toESM(require_react_dom(), 1);
var import_react118 = __toESM(require_react(), 1);
function $f6c31cce2adf654f$var$usePressResponderContext(props) {
  let context = (0, import_react118.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, props.ref);
  return props;
}
var $f6c31cce2adf654f$var$_shouldStopPropagation = /* @__PURE__ */ new WeakMap();
var $f6c31cce2adf654f$var$PressEvent = class {
  continuePropagation() {
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, false);
  }
  get shouldStopPropagation() {
    return (0, _class_private_field_get)(this, $f6c31cce2adf654f$var$_shouldStopPropagation);
  }
  constructor(type, pointerType, originalEvent, state) {
    (0, _class_private_field_init)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, {
      writable: true,
      value: void 0
    });
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, true);
    var _state_target;
    let currentTarget = (_state_target = state === null || state === void 0 ? void 0 : state.target) !== null && _state_target !== void 0 ? _state_target : originalEvent.currentTarget;
    const rect = currentTarget === null || currentTarget === void 0 ? void 0 : currentTarget.getBoundingClientRect();
    let x2, y = 0;
    let clientX, clientY = null;
    if (originalEvent.clientX != null && originalEvent.clientY != null) {
      clientX = originalEvent.clientX;
      clientY = originalEvent.clientY;
    }
    if (rect) {
      if (clientX != null && clientY != null) {
        x2 = clientX - rect.left;
        y = clientY - rect.top;
      } else {
        x2 = rect.width / 2;
        y = rect.height / 2;
      }
    }
    this.type = type;
    this.pointerType = pointerType;
    this.target = originalEvent.currentTarget;
    this.shiftKey = originalEvent.shiftKey;
    this.metaKey = originalEvent.metaKey;
    this.ctrlKey = originalEvent.ctrlKey;
    this.altKey = originalEvent.altKey;
    this.x = x2;
    this.y = y;
  }
};
var $f6c31cce2adf654f$var$LINK_CLICKED = Symbol("linkClicked");
var $f6c31cce2adf654f$var$STYLE_ID = "react-aria-pressable-style";
var $f6c31cce2adf654f$var$PRESSABLE_ATTRIBUTE = "data-react-aria-pressable";
function $f6c31cce2adf654f$export$45712eceda6fad21(props) {
  let { onPress, onPressChange, onPressStart, onPressEnd, onPressUp, onClick, isDisabled, isPressed: isPressedProp, preventFocusOnPress, shouldCancelOnPointerExit, allowTextSelectionOnPress, ref: domRef, ...domProps } = $f6c31cce2adf654f$var$usePressResponderContext(props);
  let [isPressed, setPressed] = (0, import_react118.useState)(false);
  let ref = (0, import_react118.useRef)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    didFirePressStart: false,
    isTriggeringEvent: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null,
    disposables: []
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let triggerPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled || state.didFirePressStart) return false;
    let shouldStopPropagation = true;
    state.isTriggeringEvent = true;
    if (onPressStart) {
      let event = new $f6c31cce2adf654f$var$PressEvent("pressstart", pointerType, originalEvent);
      onPressStart(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(true);
    state.isTriggeringEvent = false;
    state.didFirePressStart = true;
    setPressed(true);
    return shouldStopPropagation;
  });
  let triggerPressEnd = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType, wasPressed = true) => {
    let state = ref.current;
    if (!state.didFirePressStart) return false;
    state.didFirePressStart = false;
    state.isTriggeringEvent = true;
    let shouldStopPropagation = true;
    if (onPressEnd) {
      let event = new $f6c31cce2adf654f$var$PressEvent("pressend", pointerType, originalEvent);
      onPressEnd(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(false);
    setPressed(false);
    if (onPress && wasPressed && !isDisabled) {
      let event = new $f6c31cce2adf654f$var$PressEvent("press", pointerType, originalEvent);
      onPress(event);
      shouldStopPropagation && (shouldStopPropagation = event.shouldStopPropagation);
    }
    state.isTriggeringEvent = false;
    return shouldStopPropagation;
  });
  let triggerPressUp = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled) return false;
    if (onPressUp) {
      state.isTriggeringEvent = true;
      let event = new $f6c31cce2adf654f$var$PressEvent("pressup", pointerType, originalEvent);
      onPressUp(event);
      state.isTriggeringEvent = false;
      return event.shouldStopPropagation;
    }
    return true;
  });
  let cancel = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    let state = ref.current;
    if (state.isPressed && state.target) {
      if (state.didFirePressStart && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
      state.isPressed = false;
      state.isOverTarget = false;
      state.activePointerId = null;
      state.pointerType = null;
      removeAllGlobalListeners();
      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
      for (let dispose of state.disposables) dispose();
      state.disposables = [];
    }
  });
  let cancelOnPointerExit = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (shouldCancelOnPointerExit) cancel(e);
  });
  let triggerClick = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    onClick === null || onClick === void 0 ? void 0 : onClick(e);
  });
  let triggerSyntheticClick = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e, target) => {
    if (onClick) {
      let event = new MouseEvent("click", e);
      (0, $8a9cb279dc87e130$export$c2b7abe5d61ec696)(event, target);
      onClick((0, $8a9cb279dc87e130$export$525bc4921d56d4a)(event));
    }
  });
  let pressProps = (0, import_react118.useMemo)(() => {
    let state = ref.current;
    let pressProps2 = {
      onKeyDown(e) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && (0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) {
          var _state_metaKeyEvents;
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent), e.key)) e.preventDefault();
          let shouldStopPropagation = true;
          if (!state.isPressed && !e.repeat) {
            state.target = e.currentTarget;
            state.isPressed = true;
            state.pointerType = "keyboard";
            shouldStopPropagation = triggerPressStart(e, "keyboard");
            let originalTarget = e.currentTarget;
            let pressUp = (e2) => {
              if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e2, originalTarget) && !e2.repeat && (0, $d4ee10de306f2510$export$4282f70798064fe0)(originalTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e2)) && state.target) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e2), "keyboard");
            };
            addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "keyup", (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(pressUp, onKeyUp), true);
          }
          if (shouldStopPropagation) e.stopPropagation();
          if (e.metaKey && (0, $c87311424ea30a05$export$9ac100e40613ea10)()) (_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.set(e.key, e.nativeEvent);
        } else if (e.key === "Meta") state.metaKeyEvents = /* @__PURE__ */ new Map();
      },
      onClick(e) {
        if (e && !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (e && e.button === 0 && !state.isTriggeringEvent && !(0, $ea8dcbcb9ea1b556$export$95185d699e05d4d7).isOpening) {
          let shouldStopPropagation = true;
          if (isDisabled) e.preventDefault();
          if (!state.ignoreEmulatedMouseEvents && !state.isPressed && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent))) {
            let stopPressStart = triggerPressStart(e, "virtual");
            let stopPressUp = triggerPressUp(e, "virtual");
            let stopPressEnd = triggerPressEnd(e, "virtual");
            triggerClick(e);
            shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;
          } else if (state.isPressed && state.pointerType !== "keyboard") {
            let pointerType = state.pointerType || e.nativeEvent.pointerType || "virtual";
            let stopPressUp = triggerPressUp($f6c31cce2adf654f$var$createEvent(e.currentTarget, e), pointerType);
            let stopPressEnd = triggerPressEnd($f6c31cce2adf654f$var$createEvent(e.currentTarget, e), pointerType, true);
            shouldStopPropagation = stopPressUp && stopPressEnd;
            state.isOverTarget = false;
            triggerClick(e);
            cancel(e);
          }
          state.ignoreEmulatedMouseEvents = false;
          if (shouldStopPropagation) e.stopPropagation();
        }
      }
    };
    let onKeyUp = (e) => {
      var _state_metaKeyEvents;
      if (state.isPressed && state.target && $f6c31cce2adf654f$var$isValidKeyboardEvent(e, state.target)) {
        var _state_metaKeyEvents1;
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e), e.key)) e.preventDefault();
        let target = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e);
        let wasPressed = (0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e));
        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), "keyboard", wasPressed);
        if (wasPressed) triggerSyntheticClick(e, state.target);
        removeAllGlobalListeners();
        if (e.key !== "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) && (0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, target) && !e[$f6c31cce2adf654f$var$LINK_CLICKED]) {
          e[$f6c31cce2adf654f$var$LINK_CLICKED] = true;
          (0, $ea8dcbcb9ea1b556$export$95185d699e05d4d7)(state.target, e, false);
        }
        state.isPressed = false;
        (_state_metaKeyEvents1 = state.metaKeyEvents) === null || _state_metaKeyEvents1 === void 0 ? void 0 : _state_metaKeyEvents1.delete(e.key);
      } else if (e.key === "Meta" && ((_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.size)) {
        var _state_target;
        let events = state.metaKeyEvents;
        state.metaKeyEvents = void 0;
        for (let event of events.values()) (_state_target = state.target) === null || _state_target === void 0 ? void 0 : _state_target.dispatchEvent(new KeyboardEvent("keyup", event));
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e) => {
        if (e.button !== 0 || !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf63)(e.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        state.pointerType = e.pointerType;
        let shouldStopPropagation = true;
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e.pointerId;
          state.target = e.currentTarget;
          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
          let target = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent);
          if ("releasePointerCapture" in target) target.releasePointerCapture(e.pointerId);
          addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "pointerup", onPointerUp, false);
          addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "pointercancel", onPointerCancel, false);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseDown = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (e.button === 0) {
          if (preventFocusOnPress) {
            let dispose = (0, $8a9cb279dc87e130$export$cabe61c495ee3649)(e.target);
            if (dispose) state.disposables.push(dispose);
          }
          e.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent)) || state.pointerType === "virtual") return;
        if (e.button === 0 && !state.isPressed) triggerPressUp(e, state.pointerType || e.pointerType);
      };
      pressProps2.onPointerEnter = (e) => {
        if (e.pointerId === state.activePointerId && state.target && !state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = true;
          triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);
        }
      };
      pressProps2.onPointerLeave = (e) => {
        if (e.pointerId === state.activePointerId && state.target && state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
          cancelOnPointerExit(e);
        }
      };
      let onPointerUp = (e) => {
        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0 && state.target) {
          if ((0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e)) && state.pointerType != null) {
            let clicked = false;
            let timeout = setTimeout(() => {
              if (state.isPressed && state.target instanceof HTMLElement) {
                if (clicked) cancel(e);
                else {
                  (0, $7215afc6de606d6b$export$de79e2c695e052f3)(state.target);
                  state.target.click();
                }
              }
            }, 80);
            addGlobalListener(e.currentTarget, "click", () => clicked = true, true);
            state.disposables.push(() => clearTimeout(timeout));
          } else cancel(e);
          state.isOverTarget = false;
        }
      };
      let onPointerCancel = (e) => {
        cancel(e);
      };
      pressProps2.onDragStart = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        cancel(e);
      };
    } else if (false) {
      pressProps2.onMouseDown = (e) => {
        if (e.button !== 0 || !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (state.ignoreEmulatedMouseEvents) {
          e.stopPropagation();
          return;
        }
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent) ? "virtual" : "mouse";
        let shouldStopPropagation = (0, import_react_dom5.flushSync)(() => triggerPressStart(e, state.pointerType));
        if (shouldStopPropagation) e.stopPropagation();
        if (preventFocusOnPress) {
          let dispose = (0, $8a9cb279dc87e130$export$cabe61c495ee3649)(e.target);
          if (dispose) state.disposables.push(dispose);
        }
        addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = true;
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseLeave = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);
          cancelOnPointerExit(e);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseUp = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (!state.ignoreEmulatedMouseEvents && e.button === 0 && !state.isPressed) triggerPressUp(e, state.pointerType || "mouse");
      };
      let onMouseUp = (e) => {
        if (e.button !== 0) return;
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if (state.target && state.target.contains(e.target) && state.pointerType != null) ;
        else cancel(e);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);
        if (!touch) return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e.currentTarget;
        state.pointerType = "touch";
        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);
        let shouldStopPropagation = triggerPressStart($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
        if (shouldStopPropagation) e.stopPropagation();
        addGlobalListener((0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e.currentTarget), "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {
          if (!state.isOverTarget && state.pointerType != null) {
            state.isOverTarget = true;
            shouldStopPropagation = triggerPressStart($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
          }
        } else if (state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType, false);
          cancelOnPointerExit($f6c31cce2adf654f$var$createTouchEvent(state.target, e));
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onTouchEnd = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget) && state.pointerType != null) {
          triggerPressUp($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
          shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
          triggerSyntheticClick(e.nativeEvent, state.target);
        } else if (state.isOverTarget && state.pointerType != null) shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType, false);
        if (shouldStopPropagation) e.stopPropagation();
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (state.target && !allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        e.stopPropagation();
        if (state.isPressed) cancel($f6c31cce2adf654f$var$createTouchEvent(state.target, e));
      };
      let onScroll = (e) => {
        if (state.isPressed && (0, $d4ee10de306f2510$export$4282f70798064fe0)((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e), state.target)) cancel({
          currentTarget: state.target,
          shiftKey: false,
          ctrlKey: false,
          metaKey: false,
          altKey: false
        });
      };
      pressProps2.onDragStart = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        cancel(e);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress,
    cancel,
    cancelOnPointerExit,
    triggerPressEnd,
    triggerPressStart,
    triggerPressUp,
    triggerClick,
    triggerSyntheticClick
  ]);
  (0, import_react118.useEffect)(() => {
    if (!domRef || false) return;
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(domRef.current);
    if (!ownerDocument || !ownerDocument.head || ownerDocument.getElementById($f6c31cce2adf654f$var$STYLE_ID)) return;
    const style2 = ownerDocument.createElement("style");
    style2.id = $f6c31cce2adf654f$var$STYLE_ID;
    style2.textContent = `
@layer {
  [${$f6c31cce2adf654f$var$PRESSABLE_ATTRIBUTE}] {
    touch-action: pan-x pan-y pinch-zoom;
  }
}
    `.trim();
    ownerDocument.head.prepend(style2);
  }, [
    domRef
  ]);
  (0, import_react118.useEffect)(() => {
    let state = ref.current;
    return () => {
      var _state_target;
      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)((_state_target = state.target) !== null && _state_target !== void 0 ? _state_target : void 0);
      for (let dispose of state.disposables) dispose();
      state.disposables = [];
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, pressProps, {
      [$f6c31cce2adf654f$var$PRESSABLE_ATTRIBUTE]: true
    })
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).HTMLTextAreaElement || element.isContentEditable) && // Links should only trigger with Enter key
  !((role === "link" || !role && $f6c31cce2adf654f$var$isHTMLAnchorLink(element)) && key !== "Enter");
}
function $f6c31cce2adf654f$var$createEvent(target, e) {
  let clientX = e.clientX;
  let clientY = e.clientY;
  return {
    currentTarget: target,
    shiftKey: e.shiftKey,
    ctrlKey: e.ctrlKey,
    metaKey: e.metaKey,
    altKey: e.altKey,
    clientX,
    clientY
  };
}
function $f6c31cce2adf654f$var$shouldPreventDefaultUp(target) {
  if (target instanceof HTMLInputElement) return false;
  if (target instanceof HTMLButtonElement) return target.type !== "submit" && target.type !== "reset";
  if ($f6c31cce2adf654f$var$isHTMLAnchorLink(target)) return false;
  return true;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {
  if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey(target, key);
  return $f6c31cce2adf654f$var$shouldPreventDefaultUp(target);
}
var $f6c31cce2adf654f$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);
}

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/useFocusVisible.mjs
var import_react119 = __toESM(require_react(), 1);
var $507fabe10e71c6fb$var$currentModality = null;
var $507fabe10e71c6fb$var$changeHandlers = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$export$d90243b58daecda7 = /* @__PURE__ */ new Map();
var $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers) handler(modality, e);
}
function $507fabe10e71c6fb$var$isValidKey(e) {
  return !(e.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea10)() && e.altKey || e.ctrlKey || e.key === "Control" || e.key === "Shift" || e.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent(e) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
  if ($507fabe10e71c6fb$var$isValidKey(e)) {
    $507fabe10e71c6fb$var$currentModality = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers("keyboard", e);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent(e) {
  $507fabe10e71c6fb$var$currentModality = "pointer";
  if (e.type === "mousedown" || e.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers("pointer", e);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent(e) {
  if ((0, $6a7db85432448f7f$export$60278871457622de)(e)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$currentModality = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent(e) {
  if (e.target === window || e.target === document || (0, $8a9cb279dc87e130$export$fda7da73ab5d4c48) || !e.isTrusted) return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {
    $507fabe10e71c6fb$var$currentModality = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers("virtual", e);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur() {
  if (0, $8a9cb279dc87e130$export$fda7da73ab5d4c48) return;
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents(element) {
  if (typeof window === "undefined" || typeof document === "undefined" || $507fabe10e71c6fb$export$d90243b58daecda7.get((0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element))) return;
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  let focus2 = windowObject.HTMLElement.prototype.focus;
  windowObject.HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    focus2.apply(this, arguments);
  };
  documentObject.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  windowObject.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  windowObject.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else if (false) {
    documentObject.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  windowObject.addEventListener("beforeunload", () => {
    $507fabe10e71c6fb$var$tearDownWindowFocusTracking(element);
  }, {
    once: true
  });
  $507fabe10e71c6fb$export$d90243b58daecda7.set(windowObject, {
    focus: focus2
  });
}
var $507fabe10e71c6fb$var$tearDownWindowFocusTracking = (element, loadListener) => {
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  if (loadListener) documentObject.removeEventListener("DOMContentLoaded", loadListener);
  if (!$507fabe10e71c6fb$export$d90243b58daecda7.has(windowObject)) return;
  windowObject.HTMLElement.prototype.focus = $507fabe10e71c6fb$export$d90243b58daecda7.get(windowObject).focus;
  documentObject.removeEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.removeEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.removeEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  windowObject.removeEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  windowObject.removeEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.removeEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else if (false) {
    documentObject.removeEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  $507fabe10e71c6fb$export$d90243b58daecda7.delete(windowObject);
};
function $507fabe10e71c6fb$export$2f1888112f558a7d(element) {
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  let loadListener;
  if (documentObject.readyState !== "loading") $507fabe10e71c6fb$var$setupGlobalFocusEvents(element);
  else {
    loadListener = () => {
      $507fabe10e71c6fb$var$setupGlobalFocusEvents(element);
    };
    documentObject.addEventListener("DOMContentLoaded", loadListener);
  }
  return () => $507fabe10e71c6fb$var$tearDownWindowFocusTracking(element, loadListener);
}
if (typeof document !== "undefined") $507fabe10e71c6fb$export$2f1888112f558a7d();
function $507fabe10e71c6fb$export$630ff653c5ada6a9() {
  return $507fabe10e71c6fb$var$currentModality;
}
function $507fabe10e71c6fb$export$8397ddfc504fdb9a(modality) {
  $507fabe10e71c6fb$var$currentModality = modality;
  $507fabe10e71c6fb$var$triggerChangeHandlers(modality, null);
}

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/focusSafely.mjs
function $3ad3f6e1647bc98d$export$80f3e147d781571c(element) {
  const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  const activeElement = (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument);
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() === "virtual") {
    let lastFocusedElement = activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
      if ((0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument) === lastFocusedElement && element.isConnected) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
    });
  } else (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
}

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/useFocus.mjs
var import_react120 = __toESM(require_react(), 1);
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = (0, import_react120.useCallback)((e) => {
    if (e.target === e.currentTarget) {
      if (onBlurProp) onBlurProp(e);
      if (onFocusChange) onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);
  const onFocus = (0, import_react120.useCallback)((e) => {
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(e.target);
    const activeElement = ownerDocument ? (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument) : (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)();
    if (e.target === e.currentTarget && activeElement === (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent)) {
      if (onFocusProp) onFocusProp(e);
      if (onFocusChange) onFocusChange(true);
      onSyntheticFocus(e);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/createEventHandler.mjs
function $93925083ecbb358c$export$48d1ea6320830260(handler) {
  if (!handler) return void 0;
  let shouldStopPropagation = true;
  return (e) => {
    let event = {
      ...e,
      preventDefault() {
        e.preventDefault();
      },
      isDefaultPrevented() {
        return e.isDefaultPrevented();
      },
      stopPropagation() {
        if (shouldStopPropagation && true) console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
        else shouldStopPropagation = true;
      },
      continuePropagation() {
        shouldStopPropagation = false;
      },
      isPropagationStopped() {
        return shouldStopPropagation;
      }
    };
    handler(event);
    if (shouldStopPropagation) e.stopPropagation();
  };
}

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/useKeyboard.mjs
function $46d819fcbaf35654$export$8f71654801c2f7cd(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyDown),
      onKeyUp: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyUp)
    }
  };
}

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/useFocusable.mjs
var import_react121 = __toESM(require_react(), 1);
var $f645667febf57a63$export$f9762fab77588ecb = (0, import_react121.default).createContext(null);
function $f645667febf57a63$var$useFocusableContext(ref) {
  let context = (0, import_react121.useContext)($f645667febf57a63$export$f9762fab77588ecb) || {};
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, ref);
  let { ref: _, ...otherProps } = context;
  return otherProps;
}
var $f645667febf57a63$export$13f3202a3e5ddd5 = (0, import_react121.default).forwardRef(function FocusableProvider(props, ref) {
  let { children: children3, ...otherProps } = props;
  let objRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let context = {
    ...otherProps,
    ref: objRef
  };
  return (0, import_react121.default).createElement($f645667febf57a63$export$f9762fab77588ecb.Provider, {
    value: context
  }, children3);
});
function $f645667febf57a63$export$4c014de7c8940b4c(props, domRef) {
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)(props);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)(props);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusProps, keyboardProps);
  let domProps = $f645667febf57a63$var$useFocusableContext(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = (0, import_react121.useRef)(props.autoFocus);
  (0, import_react121.useEffect)(() => {
    if (autoFocusRef.current && domRef.current) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  let tabIndex = props.excludeFromTabOrder ? -1 : 0;
  if (props.isDisabled) tabIndex = void 0;
  return {
    focusableProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)({
      ...interactions,
      tabIndex
    }, interactionProps)
  };
}
var $f645667febf57a63$export$35a3bebf7ef2d934 = (0, import_react121.forwardRef)(({ children: children3, ...props }, ref) => {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { focusableProps } = $f645667febf57a63$export$4c014de7c8940b4c(props, ref);
  let child = (0, import_react121.default).Children.only(children3);
  (0, import_react121.useEffect)(() => {
    if (false) return;
    let el = ref.current;
    if (!el || !(el instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(el).Element)) {
      console.error("<Focusable> child must forward its ref to a DOM element.");
      return;
    }
    if (!props.isDisabled && !(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(el)) {
      console.warn("<Focusable> child must be focusable. Please ensure the tabIndex prop is passed through.");
      return;
    }
    if (el.localName !== "button" && el.localName !== "input" && el.localName !== "select" && el.localName !== "textarea" && el.localName !== "a" && el.localName !== "area" && el.localName !== "summary" && el.localName !== "img" && el.localName !== "svg") {
      let role = el.getAttribute("role");
      if (!role) console.warn("<Focusable> child must have an interactive ARIA role.");
      else if (
        // https://w3c.github.io/aria/#widget_roles
        role !== "application" && role !== "button" && role !== "checkbox" && role !== "combobox" && role !== "gridcell" && role !== "link" && role !== "menuitem" && role !== "menuitemcheckbox" && role !== "menuitemradio" && role !== "option" && role !== "radio" && role !== "searchbox" && role !== "separator" && role !== "slider" && role !== "spinbutton" && role !== "switch" && role !== "tab" && role !== "tabpanel" && role !== "textbox" && role !== "treeitem" && // aria-describedby is also announced on these roles
        role !== "img" && role !== "meter" && role !== "progressbar"
      ) console.warn(`<Focusable> child must have an interactive ARIA role. Got "${role}".`);
    }
  }, [
    ref,
    props.isDisabled
  ]);
  let childRef = parseInt((0, import_react121.default).version, 10) < 19 ? child.ref : child.props.ref;
  return (0, import_react121.default).cloneElement(child, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, child.props),
    // @ts-ignore
    ref: (0, $5dc95899b306f630$export$c9058316764c140e)(childRef, ref)
  });
});

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/Pressable.mjs
var import_react122 = __toESM(require_react(), 1);
var $3b117e43dc0ca95d$export$27c701ed9e449e99 = (0, import_react122.default).forwardRef(({ children: children3, ...props }, ref) => {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    ...props,
    ref
  });
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)(props, ref);
  let child = (0, import_react122.default).Children.only(children3);
  (0, import_react122.useEffect)(() => {
    if (false) return;
    let el = ref.current;
    if (!el || !(el instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(el).Element)) {
      console.error("<Pressable> child must forward its ref to a DOM element.");
      return;
    }
    if (!props.isDisabled && !(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(el)) {
      console.warn("<Pressable> child must be focusable. Please ensure the tabIndex prop is passed through.");
      return;
    }
    if (el.localName !== "button" && el.localName !== "input" && el.localName !== "select" && el.localName !== "textarea" && el.localName !== "a" && el.localName !== "area" && el.localName !== "summary") {
      let role = el.getAttribute("role");
      if (!role) console.warn("<Pressable> child must have an interactive ARIA role.");
      else if (
        // https://w3c.github.io/aria/#widget_roles
        role !== "application" && role !== "button" && role !== "checkbox" && role !== "combobox" && role !== "gridcell" && role !== "link" && role !== "menuitem" && role !== "menuitemcheckbox" && role !== "menuitemradio" && role !== "option" && role !== "radio" && role !== "searchbox" && role !== "separator" && role !== "slider" && role !== "spinbutton" && role !== "switch" && role !== "tab" && role !== "textbox" && role !== "treeitem"
      ) console.warn(`<Pressable> child must have an interactive ARIA role. Got "${role}".`);
    }
  }, [
    ref,
    props.isDisabled
  ]);
  let childRef = parseInt((0, import_react122.default).version, 10) < 19 ? child.ref : child.props.ref;
  return (0, import_react122.default).cloneElement(child, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, focusableProps, child.props),
    // @ts-ignore
    ref: (0, $5dc95899b306f630$export$c9058316764c140e)(childRef, ref)
  });
});

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/PressResponder.mjs
var import_react123 = __toESM(require_react(), 1);
var $f1ab8c75478c6f73$export$3351871ee4b288b8 = (0, import_react123.default).forwardRef(({ children: children3, ...props }, ref) => {
  let isRegistered = (0, import_react123.useRef)(false);
  let prevContext = (0, import_react123.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(prevContext || {}, {
    ...props,
    ref,
    register() {
      isRegistered.current = true;
      if (prevContext) prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(prevContext, ref);
  (0, import_react123.useEffect)(() => {
    if (!isRegistered.current) {
      if (true) console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
      isRegistered.current = true;
    }
  }, []);
  return (0, import_react123.default).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {
    value: context
  }, children3);
});

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/useFocusWithin.mjs
var import_react124 = __toESM(require_react(), 1);

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/useHover.mjs
var import_react125 = __toESM(require_react(), 1);

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/useInteractOutside.mjs
var import_react126 = __toESM(require_react(), 1);

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/useMove.mjs
var import_react127 = __toESM(require_react(), 1);

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/useScrollWheel.mjs
var import_react128 = __toESM(require_react(), 1);

// node_modules/@react-aria/form/node_modules/@react-aria/interactions/dist/useLongPress.mjs
var import_react129 = __toESM(require_react(), 1);

// node_modules/@react-aria/form/dist/useFormValidation.mjs
var import_react130 = __toESM(require_react(), 1);
function $e93e671b31057976$export$b8473d3665f3a75a(props, state, ref) {
  let { validationBehavior, focus: focus2 } = props;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (validationBehavior === "native" && (ref === null || ref === void 0 ? void 0 : ref.current) && !ref.current.disabled) {
      let errorMessage = state.realtimeValidation.isInvalid ? state.realtimeValidation.validationErrors.join(" ") || "Invalid value." : "";
      ref.current.setCustomValidity(errorMessage);
      if (!ref.current.hasAttribute("title")) ref.current.title = "";
      if (!state.realtimeValidation.isInvalid) state.updateValidation($e93e671b31057976$var$getNativeValidity(ref.current));
    }
  });
  let onReset = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    state.resetValidation();
  });
  let onInvalid = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    var _ref_current;
    if (!state.displayValidation.isInvalid) state.commitValidation();
    let form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;
    if (!e.defaultPrevented && ref && form && $e93e671b31057976$var$getFirstInvalidInput(form) === ref.current) {
      var _ref_current1;
      if (focus2) focus2();
      else (_ref_current1 = ref.current) === null || _ref_current1 === void 0 ? void 0 : _ref_current1.focus();
      (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
    }
    e.preventDefault();
  });
  let onChange = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    state.commitValidation();
  });
  (0, import_react130.useEffect)(() => {
    let input = ref === null || ref === void 0 ? void 0 : ref.current;
    if (!input) return;
    let form = input.form;
    input.addEventListener("invalid", onInvalid);
    input.addEventListener("change", onChange);
    form === null || form === void 0 ? void 0 : form.addEventListener("reset", onReset);
    return () => {
      input.removeEventListener("invalid", onInvalid);
      input.removeEventListener("change", onChange);
      form === null || form === void 0 ? void 0 : form.removeEventListener("reset", onReset);
    };
  }, [
    ref,
    onInvalid,
    onChange,
    onReset,
    validationBehavior
  ]);
}
function $e93e671b31057976$var$getValidity(input) {
  let validity = input.validity;
  return {
    badInput: validity.badInput,
    customError: validity.customError,
    patternMismatch: validity.patternMismatch,
    rangeOverflow: validity.rangeOverflow,
    rangeUnderflow: validity.rangeUnderflow,
    stepMismatch: validity.stepMismatch,
    tooLong: validity.tooLong,
    tooShort: validity.tooShort,
    typeMismatch: validity.typeMismatch,
    valueMissing: validity.valueMissing,
    valid: validity.valid
  };
}
function $e93e671b31057976$var$getNativeValidity(input) {
  return {
    isInvalid: !input.validity.valid,
    validationDetails: $e93e671b31057976$var$getValidity(input),
    validationErrors: input.validationMessage ? [
      input.validationMessage
    ] : []
  };
}
function $e93e671b31057976$var$getFirstInvalidInput(form) {
  for (let i = 0; i < form.elements.length; i++) {
    let element = form.elements[i];
    if (!element.validity.valid) return element;
  }
  return null;
}

// node_modules/@react-stately/form/dist/useFormValidationState.mjs
var import_react131 = __toESM(require_react(), 1);
var $e5be200c675c3b3a$export$aca958c65c314e6c = {
  badInput: false,
  customError: false,
  patternMismatch: false,
  rangeOverflow: false,
  rangeUnderflow: false,
  stepMismatch: false,
  tooLong: false,
  tooShort: false,
  typeMismatch: false,
  valueMissing: false,
  valid: true
};
var $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE = {
  ...$e5be200c675c3b3a$export$aca958c65c314e6c,
  customError: true,
  valid: false
};
var $e5be200c675c3b3a$export$dad6ae84456c676a = {
  isInvalid: false,
  validationDetails: $e5be200c675c3b3a$export$aca958c65c314e6c,
  validationErrors: []
};
var $e5be200c675c3b3a$export$571b5131b7e65c11 = (0, import_react131.createContext)({});
var $e5be200c675c3b3a$export$a763b9476acd3eb = "__formValidationState" + Date.now();
function $e5be200c675c3b3a$export$fc1a364ae1f3ff10(props) {
  if (props[$e5be200c675c3b3a$export$a763b9476acd3eb]) {
    let { realtimeValidation, displayValidation, updateValidation, resetValidation, commitValidation } = props[$e5be200c675c3b3a$export$a763b9476acd3eb];
    return {
      realtimeValidation,
      displayValidation,
      updateValidation,
      resetValidation,
      commitValidation
    };
  }
  return $e5be200c675c3b3a$var$useFormValidationStateImpl(props);
}
function $e5be200c675c3b3a$var$useFormValidationStateImpl(props) {
  let { isInvalid, validationState, name, value, builtinValidation, validate, validationBehavior = "aria" } = props;
  if (validationState) isInvalid || (isInvalid = validationState === "invalid");
  let controlledError = isInvalid !== void 0 ? {
    isInvalid,
    validationErrors: [],
    validationDetails: $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE
  } : null;
  let clientError = (0, import_react131.useMemo)(() => {
    if (!validate || value == null) return null;
    let validateErrors = $e5be200c675c3b3a$var$runValidate(validate, value);
    return $e5be200c675c3b3a$var$getValidationResult(validateErrors);
  }, [
    validate,
    value
  ]);
  if (builtinValidation === null || builtinValidation === void 0 ? void 0 : builtinValidation.validationDetails.valid) builtinValidation = void 0;
  let serverErrors = (0, import_react131.useContext)($e5be200c675c3b3a$export$571b5131b7e65c11);
  let serverErrorMessages = (0, import_react131.useMemo)(() => {
    if (name) return Array.isArray(name) ? name.flatMap((name2) => $e5be200c675c3b3a$var$asArray(serverErrors[name2])) : $e5be200c675c3b3a$var$asArray(serverErrors[name]);
    return [];
  }, [
    serverErrors,
    name
  ]);
  let [lastServerErrors, setLastServerErrors] = (0, import_react131.useState)(serverErrors);
  let [isServerErrorCleared, setServerErrorCleared] = (0, import_react131.useState)(false);
  if (serverErrors !== lastServerErrors) {
    setLastServerErrors(serverErrors);
    setServerErrorCleared(false);
  }
  let serverError = (0, import_react131.useMemo)(() => $e5be200c675c3b3a$var$getValidationResult(isServerErrorCleared ? [] : serverErrorMessages), [
    isServerErrorCleared,
    serverErrorMessages
  ]);
  let nextValidation = (0, import_react131.useRef)($e5be200c675c3b3a$export$dad6ae84456c676a);
  let [currentValidity, setCurrentValidity] = (0, import_react131.useState)($e5be200c675c3b3a$export$dad6ae84456c676a);
  let lastError = (0, import_react131.useRef)($e5be200c675c3b3a$export$dad6ae84456c676a);
  let commitValidation = () => {
    if (!commitQueued) return;
    setCommitQueued(false);
    let error = clientError || builtinValidation || nextValidation.current;
    if (!$e5be200c675c3b3a$var$isEqualValidation(error, lastError.current)) {
      lastError.current = error;
      setCurrentValidity(error);
    }
  };
  let [commitQueued, setCommitQueued] = (0, import_react131.useState)(false);
  (0, import_react131.useEffect)(commitValidation);
  let realtimeValidation = controlledError || serverError || clientError || builtinValidation || $e5be200c675c3b3a$export$dad6ae84456c676a;
  let displayValidation = validationBehavior === "native" ? controlledError || serverError || currentValidity : controlledError || serverError || clientError || builtinValidation || currentValidity;
  return {
    realtimeValidation,
    displayValidation,
    updateValidation(value2) {
      if (validationBehavior === "aria" && !$e5be200c675c3b3a$var$isEqualValidation(currentValidity, value2)) setCurrentValidity(value2);
      else nextValidation.current = value2;
    },
    resetValidation() {
      let error = $e5be200c675c3b3a$export$dad6ae84456c676a;
      if (!$e5be200c675c3b3a$var$isEqualValidation(error, lastError.current)) {
        lastError.current = error;
        setCurrentValidity(error);
      }
      if (validationBehavior === "native") setCommitQueued(false);
      setServerErrorCleared(true);
    },
    commitValidation() {
      if (validationBehavior === "native") setCommitQueued(true);
      setServerErrorCleared(true);
    }
  };
}
function $e5be200c675c3b3a$var$asArray(v2) {
  if (!v2) return [];
  return Array.isArray(v2) ? v2 : [
    v2
  ];
}
function $e5be200c675c3b3a$var$runValidate(validate, value) {
  if (typeof validate === "function") {
    let e = validate(value);
    if (e && typeof e !== "boolean") return $e5be200c675c3b3a$var$asArray(e);
  }
  return [];
}
function $e5be200c675c3b3a$var$getValidationResult(errors) {
  return errors.length ? {
    isInvalid: true,
    validationErrors: errors,
    validationDetails: $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE
  } : null;
}
function $e5be200c675c3b3a$var$isEqualValidation(a2, b2) {
  if (a2 === b2) return true;
  return !!a2 && !!b2 && a2.isInvalid === b2.isInvalid && a2.validationErrors.length === b2.validationErrors.length && a2.validationErrors.every((a3, i) => a3 === b2.validationErrors[i]) && Object.entries(a2.validationDetails).every(([k2, v2]) => b2.validationDetails[k2] === v2);
}
function $e5be200c675c3b3a$export$75ee7c75d68f5b0e(...results) {
  let errors = /* @__PURE__ */ new Set();
  let isInvalid = false;
  let validationDetails = {
    ...$e5be200c675c3b3a$export$aca958c65c314e6c
  };
  for (let v2 of results) {
    var _validationDetails, _key;
    for (let e of v2.validationErrors) errors.add(e);
    isInvalid || (isInvalid = v2.isInvalid);
    for (let key in validationDetails) (_validationDetails = validationDetails)[_key = key] || (_validationDetails[_key] = v2.validationDetails[key]);
  }
  validationDetails.valid = !isInvalid;
  return {
    isInvalid,
    validationErrors: [
      ...errors
    ],
    validationDetails
  };
}

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/utils.mjs
var import_react132 = __toESM(require_react(), 1);
function $8a9cb279dc87e130$export$525bc4921d56d4a2(nativeEvent) {
  let event = nativeEvent;
  event.nativeEvent = nativeEvent;
  event.isDefaultPrevented = () => event.defaultPrevented;
  event.isPropagationStopped = () => event.cancelBubble;
  event.persist = () => {
  };
  return event;
}
function $8a9cb279dc87e130$export$c2b7abe5d61ec6962(event, target) {
  Object.defineProperty(event, "target", {
    value: target
  });
  Object.defineProperty(event, "currentTarget", {
    value: target
  });
}
function $8a9cb279dc87e130$export$715c682d09d639cc2(onBlur) {
  let stateRef = (0, import_react132.useRef)({
    isFocused: false,
    observer: null
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  let dispatchBlur = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);
  });
  return (0, import_react132.useCallback)((e) => {
    if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e.target;
      let onBlurHandler = (e2) => {
        stateRef.current.isFocused = false;
        if (target.disabled) {
          let event = $8a9cb279dc87e130$export$525bc4921d56d4a2(e2);
          dispatchBlur(event);
        }
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          var _stateRef_current_observer;
          (_stateRef_current_observer = stateRef.current.observer) === null || _stateRef_current_observer === void 0 ? void 0 : _stateRef_current_observer.disconnect();
          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;
          target.dispatchEvent(new FocusEvent("blur", {
            relatedTarget: relatedTargetEl
          }));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true,
            relatedTarget: relatedTargetEl
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, [
    dispatchBlur
  ]);
}
var $8a9cb279dc87e130$export$fda7da73ab5d4c482 = false;
function $8a9cb279dc87e130$export$cabe61c495ee36492(target) {
  while (target && !(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(target)) target = target.parentElement;
  let window2 = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(target);
  let activeElement = window2.document.activeElement;
  if (!activeElement || activeElement === target) return;
  $8a9cb279dc87e130$export$fda7da73ab5d4c482 = true;
  let isRefocusing = false;
  let onBlur = (e) => {
    if (e.target === activeElement || isRefocusing) e.stopImmediatePropagation();
  };
  let onFocusOut = (e) => {
    if (e.target === activeElement || isRefocusing) {
      e.stopImmediatePropagation();
      if (!target && !isRefocusing) {
        isRefocusing = true;
        (0, $7215afc6de606d6b$export$de79e2c695e052f3)(activeElement);
        cleanup();
      }
    }
  };
  let onFocus = (e) => {
    if (e.target === target || isRefocusing) e.stopImmediatePropagation();
  };
  let onFocusIn = (e) => {
    if (e.target === target || isRefocusing) {
      e.stopImmediatePropagation();
      if (!isRefocusing) {
        isRefocusing = true;
        (0, $7215afc6de606d6b$export$de79e2c695e052f3)(activeElement);
        cleanup();
      }
    }
  };
  window2.addEventListener("blur", onBlur, true);
  window2.addEventListener("focusout", onFocusOut, true);
  window2.addEventListener("focusin", onFocusIn, true);
  window2.addEventListener("focus", onFocus, true);
  let cleanup = () => {
    cancelAnimationFrame(raf);
    window2.removeEventListener("blur", onBlur, true);
    window2.removeEventListener("focusout", onFocusOut, true);
    window2.removeEventListener("focusin", onFocusIn, true);
    window2.removeEventListener("focus", onFocus, true);
    $8a9cb279dc87e130$export$fda7da73ab5d4c482 = false;
    isRefocusing = false;
  };
  let raf = requestAnimationFrame(cleanup);
  return cleanup;
}

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/textSelection.mjs
var $14c0b72509d70225$var$state2 = "default";
var $14c0b72509d70225$var$savedUserSelect2 = "";
var $14c0b72509d70225$var$modifiedElementMap2 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a46974671754872(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state2 === "default") {
      const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(target);
      $14c0b72509d70225$var$savedUserSelect2 = documentObject.documentElement.style.webkitUserSelect;
      documentObject.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state2 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    let property = "userSelect" in target.style ? "userSelect" : "webkitUserSelect";
    $14c0b72509d70225$var$modifiedElementMap2.set(target, target.style[property]);
    target.style[property] = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e32952(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state2 !== "disabled") return;
    $14c0b72509d70225$var$state2 = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
        if ($14c0b72509d70225$var$state2 === "restoring") {
          const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(target);
          if (documentObject.documentElement.style.webkitUserSelect === "none") documentObject.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect2 || "";
          $14c0b72509d70225$var$savedUserSelect2 = "";
          $14c0b72509d70225$var$state2 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap2.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap2.get(target);
      let property = "userSelect" in target.style ? "userSelect" : "webkitUserSelect";
      if (target.style[property] === "none") target.style[property] = targetOldUserSelect;
      if (target.getAttribute("style") === "") target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap2.delete(target);
    }
  }
}

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/context.mjs
var import_react133 = __toESM(require_react(), 1);
var $ae1eeba8b9eafd08$export$5165eccb35aaadb52 = (0, import_react133.default).createContext({
  register: () => {
  }
});
$ae1eeba8b9eafd08$export$5165eccb35aaadb52.displayName = "PressResponderContext";

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/usePress.mjs
var import_react_dom6 = __toESM(require_react_dom(), 1);
var import_react134 = __toESM(require_react(), 1);
function $f6c31cce2adf654f$var$usePressResponderContext2(props) {
  let context = (0, import_react134.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb52));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, props.ref);
  return props;
}
var $f6c31cce2adf654f$var$_shouldStopPropagation2 = /* @__PURE__ */ new WeakMap();
var $f6c31cce2adf654f$var$PressEvent2 = class {
  continuePropagation() {
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation2, false);
  }
  get shouldStopPropagation() {
    return (0, _class_private_field_get)(this, $f6c31cce2adf654f$var$_shouldStopPropagation2);
  }
  constructor(type, pointerType, originalEvent, state) {
    (0, _class_private_field_init)(this, $f6c31cce2adf654f$var$_shouldStopPropagation2, {
      writable: true,
      value: void 0
    });
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation2, true);
    var _state_target;
    let currentTarget = (_state_target = state === null || state === void 0 ? void 0 : state.target) !== null && _state_target !== void 0 ? _state_target : originalEvent.currentTarget;
    const rect = currentTarget === null || currentTarget === void 0 ? void 0 : currentTarget.getBoundingClientRect();
    let x2, y = 0;
    let clientX, clientY = null;
    if (originalEvent.clientX != null && originalEvent.clientY != null) {
      clientX = originalEvent.clientX;
      clientY = originalEvent.clientY;
    }
    if (rect) {
      if (clientX != null && clientY != null) {
        x2 = clientX - rect.left;
        y = clientY - rect.top;
      } else {
        x2 = rect.width / 2;
        y = rect.height / 2;
      }
    }
    this.type = type;
    this.pointerType = pointerType;
    this.target = originalEvent.currentTarget;
    this.shiftKey = originalEvent.shiftKey;
    this.metaKey = originalEvent.metaKey;
    this.ctrlKey = originalEvent.ctrlKey;
    this.altKey = originalEvent.altKey;
    this.x = x2;
    this.y = y;
  }
};
var $f6c31cce2adf654f$var$LINK_CLICKED2 = Symbol("linkClicked");
var $f6c31cce2adf654f$var$STYLE_ID2 = "react-aria-pressable-style";
var $f6c31cce2adf654f$var$PRESSABLE_ATTRIBUTE2 = "data-react-aria-pressable";
function $f6c31cce2adf654f$export$45712eceda6fad212(props) {
  let { onPress, onPressChange, onPressStart, onPressEnd, onPressUp, onClick, isDisabled, isPressed: isPressedProp, preventFocusOnPress, shouldCancelOnPointerExit, allowTextSelectionOnPress, ref: domRef, ...domProps } = $f6c31cce2adf654f$var$usePressResponderContext2(props);
  let [isPressed, setPressed] = (0, import_react134.useState)(false);
  let ref = (0, import_react134.useRef)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    didFirePressStart: false,
    isTriggeringEvent: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null,
    disposables: []
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let triggerPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled || state.didFirePressStart) return false;
    let shouldStopPropagation = true;
    state.isTriggeringEvent = true;
    if (onPressStart) {
      let event = new $f6c31cce2adf654f$var$PressEvent2("pressstart", pointerType, originalEvent);
      onPressStart(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(true);
    state.isTriggeringEvent = false;
    state.didFirePressStart = true;
    setPressed(true);
    return shouldStopPropagation;
  });
  let triggerPressEnd = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType, wasPressed = true) => {
    let state = ref.current;
    if (!state.didFirePressStart) return false;
    state.didFirePressStart = false;
    state.isTriggeringEvent = true;
    let shouldStopPropagation = true;
    if (onPressEnd) {
      let event = new $f6c31cce2adf654f$var$PressEvent2("pressend", pointerType, originalEvent);
      onPressEnd(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(false);
    setPressed(false);
    if (onPress && wasPressed && !isDisabled) {
      let event = new $f6c31cce2adf654f$var$PressEvent2("press", pointerType, originalEvent);
      onPress(event);
      shouldStopPropagation && (shouldStopPropagation = event.shouldStopPropagation);
    }
    state.isTriggeringEvent = false;
    return shouldStopPropagation;
  });
  let triggerPressUp = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled) return false;
    if (onPressUp) {
      state.isTriggeringEvent = true;
      let event = new $f6c31cce2adf654f$var$PressEvent2("pressup", pointerType, originalEvent);
      onPressUp(event);
      state.isTriggeringEvent = false;
      return event.shouldStopPropagation;
    }
    return true;
  });
  let cancel = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    let state = ref.current;
    if (state.isPressed && state.target) {
      if (state.didFirePressStart && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent2(state.target, e), state.pointerType, false);
      state.isPressed = false;
      state.isOverTarget = false;
      state.activePointerId = null;
      state.pointerType = null;
      removeAllGlobalListeners();
      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e32952)(state.target);
      for (let dispose of state.disposables) dispose();
      state.disposables = [];
    }
  });
  let cancelOnPointerExit = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (shouldCancelOnPointerExit) cancel(e);
  });
  let triggerClick = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    onClick === null || onClick === void 0 ? void 0 : onClick(e);
  });
  let triggerSyntheticClick = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e, target) => {
    if (onClick) {
      let event = new MouseEvent("click", e);
      (0, $8a9cb279dc87e130$export$c2b7abe5d61ec6962)(event, target);
      onClick((0, $8a9cb279dc87e130$export$525bc4921d56d4a2)(event));
    }
  });
  let pressProps = (0, import_react134.useMemo)(() => {
    let state = ref.current;
    let pressProps2 = {
      onKeyDown(e) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent2(e.nativeEvent, e.currentTarget) && (0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) {
          var _state_metaKeyEvents;
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard2((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent), e.key)) e.preventDefault();
          let shouldStopPropagation = true;
          if (!state.isPressed && !e.repeat) {
            state.target = e.currentTarget;
            state.isPressed = true;
            state.pointerType = "keyboard";
            shouldStopPropagation = triggerPressStart(e, "keyboard");
            let originalTarget = e.currentTarget;
            let pressUp = (e2) => {
              if ($f6c31cce2adf654f$var$isValidKeyboardEvent2(e2, originalTarget) && !e2.repeat && (0, $d4ee10de306f2510$export$4282f70798064fe0)(originalTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e2)) && state.target) triggerPressUp($f6c31cce2adf654f$var$createEvent2(state.target, e2), "keyboard");
            };
            addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "keyup", (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(pressUp, onKeyUp), true);
          }
          if (shouldStopPropagation) e.stopPropagation();
          if (e.metaKey && (0, $c87311424ea30a05$export$9ac100e40613ea10)()) (_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.set(e.key, e.nativeEvent);
        } else if (e.key === "Meta") state.metaKeyEvents = /* @__PURE__ */ new Map();
      },
      onClick(e) {
        if (e && !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (e && e.button === 0 && !state.isTriggeringEvent && !(0, $ea8dcbcb9ea1b556$export$95185d699e05d4d7).isOpening) {
          let shouldStopPropagation = true;
          if (isDisabled) e.preventDefault();
          if (!state.ignoreEmulatedMouseEvents && !state.isPressed && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent))) {
            let stopPressStart = triggerPressStart(e, "virtual");
            let stopPressUp = triggerPressUp(e, "virtual");
            let stopPressEnd = triggerPressEnd(e, "virtual");
            triggerClick(e);
            shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;
          } else if (state.isPressed && state.pointerType !== "keyboard") {
            let pointerType = state.pointerType || e.nativeEvent.pointerType || "virtual";
            let stopPressUp = triggerPressUp($f6c31cce2adf654f$var$createEvent2(e.currentTarget, e), pointerType);
            let stopPressEnd = triggerPressEnd($f6c31cce2adf654f$var$createEvent2(e.currentTarget, e), pointerType, true);
            shouldStopPropagation = stopPressUp && stopPressEnd;
            state.isOverTarget = false;
            triggerClick(e);
            cancel(e);
          }
          state.ignoreEmulatedMouseEvents = false;
          if (shouldStopPropagation) e.stopPropagation();
        }
      }
    };
    let onKeyUp = (e) => {
      var _state_metaKeyEvents;
      if (state.isPressed && state.target && $f6c31cce2adf654f$var$isValidKeyboardEvent2(e, state.target)) {
        var _state_metaKeyEvents1;
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard2((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e), e.key)) e.preventDefault();
        let target = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e);
        let wasPressed = (0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e));
        triggerPressEnd($f6c31cce2adf654f$var$createEvent2(state.target, e), "keyboard", wasPressed);
        if (wasPressed) triggerSyntheticClick(e, state.target);
        removeAllGlobalListeners();
        if (e.key !== "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink2(state.target) && (0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, target) && !e[$f6c31cce2adf654f$var$LINK_CLICKED2]) {
          e[$f6c31cce2adf654f$var$LINK_CLICKED2] = true;
          (0, $ea8dcbcb9ea1b556$export$95185d699e05d4d7)(state.target, e, false);
        }
        state.isPressed = false;
        (_state_metaKeyEvents1 = state.metaKeyEvents) === null || _state_metaKeyEvents1 === void 0 ? void 0 : _state_metaKeyEvents1.delete(e.key);
      } else if (e.key === "Meta" && ((_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.size)) {
        var _state_target;
        let events = state.metaKeyEvents;
        state.metaKeyEvents = void 0;
        for (let event of events.values()) (_state_target = state.target) === null || _state_target === void 0 ? void 0 : _state_target.dispatchEvent(new KeyboardEvent("keyup", event));
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e) => {
        if (e.button !== 0 || !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf63)(e.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        state.pointerType = e.pointerType;
        let shouldStopPropagation = true;
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e.pointerId;
          state.target = e.currentTarget;
          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a46974671754872)(state.target);
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
          let target = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent);
          if ("releasePointerCapture" in target) target.releasePointerCapture(e.pointerId);
          addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "pointerup", onPointerUp, false);
          addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "pointercancel", onPointerCancel, false);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseDown = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (e.button === 0) {
          if (preventFocusOnPress) {
            let dispose = (0, $8a9cb279dc87e130$export$cabe61c495ee36492)(e.target);
            if (dispose) state.disposables.push(dispose);
          }
          e.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent)) || state.pointerType === "virtual") return;
        if (e.button === 0 && !state.isPressed) triggerPressUp(e, state.pointerType || e.pointerType);
      };
      pressProps2.onPointerEnter = (e) => {
        if (e.pointerId === state.activePointerId && state.target && !state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = true;
          triggerPressStart($f6c31cce2adf654f$var$createEvent2(state.target, e), state.pointerType);
        }
      };
      pressProps2.onPointerLeave = (e) => {
        if (e.pointerId === state.activePointerId && state.target && state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent2(state.target, e), state.pointerType, false);
          cancelOnPointerExit(e);
        }
      };
      let onPointerUp = (e) => {
        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0 && state.target) {
          if ((0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e)) && state.pointerType != null) {
            let clicked = false;
            let timeout = setTimeout(() => {
              if (state.isPressed && state.target instanceof HTMLElement) {
                if (clicked) cancel(e);
                else {
                  (0, $7215afc6de606d6b$export$de79e2c695e052f3)(state.target);
                  state.target.click();
                }
              }
            }, 80);
            addGlobalListener(e.currentTarget, "click", () => clicked = true, true);
            state.disposables.push(() => clearTimeout(timeout));
          } else cancel(e);
          state.isOverTarget = false;
        }
      };
      let onPointerCancel = (e) => {
        cancel(e);
      };
      pressProps2.onDragStart = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        cancel(e);
      };
    } else if (false) {
      pressProps2.onMouseDown = (e) => {
        if (e.button !== 0 || !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (state.ignoreEmulatedMouseEvents) {
          e.stopPropagation();
          return;
        }
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent) ? "virtual" : "mouse";
        let shouldStopPropagation = (0, import_react_dom6.flushSync)(() => triggerPressStart(e, state.pointerType));
        if (shouldStopPropagation) e.stopPropagation();
        if (preventFocusOnPress) {
          let dispose = (0, $8a9cb279dc87e130$export$cabe61c495ee36492)(e.target);
          if (dispose) state.disposables.push(dispose);
        }
        addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = true;
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseLeave = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);
          cancelOnPointerExit(e);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseUp = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (!state.ignoreEmulatedMouseEvents && e.button === 0 && !state.isPressed) triggerPressUp(e, state.pointerType || "mouse");
      };
      let onMouseUp = (e) => {
        if (e.button !== 0) return;
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if (state.target && state.target.contains(e.target) && state.pointerType != null) ;
        else cancel(e);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);
        if (!touch) return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e.currentTarget;
        state.pointerType = "touch";
        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a46974671754872)(state.target);
        let shouldStopPropagation = triggerPressStart($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
        if (shouldStopPropagation) e.stopPropagation();
        addGlobalListener((0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e.currentTarget), "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {
          if (!state.isOverTarget && state.pointerType != null) {
            state.isOverTarget = true;
            shouldStopPropagation = triggerPressStart($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
          }
        } else if (state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType, false);
          cancelOnPointerExit($f6c31cce2adf654f$var$createTouchEvent(state.target, e));
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onTouchEnd = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget) && state.pointerType != null) {
          triggerPressUp($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
          shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
          triggerSyntheticClick(e.nativeEvent, state.target);
        } else if (state.isOverTarget && state.pointerType != null) shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType, false);
        if (shouldStopPropagation) e.stopPropagation();
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (state.target && !allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e32952)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        e.stopPropagation();
        if (state.isPressed) cancel($f6c31cce2adf654f$var$createTouchEvent(state.target, e));
      };
      let onScroll = (e) => {
        if (state.isPressed && (0, $d4ee10de306f2510$export$4282f70798064fe0)((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e), state.target)) cancel({
          currentTarget: state.target,
          shiftKey: false,
          ctrlKey: false,
          metaKey: false,
          altKey: false
        });
      };
      pressProps2.onDragStart = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        cancel(e);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress,
    cancel,
    cancelOnPointerExit,
    triggerPressEnd,
    triggerPressStart,
    triggerPressUp,
    triggerClick,
    triggerSyntheticClick
  ]);
  (0, import_react134.useEffect)(() => {
    if (!domRef || false) return;
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(domRef.current);
    if (!ownerDocument || !ownerDocument.head || ownerDocument.getElementById($f6c31cce2adf654f$var$STYLE_ID2)) return;
    const style2 = ownerDocument.createElement("style");
    style2.id = $f6c31cce2adf654f$var$STYLE_ID2;
    style2.textContent = `
@layer {
  [${$f6c31cce2adf654f$var$PRESSABLE_ATTRIBUTE2}] {
    touch-action: pan-x pan-y pinch-zoom;
  }
}
    `.trim();
    ownerDocument.head.prepend(style2);
  }, [
    domRef
  ]);
  (0, import_react134.useEffect)(() => {
    let state = ref.current;
    return () => {
      var _state_target;
      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e32952)((_state_target = state.target) !== null && _state_target !== void 0 ? _state_target : void 0);
      for (let dispose of state.disposables) dispose();
      state.disposables = [];
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, pressProps, {
      [$f6c31cce2adf654f$var$PRESSABLE_ATTRIBUTE2]: true
    })
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink2(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent2(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey2(element, key) || element instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).HTMLTextAreaElement || element.isContentEditable) && // Links should only trigger with Enter key
  !((role === "link" || !role && $f6c31cce2adf654f$var$isHTMLAnchorLink2(element)) && key !== "Enter");
}
function $f6c31cce2adf654f$var$createEvent2(target, e) {
  let clientX = e.clientX;
  let clientY = e.clientY;
  return {
    currentTarget: target,
    shiftKey: e.shiftKey,
    ctrlKey: e.ctrlKey,
    metaKey: e.metaKey,
    altKey: e.altKey,
    clientX,
    clientY
  };
}
function $f6c31cce2adf654f$var$shouldPreventDefaultUp2(target) {
  if (target instanceof HTMLInputElement) return false;
  if (target instanceof HTMLButtonElement) return target.type !== "submit" && target.type !== "reset";
  if ($f6c31cce2adf654f$var$isHTMLAnchorLink2(target)) return false;
  return true;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard2(target, key) {
  if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey2(target, key);
  return $f6c31cce2adf654f$var$shouldPreventDefaultUp2(target);
}
var $f6c31cce2adf654f$var$nonTextInputTypes2 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey2(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes2.has(target.type);
}

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/useFocusVisible.mjs
var import_react135 = __toESM(require_react(), 1);
var $507fabe10e71c6fb$var$currentModality2 = null;
var $507fabe10e71c6fb$var$changeHandlers2 = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$export$d90243b58daecda72 = /* @__PURE__ */ new Map();
var $507fabe10e71c6fb$var$hasEventBeforeFocus2 = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently2 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers2(modality, e) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers2) handler(modality, e);
}
function $507fabe10e71c6fb$var$isValidKey2(e) {
  return !(e.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea10)() && e.altKey || e.ctrlKey || e.key === "Control" || e.key === "Shift" || e.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent2(e) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus2 = true;
  if ($507fabe10e71c6fb$var$isValidKey2(e)) {
    $507fabe10e71c6fb$var$currentModality2 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers2("keyboard", e);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent2(e) {
  $507fabe10e71c6fb$var$currentModality2 = "pointer";
  if (e.type === "mousedown" || e.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus2 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers2("pointer", e);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent2(e) {
  if ((0, $6a7db85432448f7f$export$60278871457622de)(e)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus2 = true;
    $507fabe10e71c6fb$var$currentModality2 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent2(e) {
  if (e.target === window || e.target === document || (0, $8a9cb279dc87e130$export$fda7da73ab5d4c482) || !e.isTrusted) return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus2 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently2) {
    $507fabe10e71c6fb$var$currentModality2 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers2("virtual", e);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus2 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently2 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur2() {
  if (0, $8a9cb279dc87e130$export$fda7da73ab5d4c482) return;
  $507fabe10e71c6fb$var$hasEventBeforeFocus2 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently2 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents2(element) {
  if (typeof window === "undefined" || typeof document === "undefined" || $507fabe10e71c6fb$export$d90243b58daecda72.get((0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element))) return;
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  let focus2 = windowObject.HTMLElement.prototype.focus;
  windowObject.HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus2 = true;
    focus2.apply(this, arguments);
  };
  documentObject.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent2, true);
  documentObject.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent2, true);
  documentObject.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent2, true);
  windowObject.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent2, true);
  windowObject.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur2, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    documentObject.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    documentObject.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent2, true);
  } else if (false) {
    documentObject.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    documentObject.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    documentObject.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent2, true);
  }
  windowObject.addEventListener("beforeunload", () => {
    $507fabe10e71c6fb$var$tearDownWindowFocusTracking2(element);
  }, {
    once: true
  });
  $507fabe10e71c6fb$export$d90243b58daecda72.set(windowObject, {
    focus: focus2
  });
}
var $507fabe10e71c6fb$var$tearDownWindowFocusTracking2 = (element, loadListener) => {
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  if (loadListener) documentObject.removeEventListener("DOMContentLoaded", loadListener);
  if (!$507fabe10e71c6fb$export$d90243b58daecda72.has(windowObject)) return;
  windowObject.HTMLElement.prototype.focus = $507fabe10e71c6fb$export$d90243b58daecda72.get(windowObject).focus;
  documentObject.removeEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent2, true);
  documentObject.removeEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent2, true);
  documentObject.removeEventListener("click", $507fabe10e71c6fb$var$handleClickEvent2, true);
  windowObject.removeEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent2, true);
  windowObject.removeEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur2, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.removeEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    documentObject.removeEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    documentObject.removeEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent2, true);
  } else if (false) {
    documentObject.removeEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    documentObject.removeEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    documentObject.removeEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent2, true);
  }
  $507fabe10e71c6fb$export$d90243b58daecda72.delete(windowObject);
};
function $507fabe10e71c6fb$export$2f1888112f558a7d2(element) {
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  let loadListener;
  if (documentObject.readyState !== "loading") $507fabe10e71c6fb$var$setupGlobalFocusEvents2(element);
  else {
    loadListener = () => {
      $507fabe10e71c6fb$var$setupGlobalFocusEvents2(element);
    };
    documentObject.addEventListener("DOMContentLoaded", loadListener);
  }
  return () => $507fabe10e71c6fb$var$tearDownWindowFocusTracking2(element, loadListener);
}
if (typeof document !== "undefined") $507fabe10e71c6fb$export$2f1888112f558a7d2();
function $507fabe10e71c6fb$export$630ff653c5ada6a92() {
  return $507fabe10e71c6fb$var$currentModality2;
}

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/focusSafely.mjs
function $3ad3f6e1647bc98d$export$80f3e147d781571c2(element) {
  const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  const activeElement = (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument);
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a92)() === "virtual") {
    let lastFocusedElement = activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
      if ((0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument) === lastFocusedElement && element.isConnected) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
    });
  } else (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
}

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/useFocus.mjs
var import_react136 = __toESM(require_react(), 1);
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e62(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = (0, import_react136.useCallback)((e) => {
    if (e.target === e.currentTarget) {
      if (onBlurProp) onBlurProp(e);
      if (onFocusChange) onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc2)(onBlur);
  const onFocus = (0, import_react136.useCallback)((e) => {
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(e.target);
    const activeElement = ownerDocument ? (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument) : (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)();
    if (e.target === e.currentTarget && activeElement === (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent)) {
      if (onFocusProp) onFocusProp(e);
      if (onFocusChange) onFocusChange(true);
      onSyntheticFocus(e);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/createEventHandler.mjs
function $93925083ecbb358c$export$48d1ea63208302602(handler) {
  if (!handler) return void 0;
  let shouldStopPropagation = true;
  return (e) => {
    let event = {
      ...e,
      preventDefault() {
        e.preventDefault();
      },
      isDefaultPrevented() {
        return e.isDefaultPrevented();
      },
      stopPropagation() {
        if (shouldStopPropagation && true) console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
        else shouldStopPropagation = true;
      },
      continuePropagation() {
        shouldStopPropagation = false;
      },
      isPropagationStopped() {
        return shouldStopPropagation;
      }
    };
    handler(event);
    if (shouldStopPropagation) e.stopPropagation();
  };
}

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/useKeyboard.mjs
function $46d819fcbaf35654$export$8f71654801c2f7cd2(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: (0, $93925083ecbb358c$export$48d1ea63208302602)(props.onKeyDown),
      onKeyUp: (0, $93925083ecbb358c$export$48d1ea63208302602)(props.onKeyUp)
    }
  };
}

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/useFocusable.mjs
var import_react137 = __toESM(require_react(), 1);
var $f645667febf57a63$export$f9762fab77588ecb2 = (0, import_react137.default).createContext(null);
function $f645667febf57a63$var$useFocusableContext2(ref) {
  let context = (0, import_react137.useContext)($f645667febf57a63$export$f9762fab77588ecb2) || {};
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, ref);
  let { ref: _, ...otherProps } = context;
  return otherProps;
}
var $f645667febf57a63$export$13f3202a3e5ddd52 = (0, import_react137.default).forwardRef(function FocusableProvider2(props, ref) {
  let { children: children3, ...otherProps } = props;
  let objRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let context = {
    ...otherProps,
    ref: objRef
  };
  return (0, import_react137.default).createElement($f645667febf57a63$export$f9762fab77588ecb2.Provider, {
    value: context
  }, children3);
});
function $f645667febf57a63$export$4c014de7c8940b4c2(props, domRef) {
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e62)(props);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd2)(props);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusProps, keyboardProps);
  let domProps = $f645667febf57a63$var$useFocusableContext2(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = (0, import_react137.useRef)(props.autoFocus);
  (0, import_react137.useEffect)(() => {
    if (autoFocusRef.current && domRef.current) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c2)(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  let tabIndex = props.excludeFromTabOrder ? -1 : 0;
  if (props.isDisabled) tabIndex = void 0;
  return {
    focusableProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)({
      ...interactions,
      tabIndex
    }, interactionProps)
  };
}
var $f645667febf57a63$export$35a3bebf7ef2d9342 = (0, import_react137.forwardRef)(({ children: children3, ...props }, ref) => {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { focusableProps } = $f645667febf57a63$export$4c014de7c8940b4c2(props, ref);
  let child = (0, import_react137.default).Children.only(children3);
  (0, import_react137.useEffect)(() => {
    if (false) return;
    let el = ref.current;
    if (!el || !(el instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(el).Element)) {
      console.error("<Focusable> child must forward its ref to a DOM element.");
      return;
    }
    if (!props.isDisabled && !(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(el)) {
      console.warn("<Focusable> child must be focusable. Please ensure the tabIndex prop is passed through.");
      return;
    }
    if (el.localName !== "button" && el.localName !== "input" && el.localName !== "select" && el.localName !== "textarea" && el.localName !== "a" && el.localName !== "area" && el.localName !== "summary" && el.localName !== "img" && el.localName !== "svg") {
      let role = el.getAttribute("role");
      if (!role) console.warn("<Focusable> child must have an interactive ARIA role.");
      else if (
        // https://w3c.github.io/aria/#widget_roles
        role !== "application" && role !== "button" && role !== "checkbox" && role !== "combobox" && role !== "gridcell" && role !== "link" && role !== "menuitem" && role !== "menuitemcheckbox" && role !== "menuitemradio" && role !== "option" && role !== "radio" && role !== "searchbox" && role !== "separator" && role !== "slider" && role !== "spinbutton" && role !== "switch" && role !== "tab" && role !== "tabpanel" && role !== "textbox" && role !== "treeitem" && // aria-describedby is also announced on these roles
        role !== "img" && role !== "meter" && role !== "progressbar"
      ) console.warn(`<Focusable> child must have an interactive ARIA role. Got "${role}".`);
    }
  }, [
    ref,
    props.isDisabled
  ]);
  let childRef = parseInt((0, import_react137.default).version, 10) < 19 ? child.ref : child.props.ref;
  return (0, import_react137.default).cloneElement(child, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, child.props),
    // @ts-ignore
    ref: (0, $5dc95899b306f630$export$c9058316764c140e)(childRef, ref)
  });
});

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/Pressable.mjs
var import_react138 = __toESM(require_react(), 1);
var $3b117e43dc0ca95d$export$27c701ed9e449e992 = (0, import_react138.default).forwardRef(({ children: children3, ...props }, ref) => {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad212)({
    ...props,
    ref
  });
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c2)(props, ref);
  let child = (0, import_react138.default).Children.only(children3);
  (0, import_react138.useEffect)(() => {
    if (false) return;
    let el = ref.current;
    if (!el || !(el instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(el).Element)) {
      console.error("<Pressable> child must forward its ref to a DOM element.");
      return;
    }
    if (!props.isDisabled && !(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(el)) {
      console.warn("<Pressable> child must be focusable. Please ensure the tabIndex prop is passed through.");
      return;
    }
    if (el.localName !== "button" && el.localName !== "input" && el.localName !== "select" && el.localName !== "textarea" && el.localName !== "a" && el.localName !== "area" && el.localName !== "summary") {
      let role = el.getAttribute("role");
      if (!role) console.warn("<Pressable> child must have an interactive ARIA role.");
      else if (
        // https://w3c.github.io/aria/#widget_roles
        role !== "application" && role !== "button" && role !== "checkbox" && role !== "combobox" && role !== "gridcell" && role !== "link" && role !== "menuitem" && role !== "menuitemcheckbox" && role !== "menuitemradio" && role !== "option" && role !== "radio" && role !== "searchbox" && role !== "separator" && role !== "slider" && role !== "spinbutton" && role !== "switch" && role !== "tab" && role !== "textbox" && role !== "treeitem"
      ) console.warn(`<Pressable> child must have an interactive ARIA role. Got "${role}".`);
    }
  }, [
    ref,
    props.isDisabled
  ]);
  let childRef = parseInt((0, import_react138.default).version, 10) < 19 ? child.ref : child.props.ref;
  return (0, import_react138.default).cloneElement(child, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, focusableProps, child.props),
    // @ts-ignore
    ref: (0, $5dc95899b306f630$export$c9058316764c140e)(childRef, ref)
  });
});

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/PressResponder.mjs
var import_react139 = __toESM(require_react(), 1);
var $f1ab8c75478c6f73$export$3351871ee4b288b82 = (0, import_react139.default).forwardRef(({ children: children3, ...props }, ref) => {
  let isRegistered = (0, import_react139.useRef)(false);
  let prevContext = (0, import_react139.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb52));
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(prevContext || {}, {
    ...props,
    ref,
    register() {
      isRegistered.current = true;
      if (prevContext) prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(prevContext, ref);
  (0, import_react139.useEffect)(() => {
    if (!isRegistered.current) {
      if (true) console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
      isRegistered.current = true;
    }
  }, []);
  return (0, import_react139.default).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb52).Provider, {
    value: context
  }, children3);
});

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/useFocusWithin.mjs
var import_react140 = __toESM(require_react(), 1);

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/useHover.mjs
var import_react141 = __toESM(require_react(), 1);

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/useInteractOutside.mjs
var import_react142 = __toESM(require_react(), 1);

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/useMove.mjs
var import_react143 = __toESM(require_react(), 1);

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/useScrollWheel.mjs
var import_react144 = __toESM(require_react(), 1);

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/useLongPress.mjs
var import_react145 = __toESM(require_react(), 1);

// node_modules/@react-aria/toggle/dist/useToggle.mjs
function $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {
  let { isDisabled = false, isReadOnly = false, value, name, children: children3, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, validationState = "valid", isInvalid } = props;
  let onChange = (e) => {
    e.stopPropagation();
    state.setSelected(e.target.checked);
  };
  let hasChildren = children3 != null;
  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;
  if (!hasChildren && !hasAriaLabel && true) console.warn("If you do not provide children, you must specify an aria-label for accessibility");
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad212)({
    isDisabled
  });
  let { pressProps: labelProps, isPressed: isLabelPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad212)({
    onPress() {
      var _ref_current;
      state.toggle();
      (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.focus();
    },
    isDisabled: isDisabled || isReadOnly
  });
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c2)(props, ref);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, focusableProps);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  (0, $99facab73266f662$export$5add1d006293d136)(ref, state.isSelected, state.setSelected);
  return {
    labelProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(labelProps, {
      onClick: (e) => e.preventDefault()
    }),
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      "aria-invalid": isInvalid || validationState === "invalid" || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-controls": props["aria-controls"],
      "aria-readonly": isReadOnly || void 0,
      onChange,
      disabled: isDisabled,
      ...value == null ? {} : {
        value
      },
      name,
      type: "checkbox",
      ...interactions
    }),
    isSelected: state.isSelected,
    isPressed: isPressed || isLabelPressed,
    isDisabled,
    isReadOnly,
    isInvalid: isInvalid || validationState === "invalid"
  };
}

// node_modules/@react-aria/checkbox/dist/useCheckbox.mjs
function $406796ff087fe49b$export$e375f10ce42261c5(props, state, inputRef) {
  let validationState = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: state.isSelected
  });
  let { isInvalid, validationErrors, validationDetails } = validationState.displayValidation;
  let { labelProps, inputProps, isSelected: isSelected3, isPressed, isDisabled, isReadOnly } = (0, $d2c8e2b0480f3f34$export$cbe85ee05b554577)({
    ...props,
    isInvalid
  }, state, inputRef);
  (0, $e93e671b31057976$export$b8473d3665f3a75a)(props, validationState, inputRef);
  let { isIndeterminate, isRequired, validationBehavior = "aria" } = props;
  (0, import_react146.useEffect)(() => {
    if (inputRef.current) inputRef.current.indeterminate = !!isIndeterminate;
  });
  return {
    labelProps,
    inputProps: {
      ...inputProps,
      checked: isSelected3,
      "aria-required": isRequired && validationBehavior === "aria" || void 0,
      required: isRequired && validationBehavior === "native"
    },
    isSelected: isSelected3,
    isPressed,
    isDisabled,
    isReadOnly,
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-aria/label/dist/useLabel.mjs
function $d191a55c9702f145$export$8467354a121f1b9f(props) {
  let { id, label, "aria-labelledby": ariaLabelledby, "aria-label": ariaLabel, labelElementType = "label" } = props;
  id = (0, $bdb11010cef70236$export$f680877a34711e37)(id);
  let labelId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let labelProps = {};
  if (label) {
    ariaLabelledby = ariaLabelledby ? `${labelId} ${ariaLabelledby}` : labelId;
    labelProps = {
      id: labelId,
      htmlFor: labelElementType === "label" ? id : void 0
    };
  } else if (!ariaLabelledby && !ariaLabel && true) console.warn("If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility");
  let fieldProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby
  });
  return {
    labelProps,
    fieldProps
  };
}

// node_modules/@react-aria/label/dist/useField.mjs
function $2baaea4c71418dea$export$294aa081a6c6f55d(props) {
  let { description, errorMessage, isInvalid, validationState } = props;
  let { labelProps, fieldProps } = (0, $d191a55c9702f145$export$8467354a121f1b9f)(props);
  let descriptionId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)([
    Boolean(description),
    Boolean(errorMessage),
    isInvalid,
    validationState
  ]);
  let errorMessageId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)([
    Boolean(description),
    Boolean(errorMessage),
    isInvalid,
    validationState
  ]);
  fieldProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(fieldProps, {
    "aria-describedby": [
      descriptionId,
      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268
      errorMessageId,
      props["aria-describedby"]
    ].filter(Boolean).join(" ") || void 0
  });
  return {
    labelProps,
    fieldProps,
    descriptionProps: {
      id: descriptionId
    },
    errorMessageProps: {
      id: errorMessageId
    }
  };
}

// node_modules/@react-aria/interactions/dist/textSelection.mjs
var $14c0b72509d70225$var$state3 = "default";
var $14c0b72509d70225$var$savedUserSelect3 = "";
var $14c0b72509d70225$var$modifiedElementMap3 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a46974671754873(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state3 === "default") {
      const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(target);
      $14c0b72509d70225$var$savedUserSelect3 = documentObject.documentElement.style.webkitUserSelect;
      documentObject.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state3 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap3.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e32953(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state3 !== "disabled") return;
    $14c0b72509d70225$var$state3 = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
        if ($14c0b72509d70225$var$state3 === "restoring") {
          const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(target);
          if (documentObject.documentElement.style.webkitUserSelect === "none") documentObject.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect3 || "";
          $14c0b72509d70225$var$savedUserSelect3 = "";
          $14c0b72509d70225$var$state3 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap3.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap3.get(target);
      if (target.style.userSelect === "none") target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "") target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap3.delete(target);
    }
  }
}

// node_modules/@react-aria/interactions/dist/context.mjs
var import_react147 = __toESM(require_react(), 1);
var $ae1eeba8b9eafd08$export$5165eccb35aaadb53 = (0, import_react147.default).createContext({
  register: () => {
  }
});
$ae1eeba8b9eafd08$export$5165eccb35aaadb53.displayName = "PressResponderContext";

// node_modules/@react-aria/interactions/dist/usePress.mjs
var import_react148 = __toESM(require_react(), 1);
function $f6c31cce2adf654f$var$usePressResponderContext3(props) {
  let context = (0, import_react148.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb53));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, props.ref);
  return props;
}
var $f6c31cce2adf654f$var$_shouldStopPropagation3 = /* @__PURE__ */ new WeakMap();
var $f6c31cce2adf654f$var$PressEvent3 = class {
  continuePropagation() {
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation3, false);
  }
  get shouldStopPropagation() {
    return (0, _class_private_field_get)(this, $f6c31cce2adf654f$var$_shouldStopPropagation3);
  }
  constructor(type, pointerType, originalEvent, state) {
    (0, _class_private_field_init)(this, $f6c31cce2adf654f$var$_shouldStopPropagation3, {
      writable: true,
      value: void 0
    });
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation3, true);
    var _state_target;
    let currentTarget = (_state_target = state === null || state === void 0 ? void 0 : state.target) !== null && _state_target !== void 0 ? _state_target : originalEvent.currentTarget;
    const rect = currentTarget === null || currentTarget === void 0 ? void 0 : currentTarget.getBoundingClientRect();
    let x2, y = 0;
    let clientX, clientY = null;
    if (originalEvent.clientX != null && originalEvent.clientY != null) {
      clientX = originalEvent.clientX;
      clientY = originalEvent.clientY;
    }
    if (rect) {
      if (clientX != null && clientY != null) {
        x2 = clientX - rect.left;
        y = clientY - rect.top;
      } else {
        x2 = rect.width / 2;
        y = rect.height / 2;
      }
    }
    this.type = type;
    this.pointerType = pointerType;
    this.target = originalEvent.currentTarget;
    this.shiftKey = originalEvent.shiftKey;
    this.metaKey = originalEvent.metaKey;
    this.ctrlKey = originalEvent.ctrlKey;
    this.altKey = originalEvent.altKey;
    this.x = x2;
    this.y = y;
  }
};
var $f6c31cce2adf654f$var$LINK_CLICKED3 = Symbol("linkClicked");
function $f6c31cce2adf654f$export$45712eceda6fad213(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext3(props);
  let [isPressed, setPressed] = (0, import_react148.useState)(false);
  let ref = (0, import_react148.useRef)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    isTriggeringEvent: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let triggerPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled || state.didFirePressStart) return false;
    let shouldStopPropagation = true;
    state.isTriggeringEvent = true;
    if (onPressStart) {
      let event = new $f6c31cce2adf654f$var$PressEvent3("pressstart", pointerType, originalEvent);
      onPressStart(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(true);
    state.isTriggeringEvent = false;
    state.didFirePressStart = true;
    setPressed(true);
    return shouldStopPropagation;
  });
  let triggerPressEnd = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType, wasPressed = true) => {
    let state = ref.current;
    if (!state.didFirePressStart) return false;
    state.ignoreClickAfterPress = true;
    state.didFirePressStart = false;
    state.isTriggeringEvent = true;
    let shouldStopPropagation = true;
    if (onPressEnd) {
      let event = new $f6c31cce2adf654f$var$PressEvent3("pressend", pointerType, originalEvent);
      onPressEnd(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(false);
    setPressed(false);
    if (onPress && wasPressed && !isDisabled) {
      let event = new $f6c31cce2adf654f$var$PressEvent3("press", pointerType, originalEvent);
      onPress(event);
      shouldStopPropagation && (shouldStopPropagation = event.shouldStopPropagation);
    }
    state.isTriggeringEvent = false;
    return shouldStopPropagation;
  });
  let triggerPressUp = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled) return false;
    if (onPressUp) {
      state.isTriggeringEvent = true;
      let event = new $f6c31cce2adf654f$var$PressEvent3("pressup", pointerType, originalEvent);
      onPressUp(event);
      state.isTriggeringEvent = false;
      return event.shouldStopPropagation;
    }
    return true;
  });
  let cancel = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    let state = ref.current;
    if (state.isPressed && state.target) {
      if (state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e), state.pointerType, false);
      state.isPressed = false;
      state.isOverTarget = false;
      state.activePointerId = null;
      state.pointerType = null;
      removeAllGlobalListeners();
      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e32953)(state.target);
    }
  });
  let cancelOnPointerExit = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (shouldCancelOnPointerExit) cancel(e);
  });
  let pressProps = (0, import_react148.useMemo)(() => {
    let state = ref.current;
    let pressProps2 = {
      onKeyDown(e) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent3(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target)) {
          var _state_metaKeyEvents;
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard3(e.target, e.key)) e.preventDefault();
          let shouldStopPropagation = true;
          if (!state.isPressed && !e.repeat) {
            state.target = e.currentTarget;
            state.isPressed = true;
            shouldStopPropagation = triggerPressStart(e, "keyboard");
            let originalTarget = e.currentTarget;
            let pressUp = (e2) => {
              if ($f6c31cce2adf654f$var$isValidKeyboardEvent3(e2, originalTarget) && !e2.repeat && originalTarget.contains(e2.target) && state.target) triggerPressUp($f6c31cce2adf654f$var$createEvent3(state.target, e2), "keyboard");
            };
            addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "keyup", (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(pressUp, onKeyUp), true);
          }
          if (shouldStopPropagation) e.stopPropagation();
          if (e.metaKey && (0, $c87311424ea30a05$export$9ac100e40613ea10)()) (_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.set(e.key, e.nativeEvent);
        } else if (e.key === "Meta") state.metaKeyEvents = /* @__PURE__ */ new Map();
      },
      onClick(e) {
        if (e && !e.currentTarget.contains(e.target)) return;
        if (e && e.button === 0 && !state.isTriggeringEvent && !(0, $ea8dcbcb9ea1b556$export$95185d699e05d4d7).isOpening) {
          let shouldStopPropagation = true;
          if (isDisabled) e.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && !state.isPressed && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e.currentTarget);
            let stopPressStart = triggerPressStart(e, "virtual");
            let stopPressUp = triggerPressUp(e, "virtual");
            let stopPressEnd = triggerPressEnd(e, "virtual");
            shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
          if (shouldStopPropagation) e.stopPropagation();
        }
      }
    };
    let onKeyUp = (e) => {
      var _state_metaKeyEvents;
      if (state.isPressed && state.target && $f6c31cce2adf654f$var$isValidKeyboardEvent3(e, state.target)) {
        var _state_metaKeyEvents1;
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard3(e.target, e.key)) e.preventDefault();
        let target = e.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (e.key !== "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink3(state.target) && state.target.contains(target) && !e[$f6c31cce2adf654f$var$LINK_CLICKED3]) {
          e[$f6c31cce2adf654f$var$LINK_CLICKED3] = true;
          (0, $ea8dcbcb9ea1b556$export$95185d699e05d4d7)(state.target, e, false);
        }
        state.isPressed = false;
        (_state_metaKeyEvents1 = state.metaKeyEvents) === null || _state_metaKeyEvents1 === void 0 ? void 0 : _state_metaKeyEvents1.delete(e.key);
      } else if (e.key === "Meta" && ((_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.size)) {
        var _state_target;
        let events = state.metaKeyEvents;
        state.metaKeyEvents = void 0;
        for (let event of events.values()) (_state_target = state.target) === null || _state_target === void 0 ? void 0 : _state_target.dispatchEvent(new KeyboardEvent("keyup", event));
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e) => {
        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf63)(e.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefaultDown(e.currentTarget)) e.preventDefault();
        state.pointerType = e.pointerType;
        let shouldStopPropagation = true;
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e.pointerId;
          state.target = e.currentTarget;
          if (!isDisabled && !preventFocusOnPress) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e.currentTarget);
          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a46974671754873)(state.target);
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
          addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "pointermove", onPointerMove, false);
          addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "pointerup", onPointerUp, false);
          addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "pointercancel", onPointerCancel, false);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseDown = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        if (e.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultDown(e.currentTarget)) e.preventDefault();
          e.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e) => {
        if (!e.currentTarget.contains(e.target) || state.pointerType === "virtual") return;
        if (e.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e, e.currentTarget)) triggerPressUp(e, state.pointerType || e.pointerType);
      };
      let onPointerMove = (e) => {
        if (e.pointerId !== state.activePointerId) return;
        if (state.target && $f6c31cce2adf654f$var$isOverTarget(e, state.target)) {
          if (!state.isOverTarget && state.pointerType != null) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent3(state.target, e), state.pointerType);
          }
        } else if (state.target && state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e), state.pointerType, false);
          cancelOnPointerExit(e);
        }
      };
      let onPointerUp = (e) => {
        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0 && state.target) {
          if ($f6c31cce2adf654f$var$isOverTarget(e, state.target) && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e), state.pointerType);
          else if (state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e32953)(state.target);
          if ("ontouchend" in state.target && e.pointerType !== "mouse") addGlobalListener(state.target, "touchend", onTouchEnd, {
            once: true
          });
        }
      };
      let onTouchEnd = (e) => {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultUp3(e.target)) e.preventDefault();
      };
      let onPointerCancel = (e) => {
        cancel(e);
      };
      pressProps2.onDragStart = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        cancel(e);
      };
    } else {
      pressProps2.onMouseDown = (e) => {
        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;
        if ($f6c31cce2adf654f$var$shouldPreventDefaultDown(e.currentTarget)) e.preventDefault();
        if (state.ignoreEmulatedMouseEvents) {
          e.stopPropagation();
          return;
        }
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e.currentTarget);
        let shouldStopPropagation = triggerPressStart(e, state.pointerType);
        if (shouldStopPropagation) e.stopPropagation();
        addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = true;
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseLeave = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);
          cancelOnPointerExit(e);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseUp = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        if (!state.ignoreEmulatedMouseEvents && e.button === 0) triggerPressUp(e, state.pointerType || "mouse");
      };
      let onMouseUp = (e) => {
        if (e.button !== 0) return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if (state.target && $f6c31cce2adf654f$var$isOverTarget(e, state.target) && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e), state.pointerType);
        else if (state.target && state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);
        if (!touch) return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e.currentTarget);
        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a46974671754873)(state.target);
        let shouldStopPropagation = triggerPressStart($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
        if (shouldStopPropagation) e.stopPropagation();
        addGlobalListener((0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e.currentTarget), "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {
          if (!state.isOverTarget && state.pointerType != null) {
            state.isOverTarget = true;
            shouldStopPropagation = triggerPressStart($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
          }
        } else if (state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType, false);
          cancelOnPointerExit($f6c31cce2adf654f$var$createTouchEvent(state.target, e));
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onTouchEnd = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget) && state.pointerType != null) {
          triggerPressUp($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
          shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
        } else if (state.isOverTarget && state.pointerType != null) shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType, false);
        if (shouldStopPropagation) e.stopPropagation();
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (state.target && !allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e32953)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        e.stopPropagation();
        if (state.isPressed) cancel($f6c31cce2adf654f$var$createTouchEvent(state.target, e));
      };
      let onScroll = (e) => {
        if (state.isPressed && e.target.contains(state.target)) cancel({
          currentTarget: state.target,
          shiftKey: false,
          ctrlKey: false,
          metaKey: false,
          altKey: false
        });
      };
      pressProps2.onDragStart = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        cancel(e);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress,
    cancel,
    cancelOnPointerExit,
    triggerPressEnd,
    triggerPressStart,
    triggerPressUp
  ]);
  (0, import_react148.useEffect)(() => {
    return () => {
      var _ref_current_target;
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e32953)((_ref_current_target = ref.current.target) !== null && _ref_current_target !== void 0 ? _ref_current_target : void 0);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink3(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent3(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey3(element, key) || element instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).HTMLTextAreaElement || element.isContentEditable) && // Links should only trigger with Enter key
  !((role === "link" || !role && $f6c31cce2adf654f$var$isHTMLAnchorLink3(element)) && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0) return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i = 0; i < changedTouches.length; i++) {
    const touch = changedTouches[i];
    if (touch.identifier === pointerId) return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createTouchEvent(target, e) {
  let clientX = 0;
  let clientY = 0;
  if (e.targetTouches && e.targetTouches.length === 1) {
    clientX = e.targetTouches[0].clientX;
    clientY = e.targetTouches[0].clientY;
  }
  return {
    currentTarget: target,
    shiftKey: e.shiftKey,
    ctrlKey: e.ctrlKey,
    metaKey: e.metaKey,
    altKey: e.altKey,
    clientX,
    clientY
  };
}
function $f6c31cce2adf654f$var$createEvent3(target, e) {
  let clientX = e.clientX;
  let clientY = e.clientY;
  return {
    currentTarget: target,
    shiftKey: e.shiftKey,
    ctrlKey: e.ctrlKey,
    metaKey: e.metaKey,
    altKey: e.altKey,
    clientX,
    clientY
  };
}
function $f6c31cce2adf654f$var$getPointClientRect(point) {
  let offsetX = 0;
  let offsetY = 0;
  if (point.width !== void 0) offsetX = point.width / 2;
  else if (point.radiusX !== void 0) offsetX = point.radiusX;
  if (point.height !== void 0) offsetY = point.height / 2;
  else if (point.radiusY !== void 0) offsetY = point.radiusY;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping(a2, b2) {
  if (a2.left > b2.right || b2.left > a2.right) return false;
  if (a2.top > b2.bottom || b2.top > a2.bottom) return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefaultDown(target) {
  return !(target instanceof HTMLElement) || !target.hasAttribute("draggable");
}
function $f6c31cce2adf654f$var$shouldPreventDefaultUp3(target) {
  if (target instanceof HTMLInputElement) return false;
  if (target instanceof HTMLButtonElement) return target.type !== "submit" && target.type !== "reset";
  if ($f6c31cce2adf654f$var$isHTMLAnchorLink3(target)) return false;
  return true;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard3(target, key) {
  if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey3(target, key);
  return $f6c31cce2adf654f$var$shouldPreventDefaultUp3(target);
}
var $f6c31cce2adf654f$var$nonTextInputTypes3 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey3(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes3.has(target.type);
}

// node_modules/@react-aria/interactions/dist/Pressable.mjs
var import_react149 = __toESM(require_react(), 1);
var $3b117e43dc0ca95d$export$27c701ed9e449e993 = (0, import_react149.default).forwardRef(({ children: children3, ...props }, ref) => {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad213)({
    ...props,
    ref
  });
  let child = (0, import_react149.default).Children.only(children3);
  return (0, import_react149.default).cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(child.props, pressProps)
    }
  );
});

// node_modules/@react-aria/interactions/dist/PressResponder.mjs
var import_react150 = __toESM(require_react(), 1);
var $f1ab8c75478c6f73$export$3351871ee4b288b83 = (0, import_react150.default).forwardRef(({ children: children3, ...props }, ref) => {
  let isRegistered = (0, import_react150.useRef)(false);
  let prevContext = (0, import_react150.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb53));
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(prevContext || {}, {
    ...props,
    ref,
    register() {
      isRegistered.current = true;
      if (prevContext) prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(prevContext, ref);
  (0, import_react150.useEffect)(() => {
    if (!isRegistered.current) {
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
      isRegistered.current = true;
    }
  }, []);
  return (0, import_react150.default).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb53).Provider, {
    value: context
  }, children3);
});

// node_modules/@react-aria/interactions/dist/utils.mjs
var import_react151 = __toESM(require_react(), 1);
var $8a9cb279dc87e130$export$905e7fc544a71f36 = class {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc3(onBlur) {
  let stateRef = (0, import_react151.useRef)({
    isFocused: false,
    observer: null
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  let dispatchBlur = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);
  });
  return (0, import_react151.useCallback)((e) => {
    if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e.target;
      let onBlurHandler = (e2) => {
        stateRef.current.isFocused = false;
        if (target.disabled)
          dispatchBlur(new $8a9cb279dc87e130$export$905e7fc544a71f36("blur", e2));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          var _stateRef_current_observer;
          (_stateRef_current_observer = stateRef.current.observer) === null || _stateRef_current_observer === void 0 ? void 0 : _stateRef_current_observer.disconnect();
          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;
          target.dispatchEvent(new FocusEvent("blur", {
            relatedTarget: relatedTargetEl
          }));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true,
            relatedTarget: relatedTargetEl
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, [
    dispatchBlur
  ]);
}

// node_modules/@react-aria/interactions/dist/useFocus.mjs
var import_react152 = __toESM(require_react(), 1);
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e63(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = (0, import_react152.useCallback)((e) => {
    if (e.target === e.currentTarget) {
      if (onBlurProp) onBlurProp(e);
      if (onFocusChange) onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc3)(onBlur);
  const onFocus = (0, import_react152.useCallback)((e) => {
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(e.target);
    if (e.target === e.currentTarget && ownerDocument.activeElement === e.target) {
      if (onFocusProp) onFocusProp(e);
      if (onFocusChange) onFocusChange(true);
      onSyntheticFocus(e);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}

// node_modules/@react-aria/interactions/dist/useFocusVisible.mjs
var import_react153 = __toESM(require_react(), 1);
var $507fabe10e71c6fb$var$currentModality3 = null;
var $507fabe10e71c6fb$var$changeHandlers3 = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$export$d90243b58daecda73 = /* @__PURE__ */ new Map();
var $507fabe10e71c6fb$var$hasEventBeforeFocus3 = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently3 = false;
var $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {
  Tab: true,
  Escape: true
};
function $507fabe10e71c6fb$var$triggerChangeHandlers3(modality, e) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers3) handler(modality, e);
}
function $507fabe10e71c6fb$var$isValidKey3(e) {
  return !(e.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea10)() && e.altKey || e.ctrlKey || e.key === "Control" || e.key === "Shift" || e.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent3(e) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus3 = true;
  if ($507fabe10e71c6fb$var$isValidKey3(e)) {
    $507fabe10e71c6fb$var$currentModality3 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers3("keyboard", e);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent3(e) {
  $507fabe10e71c6fb$var$currentModality3 = "pointer";
  if (e.type === "mousedown" || e.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus3 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers3("pointer", e);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent3(e) {
  if ((0, $6a7db85432448f7f$export$60278871457622de)(e)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus3 = true;
    $507fabe10e71c6fb$var$currentModality3 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent3(e) {
  if (e.target === window || e.target === document) return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus3 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently3) {
    $507fabe10e71c6fb$var$currentModality3 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers3("virtual", e);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus3 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently3 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur3() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus3 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently3 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents3(element) {
  if (typeof window === "undefined" || $507fabe10e71c6fb$export$d90243b58daecda73.get((0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element))) return;
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  let focus2 = windowObject.HTMLElement.prototype.focus;
  windowObject.HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus3 = true;
    focus2.apply(this, arguments);
  };
  documentObject.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent3, true);
  documentObject.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent3, true);
  documentObject.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent3, true);
  windowObject.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent3, true);
  windowObject.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur3, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    documentObject.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    documentObject.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent3, true);
  } else {
    documentObject.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    documentObject.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    documentObject.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent3, true);
  }
  windowObject.addEventListener("beforeunload", () => {
    $507fabe10e71c6fb$var$tearDownWindowFocusTracking3(element);
  }, {
    once: true
  });
  $507fabe10e71c6fb$export$d90243b58daecda73.set(windowObject, {
    focus: focus2
  });
}
var $507fabe10e71c6fb$var$tearDownWindowFocusTracking3 = (element, loadListener) => {
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  if (loadListener) documentObject.removeEventListener("DOMContentLoaded", loadListener);
  if (!$507fabe10e71c6fb$export$d90243b58daecda73.has(windowObject)) return;
  windowObject.HTMLElement.prototype.focus = $507fabe10e71c6fb$export$d90243b58daecda73.get(windowObject).focus;
  documentObject.removeEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent3, true);
  documentObject.removeEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent3, true);
  documentObject.removeEventListener("click", $507fabe10e71c6fb$var$handleClickEvent3, true);
  windowObject.removeEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent3, true);
  windowObject.removeEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur3, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.removeEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    documentObject.removeEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    documentObject.removeEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent3, true);
  } else {
    documentObject.removeEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    documentObject.removeEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    documentObject.removeEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent3, true);
  }
  $507fabe10e71c6fb$export$d90243b58daecda73.delete(windowObject);
};
function $507fabe10e71c6fb$export$2f1888112f558a7d3(element) {
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  let loadListener;
  if (documentObject.readyState !== "loading") $507fabe10e71c6fb$var$setupGlobalFocusEvents3(element);
  else {
    loadListener = () => {
      $507fabe10e71c6fb$var$setupGlobalFocusEvents3(element);
    };
    documentObject.addEventListener("DOMContentLoaded", loadListener);
  }
  return () => $507fabe10e71c6fb$var$tearDownWindowFocusTracking3(element, loadListener);
}
if (typeof document !== "undefined") $507fabe10e71c6fb$export$2f1888112f558a7d3();
function $507fabe10e71c6fb$export$b9b3dfddab17db273() {
  return $507fabe10e71c6fb$var$currentModality3 !== "pointer";
}
function $507fabe10e71c6fb$export$630ff653c5ada6a93() {
  return $507fabe10e71c6fb$var$currentModality3;
}
var $507fabe10e71c6fb$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e) {
  var _e_target;
  const IHTMLInputElement = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e === null || e === void 0 ? void 0 : e.target).HTMLInputElement : HTMLInputElement;
  const IHTMLTextAreaElement = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e === null || e === void 0 ? void 0 : e.target).HTMLTextAreaElement : HTMLTextAreaElement;
  const IHTMLElement = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e === null || e === void 0 ? void 0 : e.target).HTMLElement : HTMLElement;
  const IKeyboardEvent = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e === null || e === void 0 ? void 0 : e.target).KeyboardEvent : KeyboardEvent;
  isTextInput = isTextInput || (e === null || e === void 0 ? void 0 : e.target) instanceof IHTMLInputElement && !$507fabe10e71c6fb$var$nonTextInputTypes.has(e === null || e === void 0 ? void 0 : (_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.type) || (e === null || e === void 0 ? void 0 : e.target) instanceof IHTMLTextAreaElement || (e === null || e === void 0 ? void 0 : e.target) instanceof IHTMLElement && (e === null || e === void 0 ? void 0 : e.target.isContentEditable);
  return !(isTextInput && modality === "keyboard" && e instanceof IKeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);
}
function $507fabe10e71c6fb$export$ec71b4b83ac08ec33(fn, deps, opts) {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents3();
  (0, import_react153.useEffect)(() => {
    let handler = (modality, e) => {
      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(!!(opts === null || opts === void 0 ? void 0 : opts.isTextInput), modality, e)) return;
      fn($507fabe10e71c6fb$export$b9b3dfddab17db273());
    };
    $507fabe10e71c6fb$var$changeHandlers3.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers3.delete(handler);
    };
  }, deps);
}

// node_modules/@react-aria/interactions/dist/useFocusWithin.mjs
var import_react154 = __toESM(require_react(), 1);
function $9ab94262bd0047c7$export$420e68273165f4ec3(props) {
  let { isDisabled, onBlurWithin, onFocusWithin, onFocusWithinChange } = props;
  let state = (0, import_react154.useRef)({
    isFocusWithin: false
  });
  let onBlur = (0, import_react154.useCallback)((e) => {
    if (state.current.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {
      state.current.isFocusWithin = false;
      if (onBlurWithin) onBlurWithin(e);
      if (onFocusWithinChange) onFocusWithinChange(false);
    }
  }, [
    onBlurWithin,
    onFocusWithinChange,
    state
  ]);
  let onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc3)(onBlur);
  let onFocus = (0, import_react154.useCallback)((e) => {
    if (!state.current.isFocusWithin && document.activeElement === e.target) {
      if (onFocusWithin) onFocusWithin(e);
      if (onFocusWithinChange) onFocusWithinChange(true);
      state.current.isFocusWithin = true;
      onSyntheticFocus(e);
    }
  }, [
    onFocusWithin,
    onFocusWithinChange,
    onSyntheticFocus
  ]);
  if (isDisabled) return {
    focusWithinProps: {
      // These should not have been null, that would conflict in mergeProps
      onFocus: void 0,
      onBlur: void 0
    }
  };
  return {
    focusWithinProps: {
      onFocus,
      onBlur
    }
  };
}

// node_modules/@react-aria/interactions/dist/useHover.mjs
var import_react155 = __toESM(require_react(), 1);

// node_modules/@react-aria/interactions/dist/useInteractOutside.mjs
var import_react156 = __toESM(require_react(), 1);

// node_modules/@react-aria/interactions/dist/useMove.mjs
var import_react157 = __toESM(require_react(), 1);

// node_modules/@react-aria/interactions/dist/useScrollWheel.mjs
var import_react158 = __toESM(require_react(), 1);

// node_modules/@react-aria/interactions/dist/useLongPress.mjs
var import_react159 = __toESM(require_react(), 1);

// node_modules/@react-aria/checkbox/dist/useCheckboxGroupItem.mjs
var import_react161 = __toESM(require_react(), 1);

// node_modules/@react-aria/checkbox/node_modules/@react-stately/toggle/dist/useToggleGroupState.mjs
var import_react160 = __toESM(require_react(), 1);

// node_modules/@react-aria/focus/dist/focusSafely.mjs
function $6a99195332edec8b$export$80f3e147d781571c(element) {
  const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a93)() === "virtual") {
    let lastFocusedElement = ownerDocument.activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
      if (ownerDocument.activeElement === lastFocusedElement && element.isConnected) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
    });
  } else (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
}

// node_modules/@react-aria/focus/dist/isElementVisible.mjs
function $645f2e67b85a24c9$var$isStyleVisible(element) {
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  if (!(element instanceof windowObject.HTMLElement) && !(element instanceof windowObject.SVGElement)) return false;
  let { display, visibility } = element.style;
  let isVisible2 = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible2) {
    const { getComputedStyle: getComputedStyle3 } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle3(element);
    isVisible2 = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible2;
}
function $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {
  return !element.hasAttribute("hidden") && // Ignore HiddenSelect when tree walking.
  !element.hasAttribute("data-react-aria-prevent-focus") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));
}

// node_modules/@react-aria/focus/dist/FocusScope.mjs
var import_react162 = __toESM(require_react(), 1);
var $9bf71ea28793e738$var$FocusContext = (0, import_react162.default).createContext(null);
var $9bf71ea28793e738$var$focusableElements = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope(element, scope) {
  if (!element) return false;
  if (!scope) return false;
  return scope.some((node) => node.contains(element));
}
function $9bf71ea28793e738$var$focusElement(element, scroll = false) {
  if (element != null && !scroll) try {
    (0, $6a99195332edec8b$export$80f3e147d781571c)(element);
  } catch (err) {
  }
  else if (element != null) try {
    element.focus();
  } catch (err) {
  }
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, opts, scope) {
  let selector2 = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR;
  let walker = (0, $431fbd86ca7dc216$export$b204af158042fbac)(root).createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      var _opts_from;
      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node)) return NodeFilter.FILTER_REJECT;
      if (node.matches(selector2) && (0, $645f2e67b85a24c9$export$e989c0fffaa6b27a)(node) && (!scope || $9bf71ea28793e738$var$isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from) walker.currentNode = opts.from;
  return walker;
}
function $9bf71ea28793e738$export$c5251b9e124bf29(ref, defaultOptions = {}) {
  return {
    focusNext(opts = {}) {
      let root = ref.current;
      if (!root) return null;
      let { from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept } = opts;
      let node = from || (0, $431fbd86ca7dc216$export$b204af158042fbac)(root).activeElement;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      if (root.contains(node)) walker.currentNode = node;
      let nextNode = walker.nextNode();
      if (!nextNode && wrap) {
        walker.currentNode = root;
        nextNode = walker.nextNode();
      }
      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusPrevious(opts = defaultOptions) {
      let root = ref.current;
      if (!root) return null;
      let { from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept } = opts;
      let node = from || (0, $431fbd86ca7dc216$export$b204af158042fbac)(root).activeElement;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      if (root.contains(node)) walker.currentNode = node;
      else {
        let next = $9bf71ea28793e738$var$last(walker);
        if (next) $9bf71ea28793e738$var$focusElement(next, true);
        return next !== null && next !== void 0 ? next : null;
      }
      let previousNode = walker.previousNode();
      if (!previousNode && wrap) {
        walker.currentNode = root;
        let lastNode = $9bf71ea28793e738$var$last(walker);
        if (!lastNode)
          return null;
        previousNode = lastNode;
      }
      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode !== null && previousNode !== void 0 ? previousNode : null;
    },
    focusFirst(opts = defaultOptions) {
      let root = ref.current;
      if (!root) return null;
      let { tabbable = defaultOptions.tabbable, accept = defaultOptions.accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      let nextNode = walker.nextNode();
      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusLast(opts = defaultOptions) {
      let root = ref.current;
      if (!root) return null;
      let { tabbable = defaultOptions.tabbable, accept = defaultOptions.accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      let next = $9bf71ea28793e738$var$last(walker);
      if (next) $9bf71ea28793e738$var$focusElement(next, true);
      return next !== null && next !== void 0 ? next : null;
    }
  };
}
function $9bf71ea28793e738$var$last(walker) {
  let next = void 0;
  let last;
  do {
    last = walker.lastChild();
    if (last) next = last;
  } while (last);
  return next;
}
var $9bf71ea28793e738$var$Tree = class _$9bf71ea28793e738$var$Tree {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    if (!parentNode) return;
    let node = new $9bf71ea28793e738$var$TreeNode({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore) node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null) return;
    let node = this.fastMap.get(scopeRef);
    if (!node) return;
    let parentNode = node.parent;
    for (let current of this.traverse()) if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope(current.nodeToRestore, node.scopeRef.current)) current.nodeToRestore = node.nodeToRestore;
    let children3 = node.children;
    if (parentNode) {
      parentNode.removeChild(node);
      if (children3.size > 0) children3.forEach((child) => parentNode && parentNode.addChild(child));
    }
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null) yield node;
    if (node.children.size > 0) for (let child of node.children) yield* this.traverse(child);
  }
  clone() {
    var _node_parent;
    let newTree = new _$9bf71ea28793e738$var$Tree();
    var _node_parent_scopeRef;
    for (let node of this.traverse()) newTree.addTreeNode(node.scopeRef, (_node_parent_scopeRef = (_node_parent = node.parent) === null || _node_parent === void 0 ? void 0 : _node_parent.scopeRef) !== null && _node_parent_scopeRef !== void 0 ? _node_parent_scopeRef : null, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    this.fastMap = /* @__PURE__ */ new Map();
    this.root = new $9bf71ea28793e738$var$TreeNode({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    this.children = /* @__PURE__ */ new Set();
    this.contain = false;
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e = new $9bf71ea28793e738$var$Tree();

// node_modules/@react-aria/focus/dist/useFocusRing.mjs
var import_react163 = __toESM(require_react(), 1);
function $f7dceffc5ad7768b$export$4e328f61c538687f(props = {}) {
  let { autoFocus = false, isTextInput, within } = props;
  let state = (0, import_react163.useRef)({
    isFocused: false,
    isFocusVisible: autoFocus || (0, $507fabe10e71c6fb$export$b9b3dfddab17db273)()
  });
  let [isFocused, setFocused] = (0, import_react163.useState)(false);
  let [isFocusVisibleState, setFocusVisible] = (0, import_react163.useState)(() => state.current.isFocused && state.current.isFocusVisible);
  let updateState = (0, import_react163.useCallback)(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);
  let onFocusChange = (0, import_react163.useCallback)((isFocused2) => {
    state.current.isFocused = isFocused2;
    setFocused(isFocused2);
    updateState();
  }, [
    updateState
  ]);
  (0, $507fabe10e71c6fb$export$ec71b4b83ac08ec33)((isFocusVisible) => {
    state.current.isFocusVisible = isFocusVisible;
    updateState();
  }, [], {
    isTextInput
  });
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e63)({
    isDisabled: within,
    onFocusChange
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec3)({
    isDisabled: !within,
    onFocusWithinChange: onFocusChange
  });
  return {
    isFocused,
    isFocusVisible: isFocusVisibleState,
    focusProps: within ? focusWithinProps : focusProps
  };
}

// node_modules/@react-aria/focus/dist/FocusRing.mjs
var import_react164 = __toESM(require_react(), 1);

// node_modules/@react-aria/focus/dist/useFocusable.mjs
var import_react165 = __toESM(require_react(), 1);
var $e6afbd83fe6ebbd2$var$FocusableContext = (0, import_react165.default).createContext(null);
function $e6afbd83fe6ebbd2$var$FocusableProvider(props, ref) {
  let { children: children3, ...otherProps } = props;
  let objRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let context = {
    ...otherProps,
    ref: objRef
  };
  return (0, import_react165.default).createElement($e6afbd83fe6ebbd2$var$FocusableContext.Provider, {
    value: context
  }, children3);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 = (0, import_react165.default).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider);

// node_modules/@react-aria/focus/dist/useHasTabbableChild.mjs
var import_react166 = __toESM(require_react(), 1);

// node_modules/@vtex/shoreline/dist/index.mjs
var import_react374 = __toESM(require_react(), 1);
var import_jsx_runtime232 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime233 = __toESM(require_jsx_runtime(), 1);
var import_react375 = __toESM(require_react(), 1);
var React35 = __toESM(require_react(), 1);
var import_react376 = __toESM(require_react(), 1);
var import_jsx_runtime234 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime235 = __toESM(require_jsx_runtime(), 1);
var import_react377 = __toESM(require_react(), 1);
var import_jsx_runtime236 = __toESM(require_jsx_runtime(), 1);
var import_react378 = __toESM(require_react(), 1);
var import_jsx_runtime237 = __toESM(require_jsx_runtime(), 1);
var import_react379 = __toESM(require_react(), 1);
var import_jsx_runtime238 = __toESM(require_jsx_runtime(), 1);
var import_react380 = __toESM(require_react(), 1);
var import_jsx_runtime239 = __toESM(require_jsx_runtime(), 1);
var import_react381 = __toESM(require_react(), 1);
var import_jsx_runtime240 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime241 = __toESM(require_jsx_runtime(), 1);
var import_react382 = __toESM(require_react(), 1);
var import_jsx_runtime242 = __toESM(require_jsx_runtime(), 1);
var import_react383 = __toESM(require_react(), 1);
var import_react384 = __toESM(require_react(), 1);
var import_jsx_runtime243 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime244 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime245 = __toESM(require_jsx_runtime(), 1);
var import_react385 = __toESM(require_react(), 1);
var import_jsx_runtime246 = __toESM(require_jsx_runtime(), 1);
var import_react386 = __toESM(require_react(), 1);
var import_jsx_runtime247 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime248 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime249 = __toESM(require_jsx_runtime(), 1);
var import_react387 = __toESM(require_react(), 1);
var import_react388 = __toESM(require_react(), 1);
var import_react390 = __toESM(require_react(), 1);
var import_jsx_runtime250 = __toESM(require_jsx_runtime(), 1);
var import_react391 = __toESM(require_react(), 1);
var import_jsx_runtime251 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime252 = __toESM(require_jsx_runtime(), 1);
var import_react392 = __toESM(require_react(), 1);
var import_react393 = __toESM(require_react(), 1);
var import_jsx_runtime253 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime254 = __toESM(require_jsx_runtime(), 1);
var import_react394 = __toESM(require_react(), 1);
var import_jsx_runtime255 = __toESM(require_jsx_runtime(), 1);
var import_react395 = __toESM(require_react(), 1);
var import_jsx_runtime256 = __toESM(require_jsx_runtime(), 1);
var import_react396 = __toESM(require_react(), 1);
var import_jsx_runtime257 = __toESM(require_jsx_runtime(), 1);
var import_react398 = __toESM(require_react(), 1);
var import_jsx_runtime258 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime259 = __toESM(require_jsx_runtime(), 1);
var import_react400 = __toESM(require_react(), 1);
var import_react401 = __toESM(require_react(), 1);
var import_jsx_runtime260 = __toESM(require_jsx_runtime(), 1);
var import_react404 = __toESM(require_react(), 1);
var import_jsx_runtime261 = __toESM(require_jsx_runtime(), 1);
var import_react406 = __toESM(require_react(), 1);
var import_jsx_runtime262 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime263 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime264 = __toESM(require_jsx_runtime(), 1);
var import_react409 = __toESM(require_react(), 1);
var import_jsx_runtime265 = __toESM(require_jsx_runtime(), 1);

// node_modules/@radix-ui/react-dialog/dist/index.mjs
var React33 = __toESM(require_react(), 1);

// node_modules/@radix-ui/primitive/dist/index.mjs
function composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {
  return function handleEvent(event) {
    originalEventHandler == null ? void 0 : originalEventHandler(event);
    if (checkForDefaultPrevented === false || !event.defaultPrevented) {
      return ourEventHandler == null ? void 0 : ourEventHandler(event);
    }
  };
}

// node_modules/@radix-ui/react-compose-refs/dist/index.mjs
var React5 = __toESM(require_react(), 1);
function setRef3(ref, value) {
  if (typeof ref === "function") {
    return ref(value);
  } else if (ref !== null && ref !== void 0) {
    ref.current = value;
  }
}
function composeRefs(...refs) {
  return (node) => {
    let hasCleanup = false;
    const cleanups2 = refs.map((ref) => {
      const cleanup = setRef3(ref, node);
      if (!hasCleanup && typeof cleanup == "function") {
        hasCleanup = true;
      }
      return cleanup;
    });
    if (hasCleanup) {
      return () => {
        for (let i = 0; i < cleanups2.length; i++) {
          const cleanup = cleanups2[i];
          if (typeof cleanup == "function") {
            cleanup();
          } else {
            setRef3(refs[i], null);
          }
        }
      };
    }
  };
}
function useComposedRefs(...refs) {
  return React5.useCallback(composeRefs(...refs), refs);
}

// node_modules/@radix-ui/react-context/dist/index.mjs
var React6 = __toESM(require_react(), 1);
var import_jsx_runtime62 = __toESM(require_jsx_runtime(), 1);
function createContext22(rootComponentName, defaultContext) {
  const Context = React6.createContext(defaultContext);
  const Provider = (props) => {
    const { children: children3, ...context } = props;
    const value = React6.useMemo(() => context, Object.values(context));
    return (0, import_jsx_runtime62.jsx)(Context.Provider, { value, children: children3 });
  };
  Provider.displayName = rootComponentName + "Provider";
  function useContext24(consumerName) {
    const context = React6.useContext(Context);
    if (context) return context;
    if (defaultContext !== void 0) return defaultContext;
    throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
  }
  return [Provider, useContext24];
}
function createContextScope(scopeName, createContextScopeDeps = []) {
  let defaultContexts = [];
  function createContext33(rootComponentName, defaultContext) {
    const BaseContext = React6.createContext(defaultContext);
    const index = defaultContexts.length;
    defaultContexts = [...defaultContexts, defaultContext];
    const Provider = (props) => {
      var _a2;
      const { scope, children: children3, ...context } = props;
      const Context = ((_a2 = scope == null ? void 0 : scope[scopeName]) == null ? void 0 : _a2[index]) || BaseContext;
      const value = React6.useMemo(() => context, Object.values(context));
      return (0, import_jsx_runtime62.jsx)(Context.Provider, { value, children: children3 });
    };
    Provider.displayName = rootComponentName + "Provider";
    function useContext24(consumerName, scope) {
      var _a2;
      const Context = ((_a2 = scope == null ? void 0 : scope[scopeName]) == null ? void 0 : _a2[index]) || BaseContext;
      const context = React6.useContext(Context);
      if (context) return context;
      if (defaultContext !== void 0) return defaultContext;
      throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    return [Provider, useContext24];
  }
  const createScope = () => {
    const scopeContexts = defaultContexts.map((defaultContext) => {
      return React6.createContext(defaultContext);
    });
    return function useScope(scope) {
      const contexts = (scope == null ? void 0 : scope[scopeName]) || scopeContexts;
      return React6.useMemo(
        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),
        [scope, contexts]
      );
    };
  };
  createScope.scopeName = scopeName;
  return [createContext33, composeContextScopes(createScope, ...createContextScopeDeps)];
}
function composeContextScopes(...scopes) {
  const baseScope = scopes[0];
  if (scopes.length === 1) return baseScope;
  const createScope = () => {
    const scopeHooks = scopes.map((createScope2) => ({
      useScope: createScope2(),
      scopeName: createScope2.scopeName
    }));
    return function useComposedScopes(overrideScopes) {
      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {
        const scopeProps = useScope(overrideScopes);
        const currentScope = scopeProps[`__scope${scopeName}`];
        return { ...nextScopes2, ...currentScope };
      }, {});
      return React6.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);
    };
  };
  createScope.scopeName = baseScope.scopeName;
  return createScope;
}

// node_modules/@radix-ui/react-id/dist/index.mjs
var React8 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs
var React7 = __toESM(require_react(), 1);
var useLayoutEffect22 = (globalThis == null ? void 0 : globalThis.document) ? React7.useLayoutEffect : () => {
};

// node_modules/@radix-ui/react-id/dist/index.mjs
var useReactId3 = React8[" useId ".trim().toString()] || (() => void 0);
var count = 0;
function useId3(deterministicId) {
  const [id, setId] = React8.useState(useReactId3());
  useLayoutEffect22(() => {
    if (!deterministicId) setId((reactId) => reactId ?? String(count++));
  }, [deterministicId]);
  return deterministicId || (id ? `radix-${id}` : "");
}

// node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs
var React10 = __toESM(require_react(), 1);
var React23 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-use-effect-event/dist/index.mjs
var React9 = __toESM(require_react(), 1);
var useReactEffectEvent = React9[" useEffectEvent ".trim().toString()];
var useReactInsertionEffect2 = React9[" useInsertionEffect ".trim().toString()];

// node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs
var useInsertionEffect = React10[" useInsertionEffect ".trim().toString()] || useLayoutEffect22;
function useControllableState({
  prop,
  defaultProp,
  onChange = () => {
  },
  caller
}) {
  const [uncontrolledProp, setUncontrolledProp, onChangeRef] = useUncontrolledState({
    defaultProp,
    onChange
  });
  const isControlled = prop !== void 0;
  const value = isControlled ? prop : uncontrolledProp;
  if (true) {
    const isControlledRef = React10.useRef(prop !== void 0);
    React10.useEffect(() => {
      const wasControlled = isControlledRef.current;
      if (wasControlled !== isControlled) {
        const from = wasControlled ? "controlled" : "uncontrolled";
        const to = isControlled ? "controlled" : "uncontrolled";
        console.warn(
          `${caller} is changing from ${from} to ${to}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`
        );
      }
      isControlledRef.current = isControlled;
    }, [isControlled, caller]);
  }
  const setValue = React10.useCallback(
    (nextValue) => {
      var _a2;
      if (isControlled) {
        const value2 = isFunction2(nextValue) ? nextValue(prop) : nextValue;
        if (value2 !== prop) {
          (_a2 = onChangeRef.current) == null ? void 0 : _a2.call(onChangeRef, value2);
        }
      } else {
        setUncontrolledProp(nextValue);
      }
    },
    [isControlled, prop, setUncontrolledProp, onChangeRef]
  );
  return [value, setValue];
}
function useUncontrolledState({
  defaultProp,
  onChange
}) {
  const [value, setValue] = React10.useState(defaultProp);
  const prevValueRef = React10.useRef(value);
  const onChangeRef = React10.useRef(onChange);
  useInsertionEffect(() => {
    onChangeRef.current = onChange;
  }, [onChange]);
  React10.useEffect(() => {
    var _a2;
    if (prevValueRef.current !== value) {
      (_a2 = onChangeRef.current) == null ? void 0 : _a2.call(onChangeRef, value);
      prevValueRef.current = value;
    }
  }, [value, prevValueRef]);
  return [value, setValue, onChangeRef];
}
function isFunction2(value) {
  return typeof value === "function";
}
var SYNC_STATE = Symbol("RADIX:SYNC_STATE");

// node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs
var React15 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-primitive/dist/index.mjs
var React12 = __toESM(require_react(), 1);
var ReactDOM = __toESM(require_react_dom(), 1);

// node_modules/@radix-ui/react-slot/dist/index.mjs
var React11 = __toESM(require_react(), 1);
var import_jsx_runtime63 = __toESM(require_jsx_runtime(), 1);
function createSlot(ownerName) {
  const SlotClone = createSlotClone(ownerName);
  const Slot22 = React11.forwardRef((props, forwardedRef) => {
    const { children: children3, ...slotProps } = props;
    const childrenArray = React11.Children.toArray(children3);
    const slottable = childrenArray.find(isSlottable);
    if (slottable) {
      const newElement = slottable.props.children;
      const newChildren = childrenArray.map((child) => {
        if (child === slottable) {
          if (React11.Children.count(newElement) > 1) return React11.Children.only(null);
          return React11.isValidElement(newElement) ? newElement.props.children : null;
        } else {
          return child;
        }
      });
      return (0, import_jsx_runtime63.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children: React11.isValidElement(newElement) ? React11.cloneElement(newElement, void 0, newChildren) : null });
    }
    return (0, import_jsx_runtime63.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children: children3 });
  });
  Slot22.displayName = `${ownerName}.Slot`;
  return Slot22;
}
var Slot = createSlot("Slot");
function createSlotClone(ownerName) {
  const SlotClone = React11.forwardRef((props, forwardedRef) => {
    const { children: children3, ...slotProps } = props;
    if (React11.isValidElement(children3)) {
      const childrenRef = getElementRef(children3);
      const props2 = mergeProps3(slotProps, children3.props);
      if (children3.type !== React11.Fragment) {
        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;
      }
      return React11.cloneElement(children3, props2);
    }
    return React11.Children.count(children3) > 1 ? React11.Children.only(null) : null;
  });
  SlotClone.displayName = `${ownerName}.SlotClone`;
  return SlotClone;
}
var SLOTTABLE_IDENTIFIER = Symbol("radix.slottable");
function createSlottable(ownerName) {
  const Slottable2 = ({ children: children3 }) => {
    return (0, import_jsx_runtime63.jsx)(import_jsx_runtime63.Fragment, { children: children3 });
  };
  Slottable2.displayName = `${ownerName}.Slottable`;
  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;
  return Slottable2;
}
var Slottable = createSlottable("Slottable");
function isSlottable(child) {
  return React11.isValidElement(child) && typeof child.type === "function" && "__radixId" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;
}
function mergeProps3(slotProps, childProps) {
  const overrideProps = { ...childProps };
  for (const propName in childProps) {
    const slotPropValue = slotProps[propName];
    const childPropValue = childProps[propName];
    const isHandler = /^on[A-Z]/.test(propName);
    if (isHandler) {
      if (slotPropValue && childPropValue) {
        overrideProps[propName] = (...args) => {
          const result = childPropValue(...args);
          slotPropValue(...args);
          return result;
        };
      } else if (slotPropValue) {
        overrideProps[propName] = slotPropValue;
      }
    } else if (propName === "style") {
      overrideProps[propName] = { ...slotPropValue, ...childPropValue };
    } else if (propName === "className") {
      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(" ");
    }
  }
  return { ...slotProps, ...overrideProps };
}
function getElementRef(element) {
  var _a2, _b;
  let getter = (_a2 = Object.getOwnPropertyDescriptor(element.props, "ref")) == null ? void 0 : _a2.get;
  let mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.ref;
  }
  getter = (_b = Object.getOwnPropertyDescriptor(element, "ref")) == null ? void 0 : _b.get;
  mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.props.ref;
  }
  return element.props.ref || element.ref;
}

// node_modules/@radix-ui/react-primitive/dist/index.mjs
var import_jsx_runtime64 = __toESM(require_jsx_runtime(), 1);
var NODES = [
  "a",
  "button",
  "div",
  "form",
  "h2",
  "h3",
  "img",
  "input",
  "label",
  "li",
  "nav",
  "ol",
  "p",
  "select",
  "span",
  "svg",
  "ul"
];
var Primitive = NODES.reduce((primitive, node) => {
  const Slot3 = createSlot(`Primitive.${node}`);
  const Node2 = React12.forwardRef((props, forwardedRef) => {
    const { asChild, ...primitiveProps } = props;
    const Comp = asChild ? Slot3 : node;
    if (typeof window !== "undefined") {
      window[Symbol.for("radix-ui")] = true;
    }
    return (0, import_jsx_runtime64.jsx)(Comp, { ...primitiveProps, ref: forwardedRef });
  });
  Node2.displayName = `Primitive.${node}`;
  return { ...primitive, [node]: Node2 };
}, {});
function dispatchDiscreteCustomEvent(target, event) {
  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));
}

// node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs
var React13 = __toESM(require_react(), 1);
function useCallbackRef(callback) {
  const callbackRef = React13.useRef(callback);
  React13.useEffect(() => {
    callbackRef.current = callback;
  });
  return React13.useMemo(() => (...args) => {
    var _a2;
    return (_a2 = callbackRef.current) == null ? void 0 : _a2.call(callbackRef, ...args);
  }, []);
}

// node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs
var React14 = __toESM(require_react(), 1);
function useEscapeKeydown(onEscapeKeyDownProp, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);
  React14.useEffect(() => {
    const handleKeyDown = (event) => {
      if (event.key === "Escape") {
        onEscapeKeyDown(event);
      }
    };
    ownerDocument.addEventListener("keydown", handleKeyDown, { capture: true });
    return () => ownerDocument.removeEventListener("keydown", handleKeyDown, { capture: true });
  }, [onEscapeKeyDown, ownerDocument]);
}

// node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs
var import_jsx_runtime65 = __toESM(require_jsx_runtime(), 1);
var DISMISSABLE_LAYER_NAME = "DismissableLayer";
var CONTEXT_UPDATE = "dismissableLayer.update";
var POINTER_DOWN_OUTSIDE = "dismissableLayer.pointerDownOutside";
var FOCUS_OUTSIDE = "dismissableLayer.focusOutside";
var originalBodyPointerEvents;
var DismissableLayerContext = React15.createContext({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
});
var DismissableLayer = React15.forwardRef(
  (props, forwardedRef) => {
    const {
      disableOutsidePointerEvents = false,
      onEscapeKeyDown,
      onPointerDownOutside,
      onFocusOutside,
      onInteractOutside,
      onDismiss,
      ...layerProps
    } = props;
    const context = React15.useContext(DismissableLayerContext);
    const [node, setNode] = React15.useState(null);
    const ownerDocument = (node == null ? void 0 : node.ownerDocument) ?? (globalThis == null ? void 0 : globalThis.document);
    const [, force] = React15.useState({});
    const composedRefs = useComposedRefs(forwardedRef, (node2) => setNode(node2));
    const layers = Array.from(context.layers);
    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1);
    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);
    const index = node ? layers.indexOf(node) : -1;
    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;
    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;
    const pointerDownOutside = usePointerDownOutside((event) => {
      const target = event.target;
      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));
      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;
      onPointerDownOutside == null ? void 0 : onPointerDownOutside(event);
      onInteractOutside == null ? void 0 : onInteractOutside(event);
      if (!event.defaultPrevented) onDismiss == null ? void 0 : onDismiss();
    }, ownerDocument);
    const focusOutside = useFocusOutside((event) => {
      const target = event.target;
      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));
      if (isFocusInBranch) return;
      onFocusOutside == null ? void 0 : onFocusOutside(event);
      onInteractOutside == null ? void 0 : onInteractOutside(event);
      if (!event.defaultPrevented) onDismiss == null ? void 0 : onDismiss();
    }, ownerDocument);
    useEscapeKeydown((event) => {
      const isHighestLayer = index === context.layers.size - 1;
      if (!isHighestLayer) return;
      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(event);
      if (!event.defaultPrevented && onDismiss) {
        event.preventDefault();
        onDismiss();
      }
    }, ownerDocument);
    React15.useEffect(() => {
      if (!node) return;
      if (disableOutsidePointerEvents) {
        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {
          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;
          ownerDocument.body.style.pointerEvents = "none";
        }
        context.layersWithOutsidePointerEventsDisabled.add(node);
      }
      context.layers.add(node);
      dispatchUpdate();
      return () => {
        if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) {
          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;
        }
      };
    }, [node, ownerDocument, disableOutsidePointerEvents, context]);
    React15.useEffect(() => {
      return () => {
        if (!node) return;
        context.layers.delete(node);
        context.layersWithOutsidePointerEventsDisabled.delete(node);
        dispatchUpdate();
      };
    }, [node, context]);
    React15.useEffect(() => {
      const handleUpdate = () => force({});
      document.addEventListener(CONTEXT_UPDATE, handleUpdate);
      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);
    }, []);
    return (0, import_jsx_runtime65.jsx)(
      Primitive.div,
      {
        ...layerProps,
        ref: composedRefs,
        style: {
          pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
          ...props.style
        },
        onFocusCapture: composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture),
        onBlurCapture: composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture),
        onPointerDownCapture: composeEventHandlers(
          props.onPointerDownCapture,
          pointerDownOutside.onPointerDownCapture
        )
      }
    );
  }
);
DismissableLayer.displayName = DISMISSABLE_LAYER_NAME;
var BRANCH_NAME = "DismissableLayerBranch";
var DismissableLayerBranch = React15.forwardRef((props, forwardedRef) => {
  const context = React15.useContext(DismissableLayerContext);
  const ref = React15.useRef(null);
  const composedRefs = useComposedRefs(forwardedRef, ref);
  React15.useEffect(() => {
    const node = ref.current;
    if (node) {
      context.branches.add(node);
      return () => {
        context.branches.delete(node);
      };
    }
  }, [context.branches]);
  return (0, import_jsx_runtime65.jsx)(Primitive.div, { ...props, ref: composedRefs });
});
DismissableLayerBranch.displayName = BRANCH_NAME;
function usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside);
  const isPointerInsideReactTreeRef = React15.useRef(false);
  const handleClickRef = React15.useRef(() => {
  });
  React15.useEffect(() => {
    const handlePointerDown = (event) => {
      if (event.target && !isPointerInsideReactTreeRef.current) {
        let handleAndDispatchPointerDownOutsideEvent2 = function() {
          handleAndDispatchCustomEvent(
            POINTER_DOWN_OUTSIDE,
            handlePointerDownOutside,
            eventDetail,
            { discrete: true }
          );
        };
        var handleAndDispatchPointerDownOutsideEvent = handleAndDispatchPointerDownOutsideEvent2;
        const eventDetail = { originalEvent: event };
        if (event.pointerType === "touch") {
          ownerDocument.removeEventListener("click", handleClickRef.current);
          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent2;
          ownerDocument.addEventListener("click", handleClickRef.current, { once: true });
        } else {
          handleAndDispatchPointerDownOutsideEvent2();
        }
      } else {
        ownerDocument.removeEventListener("click", handleClickRef.current);
      }
      isPointerInsideReactTreeRef.current = false;
    };
    const timerId = window.setTimeout(() => {
      ownerDocument.addEventListener("pointerdown", handlePointerDown);
    }, 0);
    return () => {
      window.clearTimeout(timerId);
      ownerDocument.removeEventListener("pointerdown", handlePointerDown);
      ownerDocument.removeEventListener("click", handleClickRef.current);
    };
  }, [ownerDocument, handlePointerDownOutside]);
  return {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = true
  };
}
function useFocusOutside(onFocusOutside, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
  const handleFocusOutside = useCallbackRef(onFocusOutside);
  const isFocusInsideReactTreeRef = React15.useRef(false);
  React15.useEffect(() => {
    const handleFocus = (event) => {
      if (event.target && !isFocusInsideReactTreeRef.current) {
        const eventDetail = { originalEvent: event };
        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {
          discrete: false
        });
      }
    };
    ownerDocument.addEventListener("focusin", handleFocus);
    return () => ownerDocument.removeEventListener("focusin", handleFocus);
  }, [ownerDocument, handleFocusOutside]);
  return {
    onFocusCapture: () => isFocusInsideReactTreeRef.current = true,
    onBlurCapture: () => isFocusInsideReactTreeRef.current = false
  };
}
function dispatchUpdate() {
  const event = new CustomEvent(CONTEXT_UPDATE);
  document.dispatchEvent(event);
}
function handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  const target = detail.originalEvent.target;
  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });
  if (handler) target.addEventListener(name, handler, { once: true });
  if (discrete) {
    dispatchDiscreteCustomEvent(target, event);
  } else {
    target.dispatchEvent(event);
  }
}

// node_modules/@radix-ui/react-focus-scope/dist/index.mjs
var React16 = __toESM(require_react(), 1);
var import_jsx_runtime66 = __toESM(require_jsx_runtime(), 1);
var AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount";
var AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount";
var EVENT_OPTIONS = { bubbles: false, cancelable: true };
var FOCUS_SCOPE_NAME = "FocusScope";
var FocusScope = React16.forwardRef((props, forwardedRef) => {
  const {
    loop = false,
    trapped = false,
    onMountAutoFocus: onMountAutoFocusProp,
    onUnmountAutoFocus: onUnmountAutoFocusProp,
    ...scopeProps
  } = props;
  const [container, setContainer] = React16.useState(null);
  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);
  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);
  const lastFocusedElementRef = React16.useRef(null);
  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));
  const focusScope = React16.useRef({
    paused: false,
    pause() {
      this.paused = true;
    },
    resume() {
      this.paused = false;
    }
  }).current;
  React16.useEffect(() => {
    if (trapped) {
      let handleFocusIn2 = function(event) {
        if (focusScope.paused || !container) return;
        const target = event.target;
        if (container.contains(target)) {
          lastFocusedElementRef.current = target;
        } else {
          focus(lastFocusedElementRef.current, { select: true });
        }
      }, handleFocusOut2 = function(event) {
        if (focusScope.paused || !container) return;
        const relatedTarget = event.relatedTarget;
        if (relatedTarget === null) return;
        if (!container.contains(relatedTarget)) {
          focus(lastFocusedElementRef.current, { select: true });
        }
      }, handleMutations2 = function(mutations) {
        const focusedElement = document.activeElement;
        if (focusedElement !== document.body) return;
        for (const mutation of mutations) {
          if (mutation.removedNodes.length > 0) focus(container);
        }
      };
      var handleFocusIn = handleFocusIn2, handleFocusOut = handleFocusOut2, handleMutations = handleMutations2;
      document.addEventListener("focusin", handleFocusIn2);
      document.addEventListener("focusout", handleFocusOut2);
      const mutationObserver = new MutationObserver(handleMutations2);
      if (container) mutationObserver.observe(container, { childList: true, subtree: true });
      return () => {
        document.removeEventListener("focusin", handleFocusIn2);
        document.removeEventListener("focusout", handleFocusOut2);
        mutationObserver.disconnect();
      };
    }
  }, [trapped, container, focusScope.paused]);
  React16.useEffect(() => {
    if (container) {
      focusScopesStack.add(focusScope);
      const previouslyFocusedElement = document.activeElement;
      const hasFocusedCandidate = container.contains(previouslyFocusedElement);
      if (!hasFocusedCandidate) {
        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);
        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        container.dispatchEvent(mountEvent);
        if (!mountEvent.defaultPrevented) {
          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });
          if (document.activeElement === previouslyFocusedElement) {
            focus(container);
          }
        }
      }
      return () => {
        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        setTimeout(() => {
          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);
          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          container.dispatchEvent(unmountEvent);
          if (!unmountEvent.defaultPrevented) {
            focus(previouslyFocusedElement ?? document.body, { select: true });
          }
          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          focusScopesStack.remove(focusScope);
        }, 0);
      };
    }
  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);
  const handleKeyDown = React16.useCallback(
    (event) => {
      if (!loop && !trapped) return;
      if (focusScope.paused) return;
      const isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey;
      const focusedElement = document.activeElement;
      if (isTabKey && focusedElement) {
        const container2 = event.currentTarget;
        const [first, last] = getTabbableEdges(container2);
        const hasTabbableElementsInside = first && last;
        if (!hasTabbableElementsInside) {
          if (focusedElement === container2) event.preventDefault();
        } else {
          if (!event.shiftKey && focusedElement === last) {
            event.preventDefault();
            if (loop) focus(first, { select: true });
          } else if (event.shiftKey && focusedElement === first) {
            event.preventDefault();
            if (loop) focus(last, { select: true });
          }
        }
      }
    },
    [loop, trapped, focusScope.paused]
  );
  return (0, import_jsx_runtime66.jsx)(Primitive.div, { tabIndex: -1, ...scopeProps, ref: composedRefs, onKeyDown: handleKeyDown });
});
FocusScope.displayName = FOCUS_SCOPE_NAME;
function focusFirst(candidates, { select = false } = {}) {
  const previouslyFocusedElement = document.activeElement;
  for (const candidate of candidates) {
    focus(candidate, { select });
    if (document.activeElement !== previouslyFocusedElement) return;
  }
}
function getTabbableEdges(container) {
  const candidates = getTabbableCandidates(container);
  const first = findVisible(candidates, container);
  const last = findVisible(candidates.reverse(), container);
  return [first, last];
}
function getTabbableCandidates(container) {
  const nodes = [];
  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode()) nodes.push(walker.currentNode);
  return nodes;
}
function findVisible(elements2, container) {
  for (const element of elements2) {
    if (!isHidden2(element, { upTo: container })) return element;
  }
}
function isHidden2(node, { upTo }) {
  if (getComputedStyle(node).visibility === "hidden") return true;
  while (node) {
    if (upTo !== void 0 && node === upTo) return false;
    if (getComputedStyle(node).display === "none") return true;
    node = node.parentElement;
  }
  return false;
}
function isSelectableInput(element) {
  return element instanceof HTMLInputElement && "select" in element;
}
function focus(element, { select = false } = {}) {
  if (element && element.focus) {
    const previouslyFocusedElement = document.activeElement;
    element.focus({ preventScroll: true });
    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)
      element.select();
  }
}
var focusScopesStack = createFocusScopesStack();
function createFocusScopesStack() {
  let stack = [];
  return {
    add(focusScope) {
      const activeFocusScope = stack[0];
      if (focusScope !== activeFocusScope) {
        activeFocusScope == null ? void 0 : activeFocusScope.pause();
      }
      stack = arrayRemove(stack, focusScope);
      stack.unshift(focusScope);
    },
    remove(focusScope) {
      var _a2;
      stack = arrayRemove(stack, focusScope);
      (_a2 = stack[0]) == null ? void 0 : _a2.resume();
    }
  };
}
function arrayRemove(array, item) {
  const updatedArray = [...array];
  const index = updatedArray.indexOf(item);
  if (index !== -1) {
    updatedArray.splice(index, 1);
  }
  return updatedArray;
}
function removeLinks(items) {
  return items.filter((item) => item.tagName !== "A");
}

// node_modules/@radix-ui/react-portal/dist/index.mjs
var React17 = __toESM(require_react(), 1);
var import_react_dom7 = __toESM(require_react_dom(), 1);
var import_jsx_runtime67 = __toESM(require_jsx_runtime(), 1);
var PORTAL_NAME = "Portal";
var Portal3 = React17.forwardRef((props, forwardedRef) => {
  var _a2;
  const { container: containerProp, ...portalProps } = props;
  const [mounted, setMounted] = React17.useState(false);
  useLayoutEffect22(() => setMounted(true), []);
  const container = containerProp || mounted && ((_a2 = globalThis == null ? void 0 : globalThis.document) == null ? void 0 : _a2.body);
  return container ? import_react_dom7.default.createPortal((0, import_jsx_runtime67.jsx)(Primitive.div, { ...portalProps, ref: forwardedRef }), container) : null;
});
Portal3.displayName = PORTAL_NAME;

// node_modules/@radix-ui/react-presence/dist/index.mjs
var React24 = __toESM(require_react(), 1);
var React18 = __toESM(require_react(), 1);
function useStateMachine(initialState, machine) {
  return React18.useReducer((state, event) => {
    const nextState = machine[state][event];
    return nextState ?? state;
  }, initialState);
}
var Presence = (props) => {
  const { present, children: children3 } = props;
  const presence = usePresence(present);
  const child = typeof children3 === "function" ? children3({ present: presence.isPresent }) : React24.Children.only(children3);
  const ref = useComposedRefs(presence.ref, getElementRef2(child));
  const forceMount = typeof children3 === "function";
  return forceMount || presence.isPresent ? React24.cloneElement(child, { ref }) : null;
};
Presence.displayName = "Presence";
function usePresence(present) {
  const [node, setNode] = React24.useState();
  const stylesRef = React24.useRef(null);
  const prevPresentRef = React24.useRef(present);
  const prevAnimationNameRef = React24.useRef("none");
  const initialState = present ? "mounted" : "unmounted";
  const [state, send] = useStateMachine(initialState, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  React24.useEffect(() => {
    const currentAnimationName = getAnimationName(stylesRef.current);
    prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
  }, [state]);
  useLayoutEffect22(() => {
    const styles = stylesRef.current;
    const wasPresent = prevPresentRef.current;
    const hasPresentChanged = wasPresent !== present;
    if (hasPresentChanged) {
      const prevAnimationName = prevAnimationNameRef.current;
      const currentAnimationName = getAnimationName(styles);
      if (present) {
        send("MOUNT");
      } else if (currentAnimationName === "none" || (styles == null ? void 0 : styles.display) === "none") {
        send("UNMOUNT");
      } else {
        const isAnimating = prevAnimationName !== currentAnimationName;
        if (wasPresent && isAnimating) {
          send("ANIMATION_OUT");
        } else {
          send("UNMOUNT");
        }
      }
      prevPresentRef.current = present;
    }
  }, [present, send]);
  useLayoutEffect22(() => {
    if (node) {
      let timeoutId;
      const ownerWindow = node.ownerDocument.defaultView ?? window;
      const handleAnimationEnd = (event) => {
        const currentAnimationName = getAnimationName(stylesRef.current);
        const isCurrentAnimation = currentAnimationName.includes(event.animationName);
        if (event.target === node && isCurrentAnimation) {
          send("ANIMATION_END");
          if (!prevPresentRef.current) {
            const currentFillMode = node.style.animationFillMode;
            node.style.animationFillMode = "forwards";
            timeoutId = ownerWindow.setTimeout(() => {
              if (node.style.animationFillMode === "forwards") {
                node.style.animationFillMode = currentFillMode;
              }
            });
          }
        }
      };
      const handleAnimationStart = (event) => {
        if (event.target === node) {
          prevAnimationNameRef.current = getAnimationName(stylesRef.current);
        }
      };
      node.addEventListener("animationstart", handleAnimationStart);
      node.addEventListener("animationcancel", handleAnimationEnd);
      node.addEventListener("animationend", handleAnimationEnd);
      return () => {
        ownerWindow.clearTimeout(timeoutId);
        node.removeEventListener("animationstart", handleAnimationStart);
        node.removeEventListener("animationcancel", handleAnimationEnd);
        node.removeEventListener("animationend", handleAnimationEnd);
      };
    } else {
      send("ANIMATION_END");
    }
  }, [node, send]);
  return {
    isPresent: ["mounted", "unmountSuspended"].includes(state),
    ref: React24.useCallback((node2) => {
      stylesRef.current = node2 ? getComputedStyle(node2) : null;
      setNode(node2);
    }, [])
  };
}
function getAnimationName(styles) {
  return (styles == null ? void 0 : styles.animationName) || "none";
}
function getElementRef2(element) {
  var _a2, _b;
  let getter = (_a2 = Object.getOwnPropertyDescriptor(element.props, "ref")) == null ? void 0 : _a2.get;
  let mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.ref;
  }
  getter = (_b = Object.getOwnPropertyDescriptor(element, "ref")) == null ? void 0 : _b.get;
  mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.props.ref;
  }
  return element.props.ref || element.ref;
}

// node_modules/@radix-ui/react-focus-guards/dist/index.mjs
var React19 = __toESM(require_react(), 1);
var count2 = 0;
function useFocusGuards() {
  React19.useEffect(() => {
    const edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
    document.body.insertAdjacentElement("afterbegin", edgeGuards[0] ?? createFocusGuard());
    document.body.insertAdjacentElement("beforeend", edgeGuards[1] ?? createFocusGuard());
    count2++;
    return () => {
      if (count2 === 1) {
        document.querySelectorAll("[data-radix-focus-guard]").forEach((node) => node.remove());
      }
      count2--;
    };
  }, []);
}
function createFocusGuard() {
  const element = document.createElement("span");
  element.setAttribute("data-radix-focus-guard", "");
  element.tabIndex = 0;
  element.style.outline = "none";
  element.style.opacity = "0";
  element.style.position = "fixed";
  element.style.pointerEvents = "none";
  return element;
}

// node_modules/react-remove-scroll/dist/es2015/Combination.js
var React31 = __toESM(require_react());

// node_modules/react-remove-scroll/dist/es2015/UI.js
var React27 = __toESM(require_react());

// node_modules/react-remove-scroll-bar/dist/es2015/constants.js
var zeroRightClassName = "right-scroll-bar-position";
var fullWidthClassName = "width-before-scroll-bar";
var noScrollbarsClassName = "with-scroll-bars-hidden";
var removedBarSizeVariable = "--removed-body-scroll-bar-size";

// node_modules/use-callback-ref/dist/es2015/assignRef.js
function assignRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
  return ref;
}

// node_modules/use-callback-ref/dist/es2015/useRef.js
var import_react167 = __toESM(require_react());
function useCallbackRef2(initialValue, callback) {
  var ref = (0, import_react167.useState)(function() {
    return {
      // value
      value: initialValue,
      // last callback
      callback,
      // "memoized" public interface
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last = ref.value;
          if (last !== value) {
            ref.value = value;
            ref.callback(value, last);
          }
        }
      }
    };
  })[0];
  ref.callback = callback;
  return ref.facade;
}

// node_modules/use-callback-ref/dist/es2015/useMergeRef.js
var React20 = __toESM(require_react());
var useIsomorphicLayoutEffect = typeof window !== "undefined" ? React20.useLayoutEffect : React20.useEffect;
var currentValues = /* @__PURE__ */ new WeakMap();
function useMergeRefs2(refs, defaultValue2) {
  var callbackRef = useCallbackRef2(defaultValue2 || null, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef(ref, newValue);
    });
  });
  useIsomorphicLayoutEffect(function() {
    var oldValue = currentValues.get(callbackRef);
    if (oldValue) {
      var prevRefs_1 = new Set(oldValue);
      var nextRefs_1 = new Set(refs);
      var current_1 = callbackRef.current;
      prevRefs_1.forEach(function(ref) {
        if (!nextRefs_1.has(ref)) {
          assignRef(ref, null);
        }
      });
      nextRefs_1.forEach(function(ref) {
        if (!prevRefs_1.has(ref)) {
          assignRef(ref, current_1);
        }
      });
    }
    currentValues.set(callbackRef, refs);
  }, [refs]);
  return callbackRef;
}

// node_modules/use-sidecar/dist/es2015/hoc.js
var React21 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/hook.js
var import_react168 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/medium.js
function ItoI(a2) {
  return a2;
}
function innerCreateMedium(defaults, middleware) {
  if (middleware === void 0) {
    middleware = ItoI;
  }
  var buffer = [];
  var assigned = false;
  var medium = {
    read: function() {
      if (assigned) {
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      }
      if (buffer.length) {
        return buffer[buffer.length - 1];
      }
      return defaults;
    },
    useMedium: function(data) {
      var item = middleware(data, assigned);
      buffer.push(item);
      return function() {
        buffer = buffer.filter(function(x2) {
          return x2 !== item;
        });
      };
    },
    assignSyncMedium: function(cb) {
      assigned = true;
      while (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
      }
      buffer = {
        push: function(x2) {
          return cb(x2);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb) {
      assigned = true;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
        pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [];
        cbs2.forEach(cb);
      };
      var cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle();
      buffer = {
        push: function(x2) {
          pendingQueue.push(x2);
          cycle();
        },
        filter: function(filter) {
          pendingQueue = pendingQueue.filter(filter);
          return buffer;
        }
      };
    }
  };
  return medium;
}
function createSidecarMedium(options) {
  if (options === void 0) {
    options = {};
  }
  var medium = innerCreateMedium(null);
  medium.options = __assign({ async: true, ssr: false }, options);
  return medium;
}

// node_modules/use-sidecar/dist/es2015/renderProp.js
var React25 = __toESM(require_react());
var import_react169 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/exports.js
var React26 = __toESM(require_react());
var SideCar = function(_a2) {
  var sideCar = _a2.sideCar, rest = __rest(_a2, ["sideCar"]);
  if (!sideCar) {
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  }
  var Target = sideCar.read();
  if (!Target) {
    throw new Error("Sidecar medium not found");
  }
  return React26.createElement(Target, __assign({}, rest));
};
SideCar.isSideCarExport = true;
function exportSidecar(medium, exported) {
  medium.useMedium(exported);
  return SideCar;
}

// node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar = createSidecarMedium();

// node_modules/react-remove-scroll/dist/es2015/UI.js
var nothing = function() {
  return;
};
var RemoveScroll = React27.forwardRef(function(props, parentRef) {
  var ref = React27.useRef(null);
  var _a2 = React27.useState({
    onScrollCapture: nothing,
    onWheelCapture: nothing,
    onTouchMoveCapture: nothing
  }), callbacks = _a2[0], setCallbacks = _a2[1];
  var forwardProps = props.forwardProps, children3 = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noRelative = props.noRelative, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container3 = _b === void 0 ? "div" : _b, gapMode = props.gapMode, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noRelative", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]);
  var SideCar2 = sideCar;
  var containerRef = useMergeRefs2([ref, parentRef]);
  var containerProps = __assign(__assign({}, rest), callbacks);
  return React27.createElement(
    React27.Fragment,
    null,
    enabled && React27.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noRelative, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode }),
    forwardProps ? React27.cloneElement(React27.Children.only(children3), __assign(__assign({}, containerProps), { ref: containerRef })) : React27.createElement(Container3, __assign({}, containerProps, { className, ref: containerRef }), children3)
  );
});
RemoveScroll.defaultProps = {
  enabled: true,
  removeScrollBar: true,
  inert: false
};
RemoveScroll.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};

// node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var React30 = __toESM(require_react());

// node_modules/react-remove-scroll-bar/dist/es2015/component.js
var React29 = __toESM(require_react());

// node_modules/react-style-singleton/dist/es2015/hook.js
var React28 = __toESM(require_react());

// node_modules/get-nonce/dist/es2015/index.js
var currentNonce;
var getNonce = function() {
  if (currentNonce) {
    return currentNonce;
  }
  if (typeof __webpack_nonce__ !== "undefined") {
    return __webpack_nonce__;
  }
  return void 0;
};

// node_modules/react-style-singleton/dist/es2015/singleton.js
function makeStyleTag() {
  if (!document)
    return null;
  var tag = document.createElement("style");
  tag.type = "text/css";
  var nonce = getNonce();
  if (nonce) {
    tag.setAttribute("nonce", nonce);
  }
  return tag;
}
function injectStyles(tag, css) {
  if (tag.styleSheet) {
    tag.styleSheet.cssText = css;
  } else {
    tag.appendChild(document.createTextNode(css));
  }
}
function insertStyleTag(tag) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}
var stylesheetSingleton = function() {
  var counter = 0;
  var stylesheet = null;
  return {
    add: function(style2) {
      if (counter == 0) {
        if (stylesheet = makeStyleTag()) {
          injectStyles(stylesheet, style2);
          insertStyleTag(stylesheet);
        }
      }
      counter++;
    },
    remove: function() {
      counter--;
      if (!counter && stylesheet) {
        stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
        stylesheet = null;
      }
    }
  };
};

// node_modules/react-style-singleton/dist/es2015/hook.js
var styleHookSingleton = function() {
  var sheet = stylesheetSingleton();
  return function(styles, isDynamic) {
    React28.useEffect(function() {
      sheet.add(styles);
      return function() {
        sheet.remove();
      };
    }, [styles && isDynamic]);
  };
};

// node_modules/react-style-singleton/dist/es2015/component.js
var styleSingleton = function() {
  var useStyle = styleHookSingleton();
  var Sheet = function(_a2) {
    var styles = _a2.styles, dynamic = _a2.dynamic;
    useStyle(styles, dynamic);
    return null;
  };
  return Sheet;
};

// node_modules/react-remove-scroll-bar/dist/es2015/utils.js
var zeroGap = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
};
var parse2 = function(x2) {
  return parseInt(x2 || "", 10) || 0;
};
var getOffset = function(gapMode) {
  var cs = window.getComputedStyle(document.body);
  var left = cs[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
  var top = cs[gapMode === "padding" ? "paddingTop" : "marginTop"];
  var right = cs[gapMode === "padding" ? "paddingRight" : "marginRight"];
  return [parse2(left), parse2(top), parse2(right)];
};
var getGapWidth = function(gapMode) {
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  if (typeof window === "undefined") {
    return zeroGap;
  }
  var offsets = getOffset(gapMode);
  var documentWidth = document.documentElement.clientWidth;
  var windowWidth = window.innerWidth;
  return {
    left: offsets[0],
    top: offsets[1],
    right: offsets[2],
    gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
  };
};

// node_modules/react-remove-scroll-bar/dist/es2015/component.js
var Style = styleSingleton();
var lockAttribute = "data-scroll-locked";
var getStyles = function(_a2, allowRelative, gapMode, important) {
  var left = _a2.left, top = _a2.top, right = _a2.right, gap = _a2.gap;
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  return "\n  .".concat(noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body[").concat(lockAttribute, "] {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
    allowRelative && "position: relative ".concat(important, ";"),
    gapMode === "margin" && "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
    gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
  ].filter(Boolean).join(""), "\n  }\n  \n  .").concat(zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(zeroRightClassName, " .").concat(zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " .").concat(fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body[").concat(lockAttribute, "] {\n    ").concat(removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
};
var getCurrentUseCounter = function() {
  var counter = parseInt(document.body.getAttribute(lockAttribute) || "0", 10);
  return isFinite(counter) ? counter : 0;
};
var useLockAttribute = function() {
  React29.useEffect(function() {
    document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());
    return function() {
      var newCounter = getCurrentUseCounter() - 1;
      if (newCounter <= 0) {
        document.body.removeAttribute(lockAttribute);
      } else {
        document.body.setAttribute(lockAttribute, newCounter.toString());
      }
    };
  }, []);
};
var RemoveScrollBar = function(_a2) {
  var noRelative = _a2.noRelative, noImportant = _a2.noImportant, _b = _a2.gapMode, gapMode = _b === void 0 ? "margin" : _b;
  useLockAttribute();
  var gap = React29.useMemo(function() {
    return getGapWidth(gapMode);
  }, [gapMode]);
  return React29.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
};

// node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported = false;
if (typeof window !== "undefined") {
  try {
    options = Object.defineProperty({}, "passive", {
      get: function() {
        passiveSupported = true;
        return true;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (err) {
    passiveSupported = false;
  }
}
var options;
var nonPassive = passiveSupported ? { passive: false } : false;

// node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var alwaysContainsScroll = function(node) {
  return node.tagName === "TEXTAREA";
};
var elementCanBeScrolled = function(node, overflow) {
  if (!(node instanceof Element)) {
    return false;
  }
  var styles = window.getComputedStyle(node);
  return (
    // not-not-scrollable
    styles[overflow] !== "hidden" && // contains scroll inside self
    !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === "visible")
  );
};
var elementCouldBeVScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowY");
};
var elementCouldBeHScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowX");
};
var locationCouldBeScrolled = function(axis, node) {
  var ownerDocument = node.ownerDocument;
  var current = node;
  do {
    if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
      current = current.host;
    }
    var isScrollable2 = elementCouldBeScrolled(axis, current);
    if (isScrollable2) {
      var _a2 = getScrollVariables(axis, current), scrollHeight = _a2[1], clientHeight = _a2[2];
      if (scrollHeight > clientHeight) {
        return true;
      }
    }
    current = current.parentNode;
  } while (current && current !== ownerDocument.body);
  return false;
};
var getVScrollVariables = function(_a2) {
  var scrollTop = _a2.scrollTop, scrollHeight = _a2.scrollHeight, clientHeight = _a2.clientHeight;
  return [
    scrollTop,
    scrollHeight,
    clientHeight
  ];
};
var getHScrollVariables = function(_a2) {
  var scrollLeft = _a2.scrollLeft, scrollWidth = _a2.scrollWidth, clientWidth = _a2.clientWidth;
  return [
    scrollLeft,
    scrollWidth,
    clientWidth
  ];
};
var elementCouldBeScrolled = function(axis, node) {
  return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
};
var getScrollVariables = function(axis, node) {
  return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
};
var getDirectionFactor = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
};
var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
  var delta = directionFactor * sourceDelta;
  var target = event.target;
  var targetInLock = endTarget.contains(target);
  var shouldCancelScroll = false;
  var isDeltaPositive = delta > 0;
  var availableScroll = 0;
  var availableScrollTop = 0;
  do {
    if (!target) {
      break;
    }
    var _a2 = getScrollVariables(axis, target), position = _a2[0], scroll_1 = _a2[1], capacity = _a2[2];
    var elementScroll = scroll_1 - capacity - directionFactor * position;
    if (position || elementScroll) {
      if (elementCouldBeScrolled(axis, target)) {
        availableScroll += elementScroll;
        availableScrollTop += position;
      }
    }
    var parent_1 = target.parentNode;
    target = parent_1 && parent_1.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? parent_1.host : parent_1;
  } while (
    // portaled content
    !targetInLock && target !== document.body || // self content
    targetInLock && (endTarget.contains(target) || endTarget === target)
  );
  if (isDeltaPositive && (noOverscroll && Math.abs(availableScroll) < 1 || !noOverscroll && delta > availableScroll)) {
    shouldCancelScroll = true;
  } else if (!isDeltaPositive && (noOverscroll && Math.abs(availableScrollTop) < 1 || !noOverscroll && -delta > availableScrollTop)) {
    shouldCancelScroll = true;
  }
  return shouldCancelScroll;
};

// node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var getTouchXY = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY = function(event) {
  return [event.deltaX, event.deltaY];
};
var extractRef = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var deltaCompare = function(x2, y) {
  return x2[0] === y[0] && x2[1] === y[1];
};
var generateStyle = function(id) {
  return "\n  .block-interactivity-".concat(id, " {pointer-events: none;}\n  .allow-interactivity-").concat(id, " {pointer-events: all;}\n");
};
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = React30.useRef([]);
  var touchStartRef = React30.useRef([0, 0]);
  var activeAxis = React30.useRef();
  var id = React30.useState(idCounter++)[0];
  var Style2 = React30.useState(styleSingleton)[0];
  var lastProps = React30.useRef(props);
  React30.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  React30.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);
      allow_1.forEach(function(el) {
        return el.classList.add("allow-interactivity-".concat(id));
      });
      return function() {
        document.body.classList.remove("block-interactivity-".concat(id));
        allow_1.forEach(function(el) {
          return el.classList.remove("allow-interactivity-".concat(id));
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React30.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2 || event.type === "wheel" && event.ctrlKey) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range") {
      return false;
    }
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = React30.useCallback(function(_event) {
    var event = _event;
    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style2) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event);
    var sourceEvent = shouldPreventQueue.current.filter(function(e) {
      return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta);
    })[0];
    if (sourceEvent && sourceEvent.should) {
      if (event.cancelable) {
        event.preventDefault();
      }
      return;
    }
    if (!sourceEvent) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
        return node.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        if (event.cancelable) {
          event.preventDefault();
        }
      }
    }
  }, []);
  var shouldCancel = React30.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should, shadowParent: getOutermostShadowParent(target) };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e) {
        return e !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = React30.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = React30.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = React30.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React30.useEffect(function() {
    lockStack.push(Style2);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive);
    document.addEventListener("touchmove", shouldPrevent, nonPassive);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive);
    return function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style2;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React30.createElement(
    React30.Fragment,
    null,
    inert ? React30.createElement(Style2, { styles: generateStyle(id) }) : null,
    removeScrollBar ? React30.createElement(RemoveScrollBar, { noRelative: props.noRelative, gapMode: props.gapMode }) : null
  );
}
function getOutermostShadowParent(node) {
  var shadowParent = null;
  while (node !== null) {
    if (node instanceof ShadowRoot) {
      shadowParent = node.host;
      node = node.host;
    }
    node = node.parentNode;
  }
  return shadowParent;
}

// node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default = exportSidecar(effectCar, RemoveScrollSideCar);

// node_modules/react-remove-scroll/dist/es2015/Combination.js
var ReactRemoveScroll = React31.forwardRef(function(props, ref) {
  return React31.createElement(RemoveScroll, __assign({}, props, { ref, sideCar: sidecar_default }));
});
ReactRemoveScroll.classNames = RemoveScroll.classNames;
var Combination_default = ReactRemoveScroll;

// node_modules/aria-hidden/dist/es2015/index.js
var getDefaultParent = function(originalTarget) {
  if (typeof document === "undefined") {
    return null;
  }
  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
  return sampleTarget.ownerDocument.body;
};
var counterMap = /* @__PURE__ */ new WeakMap();
var uncontrolledNodes = /* @__PURE__ */ new WeakMap();
var markerMap = {};
var lockCount = 0;
var unwrapHost = function(node) {
  return node && (node.host || unwrapHost(node.parentNode));
};
var correctTargets = function(parent, targets) {
  return targets.map(function(target) {
    if (parent.contains(target)) {
      return target;
    }
    var correctedTarget = unwrapHost(target);
    if (correctedTarget && parent.contains(correctedTarget)) {
      return correctedTarget;
    }
    console.error("aria-hidden", target, "in not contained inside", parent, ". Doing nothing");
    return null;
  }).filter(function(x2) {
    return Boolean(x2);
  });
};
var applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
  var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  if (!markerMap[markerName]) {
    markerMap[markerName] = /* @__PURE__ */ new WeakMap();
  }
  var markerCounter = markerMap[markerName];
  var hiddenNodes = [];
  var elementsToKeep = /* @__PURE__ */ new Set();
  var elementsToStop = new Set(targets);
  var keep = function(el) {
    if (!el || elementsToKeep.has(el)) {
      return;
    }
    elementsToKeep.add(el);
    keep(el.parentNode);
  };
  targets.forEach(keep);
  var deep = function(parent) {
    if (!parent || elementsToStop.has(parent)) {
      return;
    }
    Array.prototype.forEach.call(parent.children, function(node) {
      if (elementsToKeep.has(node)) {
        deep(node);
      } else {
        try {
          var attr = node.getAttribute(controlAttribute);
          var alreadyHidden = attr !== null && attr !== "false";
          var counterValue = (counterMap.get(node) || 0) + 1;
          var markerValue = (markerCounter.get(node) || 0) + 1;
          counterMap.set(node, counterValue);
          markerCounter.set(node, markerValue);
          hiddenNodes.push(node);
          if (counterValue === 1 && alreadyHidden) {
            uncontrolledNodes.set(node, true);
          }
          if (markerValue === 1) {
            node.setAttribute(markerName, "true");
          }
          if (!alreadyHidden) {
            node.setAttribute(controlAttribute, "true");
          }
        } catch (e) {
          console.error("aria-hidden: cannot operate on ", node, e);
        }
      }
    });
  };
  deep(parentNode);
  elementsToKeep.clear();
  lockCount++;
  return function() {
    hiddenNodes.forEach(function(node) {
      var counterValue = counterMap.get(node) - 1;
      var markerValue = markerCounter.get(node) - 1;
      counterMap.set(node, counterValue);
      markerCounter.set(node, markerValue);
      if (!counterValue) {
        if (!uncontrolledNodes.has(node)) {
          node.removeAttribute(controlAttribute);
        }
        uncontrolledNodes.delete(node);
      }
      if (!markerValue) {
        node.removeAttribute(markerName);
      }
    });
    lockCount--;
    if (!lockCount) {
      counterMap = /* @__PURE__ */ new WeakMap();
      counterMap = /* @__PURE__ */ new WeakMap();
      uncontrolledNodes = /* @__PURE__ */ new WeakMap();
      markerMap = {};
    }
  };
};
var hideOthers = function(originalTarget, parentNode, markerName) {
  if (markerName === void 0) {
    markerName = "data-aria-hidden";
  }
  var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  var activeParentNode = parentNode || getDefaultParent(originalTarget);
  if (!activeParentNode) {
    return function() {
      return null;
    };
  }
  targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll("[aria-live], script")));
  return applyAttributeToOthers(targets, activeParentNode, markerName, "aria-hidden");
};

// node_modules/@radix-ui/react-dialog/dist/index.mjs
var import_jsx_runtime68 = __toESM(require_jsx_runtime(), 1);
var DIALOG_NAME = "Dialog";
var [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);
var [DialogProvider2, useDialogContext2] = createDialogContext(DIALOG_NAME);
var Dialog3 = (props) => {
  const {
    __scopeDialog,
    children: children3,
    open: openProp,
    defaultOpen,
    onOpenChange,
    modal = true
  } = props;
  const triggerRef = React33.useRef(null);
  const contentRef = React33.useRef(null);
  const [open, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen ?? false,
    onChange: onOpenChange,
    caller: DIALOG_NAME
  });
  return (0, import_jsx_runtime68.jsx)(
    DialogProvider2,
    {
      scope: __scopeDialog,
      triggerRef,
      contentRef,
      contentId: useId3(),
      titleId: useId3(),
      descriptionId: useId3(),
      open,
      onOpenChange: setOpen,
      onOpenToggle: React33.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
      modal,
      children: children3
    }
  );
};
Dialog3.displayName = DIALOG_NAME;
var TRIGGER_NAME = "DialogTrigger";
var DialogTrigger = React33.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...triggerProps } = props;
    const context = useDialogContext2(TRIGGER_NAME, __scopeDialog);
    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);
    return (0, import_jsx_runtime68.jsx)(
      Primitive.button,
      {
        type: "button",
        "aria-haspopup": "dialog",
        "aria-expanded": context.open,
        "aria-controls": context.contentId,
        "data-state": getState(context.open),
        ...triggerProps,
        ref: composedTriggerRef,
        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)
      }
    );
  }
);
DialogTrigger.displayName = TRIGGER_NAME;
var PORTAL_NAME2 = "DialogPortal";
var [PortalProvider, usePortalContext] = createDialogContext(PORTAL_NAME2, {
  forceMount: void 0
});
var DialogPortal = (props) => {
  const { __scopeDialog, forceMount, children: children3, container } = props;
  const context = useDialogContext2(PORTAL_NAME2, __scopeDialog);
  return (0, import_jsx_runtime68.jsx)(PortalProvider, { scope: __scopeDialog, forceMount, children: React33.Children.map(children3, (child) => (0, import_jsx_runtime68.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime68.jsx)(Portal3, { asChild: true, container, children: child }) })) });
};
DialogPortal.displayName = PORTAL_NAME2;
var OVERLAY_NAME = "DialogOverlay";
var DialogOverlay = React33.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);
    const { forceMount = portalContext.forceMount, ...overlayProps } = props;
    const context = useDialogContext2(OVERLAY_NAME, props.__scopeDialog);
    return context.modal ? (0, import_jsx_runtime68.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime68.jsx)(DialogOverlayImpl, { ...overlayProps, ref: forwardedRef }) }) : null;
  }
);
DialogOverlay.displayName = OVERLAY_NAME;
var Slot2 = createSlot("DialogOverlay.RemoveScroll");
var DialogOverlayImpl = React33.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...overlayProps } = props;
    const context = useDialogContext2(OVERLAY_NAME, __scopeDialog);
    return (
      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
      // ie. when `Overlay` and `Content` are siblings
      (0, import_jsx_runtime68.jsx)(Combination_default, { as: Slot2, allowPinchZoom: true, shards: [context.contentRef], children: (0, import_jsx_runtime68.jsx)(
        Primitive.div,
        {
          "data-state": getState(context.open),
          ...overlayProps,
          ref: forwardedRef,
          style: { pointerEvents: "auto", ...overlayProps.style }
        }
      ) })
    );
  }
);
var CONTENT_NAME = "DialogContent";
var DialogContent = React33.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);
    const { forceMount = portalContext.forceMount, ...contentProps } = props;
    const context = useDialogContext2(CONTENT_NAME, props.__scopeDialog);
    return (0, import_jsx_runtime68.jsx)(Presence, { present: forceMount || context.open, children: context.modal ? (0, import_jsx_runtime68.jsx)(DialogContentModal, { ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime68.jsx)(DialogContentNonModal, { ...contentProps, ref: forwardedRef }) });
  }
);
DialogContent.displayName = CONTENT_NAME;
var DialogContentModal = React33.forwardRef(
  (props, forwardedRef) => {
    const context = useDialogContext2(CONTENT_NAME, props.__scopeDialog);
    const contentRef = React33.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);
    React33.useEffect(() => {
      const content = contentRef.current;
      if (content) return hideOthers(content);
    }, []);
    return (0, import_jsx_runtime68.jsx)(
      DialogContentImpl,
      {
        ...props,
        ref: composedRefs,
        trapFocus: context.open,
        disableOutsidePointerEvents: true,
        onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {
          var _a2;
          event.preventDefault();
          (_a2 = context.triggerRef.current) == null ? void 0 : _a2.focus();
        }),
        onPointerDownOutside: composeEventHandlers(props.onPointerDownOutside, (event) => {
          const originalEvent = event.detail.originalEvent;
          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
          if (isRightClick) event.preventDefault();
        }),
        onFocusOutside: composeEventHandlers(
          props.onFocusOutside,
          (event) => event.preventDefault()
        )
      }
    );
  }
);
var DialogContentNonModal = React33.forwardRef(
  (props, forwardedRef) => {
    const context = useDialogContext2(CONTENT_NAME, props.__scopeDialog);
    const hasInteractedOutsideRef = React33.useRef(false);
    const hasPointerDownOutsideRef = React33.useRef(false);
    return (0, import_jsx_runtime68.jsx)(
      DialogContentImpl,
      {
        ...props,
        ref: forwardedRef,
        trapFocus: false,
        disableOutsidePointerEvents: false,
        onCloseAutoFocus: (event) => {
          var _a2, _b;
          (_a2 = props.onCloseAutoFocus) == null ? void 0 : _a2.call(props, event);
          if (!event.defaultPrevented) {
            if (!hasInteractedOutsideRef.current) (_b = context.triggerRef.current) == null ? void 0 : _b.focus();
            event.preventDefault();
          }
          hasInteractedOutsideRef.current = false;
          hasPointerDownOutsideRef.current = false;
        },
        onInteractOutside: (event) => {
          var _a2, _b;
          (_a2 = props.onInteractOutside) == null ? void 0 : _a2.call(props, event);
          if (!event.defaultPrevented) {
            hasInteractedOutsideRef.current = true;
            if (event.detail.originalEvent.type === "pointerdown") {
              hasPointerDownOutsideRef.current = true;
            }
          }
          const target = event.target;
          const targetIsTrigger = (_b = context.triggerRef.current) == null ? void 0 : _b.contains(target);
          if (targetIsTrigger) event.preventDefault();
          if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current) {
            event.preventDefault();
          }
        }
      }
    );
  }
);
var DialogContentImpl = React33.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;
    const context = useDialogContext2(CONTENT_NAME, __scopeDialog);
    const contentRef = React33.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, contentRef);
    useFocusGuards();
    return (0, import_jsx_runtime68.jsxs)(import_jsx_runtime68.Fragment, { children: [
      (0, import_jsx_runtime68.jsx)(
        FocusScope,
        {
          asChild: true,
          loop: true,
          trapped: trapFocus,
          onMountAutoFocus: onOpenAutoFocus,
          onUnmountAutoFocus: onCloseAutoFocus,
          children: (0, import_jsx_runtime68.jsx)(
            DismissableLayer,
            {
              role: "dialog",
              id: context.contentId,
              "aria-describedby": context.descriptionId,
              "aria-labelledby": context.titleId,
              "data-state": getState(context.open),
              ...contentProps,
              ref: composedRefs,
              onDismiss: () => context.onOpenChange(false)
            }
          )
        }
      ),
      (0, import_jsx_runtime68.jsxs)(import_jsx_runtime68.Fragment, { children: [
        (0, import_jsx_runtime68.jsx)(TitleWarning, { titleId: context.titleId }),
        (0, import_jsx_runtime68.jsx)(DescriptionWarning, { contentRef, descriptionId: context.descriptionId })
      ] })
    ] });
  }
);
var TITLE_NAME = "DialogTitle";
var DialogTitle = React33.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...titleProps } = props;
    const context = useDialogContext2(TITLE_NAME, __scopeDialog);
    return (0, import_jsx_runtime68.jsx)(Primitive.h2, { id: context.titleId, ...titleProps, ref: forwardedRef });
  }
);
DialogTitle.displayName = TITLE_NAME;
var DESCRIPTION_NAME = "DialogDescription";
var DialogDescription3 = React33.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...descriptionProps } = props;
    const context = useDialogContext2(DESCRIPTION_NAME, __scopeDialog);
    return (0, import_jsx_runtime68.jsx)(Primitive.p, { id: context.descriptionId, ...descriptionProps, ref: forwardedRef });
  }
);
DialogDescription3.displayName = DESCRIPTION_NAME;
var CLOSE_NAME = "DialogClose";
var DialogClose = React33.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...closeProps } = props;
    const context = useDialogContext2(CLOSE_NAME, __scopeDialog);
    return (0, import_jsx_runtime68.jsx)(
      Primitive.button,
      {
        type: "button",
        ...closeProps,
        ref: forwardedRef,
        onClick: composeEventHandlers(props.onClick, () => context.onOpenChange(false))
      }
    );
  }
);
DialogClose.displayName = CLOSE_NAME;
function getState(open) {
  return open ? "open" : "closed";
}
var TITLE_WARNING_NAME = "DialogTitleWarning";
var [WarningProvider, useWarningContext] = createContext22(TITLE_WARNING_NAME, {
  contentName: CONTENT_NAME,
  titleName: TITLE_NAME,
  docsSlug: "dialog"
});
var TitleWarning = ({ titleId }) => {
  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);
  const MESSAGE = `\`${titleWarningContext.contentName}\` requires a \`${titleWarningContext.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${titleWarningContext.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;
  React33.useEffect(() => {
    if (titleId) {
      const hasTitle = document.getElementById(titleId);
      if (!hasTitle) console.error(MESSAGE);
    }
  }, [MESSAGE, titleId]);
  return null;
};
var DESCRIPTION_WARNING_NAME = "DialogDescriptionWarning";
var DescriptionWarning = ({ contentRef, descriptionId }) => {
  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);
  const MESSAGE = `Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${descriptionWarningContext.contentName}}.`;
  React33.useEffect(() => {
    var _a2;
    const describedById = (_a2 = contentRef.current) == null ? void 0 : _a2.getAttribute("aria-describedby");
    if (descriptionId && describedById) {
      const hasDescription = document.getElementById(descriptionId);
      if (!hasDescription) console.warn(MESSAGE);
    }
  }, [MESSAGE, contentRef, descriptionId]);
  return null;
};
var Root = Dialog3;
var Trigger = DialogTrigger;
var Portal4 = DialogPortal;
var Overlay = DialogOverlay;
var Content = DialogContent;
var Title = DialogTitle;
var Description = DialogDescription3;
var Close = DialogClose;

// node_modules/vaul/dist/index.mjs
var React34 = __toESM(require_react(), 1);
var import_react170 = __toESM(require_react(), 1);
function __insertCSS(code) {
  if (!code || typeof document == "undefined") return;
  let head = document.head || document.getElementsByTagName("head")[0];
  let style2 = document.createElement("style");
  style2.type = "text/css";
  head.appendChild(style2);
  style2.styleSheet ? style2.styleSheet.cssText = code : style2.appendChild(document.createTextNode(code));
}
var DrawerContext = import_react170.default.createContext({
  drawerRef: {
    current: null
  },
  overlayRef: {
    current: null
  },
  onPress: () => {
  },
  onRelease: () => {
  },
  onDrag: () => {
  },
  onNestedDrag: () => {
  },
  onNestedOpenChange: () => {
  },
  onNestedRelease: () => {
  },
  openProp: void 0,
  dismissible: false,
  isOpen: false,
  isDragging: false,
  keyboardIsOpen: {
    current: false
  },
  snapPointsOffset: null,
  snapPoints: null,
  handleOnly: false,
  modal: false,
  shouldFade: false,
  activeSnapPoint: null,
  onOpenChange: () => {
  },
  setActiveSnapPoint: () => {
  },
  closeDrawer: () => {
  },
  direction: "bottom",
  shouldScaleBackground: false,
  setBackgroundColorOnScale: true,
  noBodyStyles: false,
  container: null
});
var useDrawerContext = () => {
  const context = import_react170.default.useContext(DrawerContext);
  if (!context) {
    throw new Error("useDrawerContext must be used within a Drawer.Root");
  }
  return context;
};
__insertCSS("[data-vaul-drawer]{touch-action:none;will-change:transform;transition:transform .5s cubic-bezier(.32, .72, 0, 1);animation-duration:.5s;animation-timing-function:cubic-bezier(0.32,0.72,0,1)}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=bottom][data-state=open]{animation-name:slideFromBottom}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=bottom][data-state=closed]{animation-name:slideToBottom}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=top][data-state=open]{animation-name:slideFromTop}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=top][data-state=closed]{animation-name:slideToTop}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=left][data-state=open]{animation-name:slideFromLeft}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=left][data-state=closed]{animation-name:slideToLeft}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=right][data-state=open]{animation-name:slideFromRight}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=right][data-state=closed]{animation-name:slideToRight}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=bottom]{transform:translate3d(0,100%,0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=top]{transform:translate3d(0,-100%,0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=left]{transform:translate3d(-100%,0,0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=right]{transform:translate3d(100%,0,0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=top]{transform:translate3d(0,var(--snap-point-height,0),0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=bottom]{transform:translate3d(0,var(--snap-point-height,0),0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=left]{transform:translate3d(var(--snap-point-height,0),0,0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=right]{transform:translate3d(var(--snap-point-height,0),0,0)}[data-vaul-overlay][data-vaul-snap-points=false]{animation-duration:.5s;animation-timing-function:cubic-bezier(0.32,0.72,0,1)}[data-vaul-overlay][data-vaul-snap-points=false][data-state=open]{animation-name:fadeIn}[data-vaul-overlay][data-state=closed]{animation-name:fadeOut}[data-vaul-overlay][data-vaul-snap-points=true]{opacity:0;transition:opacity .5s cubic-bezier(.32, .72, 0, 1)}[data-vaul-overlay][data-vaul-snap-points=true]{opacity:1}[data-vaul-drawer]:not([data-vaul-custom-container=true])::after{content:'';position:absolute;background:inherit;background-color:inherit}[data-vaul-drawer][data-vaul-drawer-direction=top]::after{top:initial;bottom:100%;left:0;right:0;height:200%}[data-vaul-drawer][data-vaul-drawer-direction=bottom]::after{top:100%;bottom:initial;left:0;right:0;height:200%}[data-vaul-drawer][data-vaul-drawer-direction=left]::after{left:initial;right:100%;top:0;bottom:0;width:200%}[data-vaul-drawer][data-vaul-drawer-direction=right]::after{left:100%;right:initial;top:0;bottom:0;width:200%}[data-vaul-overlay][data-vaul-snap-points=true]:not([data-vaul-snap-points-overlay=true]):not(\n[data-state=closed]\n){opacity:0}[data-vaul-overlay][data-vaul-snap-points-overlay=true]{opacity:1}[data-vaul-handle]{display:block;position:relative;opacity:.7;background:#e2e2e4;margin-left:auto;margin-right:auto;height:5px;width:32px;border-radius:1rem;touch-action:pan-y}[data-vaul-handle]:active,[data-vaul-handle]:hover{opacity:1}[data-vaul-handle-hitarea]{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:max(100%,2.75rem);height:max(100%,2.75rem);touch-action:inherit}@media (hover:hover) and (pointer:fine){[data-vaul-drawer]{user-select:none}}@media (pointer:fine){[data-vaul-handle-hitarea]:{width:100%;height:100%}}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes fadeOut{to{opacity:0}}@keyframes slideFromBottom{from{transform:translate3d(0,100%,0)}to{transform:translate3d(0,0,0)}}@keyframes slideToBottom{to{transform:translate3d(0,100%,0)}}@keyframes slideFromTop{from{transform:translate3d(0,-100%,0)}to{transform:translate3d(0,0,0)}}@keyframes slideToTop{to{transform:translate3d(0,-100%,0)}}@keyframes slideFromLeft{from{transform:translate3d(-100%,0,0)}to{transform:translate3d(0,0,0)}}@keyframes slideToLeft{to{transform:translate3d(-100%,0,0)}}@keyframes slideFromRight{from{transform:translate3d(100%,0,0)}to{transform:translate3d(0,0,0)}}@keyframes slideToRight{to{transform:translate3d(100%,0,0)}}");
var useIsomorphicLayoutEffect2 = typeof window !== "undefined" ? import_react170.useLayoutEffect : import_react170.useEffect;
function chain$1(...callbacks) {
  return (...args) => {
    for (let callback of callbacks) {
      if (typeof callback === "function") {
        callback(...args);
      }
    }
  };
}
function isMac2() {
  return testPlatform(/^Mac/);
}
function isIPhone() {
  return testPlatform(/^iPhone/);
}
function isIPad() {
  return testPlatform(/^iPad/) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  isMac2() && navigator.maxTouchPoints > 1;
}
function isIOS() {
  return isIPhone() || isIPad();
}
function testPlatform(re) {
  return typeof window !== "undefined" && window.navigator != null ? re.test(window.navigator.platform) : void 0;
}
var visualViewport = typeof document !== "undefined" && window.visualViewport;
function isScrollable(node) {
  let style2 = window.getComputedStyle(node);
  return /(auto|scroll)/.test(style2.overflow + style2.overflowX + style2.overflowY);
}
function getScrollParent(node) {
  if (isScrollable(node)) {
    node = node.parentElement;
  }
  while (node && !isScrollable(node)) {
    node = node.parentElement;
  }
  return node || document.scrollingElement || document.documentElement;
}
var nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
var preventScrollCount = 0;
var restore;
function usePreventScroll(options = {}) {
  let { isDisabled } = options;
  useIsomorphicLayoutEffect2(() => {
    if (isDisabled) {
      return;
    }
    preventScrollCount++;
    if (preventScrollCount === 1) {
      if (isIOS()) {
        restore = preventScrollMobileSafari();
      } else {
        restore = preventScrollStandard();
      }
    }
    return () => {
      preventScrollCount--;
      if (preventScrollCount === 0) {
        restore();
      }
    };
  }, [
    isDisabled
  ]);
}
function preventScrollStandard() {
  return chain$1(setStyle(document.documentElement, "paddingRight", `${window.innerWidth - document.documentElement.clientWidth}px`));
}
function preventScrollMobileSafari() {
  let scrollable;
  let lastY = 0;
  let onTouchStart = (e) => {
    scrollable = getScrollParent(e.target);
    if (scrollable === document.documentElement && scrollable === document.body) {
      return;
    }
    lastY = e.changedTouches[0].pageY;
  };
  let onTouchMove = (e) => {
    if (!scrollable || scrollable === document.documentElement || scrollable === document.body) {
      e.preventDefault();
      return;
    }
    let y = e.changedTouches[0].pageY;
    let scrollTop = scrollable.scrollTop;
    let bottom = scrollable.scrollHeight - scrollable.clientHeight;
    if (bottom === 0) {
      return;
    }
    if (scrollTop <= 0 && y > lastY || scrollTop >= bottom && y < lastY) {
      e.preventDefault();
    }
    lastY = y;
  };
  let onTouchEnd = (e) => {
    let target = e.target;
    if (isInput(target) && target !== document.activeElement) {
      e.preventDefault();
      target.style.transform = "translateY(-2000px)";
      target.focus();
      requestAnimationFrame(() => {
        target.style.transform = "";
      });
    }
  };
  let onFocus = (e) => {
    let target = e.target;
    if (isInput(target)) {
      target.style.transform = "translateY(-2000px)";
      requestAnimationFrame(() => {
        target.style.transform = "";
        if (visualViewport) {
          if (visualViewport.height < window.innerHeight) {
            requestAnimationFrame(() => {
              scrollIntoView(target);
            });
          } else {
            visualViewport.addEventListener("resize", () => scrollIntoView(target), {
              once: true
            });
          }
        }
      });
    }
  };
  let onWindowScroll = () => {
    window.scrollTo(0, 0);
  };
  let scrollX = window.pageXOffset;
  let scrollY = window.pageYOffset;
  let restoreStyles = chain$1(setStyle(document.documentElement, "paddingRight", `${window.innerWidth - document.documentElement.clientWidth}px`));
  window.scrollTo(0, 0);
  let removeEvents = chain$1(addEvent(document, "touchstart", onTouchStart, {
    passive: false,
    capture: true
  }), addEvent(document, "touchmove", onTouchMove, {
    passive: false,
    capture: true
  }), addEvent(document, "touchend", onTouchEnd, {
    passive: false,
    capture: true
  }), addEvent(document, "focus", onFocus, true), addEvent(window, "scroll", onWindowScroll));
  return () => {
    restoreStyles();
    removeEvents();
    window.scrollTo(scrollX, scrollY);
  };
}
function setStyle(element, style2, value) {
  let cur = element.style[style2];
  element.style[style2] = value;
  return () => {
    element.style[style2] = cur;
  };
}
function addEvent(target, event, handler, options) {
  target.addEventListener(event, handler, options);
  return () => {
    target.removeEventListener(event, handler, options);
  };
}
function scrollIntoView(target) {
  let root = document.scrollingElement || document.documentElement;
  while (target && target !== root) {
    let scrollable = getScrollParent(target);
    if (scrollable !== document.documentElement && scrollable !== document.body && scrollable !== target) {
      let scrollableTop = scrollable.getBoundingClientRect().top;
      let targetTop = target.getBoundingClientRect().top;
      let targetBottom = target.getBoundingClientRect().bottom;
      const keyboardHeight = scrollable.getBoundingClientRect().bottom;
      if (targetBottom > keyboardHeight) {
        scrollable.scrollTop += targetTop - scrollableTop;
      }
    }
    target = scrollable.parentElement;
  }
}
function isInput(target) {
  return target instanceof HTMLInputElement && !nonTextInputTypes.has(target.type) || target instanceof HTMLTextAreaElement || target instanceof HTMLElement && target.isContentEditable;
}
function setRef4(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref !== null && ref !== void 0) {
    ref.current = value;
  }
}
function composeRefs2(...refs) {
  return (node) => refs.forEach((ref) => setRef4(ref, node));
}
function useComposedRefs2(...refs) {
  return React34.useCallback(composeRefs2(...refs), refs);
}
var cache = /* @__PURE__ */ new WeakMap();
function set(el, styles, ignoreCache = false) {
  if (!el || !(el instanceof HTMLElement)) return;
  let originalStyles = {};
  Object.entries(styles).forEach(([key, value]) => {
    if (key.startsWith("--")) {
      el.style.setProperty(key, value);
      return;
    }
    originalStyles[key] = el.style[key];
    el.style[key] = value;
  });
  if (ignoreCache) return;
  cache.set(el, originalStyles);
}
function reset(el, prop) {
  if (!el || !(el instanceof HTMLElement)) return;
  let originalStyles = cache.get(el);
  if (!originalStyles) {
    return;
  }
  {
    el.style[prop] = originalStyles[prop];
  }
}
var isVertical = (direction) => {
  switch (direction) {
    case "top":
    case "bottom":
      return true;
    case "left":
    case "right":
      return false;
    default:
      return direction;
  }
};
function getTranslate(element, direction) {
  if (!element) {
    return null;
  }
  const style2 = window.getComputedStyle(element);
  const transform = (
    // @ts-ignore
    style2.transform || style2.webkitTransform || style2.mozTransform
  );
  let mat = transform.match(/^matrix3d\((.+)\)$/);
  if (mat) {
    return parseFloat(mat[1].split(", ")[isVertical(direction) ? 13 : 12]);
  }
  mat = transform.match(/^matrix\((.+)\)$/);
  return mat ? parseFloat(mat[1].split(", ")[isVertical(direction) ? 5 : 4]) : null;
}
function dampenValue(v2) {
  return 8 * (Math.log(v2 + 1) - 2);
}
function assignStyle2(element, style2) {
  if (!element) return () => {
  };
  const prevStyle = element.style.cssText;
  Object.assign(element.style, style2);
  return () => {
    element.style.cssText = prevStyle;
  };
}
function chain3(...fns) {
  return (...args) => {
    for (const fn of fns) {
      if (typeof fn === "function") {
        fn(...args);
      }
    }
  };
}
var TRANSITIONS = {
  DURATION: 0.5,
  EASE: [
    0.32,
    0.72,
    0,
    1
  ]
};
var VELOCITY_THRESHOLD = 0.4;
var CLOSE_THRESHOLD = 0.25;
var SCROLL_LOCK_TIMEOUT = 100;
var BORDER_RADIUS = 8;
var NESTED_DISPLACEMENT = 16;
var WINDOW_TOP_OFFSET = 26;
var DRAG_CLASS = "vaul-dragging";
function useCallbackRef3(callback) {
  const callbackRef = import_react170.default.useRef(callback);
  import_react170.default.useEffect(() => {
    callbackRef.current = callback;
  });
  return import_react170.default.useMemo(() => (...args) => callbackRef.current == null ? void 0 : callbackRef.current.call(callbackRef, ...args), []);
}
function useUncontrolledState2({ defaultProp, onChange }) {
  const uncontrolledState = import_react170.default.useState(defaultProp);
  const [value] = uncontrolledState;
  const prevValueRef = import_react170.default.useRef(value);
  const handleChange = useCallbackRef3(onChange);
  import_react170.default.useEffect(() => {
    if (prevValueRef.current !== value) {
      handleChange(value);
      prevValueRef.current = value;
    }
  }, [
    value,
    prevValueRef,
    handleChange
  ]);
  return uncontrolledState;
}
function useControllableState2({ prop, defaultProp, onChange = () => {
} }) {
  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState2({
    defaultProp,
    onChange
  });
  const isControlled = prop !== void 0;
  const value = isControlled ? prop : uncontrolledProp;
  const handleChange = useCallbackRef3(onChange);
  const setValue = import_react170.default.useCallback((nextValue) => {
    if (isControlled) {
      const setter = nextValue;
      const value2 = typeof nextValue === "function" ? setter(prop) : nextValue;
      if (value2 !== prop) handleChange(value2);
    } else {
      setUncontrolledProp(nextValue);
    }
  }, [
    isControlled,
    prop,
    setUncontrolledProp,
    handleChange
  ]);
  return [
    value,
    setValue
  ];
}
function useSnapPoints({ activeSnapPointProp, setActiveSnapPointProp, snapPoints, drawerRef, overlayRef, fadeFromIndex, onSnapPointChange, direction = "bottom", container, snapToSequentialPoint }) {
  const [activeSnapPoint, setActiveSnapPoint] = useControllableState2({
    prop: activeSnapPointProp,
    defaultProp: snapPoints == null ? void 0 : snapPoints[0],
    onChange: setActiveSnapPointProp
  });
  const [windowDimensions, setWindowDimensions] = import_react170.default.useState(typeof window !== "undefined" ? {
    innerWidth: window.innerWidth,
    innerHeight: window.innerHeight
  } : void 0);
  import_react170.default.useEffect(() => {
    function onResize() {
      setWindowDimensions({
        innerWidth: window.innerWidth,
        innerHeight: window.innerHeight
      });
    }
    window.addEventListener("resize", onResize);
    return () => window.removeEventListener("resize", onResize);
  }, []);
  const isLastSnapPoint = import_react170.default.useMemo(() => activeSnapPoint === (snapPoints == null ? void 0 : snapPoints[snapPoints.length - 1]) || null, [
    snapPoints,
    activeSnapPoint
  ]);
  const activeSnapPointIndex = import_react170.default.useMemo(() => snapPoints == null ? void 0 : snapPoints.findIndex((snapPoint) => snapPoint === activeSnapPoint), [
    snapPoints,
    activeSnapPoint
  ]);
  const shouldFade = snapPoints && snapPoints.length > 0 && (fadeFromIndex || fadeFromIndex === 0) && !Number.isNaN(fadeFromIndex) && snapPoints[fadeFromIndex] === activeSnapPoint || !snapPoints;
  const snapPointsOffset = import_react170.default.useMemo(() => {
    const containerSize = container ? {
      width: container.getBoundingClientRect().width,
      height: container.getBoundingClientRect().height
    } : typeof window !== "undefined" ? {
      width: window.innerWidth,
      height: window.innerHeight
    } : {
      width: 0,
      height: 0
    };
    var _snapPoints_map;
    return (_snapPoints_map = snapPoints == null ? void 0 : snapPoints.map((snapPoint) => {
      const isPx = typeof snapPoint === "string";
      let snapPointAsNumber = 0;
      if (isPx) {
        snapPointAsNumber = parseInt(snapPoint, 10);
      }
      if (isVertical(direction)) {
        const height = isPx ? snapPointAsNumber : windowDimensions ? snapPoint * containerSize.height : 0;
        if (windowDimensions) {
          return direction === "bottom" ? containerSize.height - height : -containerSize.height + height;
        }
        return height;
      }
      const width = isPx ? snapPointAsNumber : windowDimensions ? snapPoint * containerSize.width : 0;
      if (windowDimensions) {
        return direction === "right" ? containerSize.width - width : -containerSize.width + width;
      }
      return width;
    })) != null ? _snapPoints_map : [];
  }, [
    snapPoints,
    windowDimensions,
    container
  ]);
  const activeSnapPointOffset = import_react170.default.useMemo(() => activeSnapPointIndex !== null ? snapPointsOffset == null ? void 0 : snapPointsOffset[activeSnapPointIndex] : null, [
    snapPointsOffset,
    activeSnapPointIndex
  ]);
  const snapToPoint = import_react170.default.useCallback((dimension) => {
    var _snapPointsOffset_findIndex;
    const newSnapPointIndex = (_snapPointsOffset_findIndex = snapPointsOffset == null ? void 0 : snapPointsOffset.findIndex((snapPointDim) => snapPointDim === dimension)) != null ? _snapPointsOffset_findIndex : null;
    onSnapPointChange(newSnapPointIndex);
    set(drawerRef.current, {
      transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(",")})`,
      transform: isVertical(direction) ? `translate3d(0, ${dimension}px, 0)` : `translate3d(${dimension}px, 0, 0)`
    });
    if (snapPointsOffset && newSnapPointIndex !== snapPointsOffset.length - 1 && newSnapPointIndex !== fadeFromIndex && newSnapPointIndex < fadeFromIndex) {
      set(overlayRef.current, {
        transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(",")})`,
        opacity: "0"
      });
    } else {
      set(overlayRef.current, {
        transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(",")})`,
        opacity: "1"
      });
    }
    setActiveSnapPoint(snapPoints == null ? void 0 : snapPoints[Math.max(newSnapPointIndex, 0)]);
  }, [
    drawerRef.current,
    snapPoints,
    snapPointsOffset,
    fadeFromIndex,
    overlayRef,
    setActiveSnapPoint
  ]);
  import_react170.default.useEffect(() => {
    if (activeSnapPoint || activeSnapPointProp) {
      var _snapPoints_findIndex;
      const newIndex = (_snapPoints_findIndex = snapPoints == null ? void 0 : snapPoints.findIndex((snapPoint) => snapPoint === activeSnapPointProp || snapPoint === activeSnapPoint)) != null ? _snapPoints_findIndex : -1;
      if (snapPointsOffset && newIndex !== -1 && typeof snapPointsOffset[newIndex] === "number") {
        snapToPoint(snapPointsOffset[newIndex]);
      }
    }
  }, [
    activeSnapPoint,
    activeSnapPointProp,
    snapPoints,
    snapPointsOffset,
    snapToPoint
  ]);
  function onRelease({ draggedDistance, closeDrawer, velocity, dismissible }) {
    if (fadeFromIndex === void 0) return;
    const currentPosition = direction === "bottom" || direction === "right" ? (activeSnapPointOffset != null ? activeSnapPointOffset : 0) - draggedDistance : (activeSnapPointOffset != null ? activeSnapPointOffset : 0) + draggedDistance;
    const isOverlaySnapPoint = activeSnapPointIndex === fadeFromIndex - 1;
    const isFirst = activeSnapPointIndex === 0;
    const hasDraggedUp = draggedDistance > 0;
    if (isOverlaySnapPoint) {
      set(overlayRef.current, {
        transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(",")})`
      });
    }
    if (!snapToSequentialPoint && velocity > 2 && !hasDraggedUp) {
      if (dismissible) closeDrawer();
      else snapToPoint(snapPointsOffset[0]);
      return;
    }
    if (!snapToSequentialPoint && velocity > 2 && hasDraggedUp && snapPointsOffset && snapPoints) {
      snapToPoint(snapPointsOffset[snapPoints.length - 1]);
      return;
    }
    const closestSnapPoint = snapPointsOffset == null ? void 0 : snapPointsOffset.reduce((prev, curr) => {
      if (typeof prev !== "number" || typeof curr !== "number") return prev;
      return Math.abs(curr - currentPosition) < Math.abs(prev - currentPosition) ? curr : prev;
    });
    const dim = isVertical(direction) ? window.innerHeight : window.innerWidth;
    if (velocity > VELOCITY_THRESHOLD && Math.abs(draggedDistance) < dim * 0.4) {
      const dragDirection = hasDraggedUp ? 1 : -1;
      if (dragDirection > 0 && isLastSnapPoint) {
        snapToPoint(snapPointsOffset[snapPoints.length - 1]);
        return;
      }
      if (isFirst && dragDirection < 0 && dismissible) {
        closeDrawer();
      }
      if (activeSnapPointIndex === null) return;
      snapToPoint(snapPointsOffset[activeSnapPointIndex + dragDirection]);
      return;
    }
    snapToPoint(closestSnapPoint);
  }
  function onDrag({ draggedDistance }) {
    if (activeSnapPointOffset === null) return;
    const newValue = direction === "bottom" || direction === "right" ? activeSnapPointOffset - draggedDistance : activeSnapPointOffset + draggedDistance;
    if ((direction === "bottom" || direction === "right") && newValue < snapPointsOffset[snapPointsOffset.length - 1]) {
      return;
    }
    if ((direction === "top" || direction === "left") && newValue > snapPointsOffset[snapPointsOffset.length - 1]) {
      return;
    }
    set(drawerRef.current, {
      transform: isVertical(direction) ? `translate3d(0, ${newValue}px, 0)` : `translate3d(${newValue}px, 0, 0)`
    });
  }
  function getPercentageDragged(absDraggedDistance, isDraggingDown) {
    if (!snapPoints || typeof activeSnapPointIndex !== "number" || !snapPointsOffset || fadeFromIndex === void 0) return null;
    const isOverlaySnapPoint = activeSnapPointIndex === fadeFromIndex - 1;
    const isOverlaySnapPointOrHigher = activeSnapPointIndex >= fadeFromIndex;
    if (isOverlaySnapPointOrHigher && isDraggingDown) {
      return 0;
    }
    if (isOverlaySnapPoint && !isDraggingDown) return 1;
    if (!shouldFade && !isOverlaySnapPoint) return null;
    const targetSnapPointIndex = isOverlaySnapPoint ? activeSnapPointIndex + 1 : activeSnapPointIndex - 1;
    const snapPointDistance = isOverlaySnapPoint ? snapPointsOffset[targetSnapPointIndex] - snapPointsOffset[targetSnapPointIndex - 1] : snapPointsOffset[targetSnapPointIndex + 1] - snapPointsOffset[targetSnapPointIndex];
    const percentageDragged = absDraggedDistance / Math.abs(snapPointDistance);
    if (isOverlaySnapPoint) {
      return 1 - percentageDragged;
    } else {
      return percentageDragged;
    }
  }
  return {
    isLastSnapPoint,
    activeSnapPoint,
    shouldFade,
    getPercentageDragged,
    setActiveSnapPoint,
    activeSnapPointIndex,
    onRelease,
    onDrag,
    snapPointsOffset
  };
}
var noop2 = () => () => {
};
function useScaleBackground() {
  const { direction, isOpen, shouldScaleBackground, setBackgroundColorOnScale, noBodyStyles } = useDrawerContext();
  const timeoutIdRef = import_react170.default.useRef(null);
  const initialBackgroundColor = (0, import_react170.useMemo)(() => document.body.style.backgroundColor, []);
  function getScale2() {
    return (window.innerWidth - WINDOW_TOP_OFFSET) / window.innerWidth;
  }
  import_react170.default.useEffect(() => {
    if (isOpen && shouldScaleBackground) {
      if (timeoutIdRef.current) clearTimeout(timeoutIdRef.current);
      const wrapper = document.querySelector("[data-vaul-drawer-wrapper]") || document.querySelector("[vaul-drawer-wrapper]");
      if (!wrapper) return;
      const bodyAndWrapperCleanup = chain3(setBackgroundColorOnScale && !noBodyStyles ? assignStyle2(document.body, {
        background: "black"
      }) : noop2, assignStyle2(wrapper, {
        transformOrigin: isVertical(direction) ? "top" : "left",
        transitionProperty: "transform, border-radius",
        transitionDuration: `${TRANSITIONS.DURATION}s`,
        transitionTimingFunction: `cubic-bezier(${TRANSITIONS.EASE.join(",")})`
      }));
      const wrapperStylesCleanup = assignStyle2(wrapper, {
        borderRadius: `${BORDER_RADIUS}px`,
        overflow: "hidden",
        ...isVertical(direction) ? {
          transform: `scale(${getScale2()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`
        } : {
          transform: `scale(${getScale2()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`
        }
      });
      return () => {
        wrapperStylesCleanup();
        timeoutIdRef.current = window.setTimeout(() => {
          bodyAndWrapperCleanup();
          if (initialBackgroundColor) {
            document.body.style.background = initialBackgroundColor;
          } else {
            document.body.style.removeProperty("background");
          }
        }, TRANSITIONS.DURATION * 1e3);
      };
    }
  }, [
    isOpen,
    shouldScaleBackground,
    initialBackgroundColor
  ]);
}
function Root2({ open: openProp, onOpenChange, children: children3, onDrag: onDragProp, onRelease: onReleaseProp, snapPoints, shouldScaleBackground = false, setBackgroundColorOnScale = true, closeThreshold = CLOSE_THRESHOLD, scrollLockTimeout = SCROLL_LOCK_TIMEOUT, dismissible = true, handleOnly = false, fadeFromIndex = snapPoints && snapPoints.length - 1, activeSnapPoint: activeSnapPointProp, setActiveSnapPoint: setActiveSnapPointProp, fixed, modal = true, onClose, noBodyStyles, direction = "bottom", defaultOpen = false, disablePreventScroll = true, snapToSequentialPoint = false, repositionInputs = true, onAnimationEnd, container }) {
  var _drawerRef_current;
  const [isOpen = false, setIsOpen] = useControllableState2({
    defaultProp: defaultOpen,
    prop: openProp,
    onChange: (o) => {
      onOpenChange == null ? void 0 : onOpenChange(o);
      setTimeout(() => {
        onAnimationEnd == null ? void 0 : onAnimationEnd(o);
      }, TRANSITIONS.DURATION * 1e3);
      if (o && !modal) {
        window.requestAnimationFrame(() => {
          document.body.style.pointerEvents = "auto";
        });
      }
    }
  });
  const [hasBeenOpened, setHasBeenOpened] = import_react170.default.useState(false);
  const [isDragging, setIsDragging] = import_react170.default.useState(false);
  const [justReleased, setJustReleased] = import_react170.default.useState(false);
  const overlayRef = import_react170.default.useRef(null);
  const openTime = import_react170.default.useRef(null);
  const dragStartTime = import_react170.default.useRef(null);
  const dragEndTime = import_react170.default.useRef(null);
  const lastTimeDragPrevented = import_react170.default.useRef(null);
  const isAllowedToDrag = import_react170.default.useRef(false);
  const nestedOpenChangeTimer = import_react170.default.useRef(null);
  const pointerStart = import_react170.default.useRef(0);
  const keyboardIsOpen = import_react170.default.useRef(false);
  const previousDiffFromInitial = import_react170.default.useRef(0);
  const drawerRef = import_react170.default.useRef(null);
  const drawerHeightRef = import_react170.default.useRef(((_drawerRef_current = drawerRef.current) == null ? void 0 : _drawerRef_current.getBoundingClientRect().height) || 0);
  const initialDrawerHeight = import_react170.default.useRef(0);
  const onSnapPointChange = import_react170.default.useCallback((activeSnapPointIndex2) => {
    if (snapPoints && activeSnapPointIndex2 === snapPointsOffset.length - 1) openTime.current = /* @__PURE__ */ new Date();
  }, []);
  const { activeSnapPoint, activeSnapPointIndex, setActiveSnapPoint, onRelease: onReleaseSnapPoints, snapPointsOffset, onDrag: onDragSnapPoints, shouldFade, getPercentageDragged: getSnapPointsPercentageDragged } = useSnapPoints({
    snapPoints,
    activeSnapPointProp,
    setActiveSnapPointProp,
    drawerRef,
    fadeFromIndex,
    overlayRef,
    onSnapPointChange,
    direction,
    container,
    snapToSequentialPoint
  });
  usePreventScroll({
    isDisabled: !isOpen || isDragging || !modal || justReleased || !hasBeenOpened || !repositionInputs || !disablePreventScroll
  });
  function getScale2() {
    return (window.innerWidth - WINDOW_TOP_OFFSET) / window.innerWidth;
  }
  function onPress(event) {
    var _drawerRef_current2;
    if (!dismissible && !snapPoints) return;
    if (drawerRef.current && !drawerRef.current.contains(event.target)) return;
    drawerHeightRef.current = ((_drawerRef_current2 = drawerRef.current) == null ? void 0 : _drawerRef_current2.getBoundingClientRect().height) || 0;
    setIsDragging(true);
    dragStartTime.current = /* @__PURE__ */ new Date();
    if (isIOS()) {
      window.addEventListener("touchend", () => isAllowedToDrag.current = false, {
        once: true
      });
    }
    event.target.setPointerCapture(event.pointerId);
    pointerStart.current = isVertical(direction) ? event.clientY : event.clientX;
  }
  function shouldDrag(el, isDraggingInDirection) {
    var _window_getSelection, _lastTimeDragPrevented_current;
    let element = el;
    const highlightedText = (_window_getSelection = window.getSelection()) == null ? void 0 : _window_getSelection.toString();
    const swipeAmount = drawerRef.current ? getTranslate(drawerRef.current, direction) : null;
    const date = /* @__PURE__ */ new Date();
    if (element.hasAttribute("data-vaul-no-drag") || element.closest("[data-vaul-no-drag]")) {
      return false;
    }
    if (direction === "right" || direction === "left") {
      return true;
    }
    if (openTime.current && date.getTime() - openTime.current.getTime() < 500) {
      return false;
    }
    if (swipeAmount !== null) {
      if (direction === "bottom" ? swipeAmount > 0 : swipeAmount < 0) {
        return true;
      }
    }
    if (highlightedText && highlightedText.length > 0) {
      return false;
    }
    if (date.getTime() - ((_lastTimeDragPrevented_current = lastTimeDragPrevented.current) == null ? void 0 : _lastTimeDragPrevented_current.getTime()) < scrollLockTimeout && swipeAmount === 0) {
      lastTimeDragPrevented.current = date;
      return false;
    }
    if (isDraggingInDirection) {
      lastTimeDragPrevented.current = date;
      return false;
    }
    while (element) {
      if (element.scrollHeight > element.clientHeight) {
        if (element.scrollTop !== 0) {
          lastTimeDragPrevented.current = /* @__PURE__ */ new Date();
          return false;
        }
        if (element.getAttribute("role") === "dialog") {
          return true;
        }
      }
      element = element.parentNode;
    }
    return true;
  }
  function onDrag(event) {
    if (!drawerRef.current) {
      return;
    }
    if (isDragging) {
      const directionMultiplier = direction === "bottom" || direction === "right" ? 1 : -1;
      const draggedDistance = (pointerStart.current - (isVertical(direction) ? event.clientY : event.clientX)) * directionMultiplier;
      const isDraggingInDirection = draggedDistance > 0;
      const noCloseSnapPointsPreCondition = snapPoints && !dismissible && !isDraggingInDirection;
      if (noCloseSnapPointsPreCondition && activeSnapPointIndex === 0) return;
      const absDraggedDistance = Math.abs(draggedDistance);
      const wrapper = document.querySelector("[data-vaul-drawer-wrapper]");
      let percentageDragged = absDraggedDistance / drawerHeightRef.current;
      const snapPointPercentageDragged = getSnapPointsPercentageDragged(absDraggedDistance, isDraggingInDirection);
      if (snapPointPercentageDragged !== null) {
        percentageDragged = snapPointPercentageDragged;
      }
      if (noCloseSnapPointsPreCondition && percentageDragged >= 1) {
        return;
      }
      if (!isAllowedToDrag.current && !shouldDrag(event.target, isDraggingInDirection)) return;
      drawerRef.current.classList.add(DRAG_CLASS);
      isAllowedToDrag.current = true;
      set(drawerRef.current, {
        transition: "none"
      });
      set(overlayRef.current, {
        transition: "none"
      });
      if (snapPoints) {
        onDragSnapPoints({
          draggedDistance
        });
      }
      if (isDraggingInDirection && !snapPoints) {
        const dampenedDraggedDistance = dampenValue(draggedDistance);
        const translateValue = Math.min(dampenedDraggedDistance * -1, 0) * directionMultiplier;
        set(drawerRef.current, {
          transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`
        });
        return;
      }
      const opacityValue = 1 - percentageDragged;
      if (shouldFade || fadeFromIndex && activeSnapPointIndex === fadeFromIndex - 1) {
        onDragProp == null ? void 0 : onDragProp(event, percentageDragged);
        set(overlayRef.current, {
          opacity: `${opacityValue}`,
          transition: "none"
        }, true);
      }
      if (wrapper && overlayRef.current && shouldScaleBackground) {
        const scaleValue = Math.min(getScale2() + percentageDragged * (1 - getScale2()), 1);
        const borderRadiusValue = 8 - percentageDragged * 8;
        const translateValue = Math.max(0, 14 - percentageDragged * 14);
        set(wrapper, {
          borderRadius: `${borderRadiusValue}px`,
          transform: isVertical(direction) ? `scale(${scaleValue}) translate3d(0, ${translateValue}px, 0)` : `scale(${scaleValue}) translate3d(${translateValue}px, 0, 0)`,
          transition: "none"
        }, true);
      }
      if (!snapPoints) {
        const translateValue = absDraggedDistance * directionMultiplier;
        set(drawerRef.current, {
          transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`
        });
      }
    }
  }
  import_react170.default.useEffect(() => {
    var _window_visualViewport;
    function onVisualViewportChange() {
      if (!drawerRef.current) return;
      const focusedElement = document.activeElement;
      if (isInput(focusedElement) || keyboardIsOpen.current) {
        var _window_visualViewport2;
        const visualViewportHeight = ((_window_visualViewport2 = window.visualViewport) == null ? void 0 : _window_visualViewport2.height) || 0;
        let diffFromInitial = window.innerHeight - visualViewportHeight;
        const drawerHeight = drawerRef.current.getBoundingClientRect().height || 0;
        if (!initialDrawerHeight.current) {
          initialDrawerHeight.current = drawerHeight;
        }
        const offsetFromTop = drawerRef.current.getBoundingClientRect().top;
        if (Math.abs(previousDiffFromInitial.current - diffFromInitial) > 60) {
          keyboardIsOpen.current = !keyboardIsOpen.current;
        }
        if (snapPoints && snapPoints.length > 0 && snapPointsOffset && activeSnapPointIndex) {
          const activeSnapPointHeight = snapPointsOffset[activeSnapPointIndex] || 0;
          diffFromInitial += activeSnapPointHeight;
        }
        previousDiffFromInitial.current = diffFromInitial;
        if (drawerHeight > visualViewportHeight || keyboardIsOpen.current) {
          const height = drawerRef.current.getBoundingClientRect().height;
          let newDrawerHeight = height;
          if (height > visualViewportHeight) {
            newDrawerHeight = visualViewportHeight - WINDOW_TOP_OFFSET;
          }
          if (fixed) {
            drawerRef.current.style.height = `${height - Math.max(diffFromInitial, 0)}px`;
          } else {
            drawerRef.current.style.height = `${Math.max(newDrawerHeight, visualViewportHeight - offsetFromTop)}px`;
          }
        } else {
          drawerRef.current.style.height = `${initialDrawerHeight.current}px`;
        }
        if (snapPoints && snapPoints.length > 0 && !keyboardIsOpen.current) {
          drawerRef.current.style.bottom = `0px`;
        } else {
          drawerRef.current.style.bottom = `${Math.max(diffFromInitial, 0)}px`;
        }
      }
    }
    (_window_visualViewport = window.visualViewport) == null ? void 0 : _window_visualViewport.addEventListener("resize", onVisualViewportChange);
    return () => {
      var _window_visualViewport2;
      return (_window_visualViewport2 = window.visualViewport) == null ? void 0 : _window_visualViewport2.removeEventListener("resize", onVisualViewportChange);
    };
  }, [
    activeSnapPointIndex,
    snapPoints,
    snapPointsOffset
  ]);
  function closeDrawer(fromWithin) {
    cancelDrag();
    onClose == null ? void 0 : onClose();
    if (!fromWithin) {
      setIsOpen(false);
    }
    setTimeout(() => {
      if (snapPoints) {
        setActiveSnapPoint(snapPoints[0]);
      }
    }, TRANSITIONS.DURATION * 1e3);
  }
  function resetDrawer() {
    if (!drawerRef.current) return;
    const wrapper = document.querySelector("[data-vaul-drawer-wrapper]");
    const currentSwipeAmount = getTranslate(drawerRef.current, direction);
    set(drawerRef.current, {
      transform: "translate3d(0, 0, 0)",
      transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(",")})`
    });
    set(overlayRef.current, {
      transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(",")})`,
      opacity: "1"
    });
    if (shouldScaleBackground && currentSwipeAmount && currentSwipeAmount > 0 && isOpen) {
      set(wrapper, {
        borderRadius: `${BORDER_RADIUS}px`,
        overflow: "hidden",
        ...isVertical(direction) ? {
          transform: `scale(${getScale2()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`,
          transformOrigin: "top"
        } : {
          transform: `scale(${getScale2()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`,
          transformOrigin: "left"
        },
        transitionProperty: "transform, border-radius",
        transitionDuration: `${TRANSITIONS.DURATION}s`,
        transitionTimingFunction: `cubic-bezier(${TRANSITIONS.EASE.join(",")})`
      }, true);
    }
  }
  function cancelDrag() {
    if (!isDragging || !drawerRef.current) return;
    drawerRef.current.classList.remove(DRAG_CLASS);
    isAllowedToDrag.current = false;
    setIsDragging(false);
    dragEndTime.current = /* @__PURE__ */ new Date();
  }
  function onRelease(event) {
    if (!isDragging || !drawerRef.current) return;
    drawerRef.current.classList.remove(DRAG_CLASS);
    isAllowedToDrag.current = false;
    setIsDragging(false);
    dragEndTime.current = /* @__PURE__ */ new Date();
    const swipeAmount = getTranslate(drawerRef.current, direction);
    if (!shouldDrag(event.target, false) || !swipeAmount || Number.isNaN(swipeAmount)) return;
    if (dragStartTime.current === null) return;
    const timeTaken = dragEndTime.current.getTime() - dragStartTime.current.getTime();
    const distMoved = pointerStart.current - (isVertical(direction) ? event.clientY : event.clientX);
    const velocity = Math.abs(distMoved) / timeTaken;
    if (velocity > 0.05) {
      setJustReleased(true);
      setTimeout(() => {
        setJustReleased(false);
      }, 200);
    }
    if (snapPoints) {
      const directionMultiplier = direction === "bottom" || direction === "right" ? 1 : -1;
      onReleaseSnapPoints({
        draggedDistance: distMoved * directionMultiplier,
        closeDrawer,
        velocity,
        dismissible
      });
      onReleaseProp == null ? void 0 : onReleaseProp(event, true);
      return;
    }
    if (direction === "bottom" || direction === "right" ? distMoved > 0 : distMoved < 0) {
      resetDrawer();
      onReleaseProp == null ? void 0 : onReleaseProp(event, true);
      return;
    }
    if (velocity > VELOCITY_THRESHOLD) {
      closeDrawer();
      onReleaseProp == null ? void 0 : onReleaseProp(event, false);
      return;
    }
    var _drawerRef_current_getBoundingClientRect_height;
    const visibleDrawerHeight = Math.min((_drawerRef_current_getBoundingClientRect_height = drawerRef.current.getBoundingClientRect().height) != null ? _drawerRef_current_getBoundingClientRect_height : 0, window.innerHeight);
    var _drawerRef_current_getBoundingClientRect_width;
    const visibleDrawerWidth = Math.min((_drawerRef_current_getBoundingClientRect_width = drawerRef.current.getBoundingClientRect().width) != null ? _drawerRef_current_getBoundingClientRect_width : 0, window.innerWidth);
    const isHorizontalSwipe = direction === "left" || direction === "right";
    if (Math.abs(swipeAmount) >= (isHorizontalSwipe ? visibleDrawerWidth : visibleDrawerHeight) * closeThreshold) {
      closeDrawer();
      onReleaseProp == null ? void 0 : onReleaseProp(event, false);
      return;
    }
    onReleaseProp == null ? void 0 : onReleaseProp(event, true);
    resetDrawer();
  }
  import_react170.default.useEffect(() => {
    if (isOpen) {
      set(document.documentElement, {
        scrollBehavior: "auto"
      });
      openTime.current = /* @__PURE__ */ new Date();
    }
    return () => {
      reset(document.documentElement, "scrollBehavior");
    };
  }, [
    isOpen
  ]);
  function onNestedOpenChange(o) {
    const scale = o ? (window.innerWidth - NESTED_DISPLACEMENT) / window.innerWidth : 1;
    const y = o ? -NESTED_DISPLACEMENT : 0;
    if (nestedOpenChangeTimer.current) {
      window.clearTimeout(nestedOpenChangeTimer.current);
    }
    set(drawerRef.current, {
      transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(",")})`,
      transform: `scale(${scale}) translate3d(0, ${y}px, 0)`
    });
    if (!o && drawerRef.current) {
      nestedOpenChangeTimer.current = setTimeout(() => {
        const translateValue = getTranslate(drawerRef.current, direction);
        set(drawerRef.current, {
          transition: "none",
          transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`
        });
      }, 500);
    }
  }
  function onNestedDrag(_event, percentageDragged) {
    if (percentageDragged < 0) return;
    const initialDim = isVertical(direction) ? window.innerHeight : window.innerWidth;
    const initialScale = (initialDim - NESTED_DISPLACEMENT) / initialDim;
    const newScale = initialScale + percentageDragged * (1 - initialScale);
    const newTranslate = -NESTED_DISPLACEMENT + percentageDragged * NESTED_DISPLACEMENT;
    set(drawerRef.current, {
      transform: isVertical(direction) ? `scale(${newScale}) translate3d(0, ${newTranslate}px, 0)` : `scale(${newScale}) translate3d(${newTranslate}px, 0, 0)`,
      transition: "none"
    });
  }
  function onNestedRelease(_event, o) {
    const dim = isVertical(direction) ? window.innerHeight : window.innerWidth;
    const scale = o ? (dim - NESTED_DISPLACEMENT) / dim : 1;
    const translate = o ? -NESTED_DISPLACEMENT : 0;
    if (o) {
      set(drawerRef.current, {
        transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(",")})`,
        transform: isVertical(direction) ? `scale(${scale}) translate3d(0, ${translate}px, 0)` : `scale(${scale}) translate3d(${translate}px, 0, 0)`
      });
    }
  }
  return import_react170.default.createElement(Root, {
    defaultOpen,
    onOpenChange: (open) => {
      if (!dismissible) return;
      if (open) {
        setHasBeenOpened(true);
      } else {
        closeDrawer(true);
      }
      setIsOpen(open);
    },
    open: isOpen
  }, import_react170.default.createElement(DrawerContext.Provider, {
    value: {
      activeSnapPoint,
      snapPoints,
      setActiveSnapPoint,
      drawerRef,
      overlayRef,
      onOpenChange,
      onPress,
      onRelease,
      onDrag,
      dismissible,
      handleOnly,
      isOpen,
      isDragging,
      shouldFade,
      closeDrawer,
      onNestedDrag,
      onNestedOpenChange,
      onNestedRelease,
      keyboardIsOpen,
      modal,
      snapPointsOffset,
      direction,
      shouldScaleBackground,
      setBackgroundColorOnScale,
      noBodyStyles,
      container
    }
  }, children3));
}
var Overlay2 = import_react170.default.forwardRef(function({ ...rest }, ref) {
  const { overlayRef, snapPoints, onRelease, shouldFade, isOpen, modal } = useDrawerContext();
  const composedRef = useComposedRefs2(ref, overlayRef);
  const hasSnapPoints = snapPoints && snapPoints.length > 0;
  return import_react170.default.createElement(Overlay, {
    onMouseUp: onRelease,
    ref: composedRef,
    "data-vaul-overlay": "",
    "data-vaul-snap-points": isOpen && hasSnapPoints ? "true" : "false",
    "data-vaul-snap-points-overlay": isOpen && shouldFade ? "true" : "false",
    style: {
      visibility: modal ? "visible" : "hidden"
    },
    ...rest
  });
});
Overlay2.displayName = "Drawer.Overlay";
var Content2 = import_react170.default.forwardRef(function({ onPointerDownOutside, style: style2, ...rest }, ref) {
  const { drawerRef, onPress, onRelease, onDrag, keyboardIsOpen, snapPointsOffset, modal, isOpen, direction, snapPoints, container, handleOnly } = useDrawerContext();
  const [delayedSnapPoints, setDelayedSnapPoints] = import_react170.default.useState(false);
  const composedRef = useComposedRefs2(ref, drawerRef);
  const pointerStartRef = import_react170.default.useRef(null);
  const wasBeyondThePointRef = import_react170.default.useRef(false);
  const hasSnapPoints = snapPoints && snapPoints.length > 0;
  useScaleBackground();
  const isDeltaInDirection = (delta, direction2, threshold = 0) => {
    if (wasBeyondThePointRef.current) return true;
    const deltaY = Math.abs(delta.y);
    const deltaX = Math.abs(delta.x);
    const isDeltaX = deltaX > deltaY;
    const dFactor = [
      "bottom",
      "right"
    ].includes(direction2) ? 1 : -1;
    if (direction2 === "left" || direction2 === "right") {
      const isReverseDirection = delta.x * dFactor < 0;
      if (!isReverseDirection && deltaX >= 0 && deltaX <= threshold) {
        return isDeltaX;
      }
    } else {
      const isReverseDirection = delta.y * dFactor < 0;
      if (!isReverseDirection && deltaY >= 0 && deltaY <= threshold) {
        return !isDeltaX;
      }
    }
    wasBeyondThePointRef.current = true;
    return true;
  };
  import_react170.default.useEffect(() => {
    if (hasSnapPoints) {
      window.requestAnimationFrame(() => {
        setDelayedSnapPoints(true);
      });
    }
  }, []);
  return import_react170.default.createElement(Content, {
    "data-vaul-drawer-direction": direction,
    "data-vaul-drawer": "",
    "data-vaul-delayed-snap-points": delayedSnapPoints ? "true" : "false",
    "data-vaul-snap-points": isOpen && hasSnapPoints ? "true" : "false",
    "data-vaul-custom-container": container ? "true" : "false",
    ...rest,
    ref: composedRef,
    style: snapPointsOffset && snapPointsOffset.length > 0 ? {
      "--snap-point-height": `${snapPointsOffset[0]}px`,
      ...style2
    } : style2,
    onPointerDown: (event) => {
      if (handleOnly) return;
      rest.onPointerDown == null ? void 0 : rest.onPointerDown.call(rest, event);
      pointerStartRef.current = {
        x: event.clientX,
        y: event.clientY
      };
      onPress(event);
    },
    onPointerDownOutside: (e) => {
      onPointerDownOutside == null ? void 0 : onPointerDownOutside(e);
      if (!modal || e.defaultPrevented) {
        e.preventDefault();
        return;
      }
      if (keyboardIsOpen.current) {
        keyboardIsOpen.current = false;
      }
    },
    onFocusOutside: (e) => {
      if (!modal) {
        e.preventDefault();
        return;
      }
    },
    onPointerMove: (event) => {
      if (handleOnly) return;
      rest.onPointerMove == null ? void 0 : rest.onPointerMove.call(rest, event);
      if (!pointerStartRef.current) return;
      const yPosition = event.clientY - pointerStartRef.current.y;
      const xPosition = event.clientX - pointerStartRef.current.x;
      const swipeStartThreshold = event.pointerType === "touch" ? 10 : 2;
      const delta = {
        x: xPosition,
        y: yPosition
      };
      const isAllowedToSwipe = isDeltaInDirection(delta, direction, swipeStartThreshold);
      if (isAllowedToSwipe) onDrag(event);
      else if (Math.abs(xPosition) > swipeStartThreshold || Math.abs(yPosition) > swipeStartThreshold) {
        pointerStartRef.current = null;
      }
    },
    onPointerUp: (event) => {
      rest.onPointerUp == null ? void 0 : rest.onPointerUp.call(rest, event);
      pointerStartRef.current = null;
      wasBeyondThePointRef.current = false;
      onRelease(event);
    }
  });
});
Content2.displayName = "Drawer.Content";
var LONG_HANDLE_PRESS_TIMEOUT = 250;
var DOUBLE_TAP_TIMEOUT = 120;
var Handle = import_react170.default.forwardRef(function({ preventCycle = false, children: children3, ...rest }, ref) {
  const { closeDrawer, isDragging, snapPoints, activeSnapPoint, setActiveSnapPoint, dismissible, handleOnly, isOpen, onPress, onDrag } = useDrawerContext();
  const closeTimeoutIdRef = import_react170.default.useRef(null);
  const shouldCancelInteractionRef = import_react170.default.useRef(false);
  function handleStartCycle() {
    if (shouldCancelInteractionRef.current) {
      handleCancelInteraction();
      return;
    }
    window.setTimeout(() => {
      handleCycleSnapPoints();
    }, DOUBLE_TAP_TIMEOUT);
  }
  function handleCycleSnapPoints() {
    if (isDragging || preventCycle || shouldCancelInteractionRef.current) {
      handleCancelInteraction();
      return;
    }
    handleCancelInteraction();
    if ((!snapPoints || snapPoints.length === 0) && dismissible) {
      closeDrawer();
      return;
    }
    const isLastSnapPoint = activeSnapPoint === snapPoints[snapPoints.length - 1];
    if (isLastSnapPoint && dismissible) {
      closeDrawer();
      return;
    }
    const currentSnapIndex = snapPoints.findIndex((point) => point === activeSnapPoint);
    if (currentSnapIndex === -1) return;
    const nextSnapPoint = snapPoints[currentSnapIndex + 1];
    setActiveSnapPoint(nextSnapPoint);
  }
  function handleStartInteraction() {
    closeTimeoutIdRef.current = window.setTimeout(() => {
      shouldCancelInteractionRef.current = true;
    }, LONG_HANDLE_PRESS_TIMEOUT);
  }
  function handleCancelInteraction() {
    window.clearTimeout(closeTimeoutIdRef.current);
    shouldCancelInteractionRef.current = false;
  }
  return import_react170.default.createElement("div", {
    onClick: handleStartCycle,
    onPointerCancel: handleCancelInteraction,
    onPointerDown: (e) => {
      if (handleOnly) onPress(e);
      handleStartInteraction();
    },
    onPointerMove: (e) => {
      if (handleOnly) onDrag(e);
    },
    // onPointerUp is already handled by the content component
    ref,
    "data-vaul-drawer-visible": isOpen ? "true" : "false",
    "data-vaul-handle": "",
    "aria-hidden": "true",
    ...rest
  }, import_react170.default.createElement("span", {
    "data-vaul-handle-hitarea": "",
    "aria-hidden": "true"
  }, children3));
});
Handle.displayName = "Drawer.Handle";
function NestedRoot({ onDrag, onOpenChange, ...rest }) {
  const { onNestedDrag, onNestedOpenChange, onNestedRelease } = useDrawerContext();
  if (!onNestedDrag) {
    throw new Error("Drawer.NestedRoot must be placed in another drawer");
  }
  return import_react170.default.createElement(Root2, {
    nested: true,
    onClose: () => {
      onNestedOpenChange(false);
    },
    onDrag: (e, p2) => {
      onNestedDrag(e, p2);
      onDrag == null ? void 0 : onDrag(e, p2);
    },
    onOpenChange: (o) => {
      if (o) {
        onNestedOpenChange(o);
      }
    },
    onRelease: onNestedRelease,
    ...rest
  });
}
function Portal5(props) {
  const context = useDrawerContext();
  const { container = context.container, ...portalProps } = props;
  return import_react170.default.createElement(Portal4, {
    container,
    ...portalProps
  });
}
var Drawer = {
  Root: Root2,
  NestedRoot,
  Content: Content2,
  Overlay: Overlay2,
  Trigger,
  Portal: Portal5,
  Handle,
  Close,
  Title,
  Description
};

// node_modules/@vtex/shoreline/dist/index.mjs
var import_react410 = __toESM(require_react(), 1);
var import_jsx_runtime266 = __toESM(require_jsx_runtime(), 1);
var import_react411 = __toESM(require_react(), 1);
var import_jsx_runtime267 = __toESM(require_jsx_runtime(), 1);
var import_react412 = __toESM(require_react(), 1);
var import_jsx_runtime268 = __toESM(require_jsx_runtime(), 1);
var import_react413 = __toESM(require_react(), 1);
var import_jsx_runtime269 = __toESM(require_jsx_runtime(), 1);
var import_react414 = __toESM(require_react(), 1);
var import_jsx_runtime270 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime271 = __toESM(require_jsx_runtime(), 1);
var import_react415 = __toESM(require_react(), 1);
var import_react416 = __toESM(require_react(), 1);
var import_react417 = __toESM(require_react(), 1);
var import_react419 = __toESM(require_react(), 1);
var import_jsx_runtime272 = __toESM(require_jsx_runtime(), 1);
var import_react421 = __toESM(require_react(), 1);
var import_jsx_runtime273 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime274 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime275 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime276 = __toESM(require_jsx_runtime(), 1);
var import_react424 = __toESM(require_react(), 1);
var import_react426 = __toESM(require_react(), 1);
var import_jsx_runtime277 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime278 = __toESM(require_jsx_runtime(), 1);
var import_react428 = __toESM(require_react(), 1);
var import_jsx_runtime279 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime280 = __toESM(require_jsx_runtime(), 1);
var import_react431 = __toESM(require_react(), 1);
var import_react432 = __toESM(require_react(), 1);
var import_react433 = __toESM(require_react(), 1);
var import_jsx_runtime281 = __toESM(require_jsx_runtime(), 1);
var import_react435 = __toESM(require_react(), 1);
var import_jsx_runtime282 = __toESM(require_jsx_runtime(), 1);
var import_react437 = __toESM(require_react(), 1);
var import_jsx_runtime283 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime284 = __toESM(require_jsx_runtime(), 1);
var import_react438 = __toESM(require_react(), 1);
var import_jsx_runtime285 = __toESM(require_jsx_runtime(), 1);
var import_react439 = __toESM(require_react(), 1);
var import_react440 = __toESM(require_react(), 1);
var import_jsx_runtime286 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime287 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime288 = __toESM(require_jsx_runtime(), 1);
var import_react441 = __toESM(require_react(), 1);
var import_jsx_runtime289 = __toESM(require_jsx_runtime(), 1);
var import_react442 = __toESM(require_react(), 1);
var import_react443 = __toESM(require_react(), 1);
var import_jsx_runtime290 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime291 = __toESM(require_jsx_runtime(), 1);
var import_react444 = __toESM(require_react(), 1);
var import_jsx_runtime292 = __toESM(require_jsx_runtime(), 1);
var import_react445 = __toESM(require_react(), 1);
var import_jsx_runtime293 = __toESM(require_jsx_runtime(), 1);
var import_react446 = __toESM(require_react(), 1);
var import_jsx_runtime294 = __toESM(require_jsx_runtime(), 1);
var import_react447 = __toESM(require_react(), 1);
var import_jsx_runtime295 = __toESM(require_jsx_runtime(), 1);
var import_react448 = __toESM(require_react(), 1);
var import_react449 = __toESM(require_react(), 1);
var import_jsx_runtime296 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime297 = __toESM(require_jsx_runtime(), 1);
var import_react452 = __toESM(require_react(), 1);
var import_jsx_runtime298 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime299 = __toESM(require_jsx_runtime(), 1);
var import_react454 = __toESM(require_react(), 1);
var import_jsx_runtime300 = __toESM(require_jsx_runtime(), 1);
var import_react456 = __toESM(require_react(), 1);
var import_jsx_runtime301 = __toESM(require_jsx_runtime(), 1);
var import_react458 = __toESM(require_react(), 1);
var import_jsx_runtime302 = __toESM(require_jsx_runtime(), 1);
var import_react459 = __toESM(require_react(), 1);
var import_jsx_runtime303 = __toESM(require_jsx_runtime(), 1);
var import_react460 = __toESM(require_react(), 1);
var import_jsx_runtime304 = __toESM(require_jsx_runtime(), 1);
var import_react461 = __toESM(require_react(), 1);
var import_jsx_runtime305 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime306 = __toESM(require_jsx_runtime(), 1);
var import_react462 = __toESM(require_react(), 1);
var import_jsx_runtime307 = __toESM(require_jsx_runtime(), 1);
var import_react463 = __toESM(require_react(), 1);
var import_jsx_runtime308 = __toESM(require_jsx_runtime(), 1);
var import_react465 = __toESM(require_react(), 1);
var import_jsx_runtime309 = __toESM(require_jsx_runtime(), 1);
var import_react467 = __toESM(require_react(), 1);
var import_jsx_runtime310 = __toESM(require_jsx_runtime(), 1);
var import_react469 = __toESM(require_react(), 1);
var import_jsx_runtime311 = __toESM(require_jsx_runtime(), 1);
var import_react471 = __toESM(require_react(), 1);
var import_jsx_runtime312 = __toESM(require_jsx_runtime(), 1);
var import_react476 = __toESM(require_react(), 1);
var import_jsx_runtime313 = __toESM(require_jsx_runtime(), 1);
var import_react477 = __toESM(require_react(), 1);
var import_jsx_runtime314 = __toESM(require_jsx_runtime(), 1);
var import_react478 = __toESM(require_react(), 1);
var import_jsx_runtime315 = __toESM(require_jsx_runtime(), 1);
var import_react479 = __toESM(require_react(), 1);
var import_jsx_runtime316 = __toESM(require_jsx_runtime(), 1);
var import_react480 = __toESM(require_react(), 1);
var import_jsx_runtime317 = __toESM(require_jsx_runtime(), 1);
var import_react481 = __toESM(require_react(), 1);
var import_jsx_runtime318 = __toESM(require_jsx_runtime(), 1);
var import_react482 = __toESM(require_react(), 1);
var import_jsx_runtime319 = __toESM(require_jsx_runtime(), 1);
var import_react483 = __toESM(require_react(), 1);
var import_jsx_runtime320 = __toESM(require_jsx_runtime(), 1);
var import_react484 = __toESM(require_react(), 1);
var import_jsx_runtime321 = __toESM(require_jsx_runtime(), 1);

// node_modules/react-hot-toast/headless/index.mjs
var import_react171 = __toESM(require_react(), 1);
var import_react172 = __toESM(require_react(), 1);
var x = (e) => typeof e == "function";
var p = (e, t) => x(e) ? e(t) : e;
var E = /* @__PURE__ */ (() => {
  let e = 0;
  return () => (++e).toString();
})();
var I = 20;
var m = /* @__PURE__ */ new Map();
var v = 1e3;
var b = (e) => {
  if (m.has(e)) return;
  let t = setTimeout(() => {
    m.delete(e), T({ type: 4, toastId: e });
  }, v);
  m.set(e, t);
};
var M = (e) => {
  let t = m.get(e);
  t && clearTimeout(t);
};
var g = (e, t) => {
  switch (t.type) {
    case 0:
      return { ...e, toasts: [t.toast, ...e.toasts].slice(0, I) };
    case 1:
      return t.toast.id && M(t.toast.id), { ...e, toasts: e.toasts.map((r2) => r2.id === t.toast.id ? { ...r2, ...t.toast } : r2) };
    case 2:
      let { toast: o } = t;
      return e.toasts.find((r2) => r2.id === o.id) ? g(e, { type: 1, toast: o }) : g(e, { type: 0, toast: o });
    case 3:
      let { toastId: n } = t;
      return n ? b(n) : e.toasts.forEach((r2) => {
        b(r2.id);
      }), { ...e, toasts: e.toasts.map((r2) => r2.id === n || n === void 0 ? { ...r2, visible: false } : r2) };
    case 4:
      return t.toastId === void 0 ? { ...e, toasts: [] } : { ...e, toasts: e.toasts.filter((r2) => r2.id !== t.toastId) };
    case 5:
      return { ...e, pausedAt: t.time };
    case 6:
      let s = t.time - (e.pausedAt || 0);
      return { ...e, pausedAt: void 0, toasts: e.toasts.map((r2) => ({ ...r2, pauseDuration: r2.pauseDuration + s })) };
  }
};
var f = [];
var S = { toasts: [], pausedAt: void 0 };
var T = (e) => {
  S = g(S, e), f.forEach((t) => {
    t(S);
  });
};
var U = { blank: 4e3, error: 4e3, success: 2e3, loading: 1 / 0, custom: 4e3 };
var O = (e = {}) => {
  let [t, o] = (0, import_react171.useState)(S);
  (0, import_react171.useEffect)(() => (f.push(o), () => {
    let s = f.indexOf(o);
    s > -1 && f.splice(s, 1);
  }), [t]);
  let n = t.toasts.map((s) => {
    var r2, c;
    return { ...e, ...e[s.type], ...s, duration: s.duration || ((r2 = e[s.type]) == null ? void 0 : r2.duration) || (e == null ? void 0 : e.duration) || U[s.type], style: { ...e.style, ...(c = e[s.type]) == null ? void 0 : c.style, ...s.style } };
  });
  return { ...t, toasts: n };
};
var w = (e, t = "blank", o) => ({ createdAt: Date.now(), visible: true, type: t, ariaProps: { role: "status", "aria-live": "polite" }, message: e, pauseDuration: 0, ...o, id: (o == null ? void 0 : o.id) || E() });
var l = (e) => (t, o) => {
  let n = w(t, e, o);
  return T({ type: 2, toast: n }), n.id;
};
var a = (e, t) => l("blank")(e, t);
a.error = l("error");
a.success = l("success");
a.loading = l("loading");
a.custom = l("custom");
a.dismiss = (e) => {
  T({ type: 3, toastId: e });
};
a.remove = (e) => T({ type: 4, toastId: e });
a.promise = (e, t, o) => {
  let n = a.loading(t.loading, { ...o, ...o == null ? void 0 : o.loading });
  return e.then((s) => (a.success(p(t.success, s), { id: n, ...o, ...o == null ? void 0 : o.success }), s)).catch((s) => {
    a.error(p(t.error, s), { id: n, ...o, ...o == null ? void 0 : o.error });
  }), e;
};
var k = (e, t) => {
  T({ type: 1, toast: { id: e, height: t } });
};
var C = () => {
  T({ type: 5, time: Date.now() });
};
var H = (e) => {
  let { toasts: t, pausedAt: o } = O(e);
  (0, import_react172.useEffect)(() => {
    if (o) return;
    let r2 = Date.now(), c = t.map((i) => {
      if (i.duration === 1 / 0) return;
      let d = (i.duration || 0) + i.pauseDuration - (r2 - i.createdAt);
      if (d < 0) {
        i.visible && a.dismiss(i.id);
        return;
      }
      return setTimeout(() => a.dismiss(i.id), d);
    });
    return () => {
      c.forEach((i) => i && clearTimeout(i));
    };
  }, [t, o]);
  let n = (0, import_react172.useCallback)(() => {
    o && T({ type: 6, time: Date.now() });
  }, [o]), s = (0, import_react172.useCallback)((r2, c) => {
    let { reverseOrder: i = false, gutter: d = 8, defaultPosition: P } = c || {}, A = t.filter((u) => (u.position || P) === (r2.position || P) && u.height), _ = A.findIndex((u) => u.id === r2.id), D = A.filter((u, y) => y < _ && u.visible).length;
    return A.filter((u) => u.visible).slice(...i ? [D + 1] : [0, D]).reduce((u, y) => u + (y.height || 0) + d, 0);
  }, [t]);
  return { toasts: t, handlers: { updateHeight: k, startPause: C, endPause: n, calculateOffset: s } };
};

// node_modules/@vtex/shoreline/dist/index.mjs
var import_react485 = __toESM(require_react(), 1);
var import_jsx_runtime322 = __toESM(require_jsx_runtime(), 1);
var import_react486 = __toESM(require_react(), 1);
var import_jsx_runtime323 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime324 = __toESM(require_jsx_runtime(), 1);
var import_react487 = __toESM(require_react(), 1);
var import_react489 = __toESM(require_react(), 1);
var import_jsx_runtime325 = __toESM(require_jsx_runtime(), 1);
var import_react491 = __toESM(require_react(), 1);
var import_jsx_runtime326 = __toESM(require_jsx_runtime(), 1);
var import_react493 = __toESM(require_react(), 1);
var import_jsx_runtime327 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime328 = __toESM(require_jsx_runtime(), 1);
var import_react495 = __toESM(require_react(), 1);

// node_modules/@react-aria/datepicker/dist/ar-AE.mjs
var $f23889fffbde9058$exports = {};
$f23889fffbde9058$exports = {
  "calendar": `التقويم`,
  "day": `يوم`,
  "dayPeriod": `ص/م`,
  "endDate": `تاريخ الانتهاء`,
  "era": `العصر`,
  "hour": `الساعات`,
  "minute": `الدقائق`,
  "month": `الشهر`,
  "second": `الثواني`,
  "selectedDateDescription": (args) => `تاريخ محدد: ${args.date}`,
  "selectedRangeDescription": (args) => `المدى الزمني المحدد: ${args.startDate} إلى ${args.endDate}`,
  "selectedTimeDescription": (args) => `الوقت المحدد: ${args.time}`,
  "startDate": `تاريخ البدء`,
  "timeZoneName": `التوقيت`,
  "weekday": `اليوم`,
  "year": `السنة`
};

// node_modules/@react-aria/datepicker/dist/bg-BG.mjs
var $09d9badaa8903929$exports = {};
$09d9badaa8903929$exports = {
  "calendar": `Календар`,
  "day": `ден`,
  "dayPeriod": `пр.об./сл.об.`,
  "endDate": `Крайна дата`,
  "era": `ера`,
  "hour": `час`,
  "minute": `минута`,
  "month": `месец`,
  "second": `секунда`,
  "selectedDateDescription": (args) => `Избрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Избран диапазон: ${args.startDate} до ${args.endDate}`,
  "selectedTimeDescription": (args) => `Избрано време: ${args.time}`,
  "startDate": `Начална дата`,
  "timeZoneName": `часова зона`,
  "weekday": `ден от седмицата`,
  "year": `година`
};

// node_modules/@react-aria/datepicker/dist/cs-CZ.mjs
var $151b77e0fd711730$exports = {};
$151b77e0fd711730$exports = {
  "calendar": `Kalendář`,
  "day": `den`,
  "dayPeriod": `část dne`,
  "endDate": `Konečné datum`,
  "era": `letopočet`,
  "hour": `hodina`,
  "minute": `minuta`,
  "month": `měsíc`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Vybrané datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybrané období: ${args.startDate} až ${args.endDate}`,
  "selectedTimeDescription": (args) => `Vybraný čas: ${args.time}`,
  "startDate": `Počáteční datum`,
  "timeZoneName": `časové pásmo`,
  "weekday": `den v týdnu`,
  "year": `rok`
};

// node_modules/@react-aria/datepicker/dist/da-DK.mjs
var $61915aa8630b90a2$exports = {};
$61915aa8630b90a2$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `AM/PM`,
  "endDate": `Slutdato`,
  "era": `æra`,
  "hour": `time`,
  "minute": `minut`,
  "month": `måned`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt interval: ${args.startDate} til ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valgt tidspunkt: ${args.time}`,
  "startDate": `Startdato`,
  "timeZoneName": `tidszone`,
  "weekday": `ugedag`,
  "year": `år`
};

// node_modules/@react-aria/datepicker/dist/de-DE.mjs
var $35cea00159787840$exports = {};
$35cea00159787840$exports = {
  "calendar": `Kalender`,
  "day": `Tag`,
  "dayPeriod": `Tageshälfte`,
  "endDate": `Enddatum`,
  "era": `Epoche`,
  "hour": `Stunde`,
  "minute": `Minute`,
  "month": `Monat`,
  "second": `Sekunde`,
  "selectedDateDescription": (args) => `Ausgewähltes Datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Ausgewählter Bereich: ${args.startDate} bis ${args.endDate}`,
  "selectedTimeDescription": (args) => `Ausgewählte Zeit: ${args.time}`,
  "startDate": `Anfangsdatum`,
  "timeZoneName": `Zeitzone`,
  "weekday": `Wochentag`,
  "year": `Jahr`
};

// node_modules/@react-aria/datepicker/dist/el-GR.mjs
var $518b4e82b9eacafd$exports = {};
$518b4e82b9eacafd$exports = {
  "calendar": `Ημερολόγιο`,
  "day": `ημέρα`,
  "dayPeriod": `π.μ./μ.μ.`,
  "endDate": `Ημερομηνία λήξης`,
  "era": `περίοδος`,
  "hour": `ώρα`,
  "minute": `λεπτό`,
  "month": `μήνας`,
  "second": `δευτερόλεπτο`,
  "selectedDateDescription": (args) => `Επιλεγμένη ημερομηνία: ${args.date}`,
  "selectedRangeDescription": (args) => `Επιλεγμένο εύρος: ${args.startDate} έως ${args.endDate}`,
  "selectedTimeDescription": (args) => `Επιλεγμένη ώρα: ${args.time}`,
  "startDate": `Ημερομηνία έναρξης`,
  "timeZoneName": `ζώνη ώρας`,
  "weekday": `καθημερινή`,
  "year": `έτος`
};

// node_modules/@react-aria/datepicker/dist/en-US.mjs
var $1c2b297f7e2cf474$exports = {};
$1c2b297f7e2cf474$exports = {
  "era": `era`,
  "year": `year`,
  "month": `month`,
  "day": `day`,
  "hour": `hour`,
  "minute": `minute`,
  "second": `second`,
  "dayPeriod": `AM/PM`,
  "calendar": `Calendar`,
  "startDate": `Start Date`,
  "endDate": `End Date`,
  "weekday": `day of the week`,
  "timeZoneName": `time zone`,
  "selectedDateDescription": (args) => `Selected Date: ${args.date}`,
  "selectedRangeDescription": (args) => `Selected Range: ${args.startDate} to ${args.endDate}`,
  "selectedTimeDescription": (args) => `Selected Time: ${args.time}`
};

// node_modules/@react-aria/datepicker/dist/es-ES.mjs
var $07f628a707cf9b18$exports = {};
$07f628a707cf9b18$exports = {
  "calendar": `Calendario`,
  "day": `día`,
  "dayPeriod": `a. m./p. m.`,
  "endDate": `Fecha final`,
  "era": `era`,
  "hour": `hora`,
  "minute": `minuto`,
  "month": `mes`,
  "second": `segundo`,
  "selectedDateDescription": (args) => `Fecha seleccionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Rango seleccionado: ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Hora seleccionada: ${args.time}`,
  "startDate": `Fecha de inicio`,
  "timeZoneName": `zona horaria`,
  "weekday": `día de la semana`,
  "year": `año`
};

// node_modules/@react-aria/datepicker/dist/et-EE.mjs
var $db553ffe17c7f4db$exports = {};
$db553ffe17c7f4db$exports = {
  "calendar": `Kalender`,
  "day": `päev`,
  "dayPeriod": `enne/pärast lõunat`,
  "endDate": `Lõppkuupäev`,
  "era": `ajastu`,
  "hour": `tund`,
  "minute": `minut`,
  "month": `kuu`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valitud kuupäev: ${args.date}`,
  "selectedRangeDescription": (args) => `Valitud vahemik: ${args.startDate} kuni ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valitud aeg: ${args.time}`,
  "startDate": `Alguskuupäev`,
  "timeZoneName": `ajavöönd`,
  "weekday": `nädalapäev`,
  "year": `aasta`
};

// node_modules/@react-aria/datepicker/dist/fi-FI.mjs
var $4afcfe00cd703f83$exports = {};
$4afcfe00cd703f83$exports = {
  "calendar": `Kalenteri`,
  "day": `päivä`,
  "dayPeriod": `vuorokaudenaika`,
  "endDate": `Päättymispäivä`,
  "era": `aikakausi`,
  "hour": `tunti`,
  "minute": `minuutti`,
  "month": `kuukausi`,
  "second": `sekunti`,
  "selectedDateDescription": (args) => `Valittu päivämäärä: ${args.date}`,
  "selectedRangeDescription": (args) => `Valittu aikaväli: ${args.startDate} – ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valittu aika: ${args.time}`,
  "startDate": `Alkamispäivä`,
  "timeZoneName": `aikavyöhyke`,
  "weekday": `viikonpäivä`,
  "year": `vuosi`
};

// node_modules/@react-aria/datepicker/dist/fr-FR.mjs
var $1d2645d18d4c5be0$exports = {};
$1d2645d18d4c5be0$exports = {
  "calendar": `Calendrier`,
  "day": `jour`,
  "dayPeriod": `cadran`,
  "endDate": `Date de fin`,
  "era": `ère`,
  "hour": `heure`,
  "minute": `minute`,
  "month": `mois`,
  "second": `seconde`,
  "selectedDateDescription": (args) => `Date sélectionnée : ${args.date}`,
  "selectedRangeDescription": (args) => `Plage sélectionnée : ${args.startDate} au ${args.endDate}`,
  "selectedTimeDescription": (args) => `Heure choisie : ${args.time}`,
  "startDate": `Date de début`,
  "timeZoneName": `fuseau horaire`,
  "weekday": `jour de la semaine`,
  "year": `année`
};

// node_modules/@react-aria/datepicker/dist/he-IL.mjs
var $64cb6a9be1f6fa48$exports = {};
$64cb6a9be1f6fa48$exports = {
  "calendar": `לוח שנה`,
  "day": `יום`,
  "dayPeriod": `לפנה״צ/אחה״צ`,
  "endDate": `תאריך סיום`,
  "era": `תקופה`,
  "hour": `שעה`,
  "minute": `דקה`,
  "month": `חודש`,
  "second": `שנייה`,
  "selectedDateDescription": (args) => `תאריך נבחר: ${args.date}`,
  "selectedRangeDescription": (args) => `טווח נבחר: ${args.startDate} עד ${args.endDate}`,
  "selectedTimeDescription": (args) => `זמן נבחר: ${args.time}`,
  "startDate": `תאריך התחלה`,
  "timeZoneName": `אזור זמן`,
  "weekday": `יום בשבוע`,
  "year": `שנה`
};

// node_modules/@react-aria/datepicker/dist/hr-HR.mjs
var $2a1ef2e8050be27a$exports = {};
$2a1ef2e8050be27a$exports = {
  "calendar": `Kalendar`,
  "day": `dan`,
  "dayPeriod": `AM/PM`,
  "endDate": `Datum završetka`,
  "era": `era`,
  "hour": `sat`,
  "minute": `minuta`,
  "month": `mjesec`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Odabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Odabrani raspon: ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Odabrano vrijeme: ${args.time}`,
  "startDate": `Datum početka`,
  "timeZoneName": `vremenska zona`,
  "weekday": `dan u tjednu`,
  "year": `godina`
};

// node_modules/@react-aria/datepicker/dist/hu-HU.mjs
var $ad429dca102acd0e$exports = {};
$ad429dca102acd0e$exports = {
  "calendar": `Naptár`,
  "day": `nap`,
  "dayPeriod": `napszak`,
  "endDate": `Befejező dátum`,
  "era": `éra`,
  "hour": `óra`,
  "minute": `perc`,
  "month": `hónap`,
  "second": `másodperc`,
  "selectedDateDescription": (args) => `Kijelölt dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Kijelölt tartomány: ${args.startDate}–${args.endDate}`,
  "selectedTimeDescription": (args) => `Kijelölt idő: ${args.time}`,
  "startDate": `Kezdő dátum`,
  "timeZoneName": `időzóna`,
  "weekday": `hét napja`,
  "year": `év`
};

// node_modules/@react-aria/datepicker/dist/it-IT.mjs
var $6e68cb5d1cb97bd2$exports = {};
$6e68cb5d1cb97bd2$exports = {
  "calendar": `Calendario`,
  "day": `giorno`,
  "dayPeriod": `AM/PM`,
  "endDate": `Data finale`,
  "era": `era`,
  "hour": `ora`,
  "minute": `minuto`,
  "month": `mese`,
  "second": `secondo`,
  "selectedDateDescription": (args) => `Data selezionata: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervallo selezionato: da ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Ora selezionata: ${args.time}`,
  "startDate": `Data iniziale`,
  "timeZoneName": `fuso orario`,
  "weekday": `giorno della settimana`,
  "year": `anno`
};

// node_modules/@react-aria/datepicker/dist/ja-JP.mjs
var $a82ee9af063ee069$exports = {};
$a82ee9af063ee069$exports = {
  "calendar": `カレンダー`,
  "day": `日`,
  "dayPeriod": `午前/午後`,
  "endDate": `終了日`,
  "era": `時代`,
  "hour": `時`,
  "minute": `分`,
  "month": `月`,
  "second": `秒`,
  "selectedDateDescription": (args) => `選択した日付 : ${args.date}`,
  "selectedRangeDescription": (args) => `選択範囲 : ${args.startDate} から ${args.endDate}`,
  "selectedTimeDescription": (args) => `選択した時間 : ${args.time}`,
  "startDate": `開始日`,
  "timeZoneName": `タイムゾーン`,
  "weekday": `曜日`,
  "year": `年`
};

// node_modules/@react-aria/datepicker/dist/ko-KR.mjs
var $67e9091dbf37d4eb$exports = {};
$67e9091dbf37d4eb$exports = {
  "calendar": `달력`,
  "day": `일`,
  "dayPeriod": `오전/오후`,
  "endDate": `종료일`,
  "era": `연호`,
  "hour": `시`,
  "minute": `분`,
  "month": `월`,
  "second": `초`,
  "selectedDateDescription": (args) => `선택 일자: ${args.date}`,
  "selectedRangeDescription": (args) => `선택 범위: ${args.startDate} ~ ${args.endDate}`,
  "selectedTimeDescription": (args) => `선택 시간: ${args.time}`,
  "startDate": `시작일`,
  "timeZoneName": `시간대`,
  "weekday": `요일`,
  "year": `년`
};

// node_modules/@react-aria/datepicker/dist/lt-LT.mjs
var $75834f9729f653d1$exports = {};
$75834f9729f653d1$exports = {
  "calendar": `Kalendorius`,
  "day": `diena`,
  "dayPeriod": `iki pietų / po pietų`,
  "endDate": `Pabaigos data`,
  "era": `era`,
  "hour": `valanda`,
  "minute": `minutė`,
  "month": `mėnuo`,
  "second": `sekundė`,
  "selectedDateDescription": (args) => `Pasirinkta data: ${args.date}`,
  "selectedRangeDescription": (args) => `Pasirinktas intervalas: nuo ${args.startDate} iki ${args.endDate}`,
  "selectedTimeDescription": (args) => `Pasirinktas laikas: ${args.time}`,
  "startDate": `Pradžios data`,
  "timeZoneName": `laiko juosta`,
  "weekday": `savaitės diena`,
  "year": `metai`
};

// node_modules/@react-aria/datepicker/dist/lv-LV.mjs
var $a2df2c2520b4a7f0$exports = {};
$a2df2c2520b4a7f0$exports = {
  "calendar": `Kalendārs`,
  "day": `diena`,
  "dayPeriod": `priekšpusdienā/pēcpusdienā`,
  "endDate": `Beigu datums`,
  "era": `ēra`,
  "hour": `stundas`,
  "minute": `minūtes`,
  "month": `mēnesis`,
  "second": `sekundes`,
  "selectedDateDescription": (args) => `Atlasītais datums: ${args.date}`,
  "selectedRangeDescription": (args) => `Atlasītais diapazons: no ${args.startDate} līdz ${args.endDate}`,
  "selectedTimeDescription": (args) => `Atlasītais laiks: ${args.time}`,
  "startDate": `Sākuma datums`,
  "timeZoneName": `laika josla`,
  "weekday": `nedēļas diena`,
  "year": `gads`
};

// node_modules/@react-aria/datepicker/dist/nb-NO.mjs
var $aedcd71db4933ed5$exports = {};
$aedcd71db4933ed5$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `a.m./p.m.`,
  "endDate": `Sluttdato`,
  "era": `tidsalder`,
  "hour": `time`,
  "minute": `minutt`,
  "month": `måned`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt område: ${args.startDate} til ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valgt tid: ${args.time}`,
  "startDate": `Startdato`,
  "timeZoneName": `tidssone`,
  "weekday": `ukedag`,
  "year": `år`
};

// node_modules/@react-aria/datepicker/dist/nl-NL.mjs
var $3b2df9e54353046c$exports = {};
$3b2df9e54353046c$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `a.m./p.m.`,
  "endDate": `Einddatum`,
  "era": `tijdperk`,
  "hour": `uur`,
  "minute": `minuut`,
  "month": `maand`,
  "second": `seconde`,
  "selectedDateDescription": (args) => `Geselecteerde datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Geselecteerd bereik: ${args.startDate} tot ${args.endDate}`,
  "selectedTimeDescription": (args) => `Geselecteerde tijd: ${args.time}`,
  "startDate": `Startdatum`,
  "timeZoneName": `tijdzone`,
  "weekday": `dag van de week`,
  "year": `jaar`
};

// node_modules/@react-aria/datepicker/dist/pl-PL.mjs
var $c03fe977fcfafe93$exports = {};
$c03fe977fcfafe93$exports = {
  "calendar": `Kalendarz`,
  "day": `dzień`,
  "dayPeriod": `rano / po południu / wieczorem`,
  "endDate": `Data końcowa`,
  "era": `era`,
  "hour": `godzina`,
  "minute": `minuta`,
  "month": `miesiąc`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Wybrana data: ${args.date}`,
  "selectedRangeDescription": (args) => `Wybrany zakres: ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Wybrany czas: ${args.time}`,
  "startDate": `Data początkowa`,
  "timeZoneName": `strefa czasowa`,
  "weekday": `dzień tygodnia`,
  "year": `rok`
};

// node_modules/@react-aria/datepicker/dist/pt-BR.mjs
var $569f006fc292345f$exports = {};
$569f006fc292345f$exports = {
  "calendar": `Calendário`,
  "day": `dia`,
  "dayPeriod": `AM/PM`,
  "endDate": `Data final`,
  "era": `era`,
  "hour": `hora`,
  "minute": `minuto`,
  "month": `mês`,
  "second": `segundo`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Hora selecionada: ${args.time}`,
  "startDate": `Data inicial`,
  "timeZoneName": `fuso horário`,
  "weekday": `dia da semana`,
  "year": `ano`
};

// node_modules/@react-aria/datepicker/dist/pt-PT.mjs
var $7c2494e14452f2dd$exports = {};
$7c2494e14452f2dd$exports = {
  "calendar": `Calendário`,
  "day": `dia`,
  "dayPeriod": `am/pm`,
  "endDate": `Data de Término`,
  "era": `era`,
  "hour": `hora`,
  "minute": `minuto`,
  "month": `mês`,
  "second": `segundo`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Hora selecionada: ${args.time}`,
  "startDate": `Data de Início`,
  "timeZoneName": `fuso horário`,
  "weekday": `dia da semana`,
  "year": `ano`
};

// node_modules/@react-aria/datepicker/dist/ro-RO.mjs
var $eb82ef981b5592bf$exports = {};
$eb82ef981b5592bf$exports = {
  "calendar": `Calendar`,
  "day": `zi`,
  "dayPeriod": `a.m/p.m.`,
  "endDate": `Dată final`,
  "era": `eră`,
  "hour": `oră`,
  "minute": `minut`,
  "month": `lună`,
  "second": `secundă`,
  "selectedDateDescription": (args) => `Dată selectată: ${args.date}`,
  "selectedRangeDescription": (args) => `Interval selectat: de la ${args.startDate} până la ${args.endDate}`,
  "selectedTimeDescription": (args) => `Ora selectată: ${args.time}`,
  "startDate": `Dată început`,
  "timeZoneName": `fus orar`,
  "weekday": `ziua din săptămână`,
  "year": `an`
};

// node_modules/@react-aria/datepicker/dist/ru-RU.mjs
var $6efa0e119f396950$exports = {};
$6efa0e119f396950$exports = {
  "calendar": `Календарь`,
  "day": `день`,
  "dayPeriod": `AM/PM`,
  "endDate": `Дата окончания`,
  "era": `эра`,
  "hour": `час`,
  "minute": `минута`,
  "month": `месяц`,
  "second": `секунда`,
  "selectedDateDescription": (args) => `Выбранная дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Выбранный диапазон: с ${args.startDate} по ${args.endDate}`,
  "selectedTimeDescription": (args) => `Выбранное время: ${args.time}`,
  "startDate": `Дата начала`,
  "timeZoneName": `часовой пояс`,
  "weekday": `день недели`,
  "year": `год`
};

// node_modules/@react-aria/datepicker/dist/sk-SK.mjs
var $7f5e57085d7f5049$exports = {};
$7f5e57085d7f5049$exports = {
  "calendar": `Kalendár`,
  "day": `deň`,
  "dayPeriod": `AM/PM`,
  "endDate": `Dátum ukončenia`,
  "era": `letopočet`,
  "hour": `hodina`,
  "minute": `minúta`,
  "month": `mesiac`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Vybratý dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybratý rozsah: od ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Vybratý čas: ${args.time}`,
  "startDate": `Dátum začatia`,
  "timeZoneName": `časové pásmo`,
  "weekday": `deň týždňa`,
  "year": `rok`
};

// node_modules/@react-aria/datepicker/dist/sl-SI.mjs
var $578ee7c11dcdde7a$exports = {};
$578ee7c11dcdde7a$exports = {
  "calendar": `Koledar`,
  "day": `dan`,
  "dayPeriod": `dop/pop`,
  "endDate": `Datum konca`,
  "era": `doba`,
  "hour": `ura`,
  "minute": `minuta`,
  "month": `mesec`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Izbrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izbrano območje: ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Izbrani čas: ${args.time}`,
  "startDate": `Datum začetka`,
  "timeZoneName": `časovni pas`,
  "weekday": `dan v tednu`,
  "year": `leto`
};

// node_modules/@react-aria/datepicker/dist/sr-SP.mjs
var $bbc3fd6cd0bc9d50$exports = {};
$bbc3fd6cd0bc9d50$exports = {
  "calendar": `Kalendar`,
  "day": `дан`,
  "dayPeriod": `пре подне/по подне`,
  "endDate": `Datum završetka`,
  "era": `ера`,
  "hour": `сат`,
  "minute": `минут`,
  "month": `месец`,
  "second": `секунд`,
  "selectedDateDescription": (args) => `Izabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izabrani opseg: od ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Izabrano vreme: ${args.time}`,
  "startDate": `Datum početka`,
  "timeZoneName": `временска зона`,
  "weekday": `дан у недељи`,
  "year": `година`
};

// node_modules/@react-aria/datepicker/dist/sv-SE.mjs
var $0b04512118591d2a$exports = {};
$0b04512118591d2a$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `fm/em`,
  "endDate": `Slutdatum`,
  "era": `era`,
  "hour": `timme`,
  "minute": `minut`,
  "month": `månad`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valt datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Valt intervall: ${args.startDate} till ${args.endDate}`,
  "selectedTimeDescription": (args) => `Vald tid: ${args.time}`,
  "startDate": `Startdatum`,
  "timeZoneName": `tidszon`,
  "weekday": `veckodag`,
  "year": `år`
};

// node_modules/@react-aria/datepicker/dist/tr-TR.mjs
var $3a49d121fe4c9e1d$exports = {};
$3a49d121fe4c9e1d$exports = {
  "calendar": `Takvim`,
  "day": `gün`,
  "dayPeriod": `ÖÖ/ÖS`,
  "endDate": `Bitiş Tarihi`,
  "era": `çağ`,
  "hour": `saat`,
  "minute": `dakika`,
  "month": `ay`,
  "second": `saniye`,
  "selectedDateDescription": (args) => `Seçilen Tarih: ${args.date}`,
  "selectedRangeDescription": (args) => `Seçilen Aralık: ${args.startDate} - ${args.endDate}`,
  "selectedTimeDescription": (args) => `Seçilen Zaman: ${args.time}`,
  "startDate": `Başlangıç Tarihi`,
  "timeZoneName": `saat dilimi`,
  "weekday": `haftanın günü`,
  "year": `yıl`
};

// node_modules/@react-aria/datepicker/dist/uk-UA.mjs
var $5ba21dbb8914919d$exports = {};
$5ba21dbb8914919d$exports = {
  "calendar": `Календар`,
  "day": `день`,
  "dayPeriod": `дп/пп`,
  "endDate": `Дата завершення`,
  "era": `ера`,
  "hour": `година`,
  "minute": `хвилина`,
  "month": `місяць`,
  "second": `секунда`,
  "selectedDateDescription": (args) => `Вибрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Вибраний діапазон: ${args.startDate} — ${args.endDate}`,
  "selectedTimeDescription": (args) => `Вибраний час: ${args.time}`,
  "startDate": `Дата початку`,
  "timeZoneName": `часовий пояс`,
  "weekday": `день тижня`,
  "year": `рік`
};

// node_modules/@react-aria/datepicker/dist/zh-CN.mjs
var $51078838e1b16cd7$exports = {};
$51078838e1b16cd7$exports = {
  "calendar": `日历`,
  "day": `日`,
  "dayPeriod": `上午/下午`,
  "endDate": `结束日期`,
  "era": `纪元`,
  "hour": `小时`,
  "minute": `分钟`,
  "month": `月`,
  "second": `秒`,
  "selectedDateDescription": (args) => `选定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `选定的范围：${args.startDate} 至 ${args.endDate}`,
  "selectedTimeDescription": (args) => `选定的时间：${args.time}`,
  "startDate": `开始日期`,
  "timeZoneName": `时区`,
  "weekday": `工作日`,
  "year": `年`
};

// node_modules/@react-aria/datepicker/dist/zh-TW.mjs
var $33fab8219207655a$exports = {};
$33fab8219207655a$exports = {
  "calendar": `日曆`,
  "day": `日`,
  "dayPeriod": `上午/下午`,
  "endDate": `結束日期`,
  "era": `纪元`,
  "hour": `小时`,
  "minute": `分钟`,
  "month": `月`,
  "second": `秒`,
  "selectedDateDescription": (args) => `選定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `選定的範圍：${args.startDate} 至 ${args.endDate}`,
  "selectedTimeDescription": (args) => `選定的時間：${args.time}`,
  "startDate": `開始日期`,
  "timeZoneName": `时区`,
  "weekday": `工作日`,
  "year": `年`
};

// node_modules/@react-aria/datepicker/dist/intlStrings.mjs
var $dfb4eba373ed9493$exports = {};
$dfb4eba373ed9493$exports = {
  "ar-AE": $f23889fffbde9058$exports,
  "bg-BG": $09d9badaa8903929$exports,
  "cs-CZ": $151b77e0fd711730$exports,
  "da-DK": $61915aa8630b90a2$exports,
  "de-DE": $35cea00159787840$exports,
  "el-GR": $518b4e82b9eacafd$exports,
  "en-US": $1c2b297f7e2cf474$exports,
  "es-ES": $07f628a707cf9b18$exports,
  "et-EE": $db553ffe17c7f4db$exports,
  "fi-FI": $4afcfe00cd703f83$exports,
  "fr-FR": $1d2645d18d4c5be0$exports,
  "he-IL": $64cb6a9be1f6fa48$exports,
  "hr-HR": $2a1ef2e8050be27a$exports,
  "hu-HU": $ad429dca102acd0e$exports,
  "it-IT": $6e68cb5d1cb97bd2$exports,
  "ja-JP": $a82ee9af063ee069$exports,
  "ko-KR": $67e9091dbf37d4eb$exports,
  "lt-LT": $75834f9729f653d1$exports,
  "lv-LV": $a2df2c2520b4a7f0$exports,
  "nb-NO": $aedcd71db4933ed5$exports,
  "nl-NL": $3b2df9e54353046c$exports,
  "pl-PL": $c03fe977fcfafe93$exports,
  "pt-BR": $569f006fc292345f$exports,
  "pt-PT": $7c2494e14452f2dd$exports,
  "ro-RO": $eb82ef981b5592bf$exports,
  "ru-RU": $6efa0e119f396950$exports,
  "sk-SK": $7f5e57085d7f5049$exports,
  "sl-SI": $578ee7c11dcdde7a$exports,
  "sr-SP": $bbc3fd6cd0bc9d50$exports,
  "sv-SE": $0b04512118591d2a$exports,
  "tr-TR": $3a49d121fe4c9e1d$exports,
  "uk-UA": $5ba21dbb8914919d$exports,
  "zh-CN": $51078838e1b16cd7$exports,
  "zh-TW": $33fab8219207655a$exports
};

// node_modules/@react-aria/datepicker/dist/useDatePickerGroup.mjs
var import_react173 = __toESM(require_react(), 1);
function $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref, disableArrowNavigation) {
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let focusManager = (0, import_react173.useMemo)(() => (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref), [
    ref
  ]);
  let onKeyDown = (e) => {
    if (!e.currentTarget.contains(e.target)) return;
    if (e.altKey && (e.key === "ArrowDown" || e.key === "ArrowUp") && "setOpen" in state) {
      e.preventDefault();
      e.stopPropagation();
      state.setOpen(true);
    }
    if (disableArrowNavigation) return;
    switch (e.key) {
      case "ArrowLeft":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl") focusManager.focusNext();
        else focusManager.focusPrevious();
        break;
      case "ArrowRight":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl") focusManager.focusPrevious();
        else focusManager.focusNext();
        break;
    }
  };
  let focusLast = () => {
    var _window_event;
    let target = (_window_event = window.event) === null || _window_event === void 0 ? void 0 : _window_event.target;
    let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {
      tabbable: true
    });
    if (target) {
      walker.currentNode = target;
      target = walker.previousNode();
    }
    if (!target) {
      let last;
      do {
        last = walker.lastChild();
        if (last) target = last;
      } while (last);
    }
    while (target === null || target === void 0 ? void 0 : target.hasAttribute("data-placeholder")) {
      let prev = walker.previousNode();
      if (prev && prev.hasAttribute("data-placeholder")) target = prev;
      else break;
    }
    if (target) target.focus();
  };
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad213)({
    preventFocusOnPress: true,
    allowTextSelectionOnPress: true,
    onPressStart(e) {
      if (e.pointerType === "mouse") focusLast();
    },
    onPress(e) {
      if (e.pointerType !== "mouse") focusLast();
    }
  });
  return (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, {
    onKeyDown
  });
}

// node_modules/@react-aria/datepicker/dist/useDateField.mjs
var import_react174 = __toESM(require_react(), 1);
function $parcel$interopDefault(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
var $16f0b7bb276bc17e$export$653eddfc964b0f8a = /* @__PURE__ */ new WeakMap();
var $16f0b7bb276bc17e$export$300019f83c56d282 = "__role_" + Date.now();
var $16f0b7bb276bc17e$export$7b3062cd49e80452 = "__focusManager_" + Date.now();
function $16f0b7bb276bc17e$export$5591b0b878c1a989(props, state, ref) {
  var _state_value;
  let { isInvalid, validationErrors, validationDetails } = state.displayValidation;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span",
    isInvalid,
    errorMessage: props.errorMessage || validationErrors
  });
  let valueOnFocus = (0, import_react174.useRef)(null);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec3)({
    ...props,
    onFocusWithin(e) {
      var _props_onFocus;
      valueOnFocus.current = state.value;
      (_props_onFocus = props.onFocus) === null || _props_onFocus === void 0 ? void 0 : _props_onFocus.call(props, e);
    },
    onBlurWithin: (e) => {
      var _props_onBlur;
      state.confirmPlaceholder();
      if (state.value !== valueOnFocus.current) state.commitValidation();
      (_props_onBlur = props.onBlur) === null || _props_onBlur === void 0 ? void 0 : _props_onBlur.call(props, e);
    },
    onFocusWithinChange: props.onFocusChange
  });
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault($dfb4eba373ed9493$exports)), "@react-aria/datepicker");
  let message = state.maxGranularity === "hour" ? "selectedTimeDescription" : "selectedDateDescription";
  let field = state.maxGranularity === "hour" ? "time" : "date";
  let description = state.value ? stringFormatter.format(message, {
    [field]: state.formatValue({
      month: "long"
    })
  }) : "";
  let descProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let describedBy = props[$16f0b7bb276bc17e$export$300019f83c56d282] === "presentation" ? fieldProps["aria-describedby"] : [
    descProps["aria-describedby"],
    fieldProps["aria-describedby"]
  ].filter(Boolean).join(" ") || void 0;
  let propsFocusManager = props[$16f0b7bb276bc17e$export$7b3062cd49e80452];
  let focusManager = (0, import_react174.useMemo)(() => propsFocusManager || (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref), [
    propsFocusManager,
    ref
  ]);
  let groupProps = (0, $3dfb0f96be0d6a08$export$4a931266a3838b86)(state, ref, props[$16f0b7bb276bc17e$export$300019f83c56d282] === "presentation");
  $16f0b7bb276bc17e$export$653eddfc964b0f8a.set(state, {
    ariaLabel: props["aria-label"],
    ariaLabelledBy: [
      labelProps.id,
      props["aria-labelledby"]
    ].filter(Boolean).join(" ") || void 0,
    ariaDescribedBy: describedBy,
    focusManager
  });
  let autoFocusRef = (0, import_react174.useRef)(props.autoFocus);
  let fieldDOMProps;
  if (props[$16f0b7bb276bc17e$export$300019f83c56d282] === "presentation") fieldDOMProps = {
    role: "presentation"
  };
  else fieldDOMProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(fieldProps, {
    role: "group",
    "aria-disabled": props.isDisabled || void 0,
    "aria-describedby": describedBy
  });
  (0, import_react174.useEffect)(() => {
    if (autoFocusRef.current) focusManager.focusFirst();
    autoFocusRef.current = false;
  }, [
    focusManager
  ]);
  (0, $99facab73266f662$export$5add1d006293d136)(props.inputRef, state.value, state.setValue);
  (0, $e93e671b31057976$export$b8473d3665f3a75a)({
    ...props,
    focus() {
      focusManager.focusFirst();
    }
  }, state, props.inputRef);
  let inputProps = {
    type: "hidden",
    name: props.name,
    value: ((_state_value = state.value) === null || _state_value === void 0 ? void 0 : _state_value.toString()) || "",
    disabled: props.isDisabled
  };
  if (props.validationBehavior === "native") {
    inputProps.type = "text";
    inputProps.hidden = true;
    inputProps.required = props.isRequired;
    inputProps.onChange = () => {
    };
  }
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  return {
    labelProps: {
      ...labelProps,
      onClick: () => {
        focusManager.focusFirst();
      }
    },
    fieldProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, fieldDOMProps, groupProps, focusWithinProps, {
      onKeyDown(e) {
        if (props.onKeyDown) props.onKeyDown(e);
      },
      onKeyUp(e) {
        if (props.onKeyUp) props.onKeyUp(e);
      }
    }),
    inputProps,
    descriptionProps,
    errorMessageProps,
    isInvalid,
    validationErrors,
    validationDetails
  };
}
function $16f0b7bb276bc17e$export$4c842f6a241dc825(props, state, ref) {
  var _state_timeValue;
  let res = $16f0b7bb276bc17e$export$5591b0b878c1a989(props, state, ref);
  res.inputProps.value = ((_state_timeValue = state.timeValue) === null || _state_timeValue === void 0 ? void 0 : _state_timeValue.toString()) || "";
  return res;
}

// node_modules/@react-aria/datepicker/dist/useDatePicker.mjs
var import_react175 = __toESM(require_react(), 1);
function $parcel$interopDefault2(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
function $6057a3d2a53a12fd$export$42df105a73306d51(props, state, ref) {
  let buttonId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let dialogId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let fieldId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault2($dfb4eba373ed9493$exports)), "@react-aria/datepicker");
  let { isInvalid, validationErrors, validationDetails } = state.displayValidation;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span",
    isInvalid,
    errorMessage: props.errorMessage || validationErrors
  });
  let groupProps = (0, $3dfb0f96be0d6a08$export$4a931266a3838b86)(state, ref);
  let labelledBy = fieldProps["aria-labelledby"] || fieldProps.id;
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let date = state.formatValue(locale, {
    month: "long"
  });
  let description = date ? stringFormatter.format("selectedDateDescription", {
    date
  }) : "";
  let descProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let ariaDescribedBy = [
    descProps["aria-describedby"],
    fieldProps["aria-describedby"]
  ].filter(Boolean).join(" ") || void 0;
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let focusManager = (0, import_react175.useMemo)(() => (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref), [
    ref
  ]);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec3)({
    ...props,
    isDisabled: state.isOpen,
    onBlurWithin: props.onBlur,
    onFocusWithin: props.onFocus,
    onFocusWithinChange: props.onFocusChange
  });
  return {
    groupProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, groupProps, fieldProps, descProps, focusWithinProps, {
      role: "group",
      "aria-disabled": props.isDisabled || null,
      "aria-labelledby": labelledBy,
      "aria-describedby": ariaDescribedBy,
      onKeyDown(e) {
        if (state.isOpen) return;
        if (props.onKeyDown) props.onKeyDown(e);
      },
      onKeyUp(e) {
        if (state.isOpen) return;
        if (props.onKeyUp) props.onKeyUp(e);
      }
    }),
    labelProps: {
      ...labelProps,
      onClick: () => {
        focusManager.focusFirst();
      }
    },
    fieldProps: {
      ...fieldProps,
      id: fieldId,
      [(0, $16f0b7bb276bc17e$export$300019f83c56d282)]: "presentation",
      "aria-describedby": ariaDescribedBy,
      value: state.value,
      onChange: state.setValue,
      placeholderValue: props.placeholderValue,
      hideTimeZone: props.hideTimeZone,
      hourCycle: props.hourCycle,
      shouldForceLeadingZeros: props.shouldForceLeadingZeros,
      granularity: props.granularity,
      isDisabled: props.isDisabled,
      isReadOnly: props.isReadOnly,
      isRequired: props.isRequired,
      validationBehavior: props.validationBehavior,
      // DatePicker owns the validation state for the date field.
      [(0, $e5be200c675c3b3a$export$a763b9476acd3eb)]: state,
      autoFocus: props.autoFocus,
      name: props.name
    },
    descriptionProps,
    errorMessageProps,
    buttonProps: {
      ...descProps,
      id: buttonId,
      "aria-haspopup": "dialog",
      "aria-label": stringFormatter.format("calendar"),
      "aria-labelledby": `${buttonId} ${labelledBy}`,
      "aria-describedby": ariaDescribedBy,
      "aria-expanded": state.isOpen,
      isDisabled: props.isDisabled || props.isReadOnly,
      onPress: () => state.setOpen(true)
    },
    dialogProps: {
      id: dialogId,
      "aria-labelledby": `${buttonId} ${labelledBy}`
    },
    calendarProps: {
      autoFocus: true,
      value: state.dateValue,
      onChange: state.setDateValue,
      minValue: props.minValue,
      maxValue: props.maxValue,
      isDisabled: props.isDisabled,
      isReadOnly: props.isReadOnly,
      isDateUnavailable: props.isDateUnavailable,
      defaultFocusedValue: state.dateValue ? void 0 : props.placeholderValue,
      isInvalid: state.isInvalid,
      errorMessage: typeof props.errorMessage === "function" ? props.errorMessage(state.displayValidation) : props.errorMessage || state.displayValidation.validationErrors.join(" ")
    },
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-aria/datepicker/dist/useDisplayNames.mjs
var import_react176 = __toESM(require_react(), 1);
function $parcel$interopDefault3(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
function $3aeceb3a64eb8358$export$d42c60378c8168f8() {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let dictionary = (0, $fca6afa0e843324b$export$87b761675e8eaa10)((0, $parcel$interopDefault3($dfb4eba373ed9493$exports)), "@react-aria/datepicker");
  return (0, import_react176.useMemo)(() => {
    try {
      return new Intl.DisplayNames(locale, {
        type: "dateTimeField"
      });
    } catch (err) {
      return new $3aeceb3a64eb8358$var$DisplayNamesPolyfill(locale, dictionary);
    }
  }, [
    locale,
    dictionary
  ]);
}
var $3aeceb3a64eb8358$var$DisplayNamesPolyfill = class {
  of(field) {
    return this.dictionary.getStringForLocale(field, this.locale);
  }
  constructor(locale, dictionary) {
    this.locale = locale;
    this.dictionary = dictionary;
  }
};

// node_modules/@react-aria/datepicker/dist/useDateSegment.mjs
var import_react186 = __toESM(require_react(), 1);

// node_modules/@react-aria/spinbutton/dist/ar-AE.mjs
var $ed6aae4e5f766f1e$exports = {};
$ed6aae4e5f766f1e$exports = {
  "Empty": `فارغ`
};

// node_modules/@react-aria/spinbutton/dist/bg-BG.mjs
var $38854e2b175151fa$exports = {};
$38854e2b175151fa$exports = {
  "Empty": `Изпразни`
};

// node_modules/@react-aria/spinbutton/dist/cs-CZ.mjs
var $15b25ab20f3945b2$exports = {};
$15b25ab20f3945b2$exports = {
  "Empty": `Prázdné`
};

// node_modules/@react-aria/spinbutton/dist/da-DK.mjs
var $692a4298b6b649a2$exports = {};
$692a4298b6b649a2$exports = {
  "Empty": `Tom`
};

// node_modules/@react-aria/spinbutton/dist/de-DE.mjs
var $1c6e1539193f1243$exports = {};
$1c6e1539193f1243$exports = {
  "Empty": `Leer`
};

// node_modules/@react-aria/spinbutton/dist/el-GR.mjs
var $1e8678632c464b6d$exports = {};
$1e8678632c464b6d$exports = {
  "Empty": `Άδειο`
};

// node_modules/@react-aria/spinbutton/dist/en-US.mjs
var $4adc85d9bf5b9eed$exports = {};
$4adc85d9bf5b9eed$exports = {
  "Empty": `Empty`
};

// node_modules/@react-aria/spinbutton/dist/es-ES.mjs
var $41c4b2bb61dafbca$exports = {};
$41c4b2bb61dafbca$exports = {
  "Empty": `Vacío`
};

// node_modules/@react-aria/spinbutton/dist/et-EE.mjs
var $405f8b24f5dd2a60$exports = {};
$405f8b24f5dd2a60$exports = {
  "Empty": `Tühjenda`
};

// node_modules/@react-aria/spinbutton/dist/fi-FI.mjs
var $7efe3ed02b9b9dd4$exports = {};
$7efe3ed02b9b9dd4$exports = {
  "Empty": `Tyhjä`
};

// node_modules/@react-aria/spinbutton/dist/fr-FR.mjs
var $99fc4c101d92daf3$exports = {};
$99fc4c101d92daf3$exports = {
  "Empty": `Vide`
};

// node_modules/@react-aria/spinbutton/dist/he-IL.mjs
var $f9e155e6e8cacaa2$exports = {};
$f9e155e6e8cacaa2$exports = {
  "Empty": `ריק`
};

// node_modules/@react-aria/spinbutton/dist/hr-HR.mjs
var $c31b5e8e9a249fd5$exports = {};
$c31b5e8e9a249fd5$exports = {
  "Empty": `Prazno`
};

// node_modules/@react-aria/spinbutton/dist/hu-HU.mjs
var $9c5435bc17499bd9$exports = {};
$9c5435bc17499bd9$exports = {
  "Empty": `Üres`
};

// node_modules/@react-aria/spinbutton/dist/it-IT.mjs
var $6d1fc8e84d8165e1$exports = {};
$6d1fc8e84d8165e1$exports = {
  "Empty": `Vuoto`
};

// node_modules/@react-aria/spinbutton/dist/ja-JP.mjs
var $46ea6b3641b83e71$exports = {};
$46ea6b3641b83e71$exports = {
  "Empty": `空`
};

// node_modules/@react-aria/spinbutton/dist/ko-KR.mjs
var $0e3cc9a288289dc5$exports = {};
$0e3cc9a288289dc5$exports = {
  "Empty": `비어 있음`
};

// node_modules/@react-aria/spinbutton/dist/lt-LT.mjs
var $4ff2bb25c0089ffb$exports = {};
$4ff2bb25c0089ffb$exports = {
  "Empty": `Tuščias`
};

// node_modules/@react-aria/spinbutton/dist/lv-LV.mjs
var $6cf33cd4c010a2fb$exports = {};
$6cf33cd4c010a2fb$exports = {
  "Empty": `Tukšs`
};

// node_modules/@react-aria/spinbutton/dist/nb-NO.mjs
var $5a9f8486f8b8837e$exports = {};
$5a9f8486f8b8837e$exports = {
  "Empty": `Tom`
};

// node_modules/@react-aria/spinbutton/dist/nl-NL.mjs
var $583f94d807f6ecea$exports = {};
$583f94d807f6ecea$exports = {
  "Empty": `Leeg`
};

// node_modules/@react-aria/spinbutton/dist/pl-PL.mjs
var $cc4dcfeea2b4050d$exports = {};
$cc4dcfeea2b4050d$exports = {
  "Empty": `Pusty`
};

// node_modules/@react-aria/spinbutton/dist/pt-BR.mjs
var $68ac2954d56e12b4$exports = {};
$68ac2954d56e12b4$exports = {
  "Empty": `Vazio`
};

// node_modules/@react-aria/spinbutton/dist/pt-PT.mjs
var $fdb0616f309780b0$exports = {};
$fdb0616f309780b0$exports = {
  "Empty": `Vazio`
};

// node_modules/@react-aria/spinbutton/dist/ro-RO.mjs
var $fe1eccf4ee1d6f52$exports = {};
$fe1eccf4ee1d6f52$exports = {
  "Empty": `Gol`
};

// node_modules/@react-aria/spinbutton/dist/ru-RU.mjs
var $a38b6c4e18725976$exports = {};
$a38b6c4e18725976$exports = {
  "Empty": `Не заполнено`
};

// node_modules/@react-aria/spinbutton/dist/sk-SK.mjs
var $6c14ae2b766b652c$exports = {};
$6c14ae2b766b652c$exports = {
  "Empty": `Prázdne`
};

// node_modules/@react-aria/spinbutton/dist/sl-SI.mjs
var $8f1c9692e16dc5eb$exports = {};
$8f1c9692e16dc5eb$exports = {
  "Empty": `Prazen`
};

// node_modules/@react-aria/spinbutton/dist/sr-SP.mjs
var $d2aa7abea627cafa$exports = {};
$d2aa7abea627cafa$exports = {
  "Empty": `Prazno`
};

// node_modules/@react-aria/spinbutton/dist/sv-SE.mjs
var $676b82e4b56408e6$exports = {};
$676b82e4b56408e6$exports = {
  "Empty": `Tomt`
};

// node_modules/@react-aria/spinbutton/dist/tr-TR.mjs
var $14c9042552d7ce08$exports = {};
$14c9042552d7ce08$exports = {
  "Empty": `Boş`
};

// node_modules/@react-aria/spinbutton/dist/uk-UA.mjs
var $393254ebcb66c9f5$exports = {};
$393254ebcb66c9f5$exports = {
  "Empty": `Пусто`
};

// node_modules/@react-aria/spinbutton/dist/zh-CN.mjs
var $d49d621f310cf6ce$exports = {};
$d49d621f310cf6ce$exports = {
  "Empty": `空`
};

// node_modules/@react-aria/spinbutton/dist/zh-TW.mjs
var $94b60c866ca5dfe6$exports = {};
$94b60c866ca5dfe6$exports = {
  "Empty": `空白`
};

// node_modules/@react-aria/spinbutton/dist/intlStrings.mjs
var $a99895ee3dc79e61$exports = {};
$a99895ee3dc79e61$exports = {
  "ar-AE": $ed6aae4e5f766f1e$exports,
  "bg-BG": $38854e2b175151fa$exports,
  "cs-CZ": $15b25ab20f3945b2$exports,
  "da-DK": $692a4298b6b649a2$exports,
  "de-DE": $1c6e1539193f1243$exports,
  "el-GR": $1e8678632c464b6d$exports,
  "en-US": $4adc85d9bf5b9eed$exports,
  "es-ES": $41c4b2bb61dafbca$exports,
  "et-EE": $405f8b24f5dd2a60$exports,
  "fi-FI": $7efe3ed02b9b9dd4$exports,
  "fr-FR": $99fc4c101d92daf3$exports,
  "he-IL": $f9e155e6e8cacaa2$exports,
  "hr-HR": $c31b5e8e9a249fd5$exports,
  "hu-HU": $9c5435bc17499bd9$exports,
  "it-IT": $6d1fc8e84d8165e1$exports,
  "ja-JP": $46ea6b3641b83e71$exports,
  "ko-KR": $0e3cc9a288289dc5$exports,
  "lt-LT": $4ff2bb25c0089ffb$exports,
  "lv-LV": $6cf33cd4c010a2fb$exports,
  "nb-NO": $5a9f8486f8b8837e$exports,
  "nl-NL": $583f94d807f6ecea$exports,
  "pl-PL": $cc4dcfeea2b4050d$exports,
  "pt-BR": $68ac2954d56e12b4$exports,
  "pt-PT": $fdb0616f309780b0$exports,
  "ro-RO": $fe1eccf4ee1d6f52$exports,
  "ru-RU": $a38b6c4e18725976$exports,
  "sk-SK": $6c14ae2b766b652c$exports,
  "sl-SI": $8f1c9692e16dc5eb$exports,
  "sr-SP": $d2aa7abea627cafa$exports,
  "sv-SE": $676b82e4b56408e6$exports,
  "tr-TR": $14c9042552d7ce08$exports,
  "uk-UA": $393254ebcb66c9f5$exports,
  "zh-CN": $d49d621f310cf6ce$exports,
  "zh-TW": $94b60c866ca5dfe6$exports
};

// node_modules/@react-aria/live-announcer/dist/LiveAnnouncer.mjs
var $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY = 7e3;
var $319e236875307eab$var$liveAnnouncer = null;
function $319e236875307eab$export$a9b970dcc4ae71a9(message, assertiveness = "assertive", timeout = $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY) {
  if (!$319e236875307eab$var$liveAnnouncer) {
    $319e236875307eab$var$liveAnnouncer = new $319e236875307eab$var$LiveAnnouncer();
    if (!(typeof IS_REACT_ACT_ENVIRONMENT === "boolean" ? IS_REACT_ACT_ENVIRONMENT : typeof jest !== "undefined")) setTimeout(() => {
      if ($319e236875307eab$var$liveAnnouncer === null || $319e236875307eab$var$liveAnnouncer === void 0 ? void 0 : $319e236875307eab$var$liveAnnouncer.isAttached()) $319e236875307eab$var$liveAnnouncer === null || $319e236875307eab$var$liveAnnouncer === void 0 ? void 0 : $319e236875307eab$var$liveAnnouncer.announce(message, assertiveness, timeout);
    }, 100);
    else $319e236875307eab$var$liveAnnouncer.announce(message, assertiveness, timeout);
  } else $319e236875307eab$var$liveAnnouncer.announce(message, assertiveness, timeout);
}
function $319e236875307eab$export$d10ae4f68404609a(assertiveness) {
  if ($319e236875307eab$var$liveAnnouncer) $319e236875307eab$var$liveAnnouncer.clear(assertiveness);
}
var $319e236875307eab$var$LiveAnnouncer = class {
  isAttached() {
    var _this_node;
    return (_this_node = this.node) === null || _this_node === void 0 ? void 0 : _this_node.isConnected;
  }
  createLog(ariaLive) {
    let node = document.createElement("div");
    node.setAttribute("role", "log");
    node.setAttribute("aria-live", ariaLive);
    node.setAttribute("aria-relevant", "additions");
    return node;
  }
  destroy() {
    if (!this.node) return;
    document.body.removeChild(this.node);
    this.node = null;
  }
  announce(message, assertiveness = "assertive", timeout = $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY) {
    var _this_assertiveLog, _this_politeLog;
    if (!this.node) return;
    let node = document.createElement("div");
    if (typeof message === "object") {
      node.setAttribute("role", "img");
      node.setAttribute("aria-labelledby", message["aria-labelledby"]);
    } else node.textContent = message;
    if (assertiveness === "assertive") (_this_assertiveLog = this.assertiveLog) === null || _this_assertiveLog === void 0 ? void 0 : _this_assertiveLog.appendChild(node);
    else (_this_politeLog = this.politeLog) === null || _this_politeLog === void 0 ? void 0 : _this_politeLog.appendChild(node);
    if (message !== "") setTimeout(() => {
      node.remove();
    }, timeout);
  }
  clear(assertiveness) {
    if (!this.node) return;
    if ((!assertiveness || assertiveness === "assertive") && this.assertiveLog) this.assertiveLog.innerHTML = "";
    if ((!assertiveness || assertiveness === "polite") && this.politeLog) this.politeLog.innerHTML = "";
  }
  constructor() {
    this.node = null;
    this.assertiveLog = null;
    this.politeLog = null;
    if (typeof document !== "undefined") {
      this.node = document.createElement("div");
      this.node.dataset.liveAnnouncer = "true";
      Object.assign(this.node.style, {
        border: 0,
        clip: "rect(0 0 0 0)",
        clipPath: "inset(50%)",
        height: "1px",
        margin: "-1px",
        overflow: "hidden",
        padding: 0,
        position: "absolute",
        width: "1px",
        whiteSpace: "nowrap"
      });
      this.assertiveLog = this.createLog("assertive");
      this.node.appendChild(this.assertiveLog);
      this.politeLog = this.createLog("polite");
      this.node.appendChild(this.politeLog);
      document.body.prepend(this.node);
    }
  }
};

// node_modules/@react-aria/spinbutton/dist/useSpinButton.mjs
var import_react185 = __toESM(require_react(), 1);

// node_modules/@react-aria/spinbutton/node_modules/@react-aria/i18n/dist/utils.mjs
var $148a7a147e38ea7f$var$RTL_SCRIPTS2 = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
var $148a7a147e38ea7f$var$RTL_LANGS2 = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd7642(localeString) {
  if (Intl.Locale) {
    let locale = new Intl.Locale(localeString).maximize();
    let textInfo = typeof locale.getTextInfo === "function" ? locale.getTextInfo() : locale.textInfo;
    if (textInfo) return textInfo.direction === "rtl";
    if (locale.script) return $148a7a147e38ea7f$var$RTL_SCRIPTS2.has(locale.script);
  }
  let lang = localeString.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS2.has(lang);
}

// node_modules/@react-aria/spinbutton/node_modules/@react-aria/i18n/dist/useDefaultLocale.mjs
var import_react177 = __toESM(require_react(), 1);
var $1e5a04cdaf7d1af8$var$localeSymbol2 = Symbol.for("react-aria.i18n.locale");
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec52() {
  let locale = typeof window !== "undefined" && window[$1e5a04cdaf7d1af8$var$localeSymbol2] || typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      locale
    ]);
  } catch {
    locale = "en-US";
  }
  return {
    locale,
    direction: (0, $148a7a147e38ea7f$export$702d680b21cbd7642)(locale) ? "rtl" : "ltr"
  };
}
var $1e5a04cdaf7d1af8$var$currentLocale2 = $1e5a04cdaf7d1af8$export$f09106e7c6677ec52();
var $1e5a04cdaf7d1af8$var$listeners2 = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale2() {
  $1e5a04cdaf7d1af8$var$currentLocale2 = $1e5a04cdaf7d1af8$export$f09106e7c6677ec52();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners2) listener($1e5a04cdaf7d1af8$var$currentLocale2);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a2() {
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let [defaultLocale, setDefaultLocale] = (0, import_react177.useState)($1e5a04cdaf7d1af8$var$currentLocale2);
  (0, import_react177.useEffect)(() => {
    if ($1e5a04cdaf7d1af8$var$listeners2.size === 0) window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale2);
    $1e5a04cdaf7d1af8$var$listeners2.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners2.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners2.size === 0) window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale2);
    };
  }, []);
  if (isSSR) return {
    locale: "en-US",
    direction: "ltr"
  };
  return defaultLocale;
}

// node_modules/@react-aria/spinbutton/node_modules/@react-aria/i18n/dist/context.mjs
var import_react178 = __toESM(require_react(), 1);
var $18f2051aff69b9bf$var$I18nContext2 = (0, import_react178.default).createContext(null);
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f72() {
  let defaultLocale = (0, $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a2)();
  let context = (0, import_react178.useContext)($18f2051aff69b9bf$var$I18nContext2);
  return context || defaultLocale;
}

// node_modules/@react-aria/spinbutton/node_modules/@react-aria/i18n/dist/useMessageFormatter.mjs
var import_react179 = __toESM(require_react(), 1);

// node_modules/@react-aria/spinbutton/node_modules/@react-aria/i18n/dist/useLocalizedStringFormatter.mjs
var import_react180 = __toESM(require_react(), 1);
var $fca6afa0e843324b$var$cache2 = /* @__PURE__ */ new WeakMap();
function $fca6afa0e843324b$var$getCachedDictionary2(strings) {
  let dictionary = $fca6afa0e843324b$var$cache2.get(strings);
  if (!dictionary) {
    dictionary = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)(strings);
    $fca6afa0e843324b$var$cache2.set(strings, dictionary);
  }
  return dictionary;
}
function $fca6afa0e843324b$export$87b761675e8eaa102(strings, packageName) {
  return packageName && (0, $5b160d28a433310d$export$c17fa47878dc55b6).getGlobalDictionaryForPackage(packageName) || $fca6afa0e843324b$var$getCachedDictionary2(strings);
}
function $fca6afa0e843324b$export$f12b703ca79dfbb12(strings, packageName) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f72)();
  let dictionary = $fca6afa0e843324b$export$87b761675e8eaa102(strings, packageName);
  return (0, import_react180.useMemo)(() => new (0, $6db58dc88e78b024$export$2f817fcdc4b89ae0)(locale, dictionary), [
    locale,
    dictionary
  ]);
}

// node_modules/@react-aria/spinbutton/node_modules/@react-aria/i18n/dist/useListFormatter.mjs
var import_react181 = __toESM(require_react(), 1);

// node_modules/@react-aria/spinbutton/node_modules/@internationalized/date/dist/string.mjs
var $fae977aafc393c5c$var$requiredDurationTimeGroups2 = [
  "hours",
  "minutes",
  "seconds"
];
var $fae977aafc393c5c$var$requiredDurationGroups2 = [
  "years",
  "months",
  "weeks",
  "days",
  ...$fae977aafc393c5c$var$requiredDurationTimeGroups2
];

// node_modules/@react-aria/spinbutton/node_modules/@internationalized/date/dist/HebrewCalendar.mjs
var $7c5f6fbf42389787$var$HOUR_PARTS2 = 1080;
var $7c5f6fbf42389787$var$DAY_PARTS2 = 24 * $7c5f6fbf42389787$var$HOUR_PARTS2;
var $7c5f6fbf42389787$var$MONTH_DAYS2 = 29;
var $7c5f6fbf42389787$var$MONTH_FRACT2 = 12 * $7c5f6fbf42389787$var$HOUR_PARTS2 + 793;
var $7c5f6fbf42389787$var$MONTH_PARTS2 = $7c5f6fbf42389787$var$MONTH_DAYS2 * $7c5f6fbf42389787$var$DAY_PARTS2 + $7c5f6fbf42389787$var$MONTH_FRACT2;

// node_modules/@react-aria/spinbutton/node_modules/@react-aria/i18n/dist/useDateFormatter.mjs
var import_react182 = __toESM(require_react(), 1);

// node_modules/@react-aria/spinbutton/node_modules/@react-aria/i18n/dist/useNumberFormatter.mjs
var import_react183 = __toESM(require_react(), 1);

// node_modules/@react-aria/spinbutton/node_modules/@react-aria/i18n/dist/useFilter.mjs
var import_react184 = __toESM(require_react(), 1);

// node_modules/@react-aria/spinbutton/dist/useSpinButton.mjs
function $parcel$interopDefault4(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
function $d2e8511e6f209edf$export$e908e06f4b8e3402(props) {
  const _async = (0, import_react185.useRef)(void 0);
  let { value, textValue, minValue, maxValue, isDisabled, isReadOnly, isRequired, onIncrement, onIncrementPage, onDecrement, onDecrementPage, onDecrementToMin, onIncrementToMax } = props;
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb12)((0, $parcel$interopDefault4($a99895ee3dc79e61$exports)), "@react-aria/spinbutton");
  const clearAsync = () => clearTimeout(_async.current);
  (0, import_react185.useEffect)(() => {
    return () => clearAsync();
  }, []);
  let onKeyDown = (e) => {
    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || isReadOnly) return;
    switch (e.key) {
      case "PageUp":
        if (onIncrementPage) {
          e.preventDefault();
          onIncrementPage === null || onIncrementPage === void 0 ? void 0 : onIncrementPage();
          break;
        }
      case "ArrowUp":
      case "Up":
        if (onIncrement) {
          e.preventDefault();
          onIncrement === null || onIncrement === void 0 ? void 0 : onIncrement();
        }
        break;
      case "PageDown":
        if (onDecrementPage) {
          e.preventDefault();
          onDecrementPage === null || onDecrementPage === void 0 ? void 0 : onDecrementPage();
          break;
        }
      case "ArrowDown":
      case "Down":
        if (onDecrement) {
          e.preventDefault();
          onDecrement === null || onDecrement === void 0 ? void 0 : onDecrement();
        }
        break;
      case "Home":
        if (onDecrementToMin) {
          e.preventDefault();
          onDecrementToMin === null || onDecrementToMin === void 0 ? void 0 : onDecrementToMin();
        }
        break;
      case "End":
        if (onIncrementToMax) {
          e.preventDefault();
          onIncrementToMax === null || onIncrementToMax === void 0 ? void 0 : onIncrementToMax();
        }
        break;
    }
  };
  let isFocused = (0, import_react185.useRef)(false);
  let onFocus = () => {
    isFocused.current = true;
  };
  let onBlur = () => {
    isFocused.current = false;
  };
  let ariaTextValue = textValue === "" ? stringFormatter.format("Empty") : (textValue || `${value}`).replace("-", "−");
  (0, import_react185.useEffect)(() => {
    if (isFocused.current) {
      (0, $319e236875307eab$export$d10ae4f68404609a)("assertive");
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(ariaTextValue, "assertive");
    }
  }, [
    ariaTextValue
  ]);
  const onIncrementPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((initialStepDelay) => {
    clearAsync();
    onIncrement === null || onIncrement === void 0 ? void 0 : onIncrement();
    _async.current = window.setTimeout(() => {
      if (maxValue === void 0 || isNaN(maxValue) || value === void 0 || isNaN(value) || value < maxValue) onIncrementPressStart(60);
    }, initialStepDelay);
  });
  const onDecrementPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((initialStepDelay) => {
    clearAsync();
    onDecrement === null || onDecrement === void 0 ? void 0 : onDecrement();
    _async.current = window.setTimeout(() => {
      if (minValue === void 0 || isNaN(minValue) || value === void 0 || isNaN(value) || value > minValue) onDecrementPressStart(60);
    }, initialStepDelay);
  });
  let cancelContextMenu = (e) => {
    e.preventDefault();
  };
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  return {
    spinButtonProps: {
      role: "spinbutton",
      "aria-valuenow": value !== void 0 && !isNaN(value) ? value : void 0,
      "aria-valuetext": ariaTextValue,
      "aria-valuemin": minValue,
      "aria-valuemax": maxValue,
      "aria-disabled": isDisabled || void 0,
      "aria-readonly": isReadOnly || void 0,
      "aria-required": isRequired || void 0,
      onKeyDown,
      onFocus,
      onBlur
    },
    incrementButtonProps: {
      onPressStart: () => {
        onIncrementPressStart(400);
        addGlobalListener(window, "contextmenu", cancelContextMenu);
      },
      onPressEnd: () => {
        clearAsync();
        removeAllGlobalListeners();
      },
      onFocus,
      onBlur
    },
    decrementButtonProps: {
      onPressStart: () => {
        onDecrementPressStart(400);
        addGlobalListener(window, "contextmenu", cancelContextMenu);
      },
      onPressEnd: () => {
        clearAsync();
        removeAllGlobalListeners();
      },
      onFocus,
      onBlur
    }
  };
}

// node_modules/@react-aria/datepicker/dist/useDateSegment.mjs
function $32489daedd52963e$export$1315d136e6f7581(segment, state, ref) {
  let enteredKeys = (0, import_react186.useRef)("");
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let displayNames = (0, $3aeceb3a64eb8358$export$d42c60378c8168f8)();
  let { ariaLabel, ariaLabelledBy, ariaDescribedBy, focusManager } = (0, $16f0b7bb276bc17e$export$653eddfc964b0f8a).get(state);
  let textValue = segment.isPlaceholder ? "" : segment.text;
  let options = (0, import_react186.useMemo)(() => state.dateFormatter.resolvedOptions(), [
    state.dateFormatter
  ]);
  let monthDateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    month: "long",
    timeZone: options.timeZone
  });
  let hourDateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    hour: "numeric",
    hour12: options.hour12,
    timeZone: options.timeZone
  });
  if (segment.type === "month" && !segment.isPlaceholder) {
    let monthTextValue = monthDateFormatter.format(state.dateValue);
    textValue = monthTextValue !== textValue ? `${textValue} – ${monthTextValue}` : monthTextValue;
  } else if (segment.type === "hour" && !segment.isPlaceholder) textValue = hourDateFormatter.format(state.dateValue);
  let { spinButtonProps } = (0, $d2e8511e6f209edf$export$e908e06f4b8e3402)({
    // The ARIA spec says aria-valuenow is optional if there's no value, but aXe seems to require it.
    // This doesn't seem to have any negative effects with real AT since we also use aria-valuetext.
    // https://github.com/dequelabs/axe-core/issues/3505
    value: segment.value,
    textValue,
    minValue: segment.minValue,
    maxValue: segment.maxValue,
    isDisabled: state.isDisabled,
    isReadOnly: state.isReadOnly || !segment.isEditable,
    isRequired: state.isRequired,
    onIncrement: () => {
      enteredKeys.current = "";
      state.increment(segment.type);
    },
    onDecrement: () => {
      enteredKeys.current = "";
      state.decrement(segment.type);
    },
    onIncrementPage: () => {
      enteredKeys.current = "";
      state.incrementPage(segment.type);
    },
    onDecrementPage: () => {
      enteredKeys.current = "";
      state.decrementPage(segment.type);
    },
    onIncrementToMax: () => {
      enteredKeys.current = "";
      state.setSegment(segment.type, segment.maxValue);
    },
    onDecrementToMin: () => {
      enteredKeys.current = "";
      state.setSegment(segment.type, segment.minValue);
    }
  });
  let parser = (0, import_react186.useMemo)(() => new (0, $6c7bd7858deea686$export$cd11ab140839f11d)(locale, {
    maximumFractionDigits: 0
  }), [
    locale
  ]);
  let backspace = () => {
    if (segment.text === segment.placeholder) focusManager.focusPrevious();
    if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly && !segment.isPlaceholder) {
      let newValue = segment.text.slice(0, -1);
      let parsed = parser.parse(newValue);
      newValue = parsed === 0 ? "" : newValue;
      if (newValue.length === 0 || parsed === 0) state.clearSegment(segment.type);
      else state.setSegment(segment.type, parsed);
      enteredKeys.current = newValue;
    } else if (segment.type === "dayPeriod") state.clearSegment(segment.type);
  };
  let onKeyDown = (e) => {
    if (e.key === "a" && ((0, $c87311424ea30a05$export$9ac100e40613ea10)() ? e.metaKey : e.ctrlKey)) e.preventDefault();
    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) return;
    switch (e.key) {
      case "Backspace":
      case "Delete":
        e.preventDefault();
        e.stopPropagation();
        backspace();
        break;
    }
  };
  let { startsWith: startsWith4 } = (0, $bb77f239b46e8c72$export$3274cf84b703fff)({
    sensitivity: "base"
  });
  let amPmFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    hour: "numeric",
    hour12: true
  });
  let am = (0, import_react186.useMemo)(() => {
    let date = /* @__PURE__ */ new Date();
    date.setHours(0);
    return amPmFormatter.formatToParts(date).find((part) => part.type === "dayPeriod").value;
  }, [
    amPmFormatter
  ]);
  let pm = (0, import_react186.useMemo)(() => {
    let date = /* @__PURE__ */ new Date();
    date.setHours(12);
    return amPmFormatter.formatToParts(date).find((part) => part.type === "dayPeriod").value;
  }, [
    amPmFormatter
  ]);
  let eraFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    year: "numeric",
    era: "narrow",
    timeZone: "UTC"
  });
  let eras = (0, import_react186.useMemo)(() => {
    if (segment.type !== "era") return [];
    let date = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(1, 1, 1), state.calendar);
    let eras2 = state.calendar.getEras().map((era) => {
      let eraDate = date.set({
        year: 1,
        month: 1,
        day: 1,
        era
      }).toDate("UTC");
      let parts = eraFormatter.formatToParts(eraDate);
      let formatted = parts.find((p2) => p2.type === "era").value;
      return {
        era,
        formatted
      };
    });
    let prefixLength = $32489daedd52963e$var$commonPrefixLength(eras2.map((era) => era.formatted));
    if (prefixLength) for (let era of eras2) era.formatted = era.formatted.slice(prefixLength);
    return eras2;
  }, [
    eraFormatter,
    state.calendar,
    segment.type
  ]);
  let onInput = (key) => {
    if (state.isDisabled || state.isReadOnly) return;
    let newValue = enteredKeys.current + key;
    switch (segment.type) {
      case "dayPeriod":
        if (startsWith4(am, key)) state.setSegment("dayPeriod", 0);
        else if (startsWith4(pm, key)) state.setSegment("dayPeriod", 12);
        else break;
        focusManager.focusNext();
        break;
      case "era": {
        let matched = eras.find((e) => startsWith4(e.formatted, key));
        if (matched) {
          state.setSegment("era", matched.era);
          focusManager.focusNext();
        }
        break;
      }
      case "day":
      case "hour":
      case "minute":
      case "second":
      case "month":
      case "year": {
        if (!parser.isValidPartialNumber(newValue)) return;
        let numberValue = parser.parse(newValue);
        let segmentValue = numberValue;
        let allowsZero = segment.minValue === 0;
        if (segment.type === "hour" && state.dateFormatter.resolvedOptions().hour12) {
          switch (state.dateFormatter.resolvedOptions().hourCycle) {
            case "h11":
              if (numberValue > 11) segmentValue = parser.parse(key);
              break;
            case "h12":
              allowsZero = false;
              if (numberValue > 12) segmentValue = parser.parse(key);
              break;
          }
          if (segment.value >= 12 && numberValue > 1) numberValue += 12;
        } else if (numberValue > segment.maxValue) segmentValue = parser.parse(key);
        if (isNaN(numberValue)) return;
        let shouldSetValue = segmentValue !== 0 || allowsZero;
        if (shouldSetValue) state.setSegment(segment.type, segmentValue);
        if (Number(numberValue + "0") > segment.maxValue || newValue.length >= String(segment.maxValue).length) {
          enteredKeys.current = "";
          if (shouldSetValue) focusManager.focusNext();
        } else enteredKeys.current = newValue;
        break;
      }
    }
  };
  let onFocus = () => {
    enteredKeys.current = "";
    (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
      containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
    });
    let selection = window.getSelection();
    selection.collapse(ref.current);
  };
  let documentRef = (0, import_react186.useRef)(typeof document !== "undefined" ? document : null);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(documentRef, "selectionchange", () => {
    let selection = window.getSelection();
    if (ref.current && ref.current.contains(selection.anchorNode)) selection.collapse(ref.current);
  });
  let compositionRef = (0, import_react186.useRef)("");
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "beforeinput", (e) => {
    e.preventDefault();
    switch (e.inputType) {
      case "deleteContentBackward":
      case "deleteContentForward":
        if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly) backspace();
        break;
      case "insertCompositionText":
        compositionRef.current = ref.current.textContent;
        ref.current.textContent = ref.current.textContent;
        break;
      default:
        if (e.data != null) onInput(e.data);
        break;
    }
  });
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "input", (e) => {
    let { inputType, data } = e;
    switch (inputType) {
      case "insertCompositionText":
        ref.current.textContent = compositionRef.current;
        if (startsWith4(am, data) || startsWith4(pm, data)) onInput(data);
        break;
    }
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let element = ref.current;
    return () => {
      if (document.activeElement === element) {
        let prev = focusManager.focusPrevious();
        if (!prev) focusManager.focusNext();
      }
    };
  }, [
    ref,
    focusManager
  ]);
  let touchPropOverrides = (0, $c87311424ea30a05$export$fedb369cb70207f1)() || segment.type === "timeZoneName" ? {
    role: "textbox",
    "aria-valuemax": null,
    "aria-valuemin": null,
    "aria-valuetext": null,
    "aria-valuenow": null
  } : {};
  let firstSegment = (0, import_react186.useMemo)(() => state.segments.find((s) => s.isEditable), [
    state.segments
  ]);
  if (segment !== firstSegment && !state.isInvalid) ariaDescribedBy = void 0;
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let isEditable = !state.isDisabled && !state.isReadOnly && segment.isEditable;
  let name = segment.type === "literal" ? "" : displayNames.of(segment.type);
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    "aria-label": `${name}${ariaLabel ? `, ${ariaLabel}` : ""}${ariaLabelledBy ? ", " : ""}`,
    "aria-labelledby": ariaLabelledBy
  });
  if (segment.type === "literal") return {
    segmentProps: {
      "aria-hidden": true
    }
  };
  return {
    segmentProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(spinButtonProps, labelProps, {
      id,
      ...touchPropOverrides,
      "aria-invalid": state.isInvalid ? "true" : void 0,
      "aria-describedby": ariaDescribedBy,
      "aria-readonly": state.isReadOnly || !segment.isEditable ? "true" : void 0,
      "data-placeholder": segment.isPlaceholder || void 0,
      contentEditable: isEditable,
      suppressContentEditableWarning: isEditable,
      spellCheck: isEditable ? "false" : void 0,
      autoCorrect: isEditable ? "off" : void 0,
      // Capitalization was changed in React 17...
      [parseInt((0, import_react186.default).version, 10) >= 17 ? "enterKeyHint" : "enterkeyhint"]: isEditable ? "next" : void 0,
      inputMode: state.isDisabled || segment.type === "dayPeriod" || segment.type === "era" || !isEditable ? void 0 : "numeric",
      tabIndex: state.isDisabled ? void 0 : 0,
      onKeyDown,
      onFocus,
      style: {
        caretColor: "transparent"
      },
      // Prevent pointer events from reaching useDatePickerGroup, and allow native browser behavior to focus the segment.
      onPointerDown(e) {
        e.stopPropagation();
      },
      onMouseDown(e) {
        e.stopPropagation();
      }
    })
  };
}
function $32489daedd52963e$var$commonPrefixLength(strings) {
  strings.sort();
  let first = strings[0];
  let last = strings[strings.length - 1];
  for (let i = 0; i < first.length; i++) {
    if (first[i] !== last[i]) return i;
  }
  return 0;
}

// node_modules/@react-aria/datepicker/dist/useDateRangePicker.mjs
var import_react187 = __toESM(require_react(), 1);
function $parcel$interopDefault5(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
function $887cac91b7cc8801$export$12fd5f0e9f4bb192(props, state, ref) {
  var _state_value, _state_value1;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault5($dfb4eba373ed9493$exports)), "@react-aria/datepicker");
  let { isInvalid, validationErrors, validationDetails } = state.displayValidation;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span",
    isInvalid,
    errorMessage: props.errorMessage || validationErrors
  });
  let labelledBy = fieldProps["aria-labelledby"] || fieldProps.id;
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let range = state.formatValue(locale, {
    month: "long"
  });
  let description = range ? stringFormatter.format("selectedRangeDescription", {
    startDate: range.start,
    endDate: range.end
  }) : "";
  let descProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let startFieldProps = {
    "aria-label": stringFormatter.format("startDate"),
    "aria-labelledby": labelledBy
  };
  let endFieldProps = {
    "aria-label": stringFormatter.format("endDate"),
    "aria-labelledby": labelledBy
  };
  let buttonId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let dialogId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let groupProps = (0, $3dfb0f96be0d6a08$export$4a931266a3838b86)(state, ref);
  let ariaDescribedBy = [
    descProps["aria-describedby"],
    fieldProps["aria-describedby"]
  ].filter(Boolean).join(" ") || void 0;
  let focusManager = (0, import_react187.useMemo)(() => (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref, {
    // Exclude the button from the focus manager.
    accept: (element) => element.id !== buttonId
  }), [
    ref,
    buttonId
  ]);
  let commonFieldProps = {
    [(0, $16f0b7bb276bc17e$export$7b3062cd49e80452)]: focusManager,
    [(0, $16f0b7bb276bc17e$export$300019f83c56d282)]: "presentation",
    "aria-describedby": ariaDescribedBy,
    placeholderValue: props.placeholderValue,
    hideTimeZone: props.hideTimeZone,
    hourCycle: props.hourCycle,
    granularity: props.granularity,
    shouldForceLeadingZeros: props.shouldForceLeadingZeros,
    isDisabled: props.isDisabled,
    isReadOnly: props.isReadOnly,
    isRequired: props.isRequired,
    validationBehavior: props.validationBehavior
  };
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec3)({
    ...props,
    isDisabled: state.isOpen,
    onBlurWithin: props.onBlur,
    onFocusWithin: props.onFocus,
    onFocusWithinChange: props.onFocusChange
  });
  let startFieldValidation = (0, import_react187.useRef)((0, $e5be200c675c3b3a$export$dad6ae84456c676a));
  let endFieldValidation = (0, import_react187.useRef)((0, $e5be200c675c3b3a$export$dad6ae84456c676a));
  return {
    groupProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, groupProps, fieldProps, descProps, focusWithinProps, {
      role: "group",
      "aria-disabled": props.isDisabled || null,
      "aria-describedby": ariaDescribedBy,
      onKeyDown(e) {
        if (state.isOpen) return;
        if (props.onKeyDown) props.onKeyDown(e);
      },
      onKeyUp(e) {
        if (state.isOpen) return;
        if (props.onKeyUp) props.onKeyUp(e);
      }
    }),
    labelProps: {
      ...labelProps,
      onClick: () => {
        focusManager.focusFirst();
      }
    },
    buttonProps: {
      ...descProps,
      id: buttonId,
      "aria-haspopup": "dialog",
      "aria-label": stringFormatter.format("calendar"),
      "aria-labelledby": `${buttonId} ${labelledBy}`,
      "aria-describedby": ariaDescribedBy,
      "aria-expanded": state.isOpen,
      isDisabled: props.isDisabled || props.isReadOnly,
      onPress: () => state.setOpen(true)
    },
    dialogProps: {
      id: dialogId,
      "aria-labelledby": `${buttonId} ${labelledBy}`
    },
    startFieldProps: {
      ...startFieldProps,
      ...commonFieldProps,
      value: (_state_value = state.value) === null || _state_value === void 0 ? void 0 : _state_value.start,
      onChange: (start) => state.setDateTime("start", start),
      autoFocus: props.autoFocus,
      name: props.startName,
      [(0, $e5be200c675c3b3a$export$a763b9476acd3eb)]: {
        realtimeValidation: state.realtimeValidation,
        displayValidation: state.displayValidation,
        updateValidation(e) {
          startFieldValidation.current = e;
          state.updateValidation((0, $e5be200c675c3b3a$export$75ee7c75d68f5b0e)(e, endFieldValidation.current));
        },
        resetValidation: state.resetValidation,
        commitValidation: state.commitValidation
      }
    },
    endFieldProps: {
      ...endFieldProps,
      ...commonFieldProps,
      value: (_state_value1 = state.value) === null || _state_value1 === void 0 ? void 0 : _state_value1.end,
      onChange: (end) => state.setDateTime("end", end),
      name: props.endName,
      [(0, $e5be200c675c3b3a$export$a763b9476acd3eb)]: {
        realtimeValidation: state.realtimeValidation,
        displayValidation: state.displayValidation,
        updateValidation(e) {
          endFieldValidation.current = e;
          state.updateValidation((0, $e5be200c675c3b3a$export$75ee7c75d68f5b0e)(startFieldValidation.current, e));
        },
        resetValidation: state.resetValidation,
        commitValidation: state.commitValidation
      }
    },
    descriptionProps,
    errorMessageProps,
    calendarProps: {
      autoFocus: true,
      value: state.dateRange,
      onChange: state.setDateRange,
      minValue: props.minValue,
      maxValue: props.maxValue,
      isDisabled: props.isDisabled,
      isReadOnly: props.isReadOnly,
      isDateUnavailable: props.isDateUnavailable,
      allowsNonContiguousRanges: props.allowsNonContiguousRanges,
      defaultFocusedValue: state.dateRange ? void 0 : props.placeholderValue,
      isInvalid: state.isInvalid,
      errorMessage: typeof props.errorMessage === "function" ? props.errorMessage(state.displayValidation) : props.errorMessage || state.displayValidation.validationErrors.join(" ")
    },
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-stately/datepicker/dist/ar-AE.mjs
var $b3427c06585c22a0$exports = {};
$b3427c06585c22a0$exports = {
  "rangeOverflow": (args) => `يجب أن تكون القيمة ${args.maxValue} أو قبل ذلك.`,
  "rangeReversed": `تاريخ البدء يجب أن يكون قبل تاريخ الانتهاء.`,
  "rangeUnderflow": (args) => `يجب أن تكون القيمة ${args.minValue} أو بعد ذلك.`,
  "unavailableDate": `البيانات المحددة غير متاحة.`
};

// node_modules/@react-stately/datepicker/dist/bg-BG.mjs
var $d282528f459122b9$exports = {};
$d282528f459122b9$exports = {
  "rangeOverflow": (args) => `Стойността трябва да е ${args.maxValue} или по-ранна.`,
  "rangeReversed": `Началната дата трябва да е преди крайната.`,
  "rangeUnderflow": (args) => `Стойността трябва да е ${args.minValue} или по-късно.`,
  "unavailableDate": `Избраната дата не е налична.`
};

// node_modules/@react-stately/datepicker/dist/cs-CZ.mjs
var $2d5eecd634a9ca45$exports = {};
$2d5eecd634a9ca45$exports = {
  "rangeOverflow": (args) => `Hodnota musí být ${args.maxValue} nebo dřívější.`,
  "rangeReversed": `Datum zahájení musí předcházet datu ukončení.`,
  "rangeUnderflow": (args) => `Hodnota musí být ${args.minValue} nebo pozdější.`,
  "unavailableDate": `Vybrané datum není k dispozici.`
};

// node_modules/@react-stately/datepicker/dist/da-DK.mjs
var $c8e2288226c24a67$exports = {};
$c8e2288226c24a67$exports = {
  "rangeOverflow": (args) => `Værdien skal være ${args.maxValue} eller tidligere.`,
  "rangeReversed": `Startdatoen skal være før slutdatoen.`,
  "rangeUnderflow": (args) => `Værdien skal være ${args.minValue} eller nyere.`,
  "unavailableDate": `Den valgte dato er ikke tilgængelig.`
};

// node_modules/@react-stately/datepicker/dist/de-DE.mjs
var $6f5745e389c346d7$exports = {};
$6f5745e389c346d7$exports = {
  "rangeOverflow": (args) => `Der Wert muss ${args.maxValue} oder früher sein.`,
  "rangeReversed": `Das Anfangsdatum muss vor dem Enddatum liegen.`,
  "rangeUnderflow": (args) => `Der Wert muss ${args.minValue} oder später sein.`,
  "unavailableDate": `Das ausgewählte Datum ist nicht verfügbar.`
};

// node_modules/@react-stately/datepicker/dist/el-GR.mjs
var $8c882ccf4300d1da$exports = {};
$8c882ccf4300d1da$exports = {
  "rangeOverflow": (args) => `Η τιμή πρέπει να είναι ${args.maxValue} ή παλαιότερη.`,
  "rangeReversed": `Η ημερομηνία έναρξης πρέπει να είναι πριν από την ημερομηνία λήξης.`,
  "rangeUnderflow": (args) => `Η τιμή πρέπει να είναι ${args.minValue} ή μεταγενέστερη.`,
  "unavailableDate": `Η επιλεγμένη ημερομηνία δεν είναι διαθέσιμη.`
};

// node_modules/@react-stately/datepicker/dist/en-US.mjs
var $22195056771860be$exports = {};
$22195056771860be$exports = {
  "rangeUnderflow": (args) => `Value must be ${args.minValue} or later.`,
  "rangeOverflow": (args) => `Value must be ${args.maxValue} or earlier.`,
  "rangeReversed": `Start date must be before end date.`,
  "unavailableDate": `Selected date unavailable.`
};

// node_modules/@react-stately/datepicker/dist/es-ES.mjs
var $cedfa43b4e2a5906$exports = {};
$cedfa43b4e2a5906$exports = {
  "rangeOverflow": (args) => `El valor debe ser ${args.maxValue} o anterior.`,
  "rangeReversed": `La fecha de inicio debe ser anterior a la fecha de finalización.`,
  "rangeUnderflow": (args) => `El valor debe ser ${args.minValue} o posterior.`,
  "unavailableDate": `Fecha seleccionada no disponible.`
};

// node_modules/@react-stately/datepicker/dist/et-EE.mjs
var $eeeaa8daee3601c7$exports = {};
$eeeaa8daee3601c7$exports = {
  "rangeOverflow": (args) => `Väärtus peab olema ${args.maxValue} või varasem.`,
  "rangeReversed": `Alguskuupäev peab olema enne lõppkuupäeva.`,
  "rangeUnderflow": (args) => `Väärtus peab olema ${args.minValue} või hilisem.`,
  "unavailableDate": `Valitud kuupäev pole saadaval.`
};

// node_modules/@react-stately/datepicker/dist/fi-FI.mjs
var $35e0614a49b3bb40$exports = {};
$35e0614a49b3bb40$exports = {
  "rangeOverflow": (args) => `Arvon on oltava ${args.maxValue} tai sitä aikaisempi.`,
  "rangeReversed": `Aloituspäivän on oltava ennen lopetuspäivää.`,
  "rangeUnderflow": (args) => `Arvon on oltava ${args.minValue} tai sitä myöhäisempi.`,
  "unavailableDate": `Valittu päivämäärä ei ole käytettävissä.`
};

// node_modules/@react-stately/datepicker/dist/fr-FR.mjs
var $929bc63f7705a78f$exports = {};
$929bc63f7705a78f$exports = {
  "rangeOverflow": (args) => `La valeur doit être ${args.maxValue} ou antérieure.`,
  "rangeReversed": `La date de début doit être antérieure à la date de fin.`,
  "rangeUnderflow": (args) => `La valeur doit être ${args.minValue} ou ultérieure.`,
  "unavailableDate": `La date sélectionnée n’est pas disponible.`
};

// node_modules/@react-stately/datepicker/dist/he-IL.mjs
var $9a28d073b034d183$exports = {};
$9a28d073b034d183$exports = {
  "rangeOverflow": (args) => `הערך חייב להיות ${args.maxValue} או מוקדם יותר.`,
  "rangeReversed": `תאריך ההתחלה חייב להיות לפני תאריך הסיום.`,
  "rangeUnderflow": (args) => `הערך חייב להיות ${args.minValue} או מאוחר יותר.`,
  "unavailableDate": `התאריך הנבחר אינו זמין.`
};

// node_modules/@react-stately/datepicker/dist/hr-HR.mjs
var $7743e79780ebcca3$exports = {};
$7743e79780ebcca3$exports = {
  "rangeOverflow": (args) => `Vrijednost mora biti ${args.maxValue} ili ranije.`,
  "rangeReversed": `Datum početka mora biti prije datuma završetka.`,
  "rangeUnderflow": (args) => `Vrijednost mora biti ${args.minValue} ili kasnije.`,
  "unavailableDate": `Odabrani datum nije dostupan.`
};

// node_modules/@react-stately/datepicker/dist/hu-HU.mjs
var $3351817a04898858$exports = {};
$3351817a04898858$exports = {
  "rangeOverflow": (args) => `Az értéknek ${args.maxValue} vagy korábbinak kell lennie.`,
  "rangeReversed": `A kezdő dátumnak a befejező dátumnál korábbinak kell lennie.`,
  "rangeUnderflow": (args) => `Az értéknek ${args.minValue} vagy későbbinek kell lennie.`,
  "unavailableDate": `A kiválasztott dátum nem érhető el.`
};

// node_modules/@react-stately/datepicker/dist/it-IT.mjs
var $4120bdb1d03484db$exports = {};
$4120bdb1d03484db$exports = {
  "rangeOverflow": (args) => `Il valore deve essere ${args.maxValue} o precedente.`,
  "rangeReversed": `La data di inizio deve essere antecedente alla data di fine.`,
  "rangeUnderflow": (args) => `Il valore deve essere ${args.minValue} o successivo.`,
  "unavailableDate": `Data selezionata non disponibile.`
};

// node_modules/@react-stately/datepicker/dist/ja-JP.mjs
var $65e5e1569f34ea4f$exports = {};
$65e5e1569f34ea4f$exports = {
  "rangeOverflow": (args) => `値は ${args.maxValue} 以下にする必要があります。`,
  "rangeReversed": `開始日は終了日より前にする必要があります。`,
  "rangeUnderflow": (args) => `値は ${args.minValue} 以上にする必要があります。`,
  "unavailableDate": `選択した日付は使用できません。`
};

// node_modules/@react-stately/datepicker/dist/ko-KR.mjs
var $d34552a7550967e7$exports = {};
$d34552a7550967e7$exports = {
  "rangeOverflow": (args) => `값은 ${args.maxValue} 이전이어야 합니다.`,
  "rangeReversed": `시작일은 종료일 이전이어야 합니다.`,
  "rangeUnderflow": (args) => `값은 ${args.minValue} 이상이어야 합니다.`,
  "unavailableDate": `선택한 날짜를 사용할 수 없습니다.`
};

// node_modules/@react-stately/datepicker/dist/lt-LT.mjs
var $8f855bffe63f6eca$exports = {};
$8f855bffe63f6eca$exports = {
  "rangeOverflow": (args) => `Reikšmė turi būti ${args.maxValue} arba ankstesnė.`,
  "rangeReversed": `Pradžios data turi būti ankstesnė nei pabaigos data.`,
  "rangeUnderflow": (args) => `Reikšmė turi būti ${args.minValue} arba naujesnė.`,
  "unavailableDate": `Pasirinkta data nepasiekiama.`
};

// node_modules/@react-stately/datepicker/dist/lv-LV.mjs
var $ce40f46d09034645$exports = {};
$ce40f46d09034645$exports = {
  "rangeOverflow": (args) => `Vērtībai ir jābūt ${args.maxValue} vai agrākai.`,
  "rangeReversed": `Sākuma datumam ir jābūt pirms beigu datuma.`,
  "rangeUnderflow": (args) => `Vērtībai ir jābūt ${args.minValue} vai vēlākai.`,
  "unavailableDate": `Atlasītais datums nav pieejams.`
};

// node_modules/@react-stately/datepicker/dist/nb-NO.mjs
var $dd1a9a73340c793e$exports = {};
$dd1a9a73340c793e$exports = {
  "rangeOverflow": (args) => `Verdien må være ${args.maxValue} eller tidligere.`,
  "rangeReversed": `Startdatoen må være før sluttdatoen.`,
  "rangeUnderflow": (args) => `Verdien må være ${args.minValue} eller senere.`,
  "unavailableDate": `Valgt dato utilgjengelig.`
};

// node_modules/@react-stately/datepicker/dist/nl-NL.mjs
var $4ee1fb3f0cbe6f59$exports = {};
$4ee1fb3f0cbe6f59$exports = {
  "rangeOverflow": (args) => `Waarde moet ${args.maxValue} of eerder zijn.`,
  "rangeReversed": `De startdatum moet voor de einddatum liggen.`,
  "rangeUnderflow": (args) => `Waarde moet ${args.minValue} of later zijn.`,
  "unavailableDate": `Geselecteerde datum niet beschikbaar.`
};

// node_modules/@react-stately/datepicker/dist/pl-PL.mjs
var $c85829aebb0bc94b$exports = {};
$c85829aebb0bc94b$exports = {
  "rangeOverflow": (args) => `Wartość musi mieć wartość ${args.maxValue} lub wcześniejszą.`,
  "rangeReversed": `Data rozpoczęcia musi być wcześniejsza niż data zakończenia.`,
  "rangeUnderflow": (args) => `Wartość musi mieć wartość ${args.minValue} lub późniejszą.`,
  "unavailableDate": `Wybrana data jest niedostępna.`
};

// node_modules/@react-stately/datepicker/dist/pt-BR.mjs
var $27f5cd2291ca8a02$exports = {};
$27f5cd2291ca8a02$exports = {
  "rangeOverflow": (args) => `O valor deve ser ${args.maxValue} ou anterior.`,
  "rangeReversed": `A data inicial deve ser anterior à data final.`,
  "rangeUnderflow": (args) => `O valor deve ser ${args.minValue} ou posterior.`,
  "unavailableDate": `Data selecionada indisponível.`
};

// node_modules/@react-stately/datepicker/dist/pt-PT.mjs
var $e046fdccd69bea8e$exports = {};
$e046fdccd69bea8e$exports = {
  "rangeOverflow": (args) => `O valor tem de ser ${args.maxValue} ou anterior.`,
  "rangeReversed": `A data de início deve ser anterior à data de fim.`,
  "rangeUnderflow": (args) => `O valor tem de ser ${args.minValue} ou posterior.`,
  "unavailableDate": `Data selecionada indisponível.`
};

// node_modules/@react-stately/datepicker/dist/ro-RO.mjs
var $fa5f88e804986547$exports = {};
$fa5f88e804986547$exports = {
  "rangeOverflow": (args) => `Valoarea trebuie să fie ${args.maxValue} sau anterioară.`,
  "rangeReversed": `Data de început trebuie să fie anterioară datei de sfârșit.`,
  "rangeUnderflow": (args) => `Valoarea trebuie să fie ${args.minValue} sau ulterioară.`,
  "unavailableDate": `Data selectată nu este disponibilă.`
};

// node_modules/@react-stately/datepicker/dist/ru-RU.mjs
var $28e4714602d1b568$exports = {};
$28e4714602d1b568$exports = {
  "rangeOverflow": (args) => `Значение должно быть не позже ${args.maxValue}.`,
  "rangeReversed": `Дата начала должна предшествовать дате окончания.`,
  "rangeUnderflow": (args) => `Значение должно быть не раньше ${args.minValue}.`,
  "unavailableDate": `Выбранная дата недоступна.`
};

// node_modules/@react-stately/datepicker/dist/sk-SK.mjs
var $4e3bc8cf783ad569$exports = {};
$4e3bc8cf783ad569$exports = {
  "rangeOverflow": (args) => `Hodnota musí byť ${args.maxValue} alebo skoršia.`,
  "rangeReversed": `Dátum začiatku musí byť skorší ako dátum konca.`,
  "rangeUnderflow": (args) => `Hodnota musí byť ${args.minValue} alebo neskoršia.`,
  "unavailableDate": `Vybratý dátum je nedostupný.`
};

// node_modules/@react-stately/datepicker/dist/sl-SI.mjs
var $bee07513333bdc15$exports = {};
$bee07513333bdc15$exports = {
  "rangeOverflow": (args) => `Vrednost mora biti ${args.maxValue} ali starejša.`,
  "rangeReversed": `Začetni datum mora biti pred končnim datumom.`,
  "rangeUnderflow": (args) => `Vrednost mora biti ${args.minValue} ali novejša.`,
  "unavailableDate": `Izbrani datum ni na voljo.`
};

// node_modules/@react-stately/datepicker/dist/sr-SP.mjs
var $7ed9c6fad16a15ec$exports = {};
$7ed9c6fad16a15ec$exports = {
  "rangeOverflow": (args) => `Vrednost mora da bude ${args.maxValue} ili starija.`,
  "rangeReversed": `Datum početka mora biti pre datuma završetka.`,
  "rangeUnderflow": (args) => `Vrednost mora da bude ${args.minValue} ili novija.`,
  "unavailableDate": `Izabrani datum nije dostupan.`
};

// node_modules/@react-stately/datepicker/dist/sv-SE.mjs
var $8bef6d5a236de86c$exports = {};
$8bef6d5a236de86c$exports = {
  "rangeOverflow": (args) => `Värdet måste vara ${args.maxValue} eller tidigare.`,
  "rangeReversed": `Startdatumet måste vara före slutdatumet.`,
  "rangeUnderflow": (args) => `Värdet måste vara ${args.minValue} eller senare.`,
  "unavailableDate": `Det valda datumet är inte tillgängligt.`
};

// node_modules/@react-stately/datepicker/dist/tr-TR.mjs
var $098b9a2d2340cfc5$exports = {};
$098b9a2d2340cfc5$exports = {
  "rangeOverflow": (args) => `Değer, ${args.maxValue} veya öncesi olmalıdır.`,
  "rangeReversed": `Başlangıç tarihi bitiş tarihinden önce olmalıdır.`,
  "rangeUnderflow": (args) => `Değer, ${args.minValue} veya sonrası olmalıdır.`,
  "unavailableDate": `Seçilen tarih kullanılamıyor.`
};

// node_modules/@react-stately/datepicker/dist/uk-UA.mjs
var $54a862ea7fad7419$exports = {};
$54a862ea7fad7419$exports = {
  "rangeOverflow": (args) => `Значення має бути не пізніше ${args.maxValue}.`,
  "rangeReversed": `Дата початку має передувати даті завершення.`,
  "rangeUnderflow": (args) => `Значення має бути не раніше ${args.minValue}.`,
  "unavailableDate": `Вибрана дата недоступна.`
};

// node_modules/@react-stately/datepicker/dist/zh-CN.mjs
var $e6cc491d590dfda5$exports = {};
$e6cc491d590dfda5$exports = {
  "rangeOverflow": (args) => `值必须是 ${args.maxValue} 或更早日期。`,
  "rangeReversed": `开始日期必须早于结束日期。`,
  "rangeUnderflow": (args) => `值必须是 ${args.minValue} 或更晚日期。`,
  "unavailableDate": `所选日期不可用。`
};

// node_modules/@react-stately/datepicker/dist/zh-TW.mjs
var $9aebf53181a474bd$exports = {};
$9aebf53181a474bd$exports = {
  "rangeOverflow": (args) => `值必須是 ${args.maxValue} 或更早。`,
  "rangeReversed": `開始日期必須在結束日期之前。`,
  "rangeUnderflow": (args) => `值必須是 ${args.minValue} 或更晚。`,
  "unavailableDate": `所選日期無法使用。`
};

// node_modules/@react-stately/datepicker/dist/intlStrings.mjs
var $452ac34de8c2444e$exports = {};
$452ac34de8c2444e$exports = {
  "ar-AE": $b3427c06585c22a0$exports,
  "bg-BG": $d282528f459122b9$exports,
  "cs-CZ": $2d5eecd634a9ca45$exports,
  "da-DK": $c8e2288226c24a67$exports,
  "de-DE": $6f5745e389c346d7$exports,
  "el-GR": $8c882ccf4300d1da$exports,
  "en-US": $22195056771860be$exports,
  "es-ES": $cedfa43b4e2a5906$exports,
  "et-EE": $eeeaa8daee3601c7$exports,
  "fi-FI": $35e0614a49b3bb40$exports,
  "fr-FR": $929bc63f7705a78f$exports,
  "he-IL": $9a28d073b034d183$exports,
  "hr-HR": $7743e79780ebcca3$exports,
  "hu-HU": $3351817a04898858$exports,
  "it-IT": $4120bdb1d03484db$exports,
  "ja-JP": $65e5e1569f34ea4f$exports,
  "ko-KR": $d34552a7550967e7$exports,
  "lt-LT": $8f855bffe63f6eca$exports,
  "lv-LV": $ce40f46d09034645$exports,
  "nb-NO": $dd1a9a73340c793e$exports,
  "nl-NL": $4ee1fb3f0cbe6f59$exports,
  "pl-PL": $c85829aebb0bc94b$exports,
  "pt-BR": $27f5cd2291ca8a02$exports,
  "pt-PT": $e046fdccd69bea8e$exports,
  "ro-RO": $fa5f88e804986547$exports,
  "ru-RU": $28e4714602d1b568$exports,
  "sk-SK": $4e3bc8cf783ad569$exports,
  "sl-SI": $bee07513333bdc15$exports,
  "sr-SP": $7ed9c6fad16a15ec$exports,
  "sv-SE": $8bef6d5a236de86c$exports,
  "tr-TR": $098b9a2d2340cfc5$exports,
  "uk-UA": $54a862ea7fad7419$exports,
  "zh-CN": $e6cc491d590dfda5$exports,
  "zh-TW": $9aebf53181a474bd$exports
};

// node_modules/@react-stately/datepicker/dist/utils.mjs
var import_react188 = __toESM(require_react(), 1);
function $parcel$interopDefault6(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
var $35a22f14a1f04b11$var$dictionary = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)((0, $parcel$interopDefault6($452ac34de8c2444e$exports)));
function $35a22f14a1f04b11$var$getLocale() {
  return typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
}
function $35a22f14a1f04b11$export$f18627323ab57ac0(value, minValue, maxValue, isDateUnavailable, options) {
  let rangeOverflow = value != null && maxValue != null && value.compare(maxValue) > 0;
  let rangeUnderflow = value != null && minValue != null && value.compare(minValue) < 0;
  let isUnavailable = value != null && (isDateUnavailable === null || isDateUnavailable === void 0 ? void 0 : isDateUnavailable(value)) || false;
  let isInvalid = rangeOverflow || rangeUnderflow || isUnavailable;
  let errors = [];
  if (isInvalid) {
    let locale = $35a22f14a1f04b11$var$getLocale();
    let strings = (0, $5b160d28a433310d$export$c17fa47878dc55b6).getGlobalDictionaryForPackage("@react-stately/datepicker") || $35a22f14a1f04b11$var$dictionary;
    let formatter = new (0, $6db58dc88e78b024$export$2f817fcdc4b89ae0)(locale, strings);
    let dateFormatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, $35a22f14a1f04b11$export$7e319ea407e63bc0({}, options));
    let timeZone = dateFormatter.resolvedOptions().timeZone;
    if (rangeUnderflow) errors.push(formatter.format("rangeUnderflow", {
      minValue: dateFormatter.format(minValue.toDate(timeZone))
    }));
    if (rangeOverflow) errors.push(formatter.format("rangeOverflow", {
      maxValue: dateFormatter.format(maxValue.toDate(timeZone))
    }));
    if (isUnavailable) errors.push(formatter.format("unavailableDate"));
  }
  return {
    isInvalid,
    validationErrors: errors,
    validationDetails: {
      badInput: isUnavailable,
      customError: false,
      patternMismatch: false,
      rangeOverflow,
      rangeUnderflow,
      stepMismatch: false,
      tooLong: false,
      tooShort: false,
      typeMismatch: false,
      valueMissing: false,
      valid: !isInvalid
    }
  };
}
function $35a22f14a1f04b11$export$80ff8fc0ae339c13(value, minValue, maxValue, isDateUnavailable, options) {
  let startValidation = $35a22f14a1f04b11$export$f18627323ab57ac0(value === null || value === void 0 ? void 0 : value.start, minValue, maxValue, isDateUnavailable, options);
  let endValidation = $35a22f14a1f04b11$export$f18627323ab57ac0(value === null || value === void 0 ? void 0 : value.end, minValue, maxValue, isDateUnavailable, options);
  let result = (0, $e5be200c675c3b3a$export$75ee7c75d68f5b0e)(startValidation, endValidation);
  if (value.end != null && value.start != null && value.end.compare(value.start) < 0) {
    let strings = (0, $5b160d28a433310d$export$c17fa47878dc55b6).getGlobalDictionaryForPackage("@react-stately/datepicker") || $35a22f14a1f04b11$var$dictionary;
    result = (0, $e5be200c675c3b3a$export$75ee7c75d68f5b0e)(result, {
      isInvalid: true,
      validationErrors: [
        strings.getStringForLocale("rangeReversed", $35a22f14a1f04b11$var$getLocale())
      ],
      validationDetails: {
        ...(0, $e5be200c675c3b3a$export$aca958c65c314e6c),
        rangeUnderflow: true,
        rangeOverflow: true,
        valid: false
      }
    });
  }
  return result;
}
var $35a22f14a1f04b11$var$DEFAULT_FIELD_OPTIONS = {
  year: "numeric",
  month: "numeric",
  day: "numeric",
  hour: "numeric",
  minute: "2-digit",
  second: "2-digit"
};
var $35a22f14a1f04b11$var$TWO_DIGIT_FIELD_OPTIONS = {
  year: "numeric",
  month: "2-digit",
  day: "2-digit",
  hour: "2-digit",
  minute: "2-digit",
  second: "2-digit"
};
function $35a22f14a1f04b11$export$7e319ea407e63bc0(fieldOptions, options) {
  let defaultFieldOptions = options.shouldForceLeadingZeros ? $35a22f14a1f04b11$var$TWO_DIGIT_FIELD_OPTIONS : $35a22f14a1f04b11$var$DEFAULT_FIELD_OPTIONS;
  fieldOptions = {
    ...defaultFieldOptions,
    ...fieldOptions
  };
  let granularity = options.granularity || "minute";
  let keys = Object.keys(fieldOptions);
  var _options_maxGranularity;
  let startIdx = keys.indexOf((_options_maxGranularity = options.maxGranularity) !== null && _options_maxGranularity !== void 0 ? _options_maxGranularity : "year");
  if (startIdx < 0) startIdx = 0;
  let endIdx = keys.indexOf(granularity);
  if (endIdx < 0) endIdx = 2;
  if (startIdx > endIdx) throw new Error("maxGranularity must be greater than granularity");
  let opts = keys.slice(startIdx, endIdx + 1).reduce((opts2, key) => {
    opts2[key] = fieldOptions[key];
    return opts2;
  }, {});
  if (options.hourCycle != null) opts.hour12 = options.hourCycle === 12;
  opts.timeZone = options.timeZone || "UTC";
  let hasTime = granularity === "hour" || granularity === "minute" || granularity === "second";
  if (hasTime && options.timeZone && !options.hideTimeZone) opts.timeZoneName = "short";
  if (options.showEra && startIdx === 0) opts.era = "short";
  return opts;
}
function $35a22f14a1f04b11$export$c5221a78ef73c5e9(placeholderValue) {
  if (placeholderValue && "hour" in placeholderValue) return placeholderValue;
  return new (0, $35ea8db9cb2ccb90$export$680ea196effce5f)();
}
function $35a22f14a1f04b11$export$61a490a80c552550(value, calendar) {
  if (value === null) return null;
  if (!value) return void 0;
  return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(value, calendar);
}
function $35a22f14a1f04b11$export$66aa2b09de4b1ea5(placeholderValue, granularity, calendar, timeZone) {
  if (placeholderValue) return $35a22f14a1f04b11$export$61a490a80c552550(placeholderValue, calendar);
  let date = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $14e0f24ef4ac5c92$export$461939dd4422153)(timeZone).set({
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  }), calendar);
  if (granularity === "year" || granularity === "month" || granularity === "day") return (0, $11d87f3f76e88657$export$93522d1a439f3617)(date);
  if (!timeZone) return (0, $11d87f3f76e88657$export$b21e0b124e224484)(date);
  return date;
}
function $35a22f14a1f04b11$export$2440da353cedad43(v2, granularity) {
  let defaultTimeZone = v2 && "timeZone" in v2 ? v2.timeZone : void 0;
  let defaultGranularity = v2 && "minute" in v2 ? "minute" : "day";
  if (v2 && granularity && !(granularity in v2)) throw new Error("Invalid granularity " + granularity + " for value " + v2.toString());
  let [lastValue, setLastValue] = (0, import_react188.useState)([
    defaultGranularity,
    defaultTimeZone
  ]);
  if (v2 && (lastValue[0] !== defaultGranularity || lastValue[1] !== defaultTimeZone)) setLastValue([
    defaultGranularity,
    defaultTimeZone
  ]);
  if (!granularity) granularity = v2 ? defaultGranularity : lastValue[0];
  let timeZone = v2 ? defaultTimeZone : lastValue[1];
  return [
    granularity,
    timeZone
  ];
}

// node_modules/@react-stately/overlays/dist/useOverlayTriggerState.mjs
var import_react189 = __toESM(require_react(), 1);
function $fc909762b330b746$export$61c6a8c84e605fb6(props) {
  let [isOpen, setOpen] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.isOpen, props.defaultOpen || false, props.onOpenChange);
  const open = (0, import_react189.useCallback)(() => {
    setOpen(true);
  }, [
    setOpen
  ]);
  const close = (0, import_react189.useCallback)(() => {
    setOpen(false);
  }, [
    setOpen
  ]);
  const toggle = (0, import_react189.useCallback)(() => {
    setOpen(!isOpen);
  }, [
    setOpen,
    isOpen
  ]);
  return {
    isOpen,
    setOpen,
    open,
    close,
    toggle
  };
}

// node_modules/@react-stately/datepicker/dist/useDatePickerState.mjs
var import_react190 = __toESM(require_react(), 1);
function $ab5bf3f618090389$export$87194bb378cc3ac2(props) {
  let overlayState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue || null, props.onChange);
  let v2 = value || props.placeholderValue;
  let [granularity, defaultTimeZone] = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v2, props.granularity);
  let dateValue = value != null ? value.toDate(defaultTimeZone !== null && defaultTimeZone !== void 0 ? defaultTimeZone : "UTC") : null;
  let hasTime = granularity === "hour" || granularity === "minute" || granularity === "second";
  var _props_shouldCloseOnSelect;
  let shouldCloseOnSelect = (_props_shouldCloseOnSelect = props.shouldCloseOnSelect) !== null && _props_shouldCloseOnSelect !== void 0 ? _props_shouldCloseOnSelect : true;
  let [selectedDate, setSelectedDate] = (0, import_react190.useState)(null);
  let [selectedTime, setSelectedTime] = (0, import_react190.useState)(null);
  if (value) {
    selectedDate = value;
    if ("hour" in value) selectedTime = value;
  }
  if (v2 && !(granularity in v2)) throw new Error("Invalid granularity " + granularity + " for value " + v2.toString());
  let showEra = (value === null || value === void 0 ? void 0 : value.calendar.identifier) === "gregory" && value.era === "BC";
  let formatOpts = (0, import_react190.useMemo)(() => ({
    granularity,
    timeZone: defaultTimeZone,
    hideTimeZone: props.hideTimeZone,
    hourCycle: props.hourCycle,
    shouldForceLeadingZeros: props.shouldForceLeadingZeros,
    showEra
  }), [
    granularity,
    props.hourCycle,
    props.shouldForceLeadingZeros,
    defaultTimeZone,
    props.hideTimeZone,
    showEra
  ]);
  let { minValue, maxValue, isDateUnavailable } = props;
  let builtinValidation = (0, import_react190.useMemo)(() => (0, $35a22f14a1f04b11$export$f18627323ab57ac0)(value, minValue, maxValue, isDateUnavailable, formatOpts), [
    value,
    minValue,
    maxValue,
    isDateUnavailable,
    formatOpts
  ]);
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value,
    builtinValidation
  });
  let isValueInvalid = validation.displayValidation.isInvalid;
  let validationState = props.validationState || (isValueInvalid ? "invalid" : null);
  let commitValue = (date, time) => {
    setValue("timeZone" in time ? time.set((0, $11d87f3f76e88657$export$93522d1a439f3617)(date)) : (0, $11d87f3f76e88657$export$b21e0b124e224484)(date, time));
    setSelectedDate(null);
    setSelectedTime(null);
    validation.commitValidation();
  };
  let selectDate = (newValue) => {
    let shouldClose = typeof shouldCloseOnSelect === "function" ? shouldCloseOnSelect() : shouldCloseOnSelect;
    if (hasTime) {
      if (selectedTime || shouldClose) commitValue(newValue, selectedTime || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue));
      else setSelectedDate(newValue);
    } else {
      setValue(newValue);
      validation.commitValidation();
    }
    if (shouldClose) overlayState.setOpen(false);
  };
  let selectTime = (newValue) => {
    if (selectedDate && newValue) commitValue(selectedDate, newValue);
    else setSelectedTime(newValue);
  };
  return {
    ...validation,
    value,
    setValue,
    dateValue: selectedDate,
    timeValue: selectedTime,
    setDateValue: selectDate,
    setTimeValue: selectTime,
    granularity,
    hasTime,
    ...overlayState,
    setOpen(isOpen) {
      if (!isOpen && !value && selectedDate && hasTime) commitValue(selectedDate, selectedTime || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue));
      overlayState.setOpen(isOpen);
    },
    validationState,
    isInvalid: isValueInvalid,
    formatValue(locale, fieldOptions) {
      if (!dateValue) return "";
      let formatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, formatOpts);
      let formatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, formatOptions);
      return formatter.format(dateValue);
    },
    getDateFormatter(locale, formatOptions) {
      let newOptions = {
        ...formatOpts,
        ...formatOptions
      };
      let newFormatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)({}, newOptions);
      return new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, newFormatOptions);
    }
  };
}

// node_modules/@react-stately/datepicker/dist/placeholders.mjs
var $3e3ed55ab2966714$var$placeholders = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)({
  ach: {
    year: "mwaka",
    month: "dwe",
    day: "nino"
  },
  af: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  am: {
    year: "ዓዓዓዓ",
    month: "ሚሜ",
    day: "ቀቀ"
  },
  an: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  ar: {
    year: "سنة",
    month: "شهر",
    day: "يوم"
  },
  ast: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  az: {
    year: "iiii",
    month: "aa",
    day: "gg"
  },
  be: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  bg: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  bn: {
    year: "yyyy",
    month: "মিমি",
    day: "dd"
  },
  br: {
    year: "bbbb",
    month: "mm",
    day: "dd"
  },
  bs: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  ca: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  cak: {
    year: "jjjj",
    month: "ii",
    day: "q'q'"
  },
  ckb: {
    year: "ساڵ",
    month: "مانگ",
    day: "ڕۆژ"
  },
  cs: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  cy: {
    year: "bbbb",
    month: "mm",
    day: "dd"
  },
  da: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  de: {
    year: "jjjj",
    month: "mm",
    day: "tt"
  },
  dsb: {
    year: "llll",
    month: "mm",
    day: "źź"
  },
  el: {
    year: "εεεε",
    month: "μμ",
    day: "ηη"
  },
  en: {
    year: "yyyy",
    month: "mm",
    day: "dd"
  },
  eo: {
    year: "jjjj",
    month: "mm",
    day: "tt"
  },
  es: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  et: {
    year: "aaaa",
    month: "kk",
    day: "pp"
  },
  eu: {
    year: "uuuu",
    month: "hh",
    day: "ee"
  },
  fa: {
    year: "سال",
    month: "ماه",
    day: "روز"
  },
  ff: {
    year: "hhhh",
    month: "ll",
    day: "ññ"
  },
  fi: {
    year: "vvvv",
    month: "kk",
    day: "pp"
  },
  fr: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  fy: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  ga: {
    year: "bbbb",
    month: "mm",
    day: "ll"
  },
  gd: {
    year: "bbbb",
    month: "mm",
    day: "ll"
  },
  gl: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  he: {
    year: "שנה",
    month: "חודש",
    day: "יום"
  },
  hr: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  hsb: {
    year: "llll",
    month: "mm",
    day: "dd"
  },
  hu: {
    year: "éééé",
    month: "hh",
    day: "nn"
  },
  ia: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  id: {
    year: "tttt",
    month: "bb",
    day: "hh"
  },
  it: {
    year: "aaaa",
    month: "mm",
    day: "gg"
  },
  ja: {
    year: " 年 ",
    month: "月",
    day: "日"
  },
  ka: {
    year: "წწწწ",
    month: "თთ",
    day: "რრ"
  },
  kk: {
    year: "жжжж",
    month: "аа",
    day: "кк"
  },
  kn: {
    year: "ವವವವ",
    month: "ಮಿಮೀ",
    day: "ದಿದಿ"
  },
  ko: {
    year: "연도",
    month: "월",
    day: "일"
  },
  lb: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  lo: {
    year: "ປປປປ",
    month: "ດດ",
    day: "ວວ"
  },
  lt: {
    year: "mmmm",
    month: "mm",
    day: "dd"
  },
  lv: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  meh: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  ml: {
    year: "വർഷം",
    month: "മാസം",
    day: "തീയതി"
  },
  ms: {
    year: "tttt",
    month: "mm",
    day: "hh"
  },
  nl: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  nn: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  no: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  oc: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  pl: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  pt: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  rm: {
    year: "oooo",
    month: "mm",
    day: "dd"
  },
  ro: {
    year: "aaaa",
    month: "ll",
    day: "zz"
  },
  ru: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  sc: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  scn: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  sk: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  sl: {
    year: "llll",
    month: "mm",
    day: "dd"
  },
  sr: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  sv: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  szl: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  tg: {
    year: "сссс",
    month: "мм",
    day: "рр"
  },
  th: {
    year: "ปปปป",
    month: "ดด",
    day: "วว"
  },
  tr: {
    year: "yyyy",
    month: "aa",
    day: "gg"
  },
  uk: {
    year: "рррр",
    month: "мм",
    day: "дд"
  },
  "zh-CN": {
    year: "年",
    month: "月",
    day: "日"
  },
  "zh-TW": {
    year: "年",
    month: "月",
    day: "日"
  }
}, "en");
function $3e3ed55ab2966714$export$d3f5c5e0a5023fa0(field, value, locale) {
  if (field === "era" || field === "dayPeriod") return value;
  if (field === "year" || field === "month" || field === "day") return $3e3ed55ab2966714$var$placeholders.getStringForLocale(field, locale);
  return "––";
}

// node_modules/@react-stately/datepicker/dist/useDateFieldState.mjs
var import_react191 = __toESM(require_react(), 1);
var $3c0fc76039f1c516$var$EDITABLE_SEGMENTS = {
  year: true,
  month: true,
  day: true,
  hour: true,
  minute: true,
  second: true,
  dayPeriod: true,
  era: true
};
var $3c0fc76039f1c516$var$PAGE_STEP = {
  year: 5,
  month: 2,
  day: 7,
  hour: 2,
  minute: 15,
  second: 15
};
var $3c0fc76039f1c516$var$TYPE_MAPPING = {
  dayperiod: "dayPeriod"
};
function $3c0fc76039f1c516$export$60e84778edff6d26(props) {
  let { locale, createCalendar, hideTimeZone, isDisabled, isReadOnly, isRequired, minValue, maxValue, isDateUnavailable } = props;
  let v2 = props.value || props.defaultValue || props.placeholderValue;
  let [granularity, defaultTimeZone] = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v2, props.granularity);
  let timeZone = defaultTimeZone || "UTC";
  if (v2 && !(granularity in v2)) throw new Error("Invalid granularity " + granularity + " for value " + v2.toString());
  let defaultFormatter = (0, import_react191.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale), [
    locale
  ]);
  let calendar = (0, import_react191.useMemo)(() => createCalendar(defaultFormatter.resolvedOptions().calendar), [
    createCalendar,
    defaultFormatter
  ]);
  let [value, setDate] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue, props.onChange);
  let calendarValue = (0, import_react191.useMemo)(() => (0, $35a22f14a1f04b11$export$61a490a80c552550)(value, calendar), [
    value,
    calendar
  ]);
  let [placeholderDate, setPlaceholderDate] = (0, import_react191.useState)(() => (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
  let val = calendarValue || placeholderDate;
  let showEra = calendar.identifier === "gregory" && val.era === "BC";
  let formatOpts = (0, import_react191.useMemo)(() => {
    var _props_maxGranularity2;
    return {
      granularity,
      maxGranularity: (_props_maxGranularity2 = props.maxGranularity) !== null && _props_maxGranularity2 !== void 0 ? _props_maxGranularity2 : "year",
      timeZone: defaultTimeZone,
      hideTimeZone,
      hourCycle: props.hourCycle,
      showEra,
      shouldForceLeadingZeros: props.shouldForceLeadingZeros
    };
  }, [
    props.maxGranularity,
    granularity,
    props.hourCycle,
    props.shouldForceLeadingZeros,
    defaultTimeZone,
    hideTimeZone,
    showEra
  ]);
  let opts = (0, import_react191.useMemo)(() => (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)({}, formatOpts), [
    formatOpts
  ]);
  let dateFormatter = (0, import_react191.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, opts), [
    locale,
    opts
  ]);
  let resolvedOptions = (0, import_react191.useMemo)(() => dateFormatter.resolvedOptions(), [
    dateFormatter
  ]);
  let allSegments = (0, import_react191.useMemo)(() => dateFormatter.formatToParts(/* @__PURE__ */ new Date()).filter((seg) => $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[seg.type]).reduce((p2, seg) => (p2[seg.type] = true, p2), {}), [
    dateFormatter
  ]);
  let [validSegments, setValidSegments] = (0, import_react191.useState)(() => props.value || props.defaultValue ? {
    ...allSegments
  } : {});
  let clearedSegment = (0, import_react191.useRef)(void 0);
  let lastCalendarIdentifier = (0, import_react191.useRef)(calendar.identifier);
  (0, import_react191.useEffect)(() => {
    if (calendar.identifier !== lastCalendarIdentifier.current) {
      lastCalendarIdentifier.current = calendar.identifier;
      setPlaceholderDate((placeholder) => Object.keys(validSegments).length > 0 ? (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(placeholder, calendar) : (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
    }
  }, [
    calendar,
    granularity,
    validSegments,
    defaultTimeZone,
    props.placeholderValue
  ]);
  if (value && Object.keys(validSegments).length < Object.keys(allSegments).length) {
    validSegments = {
      ...allSegments
    };
    setValidSegments(validSegments);
  }
  if (value == null && Object.keys(validSegments).length === Object.keys(allSegments).length) {
    validSegments = {};
    setValidSegments(validSegments);
    setPlaceholderDate((0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
  }
  let displayValue = calendarValue && Object.keys(validSegments).length >= Object.keys(allSegments).length ? calendarValue : placeholderDate;
  let setValue = (newValue) => {
    if (props.isDisabled || props.isReadOnly) return;
    let validKeys = Object.keys(validSegments);
    let allKeys = Object.keys(allSegments);
    if (newValue == null) {
      setDate(null);
      setPlaceholderDate((0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
      setValidSegments({});
    } else if (validKeys.length >= allKeys.length || validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod && clearedSegment.current !== "dayPeriod") {
      newValue = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(newValue, (v2 === null || v2 === void 0 ? void 0 : v2.calendar) || new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      setDate(newValue);
    } else setPlaceholderDate(newValue);
    clearedSegment.current = null;
  };
  let dateValue = (0, import_react191.useMemo)(() => displayValue.toDate(timeZone), [
    displayValue,
    timeZone
  ]);
  let segments = (0, import_react191.useMemo)(() => dateFormatter.formatToParts(dateValue).map((segment) => {
    let isEditable = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[segment.type];
    if (segment.type === "era" && calendar.getEras().length === 1) isEditable = false;
    let isPlaceholder = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[segment.type] && !validSegments[segment.type];
    let placeholder = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[segment.type] ? (0, $3e3ed55ab2966714$export$d3f5c5e0a5023fa0)(segment.type, segment.value, locale) : null;
    return {
      type: $3c0fc76039f1c516$var$TYPE_MAPPING[segment.type] || segment.type,
      text: isPlaceholder ? placeholder : segment.value,
      ...$3c0fc76039f1c516$var$getSegmentLimits(displayValue, segment.type, resolvedOptions),
      isPlaceholder,
      placeholder,
      isEditable
    };
  }), [
    dateValue,
    validSegments,
    dateFormatter,
    resolvedOptions,
    displayValue,
    calendar,
    locale
  ]);
  if (allSegments.era && validSegments.year && !validSegments.era) {
    validSegments.era = true;
    setValidSegments({
      ...validSegments
    });
  } else if (!allSegments.era && validSegments.era) {
    delete validSegments.era;
    setValidSegments({
      ...validSegments
    });
  }
  let markValid = (part) => {
    validSegments[part] = true;
    if (part === "year" && allSegments.era) validSegments.era = true;
    setValidSegments({
      ...validSegments
    });
  };
  let adjustSegment = (type, amount) => {
    if (!validSegments[type]) {
      markValid(type);
      let validKeys = Object.keys(validSegments);
      let allKeys = Object.keys(allSegments);
      if (validKeys.length >= allKeys.length || validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod) setValue(displayValue);
    } else setValue($3c0fc76039f1c516$var$addSegment(displayValue, type, amount, resolvedOptions));
  };
  let builtinValidation = (0, import_react191.useMemo)(() => (0, $35a22f14a1f04b11$export$f18627323ab57ac0)(value, minValue, maxValue, isDateUnavailable, formatOpts), [
    value,
    minValue,
    maxValue,
    isDateUnavailable,
    formatOpts
  ]);
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value,
    builtinValidation
  });
  let isValueInvalid = validation.displayValidation.isInvalid;
  let validationState = props.validationState || (isValueInvalid ? "invalid" : null);
  var _props_maxGranularity;
  return {
    ...validation,
    value: calendarValue,
    dateValue,
    calendar,
    setValue,
    segments,
    dateFormatter,
    validationState,
    isInvalid: isValueInvalid,
    granularity,
    maxGranularity: (_props_maxGranularity = props.maxGranularity) !== null && _props_maxGranularity !== void 0 ? _props_maxGranularity : "year",
    isDisabled,
    isReadOnly,
    isRequired,
    increment(part) {
      adjustSegment(part, 1);
    },
    decrement(part) {
      adjustSegment(part, -1);
    },
    incrementPage(part) {
      adjustSegment(part, $3c0fc76039f1c516$var$PAGE_STEP[part] || 1);
    },
    decrementPage(part) {
      adjustSegment(part, -($3c0fc76039f1c516$var$PAGE_STEP[part] || 1));
    },
    setSegment(part, v3) {
      markValid(part);
      setValue($3c0fc76039f1c516$var$setSegment(displayValue, part, v3, resolvedOptions));
    },
    confirmPlaceholder() {
      if (props.isDisabled || props.isReadOnly) return;
      let validKeys = Object.keys(validSegments);
      let allKeys = Object.keys(allSegments);
      if (validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod) {
        validSegments = {
          ...allSegments
        };
        setValidSegments(validSegments);
        setValue(displayValue.copy());
      }
    },
    clearSegment(part) {
      delete validSegments[part];
      clearedSegment.current = part;
      setValidSegments({
        ...validSegments
      });
      let placeholder = (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone);
      let value2 = displayValue;
      if (part === "dayPeriod" && "hour" in displayValue && "hour" in placeholder) {
        let isPM = displayValue.hour >= 12;
        let shouldBePM = placeholder.hour >= 12;
        if (isPM && !shouldBePM) value2 = displayValue.set({
          hour: displayValue.hour - 12
        });
        else if (!isPM && shouldBePM) value2 = displayValue.set({
          hour: displayValue.hour + 12
        });
      } else if (part in displayValue) value2 = displayValue.set({
        [part]: placeholder[part]
      });
      setDate(null);
      setValue(value2);
    },
    formatValue(fieldOptions) {
      if (!calendarValue) return "";
      let formatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, formatOpts);
      let formatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, formatOptions);
      return formatter.format(dateValue);
    },
    getDateFormatter(locale2, formatOptions) {
      let newOptions = {
        ...formatOpts,
        ...formatOptions
      };
      let newFormatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)({}, newOptions);
      return new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale2, newFormatOptions);
    }
  };
}
function $3c0fc76039f1c516$var$getSegmentLimits(date, type, options) {
  switch (type) {
    case "era": {
      let eras = date.calendar.getEras();
      return {
        value: eras.indexOf(date.era),
        minValue: 0,
        maxValue: eras.length - 1
      };
    }
    case "year":
      return {
        value: date.year,
        minValue: 1,
        maxValue: date.calendar.getYearsInEra(date)
      };
    case "month":
      return {
        value: date.month,
        minValue: (0, $14e0f24ef4ac5c92$export$5412ac11713b72ad)(date),
        maxValue: date.calendar.getMonthsInYear(date)
      };
    case "day":
      return {
        value: date.day,
        minValue: (0, $14e0f24ef4ac5c92$export$b2f4953d301981d5)(date),
        maxValue: date.calendar.getDaysInMonth(date)
      };
  }
  if ("hour" in date) switch (type) {
    case "dayPeriod":
      return {
        value: date.hour >= 12 ? 12 : 0,
        minValue: 0,
        maxValue: 12
      };
    case "hour":
      if (options.hour12) {
        let isPM = date.hour >= 12;
        return {
          value: date.hour,
          minValue: isPM ? 12 : 0,
          maxValue: isPM ? 23 : 11
        };
      }
      return {
        value: date.hour,
        minValue: 0,
        maxValue: 23
      };
    case "minute":
      return {
        value: date.minute,
        minValue: 0,
        maxValue: 59
      };
    case "second":
      return {
        value: date.second,
        minValue: 0,
        maxValue: 59
      };
  }
  return {};
}
function $3c0fc76039f1c516$var$addSegment(value, part, amount, options) {
  switch (part) {
    case "era":
    case "year":
    case "month":
    case "day":
      return value.cycle(part, amount, {
        round: part === "year"
      });
  }
  if ("hour" in value) switch (part) {
    case "dayPeriod": {
      let hours = value.hour;
      let isPM = hours >= 12;
      return value.set({
        hour: isPM ? hours - 12 : hours + 12
      });
    }
    case "hour":
    case "minute":
    case "second":
      return value.cycle(part, amount, {
        round: part !== "hour",
        hourCycle: options.hour12 ? 12 : 24
      });
  }
}
function $3c0fc76039f1c516$var$setSegment(value, part, segmentValue, options) {
  switch (part) {
    case "day":
    case "month":
    case "year":
    case "era":
      return value.set({
        [part]: segmentValue
      });
  }
  if ("hour" in value) switch (part) {
    case "dayPeriod": {
      let hours = value.hour;
      let wasPM = hours >= 12;
      let isPM = segmentValue >= 12;
      if (isPM === wasPM) return value;
      return value.set({
        hour: wasPM ? hours - 12 : hours + 12
      });
    }
    case "hour":
      if (options.hour12) {
        let hours = value.hour;
        let wasPM = hours >= 12;
        if (!wasPM && segmentValue === 12) segmentValue = 0;
        if (wasPM && segmentValue < 12) segmentValue += 12;
      }
    case "minute":
    case "second":
      return value.set({
        [part]: segmentValue
      });
  }
}

// node_modules/@react-stately/datepicker/dist/useDateRangePickerState.mjs
var import_react192 = __toESM(require_react(), 1);
function $93c38a5e28be6249$export$e50a61c1de9f574(props) {
  var _value_start, _value_end;
  let overlayState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let [controlledValue, setControlledValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue || null, props.onChange);
  let [placeholderValue, setPlaceholderValue] = (0, import_react192.useState)(() => controlledValue || {
    start: null,
    end: null
  });
  if (controlledValue == null && placeholderValue.start && placeholderValue.end) {
    placeholderValue = {
      start: null,
      end: null
    };
    setPlaceholderValue(placeholderValue);
  }
  let value = controlledValue || placeholderValue;
  let setValue = (value2) => {
    setPlaceholderValue(value2 || {
      start: null,
      end: null
    });
    if ((value2 === null || value2 === void 0 ? void 0 : value2.start) && value2.end) setControlledValue(value2);
    else setControlledValue(null);
  };
  let v2 = (value === null || value === void 0 ? void 0 : value.start) || (value === null || value === void 0 ? void 0 : value.end) || props.placeholderValue;
  let [granularity, defaultTimeZone] = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v2, props.granularity);
  let hasTime = granularity === "hour" || granularity === "minute" || granularity === "second";
  var _props_shouldCloseOnSelect;
  let shouldCloseOnSelect = (_props_shouldCloseOnSelect = props.shouldCloseOnSelect) !== null && _props_shouldCloseOnSelect !== void 0 ? _props_shouldCloseOnSelect : true;
  let [dateRange, setSelectedDateRange] = (0, import_react192.useState)(null);
  let [timeRange, setSelectedTimeRange] = (0, import_react192.useState)(null);
  if (value && value.start && value.end) {
    dateRange = value;
    if ("hour" in value.start) timeRange = value;
  }
  let commitValue = (dateRange2, timeRange2) => {
    setValue({
      start: "timeZone" in timeRange2.start ? timeRange2.start.set((0, $11d87f3f76e88657$export$93522d1a439f3617)(dateRange2.start)) : (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateRange2.start, timeRange2.start),
      end: "timeZone" in timeRange2.end ? timeRange2.end.set((0, $11d87f3f76e88657$export$93522d1a439f3617)(dateRange2.end)) : (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateRange2.end, timeRange2.end)
    });
    setSelectedDateRange(null);
    setSelectedTimeRange(null);
    validation.commitValidation();
  };
  let setDateRange = (range) => {
    let shouldClose = typeof shouldCloseOnSelect === "function" ? shouldCloseOnSelect() : shouldCloseOnSelect;
    if (hasTime) {
      if (shouldClose || range.start && range.end && (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) && (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end)) commitValue(range, {
        start: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue),
        end: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue)
      });
      else setSelectedDateRange(range);
    } else if (range.start && range.end) {
      setValue(range);
      validation.commitValidation();
    } else setSelectedDateRange(range);
    if (shouldClose) overlayState.setOpen(false);
  };
  let setTimeRange = (range) => {
    if ((dateRange === null || dateRange === void 0 ? void 0 : dateRange.start) && (dateRange === null || dateRange === void 0 ? void 0 : dateRange.end) && range.start && range.end) commitValue(dateRange, range);
    else setSelectedTimeRange(range);
  };
  let showEra = (value === null || value === void 0 ? void 0 : (_value_start = value.start) === null || _value_start === void 0 ? void 0 : _value_start.calendar.identifier) === "gregory" && value.start.era === "BC" || (value === null || value === void 0 ? void 0 : (_value_end = value.end) === null || _value_end === void 0 ? void 0 : _value_end.calendar.identifier) === "gregory" && value.end.era === "BC";
  let formatOpts = (0, import_react192.useMemo)(() => ({
    granularity,
    timeZone: defaultTimeZone,
    hideTimeZone: props.hideTimeZone,
    hourCycle: props.hourCycle,
    shouldForceLeadingZeros: props.shouldForceLeadingZeros,
    showEra
  }), [
    granularity,
    props.hourCycle,
    props.shouldForceLeadingZeros,
    defaultTimeZone,
    props.hideTimeZone,
    showEra
  ]);
  let { minValue, maxValue, isDateUnavailable } = props;
  let builtinValidation = (0, import_react192.useMemo)(() => (0, $35a22f14a1f04b11$export$80ff8fc0ae339c13)(value, minValue, maxValue, isDateUnavailable, formatOpts), [
    value,
    minValue,
    maxValue,
    isDateUnavailable,
    formatOpts
  ]);
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: controlledValue,
    name: (0, import_react192.useMemo)(() => [
      props.startName,
      props.endName
    ], [
      props.startName,
      props.endName
    ]),
    builtinValidation
  });
  let isValueInvalid = validation.displayValidation.isInvalid;
  let validationState = props.validationState || (isValueInvalid ? "invalid" : null);
  return {
    ...validation,
    value,
    setValue,
    dateRange,
    timeRange,
    granularity,
    hasTime,
    setDate(part, date) {
      setDateRange({
        ...dateRange,
        [part]: date
      });
    },
    setTime(part, time) {
      setTimeRange({
        ...timeRange,
        [part]: time
      });
    },
    setDateTime(part, dateTime) {
      setValue({
        ...value,
        [part]: dateTime
      });
    },
    setDateRange,
    setTimeRange,
    ...overlayState,
    setOpen(isOpen) {
      if (!isOpen && !((value === null || value === void 0 ? void 0 : value.start) && (value === null || value === void 0 ? void 0 : value.end)) && (dateRange === null || dateRange === void 0 ? void 0 : dateRange.start) && (dateRange === null || dateRange === void 0 ? void 0 : dateRange.end) && hasTime) commitValue(dateRange, {
        start: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue),
        end: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue)
      });
      overlayState.setOpen(isOpen);
    },
    validationState,
    isInvalid: isValueInvalid,
    formatValue(locale, fieldOptions) {
      if (!value || !value.start || !value.end) return null;
      let startTimeZone = "timeZone" in value.start ? value.start.timeZone : void 0;
      let startGranularity = props.granularity || (value.start && "minute" in value.start ? "minute" : "day");
      let endTimeZone = "timeZone" in value.end ? value.end.timeZone : void 0;
      let endGranularity = props.granularity || (value.end && "minute" in value.end ? "minute" : "day");
      let startOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, {
        granularity: startGranularity,
        timeZone: startTimeZone,
        hideTimeZone: props.hideTimeZone,
        hourCycle: props.hourCycle,
        showEra: value.start.calendar.identifier === "gregory" && value.start.era === "BC" || value.end.calendar.identifier === "gregory" && value.end.era === "BC"
      });
      let startDate = value.start.toDate(startTimeZone || "UTC");
      let endDate = value.end.toDate(endTimeZone || "UTC");
      let startFormatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, startOptions);
      let endFormatter;
      if (startTimeZone === endTimeZone && startGranularity === endGranularity && value.start.compare(value.end) !== 0) {
        try {
          let parts = startFormatter.formatRangeToParts(startDate, endDate);
          let separatorIndex = -1;
          for (let i = 0; i < parts.length; i++) {
            let part = parts[i];
            if (part.source === "shared" && part.type === "literal") separatorIndex = i;
            else if (part.source === "endRange") break;
          }
          let start = "";
          let end = "";
          for (let i = 0; i < parts.length; i++) {
            if (i < separatorIndex) start += parts[i].value;
            else if (i > separatorIndex) end += parts[i].value;
          }
          return {
            start,
            end
          };
        } catch (e) {
        }
        endFormatter = startFormatter;
      } else {
        let endOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, {
          granularity: endGranularity,
          timeZone: endTimeZone,
          hideTimeZone: props.hideTimeZone,
          hourCycle: props.hourCycle
        });
        endFormatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, endOptions);
      }
      return {
        start: startFormatter.format(startDate),
        end: endFormatter.format(endDate)
      };
    },
    getDateFormatter(locale, formatOptions) {
      let newOptions = {
        ...formatOpts,
        ...formatOptions
      };
      let newFormatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)({}, newOptions);
      return new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, newFormatOptions);
    }
  };
}

// node_modules/@react-stately/datepicker/dist/useTimeFieldState.mjs
var import_react193 = __toESM(require_react(), 1);
function $eff5d8ee529ac4bb$export$fd53cef0cc796101(props) {
  let { placeholderValue = new (0, $35ea8db9cb2ccb90$export$680ea196effce5f)(), minValue, maxValue, granularity, validate } = props;
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue, props.onChange);
  let v2 = value || placeholderValue;
  let day = v2 && "day" in v2 ? v2 : void 0;
  let defaultValueTimeZone = props.defaultValue && "timeZone" in props.defaultValue ? props.defaultValue.timeZone : void 0;
  let placeholderDate = (0, import_react193.useMemo)(() => {
    let valueTimeZone = v2 && "timeZone" in v2 ? v2.timeZone : void 0;
    return (valueTimeZone || defaultValueTimeZone) && placeholderValue ? (0, $11d87f3f76e88657$export$84c95a83c799e074)($eff5d8ee529ac4bb$var$convertValue(placeholderValue), valueTimeZone || defaultValueTimeZone) : $eff5d8ee529ac4bb$var$convertValue(placeholderValue);
  }, [
    placeholderValue,
    v2,
    defaultValueTimeZone
  ]);
  let minDate = (0, import_react193.useMemo)(() => $eff5d8ee529ac4bb$var$convertValue(minValue, day), [
    minValue,
    day
  ]);
  let maxDate = (0, import_react193.useMemo)(() => $eff5d8ee529ac4bb$var$convertValue(maxValue, day), [
    maxValue,
    day
  ]);
  let timeValue = (0, import_react193.useMemo)(() => value && "day" in value ? (0, $11d87f3f76e88657$export$d33f79e3ffc3dc83)(value) : value, [
    value
  ]);
  let dateTime = (0, import_react193.useMemo)(() => value == null ? null : $eff5d8ee529ac4bb$var$convertValue(value), [
    value
  ]);
  let onChange = (newValue) => {
    setValue(day || defaultValueTimeZone ? newValue : newValue && (0, $11d87f3f76e88657$export$d33f79e3ffc3dc83)(newValue));
  };
  let state = (0, $3c0fc76039f1c516$export$60e84778edff6d26)({
    ...props,
    value: dateTime,
    defaultValue: void 0,
    minValue: minDate,
    maxValue: maxDate,
    onChange,
    granularity: granularity || "minute",
    maxGranularity: "hour",
    placeholderValue: placeholderDate,
    // Calendar should not matter for time fields.
    createCalendar: () => new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)(),
    validate: (0, import_react193.useCallback)(() => validate === null || validate === void 0 ? void 0 : validate(value), [
      validate,
      value
    ])
  });
  return {
    ...state,
    timeValue
  };
}
function $eff5d8ee529ac4bb$var$convertValue(value, date = (0, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3)((0, $14e0f24ef4ac5c92$export$aa8b41735afcabd2)())) {
  if (!value) return null;
  if ("day" in value) return value;
  return (0, $11d87f3f76e88657$export$b21e0b124e224484)(date, value);
}

// node_modules/@vtex/shoreline/dist/index.mjs
var import_react496 = __toESM(require_react(), 1);

// node_modules/@react-aria/calendar/dist/ar-AE.mjs
var $39324ace0d945f59$exports = {};
$39324ace0d945f59$exports = {
  "dateRange": (args) => `${args.startDate} إلى ${args.endDate}`,
  "dateSelected": (args) => `${args.date} المحدد`,
  "finishRangeSelectionPrompt": `انقر لإنهاء عملية تحديد نطاق التاريخ`,
  "maximumDate": `آخر تاريخ متاح`,
  "minimumDate": `أول تاريخ متاح`,
  "next": `التالي`,
  "previous": `السابق`,
  "selectedDateDescription": (args) => `تاريخ محدد: ${args.date}`,
  "selectedRangeDescription": (args) => `المدى الزمني المحدد: ${args.dateRange}`,
  "startRangeSelectionPrompt": `انقر لبدء عملية تحديد نطاق التاريخ`,
  "todayDate": (args) => `اليوم، ${args.date}`,
  "todayDateSelected": (args) => `اليوم، ${args.date} محدد`
};

// node_modules/@react-aria/calendar/dist/bg-BG.mjs
var $1830a539e98c7baf$exports = {};
$1830a539e98c7baf$exports = {
  "dateRange": (args) => `${args.startDate} до ${args.endDate}`,
  "dateSelected": (args) => `Избрано е ${args.date}`,
  "finishRangeSelectionPrompt": `Натиснете, за да довършите избора на времеви интервал`,
  "maximumDate": `Последна налична дата`,
  "minimumDate": `Първа налична дата`,
  "next": `Напред`,
  "previous": `Назад`,
  "selectedDateDescription": (args) => `Избрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Избран диапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Натиснете, за да пристъпите към избора на времеви интервал`,
  "todayDate": (args) => `Днес, ${args.date}`,
  "todayDateSelected": (args) => `Днес, ${args.date} са избрани`
};

// node_modules/@react-aria/calendar/dist/cs-CZ.mjs
var $f4b92528965aab97$exports = {};
$f4b92528965aab97$exports = {
  "dateRange": (args) => `${args.startDate} až ${args.endDate}`,
  "dateSelected": (args) => `Vybráno ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknutím dokončíte výběr rozsahu dat`,
  "maximumDate": `Poslední dostupné datum`,
  "minimumDate": `První dostupné datum`,
  "next": `Další`,
  "previous": `Předchozí`,
  "selectedDateDescription": (args) => `Vybrané datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybrané období: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknutím zahájíte výběr rozsahu dat`,
  "todayDate": (args) => `Dnes, ${args.date}`,
  "todayDateSelected": (args) => `Dnes, vybráno ${args.date}`
};

// node_modules/@react-aria/calendar/dist/da-DK.mjs
var $1cd578ef0547c8f1$exports = {};
$1cd578ef0547c8f1$exports = {
  "dateRange": (args) => `${args.startDate} til ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valgt`,
  "finishRangeSelectionPrompt": `Klik for at fuldføre valg af datoområde`,
  "maximumDate": `Sidste ledige dato`,
  "minimumDate": `Første ledige dato`,
  "next": `Næste`,
  "previous": `Forrige`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt interval: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klik for at starte valg af datoområde`,
  "todayDate": (args) => `I dag, ${args.date}`,
  "todayDateSelected": (args) => `I dag, ${args.date} valgt`
};

// node_modules/@react-aria/calendar/dist/de-DE.mjs
var $db55a8973925d619$exports = {};
$db55a8973925d619$exports = {
  "dateRange": (args) => `${args.startDate} bis ${args.endDate}`,
  "dateSelected": (args) => `${args.date} ausgewählt`,
  "finishRangeSelectionPrompt": `Klicken, um die Auswahl des Datumsbereichs zu beenden`,
  "maximumDate": `Letztes verfügbares Datum`,
  "minimumDate": `Erstes verfügbares Datum`,
  "next": `Weiter`,
  "previous": `Zurück`,
  "selectedDateDescription": (args) => `Ausgewähltes Datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Ausgewählter Bereich: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klicken, um die Auswahl des Datumsbereichs zu beginnen`,
  "todayDate": (args) => `Heute, ${args.date}`,
  "todayDateSelected": (args) => `Heute, ${args.date} ausgewählt`
};

// node_modules/@react-aria/calendar/dist/el-GR.mjs
var $ec6937d58566d443$exports = {};
$ec6937d58566d443$exports = {
  "dateRange": (args) => `${args.startDate} έως ${args.endDate}`,
  "dateSelected": (args) => `Επιλέχθηκε ${args.date}`,
  "finishRangeSelectionPrompt": `Κάντε κλικ για να ολοκληρώσετε την επιλογή εύρους ημερομηνιών`,
  "maximumDate": `Τελευταία διαθέσιμη ημερομηνία`,
  "minimumDate": `Πρώτη διαθέσιμη ημερομηνία`,
  "next": `Επόμενο`,
  "previous": `Προηγούμενο`,
  "selectedDateDescription": (args) => `Επιλεγμένη ημερομηνία: ${args.date}`,
  "selectedRangeDescription": (args) => `Επιλεγμένο εύρος: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Κάντε κλικ για να ξεκινήσετε την επιλογή εύρους ημερομηνιών`,
  "todayDate": (args) => `Σήμερα, ${args.date}`,
  "todayDateSelected": (args) => `Σήμερα, επιλέχτηκε ${args.date}`
};

// node_modules/@react-aria/calendar/dist/en-US.mjs
var $1f5cea0742dc284a$exports = {};
$1f5cea0742dc284a$exports = {
  "previous": `Previous`,
  "next": `Next`,
  "selectedDateDescription": (args) => `Selected Date: ${args.date}`,
  "selectedRangeDescription": (args) => `Selected Range: ${args.dateRange}`,
  "todayDate": (args) => `Today, ${args.date}`,
  "todayDateSelected": (args) => `Today, ${args.date} selected`,
  "dateSelected": (args) => `${args.date} selected`,
  "startRangeSelectionPrompt": `Click to start selecting date range`,
  "finishRangeSelectionPrompt": `Click to finish selecting date range`,
  "minimumDate": `First available date`,
  "maximumDate": `Last available date`,
  "dateRange": (args) => `${args.startDate} to ${args.endDate}`
};

// node_modules/@react-aria/calendar/dist/es-ES.mjs
var $2ca7ea366384817b$exports = {};
$2ca7ea366384817b$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} seleccionado`,
  "finishRangeSelectionPrompt": `Haga clic para terminar de seleccionar rango de fechas`,
  "maximumDate": `Última fecha disponible`,
  "minimumDate": `Primera fecha disponible`,
  "next": `Siguiente`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Fecha seleccionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo seleccionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Haga clic para comenzar a seleccionar un rango de fechas`,
  "todayDate": (args) => `Hoy, ${args.date}`,
  "todayDateSelected": (args) => `Hoy, ${args.date} seleccionado`
};

// node_modules/@react-aria/calendar/dist/et-EE.mjs
var $97874a7fe9cd091f$exports = {};
$97874a7fe9cd091f$exports = {
  "dateRange": (args) => `${args.startDate} kuni ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valitud`,
  "finishRangeSelectionPrompt": `Klõpsake kuupäevavahemiku valimise lõpetamiseks`,
  "maximumDate": `Viimane saadaolev kuupäev`,
  "minimumDate": `Esimene saadaolev kuupäev`,
  "next": `Järgmine`,
  "previous": `Eelmine`,
  "selectedDateDescription": (args) => `Valitud kuupäev: ${args.date}`,
  "selectedRangeDescription": (args) => `Valitud vahemik: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klõpsake kuupäevavahemiku valimiseks`,
  "todayDate": (args) => `Täna, ${args.date}`,
  "todayDateSelected": (args) => `Täna, ${args.date} valitud`
};

// node_modules/@react-aria/calendar/dist/fi-FI.mjs
var $5d376b7fce1a45b2$exports = {};
$5d376b7fce1a45b2$exports = {
  "dateRange": (args) => `${args.startDate} – ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valittu`,
  "finishRangeSelectionPrompt": `Lopeta päivämääräalueen valinta napsauttamalla tätä.`,
  "maximumDate": `Viimeinen varattavissa oleva päivämäärä`,
  "minimumDate": `Ensimmäinen varattavissa oleva päivämäärä`,
  "next": `Seuraava`,
  "previous": `Edellinen`,
  "selectedDateDescription": (args) => `Valittu päivämäärä: ${args.date}`,
  "selectedRangeDescription": (args) => `Valittu aikaväli: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Aloita päivämääräalueen valinta napsauttamalla tätä.`,
  "todayDate": (args) => `Tänään, ${args.date}`,
  "todayDateSelected": (args) => `Tänään, ${args.date} valittu`
};

// node_modules/@react-aria/calendar/dist/fr-FR.mjs
var $3bf722b362aaf54d$exports = {};
$3bf722b362aaf54d$exports = {
  "dateRange": (args) => `${args.startDate} à ${args.endDate}`,
  "dateSelected": (args) => `${args.date} sélectionné`,
  "finishRangeSelectionPrompt": `Cliquer pour finir de sélectionner la plage de dates`,
  "maximumDate": `Dernière date disponible`,
  "minimumDate": `Première date disponible`,
  "next": `Suivant`,
  "previous": `Précédent`,
  "selectedDateDescription": (args) => `Date sélectionnée : ${args.date}`,
  "selectedRangeDescription": (args) => `Plage sélectionnée : ${args.dateRange}`,
  "startRangeSelectionPrompt": `Cliquer pour commencer à sélectionner la plage de dates`,
  "todayDate": (args) => `Aujourd'hui, ${args.date}`,
  "todayDateSelected": (args) => `Aujourd’hui, ${args.date} sélectionné`
};

// node_modules/@react-aria/calendar/dist/he-IL.mjs
var $38c43f8322316031$exports = {};
$38c43f8322316031$exports = {
  "dateRange": (args) => `${args.startDate} עד ${args.endDate}`,
  "dateSelected": (args) => `${args.date} נבחר`,
  "finishRangeSelectionPrompt": `חץ כדי לסיים את בחירת טווח התאריכים`,
  "maximumDate": `תאריך פנוי אחרון`,
  "minimumDate": `תאריך פנוי ראשון`,
  "next": `הבא`,
  "previous": `הקודם`,
  "selectedDateDescription": (args) => `תאריך נבחר: ${args.date}`,
  "selectedRangeDescription": (args) => `טווח נבחר: ${args.dateRange}`,
  "startRangeSelectionPrompt": `לחץ כדי להתחיל בבחירת טווח התאריכים`,
  "todayDate": (args) => `היום, ${args.date}`,
  "todayDateSelected": (args) => `היום, ${args.date} נבחר`
};

// node_modules/@react-aria/calendar/dist/hr-HR.mjs
var $c90e0f32b44630bf$exports = {};
$c90e0f32b44630bf$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} odabran`,
  "finishRangeSelectionPrompt": `Kliknite da dovršite raspon odabranih datuma`,
  "maximumDate": `Posljednji raspoloživi datum`,
  "minimumDate": `Prvi raspoloživi datum`,
  "next": `Sljedeći`,
  "previous": `Prethodni`,
  "selectedDateDescription": (args) => `Odabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Odabrani raspon: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite da započnete raspon odabranih datuma`,
  "todayDate": (args) => `Danas, ${args.date}`,
  "todayDateSelected": (args) => `Danas, odabran ${args.date}`
};

// node_modules/@react-aria/calendar/dist/hu-HU.mjs
var $715875e6e7a338f4$exports = {};
$715875e6e7a338f4$exports = {
  "dateRange": (args) => `${args.startDate}–${args.endDate}`,
  "dateSelected": (args) => `${args.date} kiválasztva`,
  "finishRangeSelectionPrompt": `Kattintson a dátumtartomány kijelölésének befejezéséhez`,
  "maximumDate": `Utolsó elérhető dátum`,
  "minimumDate": `Az első elérhető dátum`,
  "next": `Következő`,
  "previous": `Előző`,
  "selectedDateDescription": (args) => `Kijelölt dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Kijelölt tartomány: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kattintson a dátumtartomány kijelölésének indításához`,
  "todayDate": (args) => `Ma, ${args.date}`,
  "todayDateSelected": (args) => `Ma, ${args.date} kijelölve`
};

// node_modules/@react-aria/calendar/dist/it-IT.mjs
var $37d77c66e34daccf$exports = {};
$37d77c66e34daccf$exports = {
  "dateRange": (args) => `Da ${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selezionata`,
  "finishRangeSelectionPrompt": `Fai clic per completare la selezione dell’intervallo di date`,
  "maximumDate": `Ultima data disponibile`,
  "minimumDate": `Prima data disponibile`,
  "next": `Successivo`,
  "previous": `Precedente`,
  "selectedDateDescription": (args) => `Data selezionata: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervallo selezionato: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Fai clic per selezionare l’intervallo di date`,
  "todayDate": (args) => `Oggi, ${args.date}`,
  "todayDateSelected": (args) => `Oggi, ${args.date} selezionata`
};

// node_modules/@react-aria/calendar/dist/ja-JP.mjs
var $542f39aee29303c3$exports = {};
$542f39aee29303c3$exports = {
  "dateRange": (args) => `${args.startDate} から ${args.endDate}`,
  "dateSelected": (args) => `${args.date} を選択`,
  "finishRangeSelectionPrompt": `クリックして日付範囲の選択を終了`,
  "maximumDate": `最終利用可能日`,
  "minimumDate": `最初の利用可能日`,
  "next": `次へ`,
  "previous": `前へ`,
  "selectedDateDescription": (args) => `選択した日付 : ${args.date}`,
  "selectedRangeDescription": (args) => `選択範囲 : ${args.dateRange}`,
  "startRangeSelectionPrompt": `クリックして日付範囲の選択を開始`,
  "todayDate": (args) => `本日、${args.date}`,
  "todayDateSelected": (args) => `本日、${args.date} を選択`
};

// node_modules/@react-aria/calendar/dist/ko-KR.mjs
var $22a5f0623ea73e4f$exports = {};
$22a5f0623ea73e4f$exports = {
  "dateRange": (args) => `${args.startDate} ~ ${args.endDate}`,
  "dateSelected": (args) => `${args.date} 선택됨`,
  "finishRangeSelectionPrompt": `날짜 범위 선택을 완료하려면 클릭하십시오.`,
  "maximumDate": `마지막으로 사용 가능한 일자`,
  "minimumDate": `처음으로 사용 가능한 일자`,
  "next": `다음`,
  "previous": `이전`,
  "selectedDateDescription": (args) => `선택 일자: ${args.date}`,
  "selectedRangeDescription": (args) => `선택 범위: ${args.dateRange}`,
  "startRangeSelectionPrompt": `날짜 범위 선택을 시작하려면 클릭하십시오.`,
  "todayDate": (args) => `오늘, ${args.date}`,
  "todayDateSelected": (args) => `오늘, ${args.date} 선택됨`
};

// node_modules/@react-aria/calendar/dist/lt-LT.mjs
var $522380d13d62cba0$exports = {};
$522380d13d62cba0$exports = {
  "dateRange": (args) => `Nuo ${args.startDate} iki ${args.endDate}`,
  "dateSelected": (args) => `Pasirinkta ${args.date}`,
  "finishRangeSelectionPrompt": `Spustelėkite, kad baigtumėte pasirinkti datų intervalą`,
  "maximumDate": `Paskutinė galima data`,
  "minimumDate": `Pirmoji galima data`,
  "next": `Paskesnis`,
  "previous": `Ankstesnis`,
  "selectedDateDescription": (args) => `Pasirinkta data: ${args.date}`,
  "selectedRangeDescription": (args) => `Pasirinktas intervalas: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Spustelėkite, kad pradėtumėte pasirinkti datų intervalą`,
  "todayDate": (args) => `Šiandien, ${args.date}`,
  "todayDateSelected": (args) => `Šiandien, pasirinkta ${args.date}`
};

// node_modules/@react-aria/calendar/dist/lv-LV.mjs
var $8a7bc830b2fe6485$exports = {};
$8a7bc830b2fe6485$exports = {
  "dateRange": (args) => `No ${args.startDate} līdz ${args.endDate}`,
  "dateSelected": (args) => `Atlasīts: ${args.date}`,
  "finishRangeSelectionPrompt": `Noklikšķiniet, lai pabeigtu datumu diapazona atlasi`,
  "maximumDate": `Pēdējais pieejamais datums`,
  "minimumDate": `Pirmais pieejamais datums`,
  "next": `Tālāk`,
  "previous": `Atpakaļ`,
  "selectedDateDescription": (args) => `Atlasītais datums: ${args.date}`,
  "selectedRangeDescription": (args) => `Atlasītais diapazons: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Noklikšķiniet, lai sāktu datumu diapazona atlasi`,
  "todayDate": (args) => `Šodien, ${args.date}`,
  "todayDateSelected": (args) => `Atlasīta šodiena, ${args.date}`
};

// node_modules/@react-aria/calendar/dist/nb-NO.mjs
var $9fac9c044470683b$exports = {};
$9fac9c044470683b$exports = {
  "dateRange": (args) => `${args.startDate} til ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valgt`,
  "finishRangeSelectionPrompt": `Klikk for å fullføre valg av datoområde`,
  "maximumDate": `Siste tilgjengelige dato`,
  "minimumDate": `Første tilgjengelige dato`,
  "next": `Neste`,
  "previous": `Forrige`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt område: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klikk for å starte valg av datoområde`,
  "todayDate": (args) => `I dag, ${args.date}`,
  "todayDateSelected": (args) => `I dag, ${args.date} valgt`
};

// node_modules/@react-aria/calendar/dist/nl-NL.mjs
var $b127d3569efb1449$exports = {};
$b127d3569efb1449$exports = {
  "dateRange": (args) => `${args.startDate} tot ${args.endDate}`,
  "dateSelected": (args) => `${args.date} geselecteerd`,
  "finishRangeSelectionPrompt": `Klik om de selectie van het datumbereik te voltooien`,
  "maximumDate": `Laatste beschikbare datum`,
  "minimumDate": `Eerste beschikbare datum`,
  "next": `Volgende`,
  "previous": `Vorige`,
  "selectedDateDescription": (args) => `Geselecteerde datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Geselecteerd bereik: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klik om het datumbereik te selecteren`,
  "todayDate": (args) => `Vandaag, ${args.date}`,
  "todayDateSelected": (args) => `Vandaag, ${args.date} geselecteerd`
};

// node_modules/@react-aria/calendar/dist/pl-PL.mjs
var $51404a4090633490$exports = {};
$51404a4090633490$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `Wybrano ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknij, aby zakończyć wybór zakresu dat`,
  "maximumDate": `Ostatnia dostępna data`,
  "minimumDate": `Pierwsza dostępna data`,
  "next": `Dalej`,
  "previous": `Wstecz`,
  "selectedDateDescription": (args) => `Wybrana data: ${args.date}`,
  "selectedRangeDescription": (args) => `Wybrany zakres: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknij, aby rozpocząć wybór zakresu dat`,
  "todayDate": (args) => `Dzisiaj, ${args.date}`,
  "todayDateSelected": (args) => `Dzisiaj wybrano ${args.date}`
};

// node_modules/@react-aria/calendar/dist/pt-BR.mjs
var $e5e6a3fe3b4527df$exports = {};
$e5e6a3fe3b4527df$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selecionado`,
  "finishRangeSelectionPrompt": `Clique para concluir a seleção do intervalo de datas`,
  "maximumDate": `Última data disponível`,
  "minimumDate": `Primeira data disponível`,
  "next": `Próximo`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Clique para iniciar a seleção do intervalo de datas`,
  "todayDate": (args) => `Hoje, ${args.date}`,
  "todayDateSelected": (args) => `Hoje, ${args.date} selecionado`
};

// node_modules/@react-aria/calendar/dist/pt-PT.mjs
var $c519dcadcbb1ee47$exports = {};
$c519dcadcbb1ee47$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selecionado`,
  "finishRangeSelectionPrompt": `Clique para terminar de selecionar o intervalo de datas`,
  "maximumDate": `Última data disponível`,
  "minimumDate": `Primeira data disponível`,
  "next": `Próximo`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Clique para começar a selecionar o intervalo de datas`,
  "todayDate": (args) => `Hoje, ${args.date}`,
  "todayDateSelected": (args) => `Hoje, ${args.date} selecionado`
};

// node_modules/@react-aria/calendar/dist/ro-RO.mjs
var $e5aa0186ca7889c6$exports = {};
$e5aa0186ca7889c6$exports = {
  "dateRange": (args) => `De la ${args.startDate} până la ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selectată`,
  "finishRangeSelectionPrompt": `Apăsaţi pentru a finaliza selecţia razei pentru dată`,
  "maximumDate": `Ultima dată disponibilă`,
  "minimumDate": `Prima dată disponibilă`,
  "next": `Următorul`,
  "previous": `Înainte`,
  "selectedDateDescription": (args) => `Dată selectată: ${args.date}`,
  "selectedRangeDescription": (args) => `Interval selectat: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Apăsaţi pentru a începe selecţia razei pentru dată`,
  "todayDate": (args) => `Astăzi, ${args.date}`,
  "todayDateSelected": (args) => `Azi, ${args.date} selectată`
};

// node_modules/@react-aria/calendar/dist/ru-RU.mjs
var $5b907f5fa3eee652$exports = {};
$5b907f5fa3eee652$exports = {
  "dateRange": (args) => `С ${args.startDate} по ${args.endDate}`,
  "dateSelected": (args) => `Выбрано ${args.date}`,
  "finishRangeSelectionPrompt": `Щелкните, чтобы завершить выбор диапазона дат`,
  "maximumDate": `Последняя доступная дата`,
  "minimumDate": `Первая доступная дата`,
  "next": `Далее`,
  "previous": `Назад`,
  "selectedDateDescription": (args) => `Выбранная дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Выбранный диапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Щелкните, чтобы начать выбор диапазона дат`,
  "todayDate": (args) => `Сегодня, ${args.date}`,
  "todayDateSelected": (args) => `Сегодня, выбрано ${args.date}`
};

// node_modules/@react-aria/calendar/dist/sk-SK.mjs
var $1b4c51359c99cf79$exports = {};
$1b4c51359c99cf79$exports = {
  "dateRange": (args) => `Od ${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `Vybratý dátum ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknutím dokončíte výber rozsahu dátumov`,
  "maximumDate": `Posledný dostupný dátum`,
  "minimumDate": `Prvý dostupný dátum`,
  "next": `Nasledujúce`,
  "previous": `Predchádzajúce`,
  "selectedDateDescription": (args) => `Vybratý dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybratý rozsah: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknutím spustíte výber rozsahu dátumov`,
  "todayDate": (args) => `Dnes ${args.date}`,
  "todayDateSelected": (args) => `Vybratý dnešný dátum ${args.date}`
};

// node_modules/@react-aria/calendar/dist/sl-SI.mjs
var $02e4e6a4608cc6f3$exports = {};
$02e4e6a4608cc6f3$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} izbrano`,
  "finishRangeSelectionPrompt": `Kliknite za dokončanje izbire datumskega obsega`,
  "maximumDate": `Zadnji razpoložljivi datum`,
  "minimumDate": `Prvi razpoložljivi datum`,
  "next": `Naprej`,
  "previous": `Nazaj`,
  "selectedDateDescription": (args) => `Izbrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izbrano območje: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite za začetek izbire datumskega obsega`,
  "todayDate": (args) => `Danes, ${args.date}`,
  "todayDateSelected": (args) => `Danes, ${args.date} izbrano`
};

// node_modules/@react-aria/calendar/dist/sr-SP.mjs
var $6dd2fbaad93b6878$exports = {};
$6dd2fbaad93b6878$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} izabran`,
  "finishRangeSelectionPrompt": `Kliknite da dovršite opseg izabranih datuma`,
  "maximumDate": `Zadnji raspoloživi datum`,
  "minimumDate": `Prvi raspoloživi datum`,
  "next": `Sledeći`,
  "previous": `Prethodni`,
  "selectedDateDescription": (args) => `Izabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izabrani period: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite da započnete opseg izabranih datuma`,
  "todayDate": (args) => `Danas, ${args.date}`,
  "todayDateSelected": (args) => `Danas, izabran ${args.date}`
};

// node_modules/@react-aria/calendar/dist/sv-SE.mjs
var $33ea59bfe6e804e0$exports = {};
$33ea59bfe6e804e0$exports = {
  "dateRange": (args) => `${args.startDate} till ${args.endDate}`,
  "dateSelected": (args) => `${args.date} har valts`,
  "finishRangeSelectionPrompt": `Klicka för att avsluta val av datumintervall`,
  "maximumDate": `Sista tillgängliga datum`,
  "minimumDate": `Första tillgängliga datum`,
  "next": `Nästa`,
  "previous": `Föregående`,
  "selectedDateDescription": (args) => `Valt datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Valt intervall: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klicka för att välja datumintervall`,
  "todayDate": (args) => `Idag, ${args.date}`,
  "todayDateSelected": (args) => `Idag, ${args.date} har valts`
};

// node_modules/@react-aria/calendar/dist/tr-TR.mjs
var $4603b0d0246969b2$exports = {};
$4603b0d0246969b2$exports = {
  "dateRange": (args) => `${args.startDate} - ${args.endDate}`,
  "dateSelected": (args) => `${args.date} seçildi`,
  "finishRangeSelectionPrompt": `Tarih aralığı seçimini tamamlamak için tıklayın`,
  "maximumDate": `Son müsait tarih`,
  "minimumDate": `İlk müsait tarih`,
  "next": `Sonraki`,
  "previous": `Önceki`,
  "selectedDateDescription": (args) => `Seçilen Tarih: ${args.date}`,
  "selectedRangeDescription": (args) => `Seçilen Aralık: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Tarih aralığı seçimini başlatmak için tıklayın`,
  "todayDate": (args) => `Bugün, ${args.date}`,
  "todayDateSelected": (args) => `Bugün, ${args.date} seçildi`
};

// node_modules/@react-aria/calendar/dist/uk-UA.mjs
var $82649816f530bb1b$exports = {};
$82649816f530bb1b$exports = {
  "dateRange": (args) => `${args.startDate} — ${args.endDate}`,
  "dateSelected": (args) => `Вибрано ${args.date}`,
  "finishRangeSelectionPrompt": `Натисніть, щоб завершити вибір діапазону дат`,
  "maximumDate": `Остання доступна дата`,
  "minimumDate": `Перша доступна дата`,
  "next": `Наступний`,
  "previous": `Попередній`,
  "selectedDateDescription": (args) => `Вибрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Вибраний діапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Натисніть, щоб почати вибір діапазону дат`,
  "todayDate": (args) => `Сьогодні, ${args.date}`,
  "todayDateSelected": (args) => `Сьогодні, вибрано ${args.date}`
};

// node_modules/@react-aria/calendar/dist/zh-CN.mjs
var $628e140a43dfb330$exports = {};
$628e140a43dfb330$exports = {
  "dateRange": (args) => `${args.startDate} 至 ${args.endDate}`,
  "dateSelected": (args) => `已选择 ${args.date}`,
  "finishRangeSelectionPrompt": `单击以完成选择日期范围`,
  "maximumDate": `最后一个可用日期`,
  "minimumDate": `第一个可用日期`,
  "next": `下一页`,
  "previous": `上一页`,
  "selectedDateDescription": (args) => `选定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `选定的范围：${args.dateRange}`,
  "startRangeSelectionPrompt": `单击以开始选择日期范围`,
  "todayDate": (args) => `今天，即 ${args.date}`,
  "todayDateSelected": (args) => `已选择今天，即 ${args.date}`
};

// node_modules/@react-aria/calendar/dist/zh-TW.mjs
var $745937250cd4679c$exports = {};
$745937250cd4679c$exports = {
  "dateRange": (args) => `${args.startDate} 至 ${args.endDate}`,
  "dateSelected": (args) => `已選取 ${args.date}`,
  "finishRangeSelectionPrompt": `按一下以完成選取日期範圍`,
  "maximumDate": `最後一個可用日期`,
  "minimumDate": `第一個可用日期`,
  "next": `下一頁`,
  "previous": `上一頁`,
  "selectedDateDescription": (args) => `選定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `選定的範圍：${args.dateRange}`,
  "startRangeSelectionPrompt": `按一下以開始選取日期範圍`,
  "todayDate": (args) => `今天，${args.date}`,
  "todayDateSelected": (args) => `已選取今天，${args.date}`
};

// node_modules/@react-aria/calendar/dist/intlStrings.mjs
var $3904726b442bd9b2$exports = {};
$3904726b442bd9b2$exports = {
  "ar-AE": $39324ace0d945f59$exports,
  "bg-BG": $1830a539e98c7baf$exports,
  "cs-CZ": $f4b92528965aab97$exports,
  "da-DK": $1cd578ef0547c8f1$exports,
  "de-DE": $db55a8973925d619$exports,
  "el-GR": $ec6937d58566d443$exports,
  "en-US": $1f5cea0742dc284a$exports,
  "es-ES": $2ca7ea366384817b$exports,
  "et-EE": $97874a7fe9cd091f$exports,
  "fi-FI": $5d376b7fce1a45b2$exports,
  "fr-FR": $3bf722b362aaf54d$exports,
  "he-IL": $38c43f8322316031$exports,
  "hr-HR": $c90e0f32b44630bf$exports,
  "hu-HU": $715875e6e7a338f4$exports,
  "it-IT": $37d77c66e34daccf$exports,
  "ja-JP": $542f39aee29303c3$exports,
  "ko-KR": $22a5f0623ea73e4f$exports,
  "lt-LT": $522380d13d62cba0$exports,
  "lv-LV": $8a7bc830b2fe6485$exports,
  "nb-NO": $9fac9c044470683b$exports,
  "nl-NL": $b127d3569efb1449$exports,
  "pl-PL": $51404a4090633490$exports,
  "pt-BR": $e5e6a3fe3b4527df$exports,
  "pt-PT": $c519dcadcbb1ee47$exports,
  "ro-RO": $e5aa0186ca7889c6$exports,
  "ru-RU": $5b907f5fa3eee652$exports,
  "sk-SK": $1b4c51359c99cf79$exports,
  "sl-SI": $02e4e6a4608cc6f3$exports,
  "sr-SP": $6dd2fbaad93b6878$exports,
  "sv-SE": $33ea59bfe6e804e0$exports,
  "tr-TR": $4603b0d0246969b2$exports,
  "uk-UA": $82649816f530bb1b$exports,
  "zh-CN": $628e140a43dfb330$exports,
  "zh-TW": $745937250cd4679c$exports
};

// node_modules/@react-aria/calendar/dist/utils.mjs
var import_react194 = __toESM(require_react(), 1);
function $parcel$interopDefault7(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
var $a074e1e2d0f0a665$export$653eddfc964b0f8a = /* @__PURE__ */ new WeakMap();
function $a074e1e2d0f0a665$export$134cbb7fb09a9522(date) {
  return (date === null || date === void 0 ? void 0 : date.calendar.identifier) === "gregory" && date.era === "BC" ? "short" : void 0;
}
function $a074e1e2d0f0a665$export$b6df97c887c38e1a(state) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault7($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let start, end;
  if ("highlightedRange" in state) ({ start, end } = state.highlightedRange || {});
  else start = end = state.value;
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: "long",
    month: "long",
    year: "numeric",
    day: "numeric",
    era: $a074e1e2d0f0a665$export$134cbb7fb09a9522(start) || $a074e1e2d0f0a665$export$134cbb7fb09a9522(end),
    timeZone: state.timeZone
  });
  let anchorDate = "anchorDate" in state ? state.anchorDate : null;
  return (0, import_react194.useMemo)(() => {
    if (!anchorDate && start && end) {
      if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(start, end)) {
        let date = dateFormatter.format(start.toDate(state.timeZone));
        return stringFormatter.format("selectedDateDescription", {
          date
        });
      } else {
        let dateRange = $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, start, end, state.timeZone);
        return stringFormatter.format("selectedRangeDescription", {
          dateRange
        });
      }
    }
    return "";
  }, [
    start,
    end,
    anchorDate,
    state.timeZone,
    stringFormatter,
    dateFormatter
  ]);
}
function $a074e1e2d0f0a665$export$31afe65d91ef6e8(startDate, endDate, timeZone, isAria) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault7($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let era = $a074e1e2d0f0a665$export$134cbb7fb09a9522(startDate) || $a074e1e2d0f0a665$export$134cbb7fb09a9522(endDate);
  let monthFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    month: "long",
    year: "numeric",
    era,
    calendar: startDate.calendar.identifier,
    timeZone
  });
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    month: "long",
    year: "numeric",
    day: "numeric",
    era,
    calendar: startDate.calendar.identifier,
    timeZone
  });
  return (0, import_react194.useMemo)(() => {
    if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(startDate, (0, $14e0f24ef4ac5c92$export$a5a3b454ada2268e)(startDate))) {
      if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(endDate, (0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(startDate))) return monthFormatter.format(startDate.toDate(timeZone));
      else if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(endDate, (0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(endDate))) return isAria ? $a074e1e2d0f0a665$var$formatRange(monthFormatter, stringFormatter, startDate, endDate, timeZone) : monthFormatter.formatRange(startDate.toDate(timeZone), endDate.toDate(timeZone));
    }
    return isAria ? $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, startDate, endDate, timeZone) : dateFormatter.formatRange(startDate.toDate(timeZone), endDate.toDate(timeZone));
  }, [
    startDate,
    endDate,
    monthFormatter,
    dateFormatter,
    stringFormatter,
    timeZone,
    isAria
  ]);
}
function $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, start, end, timeZone) {
  let parts = dateFormatter.formatRangeToParts(start.toDate(timeZone), end.toDate(timeZone));
  let separatorIndex = -1;
  for (let i = 0; i < parts.length; i++) {
    let part = parts[i];
    if (part.source === "shared" && part.type === "literal") separatorIndex = i;
    else if (part.source === "endRange") break;
  }
  let startValue = "";
  let endValue = "";
  for (let i = 0; i < parts.length; i++) {
    if (i < separatorIndex) startValue += parts[i].value;
    else if (i > separatorIndex) endValue += parts[i].value;
  }
  return stringFormatter.format("dateRange", {
    startDate: startValue,
    endDate: endValue
  });
}

// node_modules/@react-aria/calendar/dist/useCalendarBase.mjs
var import_react195 = __toESM(require_react(), 1);
function $parcel$interopDefault8(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
function $c4acc1de3ab169cf$export$d652b3ea2d672d5b(props, state) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault8($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let title = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(state.visibleRange.start, state.visibleRange.end, state.timeZone, false);
  let visibleRangeDescription = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(state.visibleRange.start, state.visibleRange.end, state.timeZone, true);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    if (!state.isFocused) (0, $319e236875307eab$export$a9b970dcc4ae71a9)(visibleRangeDescription);
  }, [
    visibleRangeDescription
  ]);
  let selectedDateDescription = (0, $a074e1e2d0f0a665$export$b6df97c887c38e1a)(state);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    if (selectedDateDescription) (0, $319e236875307eab$export$a9b970dcc4ae71a9)(selectedDateDescription, "polite", 4e3);
  }, [
    selectedDateDescription
  ]);
  let errorMessageId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)([
    Boolean(props.errorMessage),
    props.isInvalid,
    props.validationState
  ]);
  (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).set(state, {
    ariaLabel: props["aria-label"],
    ariaLabelledBy: props["aria-labelledby"],
    errorMessageId,
    selectedDateDescription
  });
  let [nextFocused, setNextFocused] = (0, import_react195.useState)(false);
  let nextDisabled = props.isDisabled || state.isNextVisibleRangeInvalid();
  if (nextDisabled && nextFocused) {
    setNextFocused(false);
    state.setFocused(true);
  }
  let [previousFocused, setPreviousFocused] = (0, import_react195.useState)(false);
  let previousDisabled = props.isDisabled || state.isPreviousVisibleRangeInvalid();
  if (previousDisabled && previousFocused) {
    setPreviousFocused(false);
    state.setFocused(true);
  }
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id: props["id"],
    "aria-label": [
      props["aria-label"],
      visibleRangeDescription
    ].filter(Boolean).join(", "),
    "aria-labelledby": props["aria-labelledby"]
  });
  return {
    calendarProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, labelProps, {
      role: "application",
      "aria-describedby": props["aria-describedby"] || void 0
    }),
    nextButtonProps: {
      onPress: () => state.focusNextPage(),
      "aria-label": stringFormatter.format("next"),
      isDisabled: nextDisabled,
      onFocusChange: setNextFocused
    },
    prevButtonProps: {
      onPress: () => state.focusPreviousPage(),
      "aria-label": stringFormatter.format("previous"),
      isDisabled: previousDisabled,
      onFocusChange: setPreviousFocused
    },
    errorMessageProps: {
      id: errorMessageId
    },
    title
  };
}

// node_modules/@react-aria/calendar/dist/useCalendar.mjs
function $9942cad8a072a530$export$3ee915f8151bd4f1(props, state) {
  return (0, $c4acc1de3ab169cf$export$d652b3ea2d672d5b)(props, state);
}

// node_modules/@react-aria/calendar/dist/useRangeCalendar.mjs
var import_react196 = __toESM(require_react(), 1);
function $46a4342aab3d8076$export$87e0539f600c24e5(props, state, ref) {
  let res = (0, $c4acc1de3ab169cf$export$d652b3ea2d672d5b)(props, state);
  let isVirtualClick = (0, import_react196.useRef)(false);
  let windowRef = (0, import_react196.useRef)(typeof window !== "undefined" ? window : null);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(windowRef, "pointerdown", (e) => {
    isVirtualClick.current = e.width === 0 && e.height === 0;
  });
  let endDragging = (e) => {
    if (isVirtualClick.current) {
      isVirtualClick.current = false;
      return;
    }
    state.setDragging(false);
    if (!state.anchorDate) return;
    let target = e.target;
    if (ref.current && ref.current.contains(document.activeElement) && (!ref.current.contains(target) || !target.closest('button, [role="button"]'))) state.selectFocusedDate();
  };
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(windowRef, "pointerup", endDragging);
  res.calendarProps.onBlur = (e) => {
    if (!ref.current) return;
    if ((!e.relatedTarget || !ref.current.contains(e.relatedTarget)) && state.anchorDate) state.selectFocusedDate();
  };
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "touchmove", (e) => {
    if (state.isDragging) e.preventDefault();
  }, {
    passive: false,
    capture: true
  });
  return res;
}

// node_modules/@react-aria/calendar/dist/useCalendarGrid.mjs
var import_react197 = __toESM(require_react(), 1);
function $e3031d1f8c9d64eb$export$cb95147730a423f5(props, state) {
  let { startDate = state.visibleRange.start, endDate = state.visibleRange.end } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let onKeyDown = (e) => {
    switch (e.key) {
      case "Enter":
      case " ":
        e.preventDefault();
        state.selectFocusedDate();
        break;
      case "PageUp":
        e.preventDefault();
        e.stopPropagation();
        state.focusPreviousSection(e.shiftKey);
        break;
      case "PageDown":
        e.preventDefault();
        e.stopPropagation();
        state.focusNextSection(e.shiftKey);
        break;
      case "End":
        e.preventDefault();
        e.stopPropagation();
        state.focusSectionEnd();
        break;
      case "Home":
        e.preventDefault();
        e.stopPropagation();
        state.focusSectionStart();
        break;
      case "ArrowLeft":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl") state.focusNextDay();
        else state.focusPreviousDay();
        break;
      case "ArrowUp":
        e.preventDefault();
        e.stopPropagation();
        state.focusPreviousRow();
        break;
      case "ArrowRight":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl") state.focusPreviousDay();
        else state.focusNextDay();
        break;
      case "ArrowDown":
        e.preventDefault();
        e.stopPropagation();
        state.focusNextRow();
        break;
      case "Escape":
        if ("setAnchorDate" in state) {
          e.preventDefault();
          state.setAnchorDate(null);
        }
        break;
    }
  };
  let visibleRangeDescription = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(startDate, endDate, state.timeZone, true);
  let { ariaLabel, ariaLabelledBy } = (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).get(state);
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    "aria-label": [
      ariaLabel,
      visibleRangeDescription
    ].filter(Boolean).join(", "),
    "aria-labelledby": ariaLabelledBy
  });
  let dayFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: props.weekdayStyle || "narrow",
    timeZone: state.timeZone
  });
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let weekDays = (0, import_react197.useMemo)(() => {
    let weekStart = (0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)((0, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3)(state.timeZone), locale);
    return [
      ...new Array(7).keys()
    ].map((index) => {
      let date = weekStart.add({
        days: index
      });
      let dateDay = date.toDate(state.timeZone);
      return dayFormatter.format(dateDay);
    });
  }, [
    locale,
    state.timeZone,
    dayFormatter
  ]);
  return {
    gridProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(labelProps, {
      role: "grid",
      "aria-readonly": state.isReadOnly || null,
      "aria-disabled": state.isDisabled || null,
      "aria-multiselectable": "highlightedRange" in state || void 0,
      onKeyDown,
      onFocus: () => state.setFocused(true),
      onBlur: () => state.setFocused(false)
    }),
    headerProps: {
      // Column headers are hidden to screen readers to make navigating with a touch screen reader easier.
      // The day names are already included in the label of each cell, so there's no need to announce them twice.
      "aria-hidden": true
    },
    weekDays
  };
}

// node_modules/@react-aria/calendar/dist/useCalendarCell.mjs
var import_react198 = __toESM(require_react(), 1);
function $parcel$interopDefault9(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
function $36a0ac60f04457c5$export$136073280381448e(props, state, ref) {
  let { date, isDisabled } = props;
  let { errorMessageId, selectedDateDescription } = (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).get(state);
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault9($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: "long",
    day: "numeric",
    month: "long",
    year: "numeric",
    era: (0, $a074e1e2d0f0a665$export$134cbb7fb09a9522)(date),
    timeZone: state.timeZone
  });
  let isSelected3 = state.isSelected(date);
  let isFocused = state.isCellFocused(date);
  isDisabled = isDisabled || state.isCellDisabled(date);
  let isUnavailable = state.isCellUnavailable(date);
  let isSelectable = !isDisabled && !isUnavailable;
  let isInvalid = state.isValueInvalid && ("highlightedRange" in state ? !state.anchorDate && state.highlightedRange && date.compare(state.highlightedRange.start) >= 0 && date.compare(state.highlightedRange.end) <= 0 : state.value && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(state.value, date));
  if (isInvalid) isSelected3 = true;
  date = (0, $5a387cc49350e6db$export$722debc0e56fea39)(date, (0, $14e0f24ef4ac5c92$export$91b62ebf2ba703ee));
  let nativeDate = (0, import_react198.useMemo)(() => date.toDate(state.timeZone), [
    date,
    state.timeZone
  ]);
  let isDateToday = (0, $14e0f24ef4ac5c92$export$629b0a497aa65267)(date, state.timeZone);
  let label = (0, import_react198.useMemo)(() => {
    let label2 = "";
    if ("highlightedRange" in state && state.value && !state.anchorDate && ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.value.start) || (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.value.end))) label2 = selectedDateDescription + ", ";
    label2 += dateFormatter.format(nativeDate);
    if (isDateToday)
      label2 = stringFormatter.format(isSelected3 ? "todayDateSelected" : "todayDate", {
        date: label2
      });
    else if (isSelected3)
      label2 = stringFormatter.format("dateSelected", {
        date: label2
      });
    if (state.minValue && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.minValue)) label2 += ", " + stringFormatter.format("minimumDate");
    else if (state.maxValue && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.maxValue)) label2 += ", " + stringFormatter.format("maximumDate");
    return label2;
  }, [
    dateFormatter,
    nativeDate,
    stringFormatter,
    isSelected3,
    isDateToday,
    date,
    state,
    selectedDateDescription
  ]);
  let rangeSelectionPrompt = "";
  if ("anchorDate" in state && isFocused && !state.isReadOnly && isSelectable) {
    if (state.anchorDate) rangeSelectionPrompt = stringFormatter.format("finishRangeSelectionPrompt");
    else rangeSelectionPrompt = stringFormatter.format("startRangeSelectionPrompt");
  }
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(rangeSelectionPrompt);
  let isAnchorPressed = (0, import_react198.useRef)(false);
  let isRangeBoundaryPressed = (0, import_react198.useRef)(false);
  let touchDragTimerRef = (0, import_react198.useRef)(null);
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad213)({
    // When dragging to select a range, we don't want dragging over the original anchor
    // again to trigger onPressStart. Cancel presses immediately when the pointer exits.
    shouldCancelOnPointerExit: "anchorDate" in state && !!state.anchorDate,
    preventFocusOnPress: true,
    isDisabled: !isSelectable || state.isReadOnly,
    onPressStart(e) {
      if (state.isReadOnly) {
        state.setFocusedDate(date);
        return;
      }
      if ("highlightedRange" in state && !state.anchorDate && (e.pointerType === "mouse" || e.pointerType === "touch")) {
        if (state.highlightedRange && !isInvalid) {
          if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.start)) {
            state.setAnchorDate(state.highlightedRange.end);
            state.setFocusedDate(date);
            state.setDragging(true);
            isRangeBoundaryPressed.current = true;
            return;
          } else if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.end)) {
            state.setAnchorDate(state.highlightedRange.start);
            state.setFocusedDate(date);
            state.setDragging(true);
            isRangeBoundaryPressed.current = true;
            return;
          }
        }
        let startDragging = () => {
          state.setDragging(true);
          touchDragTimerRef.current = null;
          state.selectDate(date);
          state.setFocusedDate(date);
          isAnchorPressed.current = true;
        };
        if (e.pointerType === "touch") touchDragTimerRef.current = setTimeout(startDragging, 200);
        else startDragging();
      }
    },
    onPressEnd() {
      isRangeBoundaryPressed.current = false;
      isAnchorPressed.current = false;
      clearTimeout(touchDragTimerRef.current);
      touchDragTimerRef.current = null;
    },
    onPress() {
      if (!("anchorDate" in state) && !state.isReadOnly) {
        state.selectDate(date);
        state.setFocusedDate(date);
      }
    },
    onPressUp(e) {
      if (state.isReadOnly) return;
      if ("anchorDate" in state && touchDragTimerRef.current) {
        state.selectDate(date);
        state.setFocusedDate(date);
      }
      if ("anchorDate" in state) {
        if (isRangeBoundaryPressed.current)
          state.setAnchorDate(date);
        else if (state.anchorDate && !isAnchorPressed.current) {
          state.selectDate(date);
          state.setFocusedDate(date);
        } else if (e.pointerType === "keyboard" && !state.anchorDate) {
          state.selectDate(date);
          let nextDay = date.add({
            days: 1
          });
          if (state.isInvalid(nextDay)) nextDay = date.subtract({
            days: 1
          });
          if (!state.isInvalid(nextDay)) state.setFocusedDate(nextDay);
        } else if (e.pointerType === "virtual") {
          state.selectDate(date);
          state.setFocusedDate(date);
        }
      }
    }
  });
  let tabIndex = null;
  if (!isDisabled) tabIndex = (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.focusedDate) ? 0 : -1;
  (0, import_react198.useEffect)(() => {
    if (isFocused && ref.current) {
      (0, $7215afc6de606d6b$export$de79e2c695e052f3)(ref.current);
      if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a93)() !== "pointer" && document.activeElement === ref.current) (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
        containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
      });
    }
  }, [
    isFocused,
    ref
  ]);
  let cellDateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    day: "numeric",
    timeZone: state.timeZone,
    calendar: date.calendar.identifier
  });
  let formattedDate = (0, import_react198.useMemo)(() => cellDateFormatter.formatToParts(nativeDate).find((part) => part.type === "day").value, [
    cellDateFormatter,
    nativeDate
  ]);
  return {
    cellProps: {
      role: "gridcell",
      "aria-disabled": !isSelectable || null,
      "aria-selected": isSelected3 || null,
      "aria-invalid": isInvalid || null
    },
    buttonProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, {
      onFocus() {
        if (!isDisabled) state.setFocusedDate(date);
      },
      tabIndex,
      role: "button",
      "aria-disabled": !isSelectable || null,
      "aria-label": label,
      "aria-invalid": isInvalid || null,
      "aria-describedby": [
        isInvalid ? errorMessageId : null,
        descriptionProps["aria-describedby"]
      ].filter(Boolean).join(" ") || void 0,
      onPointerEnter(e) {
        if ("highlightDate" in state && (e.pointerType !== "touch" || state.isDragging) && isSelectable) state.highlightDate(date);
      },
      onPointerDown(e) {
        if ("releasePointerCapture" in e.target) e.target.releasePointerCapture(e.pointerId);
      },
      onContextMenu(e) {
        e.preventDefault();
      }
    }),
    isPressed,
    isFocused,
    isSelected: isSelected3,
    isDisabled,
    isUnavailable,
    isOutsideVisibleRange: date.compare(state.visibleRange.start) < 0 || date.compare(state.visibleRange.end) > 0,
    isInvalid,
    formattedDate
  };
}

// node_modules/@react-stately/calendar/dist/utils.mjs
function $f62d864046160412$export$eac50920cf2fd59a(date, minValue, maxValue) {
  return minValue != null && date.compare(minValue) < 0 || maxValue != null && date.compare(maxValue) > 0;
}
function $f62d864046160412$export$f4a51ff076cc9a09(date, duration, locale, minValue, maxValue) {
  let halfDuration = {};
  for (let key in duration) {
    halfDuration[key] = Math.floor(duration[key] / 2);
    if (halfDuration[key] > 0 && duration[key] % 2 === 0) halfDuration[key]--;
  }
  let aligned = $f62d864046160412$export$144a00ba6044eb9(date, duration, locale).subtract(halfDuration);
  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);
}
function $f62d864046160412$export$144a00ba6044eb9(date, duration, locale, minValue, maxValue) {
  let aligned = date;
  if (duration.years) aligned = (0, $14e0f24ef4ac5c92$export$f91e89d3d0406102)(date);
  else if (duration.months) aligned = (0, $14e0f24ef4ac5c92$export$a5a3b454ada2268e)(date);
  else if (duration.weeks) aligned = (0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)(date, locale);
  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);
}
function $f62d864046160412$export$530edbfc915b2b04(date, duration, locale, minValue, maxValue) {
  let d = {
    ...duration
  };
  if (d.days) d.days--;
  else if (d.weeks) d.weeks--;
  else if (d.months) d.months--;
  else if (d.years) d.years--;
  let aligned = $f62d864046160412$export$144a00ba6044eb9(date, duration, locale).subtract(d);
  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);
}
function $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue) {
  if (minValue && date.compare(minValue) >= 0) {
    let newDate = (0, $14e0f24ef4ac5c92$export$a75f2bff57811055)(aligned, $f62d864046160412$export$144a00ba6044eb9((0, $11d87f3f76e88657$export$93522d1a439f3617)(minValue), duration, locale));
    if (newDate) aligned = newDate;
  }
  if (maxValue && date.compare(maxValue) <= 0) {
    let newDate = (0, $14e0f24ef4ac5c92$export$5c333a116e949cdd)(aligned, $f62d864046160412$export$530edbfc915b2b04((0, $11d87f3f76e88657$export$93522d1a439f3617)(maxValue), duration, locale));
    if (newDate) aligned = newDate;
  }
  return aligned;
}
function $f62d864046160412$export$4f5203c0d889109e(date, minValue, maxValue) {
  if (minValue) {
    let newDate = (0, $14e0f24ef4ac5c92$export$a75f2bff57811055)(date, (0, $11d87f3f76e88657$export$93522d1a439f3617)(minValue));
    if (newDate) date = newDate;
  }
  if (maxValue) {
    let newDate = (0, $14e0f24ef4ac5c92$export$5c333a116e949cdd)(date, (0, $11d87f3f76e88657$export$93522d1a439f3617)(maxValue));
    if (newDate) date = newDate;
  }
  return date;
}
function $f62d864046160412$export$a1d3911297b952d7(date, minValue, isDateUnavailable) {
  if (!isDateUnavailable) return date;
  while (date.compare(minValue) >= 0 && isDateUnavailable(date)) date = date.subtract({
    days: 1
  });
  if (date.compare(minValue) >= 0) return date;
  return null;
}

// node_modules/@react-stately/calendar/dist/useCalendarState.mjs
var import_react199 = __toESM(require_react(), 1);
function $131cf43a05231e1e$export$6d095e787d2b5e1f(props) {
  let defaultFormatter = (0, import_react199.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(props.locale), [
    props.locale
  ]);
  let resolvedOptions = (0, import_react199.useMemo)(() => defaultFormatter.resolvedOptions(), [
    defaultFormatter
  ]);
  let { locale, createCalendar, visibleDuration = {
    months: 1
  }, minValue, maxValue, selectionAlignment, isDateUnavailable, pageBehavior = "visible" } = props;
  let calendar = (0, import_react199.useMemo)(() => createCalendar(resolvedOptions.calendar), [
    createCalendar,
    resolvedOptions.calendar
  ]);
  var _props_defaultValue;
  let [value, setControlledValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : null, props.onChange);
  let calendarDateValue = (0, import_react199.useMemo)(() => value ? (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$93522d1a439f3617)(value), calendar) : null, [
    value,
    calendar
  ]);
  let timeZone = (0, import_react199.useMemo)(() => value && "timeZone" in value ? value.timeZone : resolvedOptions.timeZone, [
    value,
    resolvedOptions.timeZone
  ]);
  let focusedCalendarDate = (0, import_react199.useMemo)(() => props.focusedValue ? (0, $f62d864046160412$export$4f5203c0d889109e)((0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$93522d1a439f3617)(props.focusedValue), calendar), minValue, maxValue) : void 0, [
    props.focusedValue,
    calendar,
    minValue,
    maxValue
  ]);
  let defaultFocusedCalendarDate = (0, import_react199.useMemo)(() => (0, $f62d864046160412$export$4f5203c0d889109e)(props.defaultFocusedValue ? (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$93522d1a439f3617)(props.defaultFocusedValue), calendar) : calendarDateValue || (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3)(timeZone), calendar), minValue, maxValue), [
    props.defaultFocusedValue,
    calendarDateValue,
    timeZone,
    calendar,
    minValue,
    maxValue
  ]);
  let [focusedDate, setFocusedDate] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(focusedCalendarDate, defaultFocusedCalendarDate, props.onFocusChange);
  let [startDate, setStartDate] = (0, import_react199.useState)(() => {
    switch (selectionAlignment) {
      case "start":
        return (0, $f62d864046160412$export$144a00ba6044eb9)(focusedDate, visibleDuration, locale, minValue, maxValue);
      case "end":
        return (0, $f62d864046160412$export$530edbfc915b2b04)(focusedDate, visibleDuration, locale, minValue, maxValue);
      case "center":
      default:
        return (0, $f62d864046160412$export$f4a51ff076cc9a09)(focusedDate, visibleDuration, locale, minValue, maxValue);
    }
  });
  let [isFocused, setFocused] = (0, import_react199.useState)(props.autoFocus || false);
  let endDate = (0, import_react199.useMemo)(() => {
    let duration = {
      ...visibleDuration
    };
    if (duration.days) duration.days--;
    else duration.days = -1;
    return startDate.add(duration);
  }, [
    startDate,
    visibleDuration
  ]);
  let [lastCalendarIdentifier, setLastCalendarIdentifier] = (0, import_react199.useState)(calendar.identifier);
  if (calendar.identifier !== lastCalendarIdentifier) {
    let newFocusedDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(focusedDate, calendar);
    setStartDate((0, $f62d864046160412$export$f4a51ff076cc9a09)(newFocusedDate, visibleDuration, locale, minValue, maxValue));
    setFocusedDate(newFocusedDate);
    setLastCalendarIdentifier(calendar.identifier);
  }
  if ((0, $f62d864046160412$export$eac50920cf2fd59a)(focusedDate, minValue, maxValue))
    setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate, minValue, maxValue));
  else if (focusedDate.compare(startDate) < 0) setStartDate((0, $f62d864046160412$export$530edbfc915b2b04)(focusedDate, visibleDuration, locale, minValue, maxValue));
  else if (focusedDate.compare(endDate) > 0) setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)(focusedDate, visibleDuration, locale, minValue, maxValue));
  function focusCell(date) {
    date = (0, $f62d864046160412$export$4f5203c0d889109e)(date, minValue, maxValue);
    setFocusedDate(date);
  }
  function setValue(newValue) {
    if (!props.isDisabled && !props.isReadOnly) {
      let localValue = newValue;
      if (localValue === null) {
        setControlledValue(null);
        return;
      }
      localValue = (0, $f62d864046160412$export$4f5203c0d889109e)(localValue, minValue, maxValue);
      localValue = (0, $f62d864046160412$export$a1d3911297b952d7)(localValue, startDate, isDateUnavailable);
      if (!localValue) return;
      localValue = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(localValue, (value === null || value === void 0 ? void 0 : value.calendar) || new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      if (value && "hour" in value) setControlledValue(value.set(localValue));
      else setControlledValue(localValue);
    }
  }
  let isUnavailable = (0, import_react199.useMemo)(() => {
    if (!calendarDateValue) return false;
    if (isDateUnavailable && isDateUnavailable(calendarDateValue)) return true;
    return (0, $f62d864046160412$export$eac50920cf2fd59a)(calendarDateValue, minValue, maxValue);
  }, [
    calendarDateValue,
    isDateUnavailable,
    minValue,
    maxValue
  ]);
  let isValueInvalid = props.isInvalid || props.validationState === "invalid" || isUnavailable;
  let validationState = isValueInvalid ? "invalid" : null;
  let pageDuration = (0, import_react199.useMemo)(() => {
    if (pageBehavior === "visible") return visibleDuration;
    return $131cf43a05231e1e$var$unitDuration(visibleDuration);
  }, [
    pageBehavior,
    visibleDuration
  ]);
  var _props_isDisabled, _props_isReadOnly;
  return {
    isDisabled: (_props_isDisabled = props.isDisabled) !== null && _props_isDisabled !== void 0 ? _props_isDisabled : false,
    isReadOnly: (_props_isReadOnly = props.isReadOnly) !== null && _props_isReadOnly !== void 0 ? _props_isReadOnly : false,
    value: calendarDateValue,
    setValue,
    visibleRange: {
      start: startDate,
      end: endDate
    },
    minValue,
    maxValue,
    focusedDate,
    timeZone,
    validationState,
    isValueInvalid,
    setFocusedDate(date) {
      focusCell(date);
      setFocused(true);
    },
    focusNextDay() {
      focusCell(focusedDate.add({
        days: 1
      }));
    },
    focusPreviousDay() {
      focusCell(focusedDate.subtract({
        days: 1
      }));
    },
    focusNextRow() {
      if (visibleDuration.days) this.focusNextPage();
      else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) focusCell(focusedDate.add({
        weeks: 1
      }));
    },
    focusPreviousRow() {
      if (visibleDuration.days) this.focusPreviousPage();
      else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) focusCell(focusedDate.subtract({
        weeks: 1
      }));
    },
    focusNextPage() {
      let start = startDate.add(pageDuration);
      setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate.add(pageDuration), minValue, maxValue));
      setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)((0, $f62d864046160412$export$5bb865b12696a77d)(focusedDate, start, pageDuration, locale, minValue, maxValue), pageDuration, locale));
    },
    focusPreviousPage() {
      let start = startDate.subtract(pageDuration);
      setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate.subtract(pageDuration), minValue, maxValue));
      setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)((0, $f62d864046160412$export$5bb865b12696a77d)(focusedDate, start, pageDuration, locale, minValue, maxValue), pageDuration, locale));
    },
    focusSectionStart() {
      if (visibleDuration.days) focusCell(startDate);
      else if (visibleDuration.weeks) focusCell((0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)(focusedDate, locale));
      else if (visibleDuration.months || visibleDuration.years) focusCell((0, $14e0f24ef4ac5c92$export$a5a3b454ada2268e)(focusedDate));
    },
    focusSectionEnd() {
      if (visibleDuration.days) focusCell(endDate);
      else if (visibleDuration.weeks) focusCell((0, $14e0f24ef4ac5c92$export$ef8b6d9133084f4e)(focusedDate, locale));
      else if (visibleDuration.months || visibleDuration.years) focusCell((0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(focusedDate));
    },
    focusNextSection(larger) {
      if (!larger && !visibleDuration.days) {
        focusCell(focusedDate.add($131cf43a05231e1e$var$unitDuration(visibleDuration)));
        return;
      }
      if (visibleDuration.days) this.focusNextPage();
      else if (visibleDuration.weeks) focusCell(focusedDate.add({
        months: 1
      }));
      else if (visibleDuration.months || visibleDuration.years) focusCell(focusedDate.add({
        years: 1
      }));
    },
    focusPreviousSection(larger) {
      if (!larger && !visibleDuration.days) {
        focusCell(focusedDate.subtract($131cf43a05231e1e$var$unitDuration(visibleDuration)));
        return;
      }
      if (visibleDuration.days) this.focusPreviousPage();
      else if (visibleDuration.weeks) focusCell(focusedDate.subtract({
        months: 1
      }));
      else if (visibleDuration.months || visibleDuration.years) focusCell(focusedDate.subtract({
        years: 1
      }));
    },
    selectFocusedDate() {
      setValue(focusedDate);
    },
    selectDate(date) {
      setValue(date);
    },
    isFocused,
    setFocused,
    isInvalid(date) {
      return (0, $f62d864046160412$export$eac50920cf2fd59a)(date, minValue, maxValue);
    },
    isSelected(date) {
      return calendarDateValue != null && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, calendarDateValue) && !this.isCellDisabled(date) && !this.isCellUnavailable(date);
    },
    isCellFocused(date) {
      return isFocused && focusedDate && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, focusedDate);
    },
    isCellDisabled(date) {
      return props.isDisabled || date.compare(startDate) < 0 || date.compare(endDate) > 0 || this.isInvalid(date);
    },
    isCellUnavailable(date) {
      return props.isDateUnavailable ? props.isDateUnavailable(date) : false;
    },
    isPreviousVisibleRangeInvalid() {
      let prev = startDate.subtract({
        days: 1
      });
      return (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(prev, startDate) || this.isInvalid(prev);
    },
    isNextVisibleRangeInvalid() {
      let next = endDate.add({
        days: 1
      });
      return (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(next, endDate) || this.isInvalid(next);
    },
    getDatesInWeek(weekIndex, from = startDate) {
      let date = from.add({
        weeks: weekIndex
      });
      let dates = [];
      date = (0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)(date, locale);
      let dayOfWeek = (0, $14e0f24ef4ac5c92$export$2061056d06d7cdf7)(date, locale);
      for (let i = 0; i < dayOfWeek; i++) dates.push(null);
      while (dates.length < 7) {
        dates.push(date);
        let nextDate = date.add({
          days: 1
        });
        if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, nextDate)) break;
        date = nextDate;
      }
      while (dates.length < 7) dates.push(null);
      return dates;
    }
  };
}
function $131cf43a05231e1e$var$unitDuration(duration) {
  let unit = {
    ...duration
  };
  for (let key in duration) unit[key] = 1;
  return unit;
}

// node_modules/@react-stately/calendar/dist/useRangeCalendarState.mjs
var import_react200 = __toESM(require_react(), 1);
function $9a36b6ba2fb1a7c5$export$9a987164d97ecc90(props) {
  let { value: valueProp, defaultValue: defaultValue2, onChange, createCalendar, locale, visibleDuration = {
    months: 1
  }, minValue, maxValue, ...calendarProps } = props;
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(valueProp, defaultValue2 || null, onChange);
  let [anchorDate, setAnchorDateState] = (0, import_react200.useState)(null);
  let alignment = "center";
  if (value && value.start && value.end) {
    let start = (0, $f62d864046160412$export$f4a51ff076cc9a09)((0, $11d87f3f76e88657$export$93522d1a439f3617)(value.start), visibleDuration, locale, minValue, maxValue);
    let end = start.add(visibleDuration).subtract({
      days: 1
    });
    if (value.end.compare(end) > 0) alignment = "start";
  }
  let availableRangeRef = (0, import_react200.useRef)(null);
  let [availableRange, setAvailableRange] = (0, import_react200.useState)(null);
  let min2 = (0, import_react200.useMemo)(() => (0, $14e0f24ef4ac5c92$export$a75f2bff57811055)(minValue, availableRange === null || availableRange === void 0 ? void 0 : availableRange.start), [
    minValue,
    availableRange
  ]);
  let max2 = (0, import_react200.useMemo)(() => (0, $14e0f24ef4ac5c92$export$5c333a116e949cdd)(maxValue, availableRange === null || availableRange === void 0 ? void 0 : availableRange.end), [
    maxValue,
    availableRange
  ]);
  let calendar = (0, $131cf43a05231e1e$export$6d095e787d2b5e1f)({
    ...calendarProps,
    value: value && value.start,
    createCalendar,
    locale,
    visibleDuration,
    minValue: min2,
    maxValue: max2,
    selectionAlignment: alignment
  });
  let updateAvailableRange = (date) => {
    if (date && props.isDateUnavailable && !props.allowsNonContiguousRanges) {
      const nextAvailableStartDate = $9a36b6ba2fb1a7c5$var$nextUnavailableDate(date, calendar, -1);
      const nextAvailableEndDate = $9a36b6ba2fb1a7c5$var$nextUnavailableDate(date, calendar, 1);
      availableRangeRef.current = {
        start: nextAvailableStartDate,
        end: nextAvailableEndDate
      };
      setAvailableRange(availableRangeRef.current);
    } else {
      availableRangeRef.current = null;
      setAvailableRange(null);
    }
  };
  let [lastVisibleRange, setLastVisibleRange] = (0, import_react200.useState)(calendar.visibleRange);
  if (!(0, $14e0f24ef4ac5c92$export$91b62ebf2ba703ee)(calendar.visibleRange.start, lastVisibleRange.start) || !(0, $14e0f24ef4ac5c92$export$91b62ebf2ba703ee)(calendar.visibleRange.end, lastVisibleRange.end)) {
    updateAvailableRange(anchorDate);
    setLastVisibleRange(calendar.visibleRange);
  }
  let setAnchorDate = (date) => {
    if (date) {
      setAnchorDateState(date);
      updateAvailableRange(date);
    } else {
      setAnchorDateState(null);
      updateAvailableRange(null);
    }
  };
  let highlightedRange = anchorDate ? $9a36b6ba2fb1a7c5$var$makeRange(anchorDate, calendar.focusedDate) : value && $9a36b6ba2fb1a7c5$var$makeRange(value.start, value.end);
  let selectDate = (date) => {
    if (props.isReadOnly) return;
    const constrainedDate = (0, $f62d864046160412$export$4f5203c0d889109e)(date, min2, max2);
    const previousAvailableConstrainedDate = (0, $f62d864046160412$export$a1d3911297b952d7)(constrainedDate, calendar.visibleRange.start, props.isDateUnavailable);
    if (!previousAvailableConstrainedDate) return;
    if (!anchorDate) setAnchorDate(previousAvailableConstrainedDate);
    else {
      let range = $9a36b6ba2fb1a7c5$var$makeRange(anchorDate, previousAvailableConstrainedDate);
      if (range) setValue({
        start: $9a36b6ba2fb1a7c5$var$convertValue(range.start, value === null || value === void 0 ? void 0 : value.start),
        end: $9a36b6ba2fb1a7c5$var$convertValue(range.end, value === null || value === void 0 ? void 0 : value.end)
      });
      setAnchorDate(null);
    }
  };
  let [isDragging, setDragging] = (0, import_react200.useState)(false);
  let { isDateUnavailable } = props;
  let isInvalidSelection = (0, import_react200.useMemo)(() => {
    if (!value || anchorDate) return false;
    if (isDateUnavailable && (isDateUnavailable(value.start) || isDateUnavailable(value.end))) return true;
    return (0, $f62d864046160412$export$eac50920cf2fd59a)(value.start, minValue, maxValue) || (0, $f62d864046160412$export$eac50920cf2fd59a)(value.end, minValue, maxValue);
  }, [
    isDateUnavailable,
    value,
    anchorDate,
    minValue,
    maxValue
  ]);
  let isValueInvalid = props.isInvalid || props.validationState === "invalid" || isInvalidSelection;
  let validationState = isValueInvalid ? "invalid" : null;
  return {
    ...calendar,
    value,
    setValue,
    anchorDate,
    setAnchorDate,
    highlightedRange,
    validationState,
    isValueInvalid,
    selectFocusedDate() {
      selectDate(calendar.focusedDate);
    },
    selectDate,
    highlightDate(date) {
      if (anchorDate) calendar.setFocusedDate(date);
    },
    isSelected(date) {
      return Boolean(highlightedRange && date.compare(highlightedRange.start) >= 0 && date.compare(highlightedRange.end) <= 0 && !calendar.isCellDisabled(date) && !calendar.isCellUnavailable(date));
    },
    isInvalid(date) {
      var _availableRangeRef_current, _availableRangeRef_current1;
      return calendar.isInvalid(date) || (0, $f62d864046160412$export$eac50920cf2fd59a)(date, (_availableRangeRef_current = availableRangeRef.current) === null || _availableRangeRef_current === void 0 ? void 0 : _availableRangeRef_current.start, (_availableRangeRef_current1 = availableRangeRef.current) === null || _availableRangeRef_current1 === void 0 ? void 0 : _availableRangeRef_current1.end);
    },
    isDragging,
    setDragging
  };
}
function $9a36b6ba2fb1a7c5$var$makeRange(start, end) {
  if (!start || !end) return null;
  if (end.compare(start) < 0) [start, end] = [
    end,
    start
  ];
  return {
    start: (0, $11d87f3f76e88657$export$93522d1a439f3617)(start),
    end: (0, $11d87f3f76e88657$export$93522d1a439f3617)(end)
  };
}
function $9a36b6ba2fb1a7c5$var$convertValue(newValue, oldValue) {
  newValue = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(newValue, (oldValue === null || oldValue === void 0 ? void 0 : oldValue.calendar) || new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
  if (oldValue && "hour" in oldValue) return oldValue.set(newValue);
  return newValue;
}
function $9a36b6ba2fb1a7c5$var$nextUnavailableDate(anchorDate, state, dir) {
  let nextDate = anchorDate.add({
    days: dir
  });
  while ((dir < 0 ? nextDate.compare(state.visibleRange.start) >= 0 : nextDate.compare(state.visibleRange.end) <= 0) && !state.isCellUnavailable(nextDate)) nextDate = nextDate.add({
    days: dir
  });
  if (state.isCellUnavailable(nextDate)) return nextDate.add({
    days: -dir
  });
}

// node_modules/@vtex/shoreline/dist/index.mjs
var import_react497 = __toESM(require_react(), 1);
var import_react498 = __toESM(require_react(), 1);
var import_jsx_runtime329 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime330 = __toESM(require_jsx_runtime(), 1);
var import_react499 = __toESM(require_react(), 1);
var import_jsx_runtime331 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime332 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime333 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime334 = __toESM(require_jsx_runtime(), 1);
var import_react500 = __toESM(require_react(), 1);
var import_react501 = __toESM(require_react(), 1);
var import_jsx_runtime335 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime336 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime337 = __toESM(require_jsx_runtime(), 1);
var import_react502 = __toESM(require_react(), 1);
var import_jsx_runtime338 = __toESM(require_jsx_runtime(), 1);
var import_react503 = __toESM(require_react(), 1);
var import_jsx_runtime339 = __toESM(require_jsx_runtime(), 1);
var import_react504 = __toESM(require_react(), 1);
var import_jsx_runtime340 = __toESM(require_jsx_runtime(), 1);
var __defProp4 = Object.defineProperty;
var __defProps3 = Object.defineProperties;
var __getOwnPropDescs3 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols4 = Object.getOwnPropertySymbols;
var __hasOwnProp4 = Object.prototype.hasOwnProperty;
var __propIsEnum4 = Object.prototype.propertyIsEnumerable;
var __defNormalProp4 = (obj, key, value) => key in obj ? __defProp4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues4 = (a2, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp4.call(b2, prop))
      __defNormalProp4(a2, prop, b2[prop]);
  if (__getOwnPropSymbols4)
    for (var prop of __getOwnPropSymbols4(b2)) {
      if (__propIsEnum4.call(b2, prop))
        __defNormalProp4(a2, prop, b2[prop]);
    }
  return a2;
};
var __spreadProps3 = (a2, b2) => __defProps3(a2, __getOwnPropDescs3(b2));
var __objRest3 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp4.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols4)
    for (var prop of __getOwnPropSymbols4(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum4.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var VisuallyHidden3 = (0, import_react202.forwardRef)(
  function VisuallyHidden22(props, ref) {
    return (0, import_jsx_runtime69.jsx)(VisuallyHidden, __spreadProps3(__spreadValues4({}, props), { ref }));
  }
);
var AccessibleIcon = (0, import_react201.forwardRef)(
  function AccessibleIcon2(props, ref) {
    const _a2 = props, { children: children3, label } = _a2, rest = __objRest3(_a2, ["children", "label"]);
    const child = import_react201.Children.only(children3);
    return (0, import_jsx_runtime70.jsxs)(import_jsx_runtime70.Fragment, { children: [
      (0, import_react201.cloneElement)(child, __spreadValues4({
        "data-sl-accessible-icon": true,
        "aria-hidden": true,
        focusable: false,
        ref
      }, rest)),
      (0, import_jsx_runtime70.jsx)(VisuallyHidden3, { children: label })
    ] });
  }
);
function Composable(props) {
  const { render = (node) => (0, import_jsx_runtime71.jsx)(import_jsx_runtime71.Fragment, { children: node }), children: children3 } = props;
  return (0, import_jsx_runtime71.jsx)(import_jsx_runtime71.Fragment, { children: render(children3) });
}
function isComposable(child) {
  return (0, import_react207.isValidElement)(child) && child.type === Composable;
}
function composeElement({ element, props, ref }) {
  const _a2 = element, {
    props: _b
  } = _a2, _c = _b, { children: children3 } = _c, ownProps = __objRest3(_c, ["children"]), {
    ref: ownRef
  } = _a2;
  return (0, import_react208.cloneElement)(
    element,
    __spreadProps3(__spreadValues4({}, mergeProps2(props, ownProps)), {
      ref: ownRef ? mergeRefs(ref, ownRef) : ref
    }),
    children3
  );
}
function createComposition({ props, ref, element }) {
  const childrenArray = import_react206.Children.toArray(element);
  const composableElement = childrenArray.find(isComposable);
  if (composableElement) {
    const newElement = composableElement.props.children;
    const render = composableElement.props.render;
    const newChildren = childrenArray.map((child) => {
      if (child === composableElement) {
        if (import_react206.Children.count(newElement) > 1) return import_react206.Children.only(null);
        if (!(0, import_react206.isValidElement)(newElement)) return null;
        const {
          props: { children: children3 }
        } = newElement;
        if (render) {
          return (0, import_jsx_runtime72.jsx)(import_react206.Fragment, { children: render(children3) }, child.key);
        }
        return children3;
      }
      return child;
    });
    return composeElement({
      element: (0, import_react206.cloneElement)(newElement, void 0, newChildren),
      ref,
      props
    });
  }
  return composeElement({
    element,
    props,
    ref
  });
}
var Compose = (0, import_react205.forwardRef)(
  function Compose2(props, ref) {
    const _a2 = props, { children: children3 } = _a2, rootProps = __objRest3(_a2, ["children"]);
    return (0, import_jsx_runtime73.jsx)(import_jsx_runtime73.Fragment, { children: createComposition({
      element: children3,
      props: rootProps,
      ref
    }) });
  }
);
var Clickable = (0, import_react204.forwardRef)(
  function Clickable2(props, ref) {
    const _a2 = props, { asChild = false, onClick, style: style11 } = _a2, otherProps = __objRest3(_a2, ["asChild", "onClick", "style"]);
    const Comp = asChild ? Compose : "div";
    const clickEvent = (event) => {
      const shouldPreventClick = event.currentTarget !== event.target && !shouldBubble(event);
      if (shouldPreventClick) return;
      if (!hasSomeTextSelected()) {
        onClick == null ? void 0 : onClick(event);
      }
    };
    return (0, import_jsx_runtime74.jsx)(
      Comp,
      __spreadValues4({
        "data-sl-clickable": true,
        ref,
        onClick: clickEvent,
        style: __spreadValues4({
          userSelect: "none"
        }, style11)
      }, otherProps)
    );
  }
);
function shouldBubble(event) {
  const shouldBubbleEvent = !!event.target.getAttribute("data-should-bubble");
  event.target.removeAttribute("data-should-bubble");
  return shouldBubbleEvent;
}
var ClickableBubble = (0, import_react209.forwardRef)(
  function Clickable3(props, ref) {
    const _a2 = props, { onlyImmediateChild = false, onClick } = _a2, otherProps = __objRest3(_a2, ["onlyImmediateChild", "onClick"]);
    const clickEvent = (event) => {
      const targetIsImmediateChild = !!event.target.getAttribute(
        "data-sl-clickable-bubble"
      );
      if (onlyImmediateChild && targetIsImmediateChild || !onlyImmediateChild) {
        event.target.setAttribute("data-should-bubble", "true");
      }
      onClick == null ? void 0 : onClick(event);
    };
    return (0, import_jsx_runtime75.jsx)(
      Compose,
      __spreadValues4({
        "data-sl-clickable-bubble": true,
        onClick: clickEvent,
        ref
      }, otherProps)
    );
  }
);
var ComboboxInput = (0, import_react210.forwardRef)(
  function ComboboxInput2(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, domProps = __objRest3(_a2, ["asChild", "children"]);
    return (0, import_jsx_runtime76.jsx)(
      Combobox,
      __spreadValues4({
        "data-sl-combobox-input": true,
        ref,
        render: asChild ? children3 : void 0
      }, domProps)
    );
  }
);
var ComboboxPopover3 = (0, import_react213.forwardRef)(
  function ComboboxPopover22(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    return (0, import_jsx_runtime77.jsx)(
      ComboboxPopover,
      __spreadProps3(__spreadValues4({
        "data-sl-combobox-popover": true,
        ref,
        render: asChild ? children3 : void 0
      }, otherProps), {
        children: children3
      })
    );
  }
);
var ComboboxItem3 = (0, import_react215.forwardRef)(
  function ComboboxItem22(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    return (0, import_jsx_runtime78.jsx)(
      ComboboxItem,
      __spreadProps3(__spreadValues4({
        "data-sl-combobox-item": true,
        ref,
        render: asChild ? children3 : void 0
      }, otherProps), {
        children: children3
      })
    );
  }
);
var ComboboxList3 = (0, import_react217.forwardRef)(
  function ComboboxList22(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    return (0, import_jsx_runtime79.jsx)(
      ComboboxList,
      __spreadProps3(__spreadValues4({
        "data-sl-combobox-list": true,
        ref,
        render: asChild ? children3 : void 0
      }, otherProps), {
        children: children3
      })
    );
  }
);
function navigate(href, target = "_parent") {
  if (!canUseDOM2) return;
  const features = target === "_blank" ? "noreferrer=true" : void 0;
  window.open(href, target, features);
}
var LinkBox = forwardRef22(
  function LinkBox2(props, ref) {
    const _a2 = props, { href, target = "_parent", asChild = false } = _a2, otherProps = __objRest3(_a2, ["href", "target", "asChild"]);
    return (0, import_jsx_runtime80.jsx)(
      Clickable,
      __spreadValues4({
        "data-sl-link-box": true,
        asChild,
        ref,
        onClick: ({ metaKey }) => {
          navigate(href, metaKey ? "_blank" : target);
        }
      }, otherProps)
    );
  }
);
var LocaleContext = (0, import_react220.createContext)("en-US");
function useLocale() {
  const locale = (0, import_react219.useContext)(LocaleContext);
  return locale;
}
function LocaleProvider(props) {
  const { locale = "en-US", children: children3 } = props;
  return (0, import_jsx_runtime81.jsx)(LocaleContext.Provider, { value: locale, children: (0, import_jsx_runtime81.jsx)($18f2051aff69b9bf$export$a54013f0d02a8f82, { locale, children: children3 }) });
}
function createMessageHook(messages8) {
  return function useMessage8(overrides) {
    const locale = useLocale();
    return (0, import_react221.useCallback)(
      (id, variables) => {
        const localizedMessages = messages8[locale];
        const localizedString = get(localizedMessages, id, variables, "");
        return overrides ? get(overrides, id, variables, localizedString) : localizedString;
      },
      [locale, overrides]
    );
  };
}
function get(obj, path, variables, fallback) {
  const localizedMessage = obj == null ? void 0 : obj[path];
  if (!localizedMessage) return fallback;
  if (!variables) return localizedMessage;
  const dynamicMessage = Object.entries(variables).reduce(
    (acc, [key, value]) => {
      return acc.replace(new RegExp(`{${key}}`, "g"), String(value));
    },
    localizedMessage
  );
  return dynamicMessage;
}
var IconAlarm = (0, import_react222.forwardRef)(function IconAlarm2(props, ref) {
  return (0, import_jsx_runtime82.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime82.jsx)(
          "path",
          {
            d: "M10 16.875C13.797 16.875 16.875 13.797 16.875 10C16.875 6.20304 13.797 3.125 10 3.125C6.20304 3.125 3.125 6.20304 3.125 10C3.125 13.797 6.20304 16.875 10 16.875Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime82.jsx)(
          "path",
          {
            d: "M4.375 1.875L1.875 4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime82.jsx)(
          "path",
          {
            d: "M15.625 1.875L18.125 4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime82.jsx)(
          "path",
          {
            d: "M10 5.625V10H14.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconArchive = (0, import_react223.forwardRef)(function IconArchive2(props, ref) {
  return (0, import_jsx_runtime83.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime83.jsx)(
          "path",
          {
            d: "M17.5 4.375H2.5C2.15482 4.375 1.875 4.65482 1.875 5V6.875C1.875 7.22018 2.15482 7.5 2.5 7.5H17.5C17.8452 7.5 18.125 7.22018 18.125 6.875V5C18.125 4.65482 17.8452 4.375 17.5 4.375Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime83.jsx)(
          "path",
          {
            d: "M16.875 7.5V15C16.875 15.1658 16.8092 15.3247 16.6919 15.4419C16.5747 15.5592 16.4158 15.625 16.25 15.625H3.75C3.58424 15.625 3.42527 15.5592 3.30806 15.4419C3.19085 15.3247 3.125 15.1658 3.125 15V7.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime83.jsx)(
          "path",
          {
            d: "M8.125 10.625H11.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconArrowCounterClockwise = (0, import_react224.forwardRef)(function IconArrowCounterClockwise2(props, ref) {
  return (0, import_jsx_runtime84.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime84.jsx)(
          "path",
          {
            d: "M1.875 4.375V8.125H5.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime84.jsx)(
          "path",
          {
            d: "M5.28047 14.9999C6.26318 15.9274 7.49741 16.5447 8.82895 16.7747C10.1605 17.0047 11.5303 16.8372 12.7672 16.2932C14.0041 15.7491 15.0532 14.8527 15.7835 13.7158C16.5139 12.5789 16.893 11.252 16.8735 9.90089C16.854 8.54978 16.4368 7.23436 15.674 6.119C14.9112 5.00364 13.8366 4.13779 12.5846 3.62965C11.3325 3.1215 9.95847 2.99359 8.63412 3.26189C7.30977 3.53019 6.09385 4.18281 5.13828 5.1382L1.875 8.12492",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconArrowDownSmall = (0, import_react225.forwardRef)(function IconArrowDownSmall2(props, ref) {
  return (0, import_jsx_runtime85.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime85.jsx)(
          "path",
          {
            d: "M8 2.5V13.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime85.jsx)(
          "path",
          {
            d: "M3.5 9L8 13.5L12.5 9",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconArrowDown = (0, import_react226.forwardRef)(function IconArrowDown2(props, ref) {
  return (0, import_jsx_runtime86.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime86.jsx)(
        "path",
        {
          d: "M10 3.125L10 16.875M10 16.875L4.375 11.25M10 16.875L15.625 11.25",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconArrowLeft = (0, import_react227.forwardRef)(function IconArrowLeft2(props, ref) {
  return (0, import_jsx_runtime87.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime87.jsx)(
        "path",
        {
          d: "M16.875 10H3.125M3.125 10L8.75 4.375M3.125 10L8.75 15.625",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconArrowLineDown = (0, import_react228.forwardRef)(function IconArrowLineDown2(props, ref) {
  return (0, import_jsx_runtime88.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime88.jsx)(
          "path",
          {
            d: "M10 2.5V14.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime88.jsx)(
          "path",
          {
            d: "M4.375 8.75L10 14.375L15.625 8.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime88.jsx)(
          "path",
          {
            d: "M3.125 16.875H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconArrowLineUp = (0, import_react229.forwardRef)(function IconArrowLineUp2(props, ref) {
  return (0, import_jsx_runtime89.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime89.jsx)(
          "path",
          {
            d: "M10 17.5V5.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime89.jsx)(
          "path",
          {
            d: "M4.375 11.25L10 5.625L15.625 11.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime89.jsx)(
          "path",
          {
            d: "M3.125 3.125H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconArrowRight = (0, import_react230.forwardRef)(function IconArrowRight2(props, ref) {
  return (0, import_jsx_runtime90.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime90.jsx)(
          "path",
          {
            d: "M3.125 10H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime90.jsx)(
          "path",
          {
            d: "M11.25 4.375L16.875 10L11.25 15.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconArrowUUpLeft = (0, import_react231.forwardRef)(function IconArrowUUpLeft2(props, ref) {
  return (0, import_jsx_runtime91.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime91.jsx)(
          "path",
          {
            d: "M6.25 10.625L2.5 6.875L6.25 3.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime91.jsx)(
          "path",
          {
            d: "M6.25 15.625H13.125C14.2853 15.625 15.3981 15.1641 16.2186 14.3436C17.0391 13.5231 17.5 12.4103 17.5 11.25V11.25C17.5 10.6755 17.3868 10.1066 17.167 9.57575C16.9471 9.04496 16.6249 8.56266 16.2186 8.15641C15.8123 7.75015 15.33 7.42789 14.7992 7.20803C14.2684 6.98816 13.6995 6.875 13.125 6.875H2.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconArrowUpRightSmall = (0, import_react232.forwardRef)(function IconArrowUpRightSmall2(props, ref) {
  return (0, import_jsx_runtime92.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime92.jsx)(
          "path",
          {
            d: "M4 12L12 4",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime92.jsx)(
          "path",
          {
            d: "M5.5 4H12V10.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconArrowUpRight = (0, import_react233.forwardRef)(function IconArrowUpRight2(props, ref) {
  return (0, import_jsx_runtime93.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime93.jsx)(
          "path",
          {
            d: "M5 15L15 5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime93.jsx)(
          "path",
          {
            d: "M6.875 5H15V13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconArrowUpSmall = (0, import_react234.forwardRef)(function IconArrowUpSmall2(props, ref) {
  return (0, import_jsx_runtime94.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime94.jsx)(
          "path",
          {
            d: "M0.0625 0.0625H15.9375V15.9375H0.0625V0.0625Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "0.125"
          }
        ),
        (0, import_jsx_runtime94.jsx)(
          "path",
          {
            d: "M8 13.5V2.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime94.jsx)(
          "path",
          {
            d: "M3.5 7L8 2.5L12.5 7",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconArrowUp = (0, import_react235.forwardRef)(function IconArrowUp2(props, ref) {
  return (0, import_jsx_runtime95.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime95.jsx)(
        "path",
        {
          d: "M10 16.875V3.125M10 3.125L15.625 8.75M10 3.125L4.375 8.75",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconArrowsClockwise = (0, import_react236.forwardRef)(function IconArrowsClockwise2(props, ref) {
  return (0, import_jsx_runtime96.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime96.jsx)(
          "path",
          {
            d: "M5 5C5 5 6.875 3.125 10 3.125C14.375 3.125 16.875 7.5 16.875 7.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime96.jsx)(
          "path",
          {
            d: "M15 15C15 15 13.125 16.875 10 16.875C5.625 16.875 3.125 12.5 3.125 12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime96.jsx)(
          "path",
          {
            d: "M13.125 7.5H16.875V3.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime96.jsx)(
          "path",
          {
            d: "M6.875 12.5H3.125V16.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconBarcode = (0, import_react237.forwardRef)(function IconBarcode2(props, ref) {
  return (0, import_jsx_runtime97.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime97.jsx)(
          "path",
          {
            d: "M14.375 3.75H17.5V6.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime97.jsx)(
          "path",
          {
            d: "M5.625 16.25H2.5V13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime97.jsx)(
          "path",
          {
            d: "M17.5 13.125V16.25H14.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime97.jsx)(
          "path",
          {
            d: "M2.5 6.875V3.75H5.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime97.jsx)(
          "path",
          {
            d: "M6.25 6.875V13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime97.jsx)(
          "path",
          {
            d: "M13.75 6.875V13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime97.jsx)(
          "path",
          {
            d: "M11.25 6.875V13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime97.jsx)(
          "path",
          {
            d: "M8.75 6.875V13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconBell = (0, import_react238.forwardRef)(function IconBell2(props, ref) {
  return (0, import_jsx_runtime98.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime98.jsx)(
          "path",
          {
            d: "M7.5 15C7.5 15.663 7.76339 16.2989 8.23223 16.7678C8.70107 17.2366 9.33696 17.5 10 17.5C10.663 17.5 11.2989 17.2366 11.7678 16.7678C12.2366 16.2989 12.5 15.663 12.5 15",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime98.jsx)(
          "path",
          {
            d: "M4.37515 8.125C4.37515 6.63316 4.96778 5.20242 6.02267 4.14752C7.07756 3.09263 8.5083 2.5 10.0001 2.5C11.492 2.5 12.9227 3.09263 13.9776 4.14752C15.0325 5.20242 15.6251 6.63316 15.6251 8.125C15.6251 10.9234 16.2736 13.1719 16.7892 14.0625C16.844 14.1574 16.8728 14.2649 16.8729 14.3745C16.873 14.484 16.8444 14.5916 16.7898 14.6865C16.7352 14.7815 16.6566 14.8604 16.5619 14.9154C16.4672 14.9705 16.3597 14.9996 16.2501 15H3.75015C3.64076 14.9993 3.53345 14.97 3.43896 14.9149C3.34448 14.8597 3.26611 14.7808 3.2117 14.6859C3.15729 14.591 3.12874 14.4835 3.12891 14.3741C3.12907 14.2647 3.15795 14.1572 3.21265 14.0625C3.72749 13.1719 4.37515 10.9227 4.37515 8.125Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCalendarBlank = (0, import_react239.forwardRef)(function IconCalendarBlank2(props, ref) {
  return (0, import_jsx_runtime99.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime99.jsx)(
          "path",
          {
            d: "M16.25 3.125H3.75C3.40482 3.125 3.125 3.40482 3.125 3.75V16.25C3.125 16.5952 3.40482 16.875 3.75 16.875H16.25C16.5952 16.875 16.875 16.5952 16.875 16.25V3.75C16.875 3.40482 16.5952 3.125 16.25 3.125Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime99.jsx)(
          "path",
          {
            d: "M13.75 1.875V4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime99.jsx)(
          "path",
          {
            d: "M6.25 1.875V4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime99.jsx)(
          "path",
          {
            d: "M3.125 6.875H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCameraFill = (0, import_react240.forwardRef)(function IconCameraFill2(props, ref) {
  return (0, import_jsx_runtime100.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime100.jsx)("g", { clipPath: "url(#clip0_81_31)", children: (0, import_jsx_runtime100.jsx)(
          "path",
          {
            d: "M16.25 4.375H14.0844L13.0195 2.77813C12.9625 2.69262 12.8852 2.6225 12.7946 2.57399C12.704 2.52548 12.6028 2.50006 12.5 2.5H7.5C7.39721 2.50006 7.29602 2.52548 7.2054 2.57399C7.11478 2.6225 7.03752 2.69262 6.98047 2.77813L5.91484 4.375H3.75C3.25272 4.375 2.77581 4.57254 2.42417 4.92417C2.07254 5.27581 1.875 5.75272 1.875 6.25V15C1.875 15.4973 2.07254 15.9742 2.42417 16.3258C2.77581 16.6775 3.25272 16.875 3.75 16.875H16.25C16.7473 16.875 17.2242 16.6775 17.5758 16.3258C17.9275 15.9742 18.125 15.4973 18.125 15V6.25C18.125 5.75272 17.9275 5.27581 17.5758 4.92417C17.2242 4.57254 16.7473 4.375 16.25 4.375ZM12.8125 10.3125C12.8125 10.8688 12.6475 11.4125 12.3385 11.875C12.0295 12.3376 11.5902 12.698 11.0763 12.9109C10.5624 13.1238 9.99688 13.1795 9.45131 13.071C8.90574 12.9624 8.4046 12.6946 8.01126 12.3012C7.61793 11.9079 7.35006 11.4068 7.24154 10.8612C7.13302 10.3156 7.18872 9.75012 7.40159 9.2362C7.61446 8.72229 7.97495 8.28303 8.43746 7.97399C8.89997 7.66495 9.44374 7.5 10 7.5C10.7459 7.5 11.4613 7.79632 11.9887 8.32376C12.5162 8.85121 12.8125 9.56658 12.8125 10.3125Z",
            fill: "currentColor"
          }
        ) }),
        (0, import_jsx_runtime100.jsx)("defs", { children: (0, import_jsx_runtime100.jsx)("clipPath", { id: "clip0_81_31", children: (0, import_jsx_runtime100.jsx)("rect", { width: "20", height: "20", fill: "transparent" }) }) })
      ]
    })
  );
});
var IconCaretDownSmall = (0, import_react241.forwardRef)(function IconCaretDownSmall2(props, ref) {
  return (0, import_jsx_runtime101.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime101.jsx)(
        "path",
        {
          d: "M13 6L8 11L3 6",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconCaretDown = (0, import_react242.forwardRef)(function IconCaretDown2(props, ref) {
  return (0, import_jsx_runtime102.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime102.jsx)(
        "path",
        {
          d: "M16.25 7.5L10 13.75L3.75 7.5",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconCaretLeftSmall = (0, import_react243.forwardRef)(function IconCaretLeftSmall2(props, ref) {
  return (0, import_jsx_runtime103.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime103.jsx)(
        "path",
        {
          d: "M10 13L5 8L10 3",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconCaretLeft = (0, import_react244.forwardRef)(function IconCaretLeft2(props, ref) {
  return (0, import_jsx_runtime104.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime104.jsx)(
        "path",
        {
          d: "M12.5 16.25L6.25 10L12.5 3.75",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconCaretRightSmall = (0, import_react245.forwardRef)(function IconCaretRightSmall2(props, ref) {
  return (0, import_jsx_runtime105.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime105.jsx)(
        "path",
        {
          d: "M6 3L11 8L6 13",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconCaretRight = (0, import_react246.forwardRef)(function IconCaretRight2(props, ref) {
  return (0, import_jsx_runtime106.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime106.jsx)(
        "path",
        {
          d: "M7.5 3.75L13.75 10L7.5 16.25",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconCaretUpDownSmall = (0, import_react247.forwardRef)(function IconCaretUpDownSmall2(props, ref) {
  return (0, import_jsx_runtime107.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime107.jsx)(
          "path",
          {
            d: "M5 11L8 14L11 11",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime107.jsx)(
          "path",
          {
            d: "M5 5L8 2L11 5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCaretUpSmall = (0, import_react248.forwardRef)(function IconCaretUpSmall2(props, ref) {
  return (0, import_jsx_runtime108.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime108.jsx)(
        "path",
        {
          d: "M3 10L8 5L13 10",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconCaretUp = (0, import_react249.forwardRef)(function IconCaretUp2(props, ref) {
  return (0, import_jsx_runtime109.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime109.jsx)(
        "path",
        {
          d: "M3.75 12.5L10 6.25L16.25 12.5",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconChartBar = (0, import_react250.forwardRef)(function IconChartBar2(props, ref) {
  return (0, import_jsx_runtime110.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime110.jsx)(
          "path",
          {
            d: "M3.75 16.25V10.625H7.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime110.jsx)(
          "path",
          {
            d: "M17.5 16.25H2.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime110.jsx)(
          "path",
          {
            d: "M7.5 16.25V6.875H11.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime110.jsx)(
          "path",
          {
            d: "M11.875 16.25V3.125H16.25V16.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconChartLineUp = (0, import_react251.forwardRef)(function IconChartLineUp2(props, ref) {
  return (0, import_jsx_runtime111.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime111.jsx)(
          "path",
          {
            d: "M17.5 16.25H2.5V3.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime111.jsx)(
          "path",
          {
            d: "M15.625 5.625L10 11.25L7.5 8.75L2.5 13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime111.jsx)(
          "path",
          {
            d: "M15.625 8.75V5.625H12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconChatCircle = (0, import_react252.forwardRef)(function IconChatCircle2(props, ref) {
  return (0, import_jsx_runtime112.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime112.jsx)(
          "path",
          {
            d: "M6.24452 16.4929C7.81994 17.4047 9.67318 17.7125 11.4587 17.3588C13.2443 17.0051 14.8403 16.0141 15.9491 14.5706C17.058 13.1271 17.604 11.3295 17.4854 9.51317C17.3669 7.69679 16.5918 5.98552 15.3047 4.69842C14.0176 3.41131 12.3063 2.63622 10.4899 2.51765C8.67355 2.39908 6.87604 2.94512 5.43253 4.05398C3.98901 5.16283 2.99803 6.75882 2.64433 8.54436C2.29063 10.3299 2.59836 12.1832 3.51015 13.7586L2.5328 16.6765C2.49608 16.7867 2.49075 16.9048 2.51741 17.0178C2.54407 17.1308 2.60168 17.2341 2.68376 17.3162C2.76584 17.3983 2.86917 17.4559 2.98215 17.4826C3.09513 17.5092 3.21331 17.5039 3.32343 17.4672L6.24452 16.4929Z",
            stroke: "#1F1F1F",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime112.jsx)(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M4.97564 3.45921C6.5635 2.23946 8.54076 1.63881 10.5388 1.76924C12.5368 1.89967 14.4192 2.75227 15.835 4.16809C17.2508 5.58391 18.1034 7.4663 18.2339 9.46432C18.3643 11.4623 17.7636 13.4396 16.5439 15.0275C15.3241 16.6153 13.5686 17.7054 11.6045 18.0945C9.75316 18.4612 7.83571 18.1815 6.17037 17.3083L3.56071 18.1786C3.31844 18.2594 3.05844 18.2712 2.80989 18.2125C2.56133 18.1538 2.33402 18.0271 2.15343 17.8465C1.97284 17.666 1.84612 17.4386 1.78746 17.1901C1.7288 16.9415 1.74053 16.6815 1.82132 16.4393L2.69453 13.8322C1.82152 12.167 1.54194 10.2497 1.90863 8.39863C2.29769 6.43453 3.38778 4.67895 4.97564 3.45921ZM10.4411 3.26606C8.80633 3.15934 7.18857 3.65078 5.88941 4.64875C4.59025 5.64672 3.69836 7.08311 3.38003 8.6901C3.06171 10.2971 3.33866 11.965 4.15927 13.3829C4.26706 13.5691 4.28966 13.7927 4.22132 13.9968L3.32379 16.6764L6.00724 15.7815C6.21106 15.7135 6.43425 15.7362 6.62021 15.8438C8.03808 16.6644 9.706 16.9414 11.313 16.6231C12.92 16.3047 14.3564 15.4128 15.3543 14.1137C16.3523 12.8145 16.8438 11.1968 16.737 9.56203C16.6303 7.92729 15.9327 6.38714 14.7743 5.22875C13.616 4.07035 12.0758 3.37277 10.4411 3.26606Z",
            fill: "#1F1F1F"
          }
        )
      ]
    })
  );
});
var IconChatText = (0, import_react253.forwardRef)(function IconChatText2(props, ref) {
  return (0, import_jsx_runtime113.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime113.jsx)(
          "path",
          {
            d: "M3.52734 17.9773C3.43631 18.0539 3.32531 18.1029 3.20739 18.1186C3.08947 18.1343 2.96952 18.116 2.86164 18.0659C2.75376 18.0157 2.66242 17.9359 2.59836 17.8356C2.5343 17.7354 2.50018 17.619 2.5 17.5V5C2.5 4.83424 2.56585 4.67527 2.68306 4.55806C2.80027 4.44085 2.95924 4.375 3.125 4.375H16.875C17.0408 4.375 17.1997 4.44085 17.3169 4.55806C17.4342 4.67527 17.5 4.83424 17.5 5V15C17.5 15.1658 17.4342 15.3247 17.3169 15.4419C17.1997 15.5592 17.0408 15.625 16.875 15.625H6.44531C6.29808 15.625 6.1556 15.6771 6.04297 15.7719L3.52734 17.9773Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime113.jsx)(
          "path",
          {
            d: "M7.5 8.75H12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime113.jsx)(
          "path",
          {
            d: "M7.5 11.25H12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCheckCircleFill = (0, import_react254.forwardRef)(function IconCheckCircleFill2(props, ref) {
  return (0, import_jsx_runtime114.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime114.jsx)(
        "path",
        {
          d: "M10 1.875C8.39303 1.875 6.82214 2.35152 5.486 3.24431C4.14985 4.1371 3.10844 5.40605 2.49348 6.8907C1.87852 8.37535 1.71762 10.009 2.03112 11.5851C2.34463 13.1612 3.11846 14.6089 4.25476 15.7452C5.39106 16.8815 6.8388 17.6554 8.4149 17.9689C9.99099 18.2824 11.6247 18.1215 13.1093 17.5065C14.594 16.8916 15.8629 15.8502 16.7557 14.514C17.6485 13.1779 18.125 11.607 18.125 10C18.1227 7.84581 17.266 5.78051 15.7427 4.25727C14.2195 2.73403 12.1542 1.87727 10 1.875ZM13.5672 8.56719L9.19219 12.9422C9.13415 13.0003 9.06522 13.0464 8.98934 13.0779C8.91347 13.1093 8.83214 13.1255 8.75 13.1255C8.66787 13.1255 8.58654 13.1093 8.51067 13.0779C8.43479 13.0464 8.36586 13.0003 8.30782 12.9422L6.43282 11.0672C6.31554 10.9499 6.24966 10.7909 6.24966 10.625C6.24966 10.4591 6.31554 10.3001 6.43282 10.1828C6.55009 10.0655 6.70915 9.99965 6.875 9.99965C7.04086 9.99965 7.19992 10.0655 7.31719 10.1828L8.75 11.6164L12.6828 7.68281C12.7409 7.62474 12.8098 7.57868 12.8857 7.54725C12.9616 7.51583 13.0429 7.49965 13.125 7.49965C13.2071 7.49965 13.2884 7.51583 13.3643 7.54725C13.4402 7.57868 13.5091 7.62474 13.5672 7.68281C13.6253 7.74088 13.6713 7.80982 13.7027 7.88569C13.7342 7.96156 13.7504 8.04288 13.7504 8.125C13.7504 8.20712 13.7342 8.28844 13.7027 8.36431C13.6713 8.44018 13.6253 8.50912 13.5672 8.56719Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconCheckCircle = (0, import_react255.forwardRef)(function IconCheckCircle2(props, ref) {
  return (0, import_jsx_runtime115.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime115.jsx)(
          "path",
          {
            d: "M6.875 10.625L8.75 12.5L13.125 8.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime115.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCheckSmall = (0, import_react256.forwardRef)(function IconCheckSmall2(props, ref) {
  return (0, import_jsx_runtime116.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime116.jsx)(
        "path",
        {
          d: "M2.3999 8.5L5.8999 12L13.8999 4",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconCheck = (0, import_react257.forwardRef)(function IconCheck2(props, ref) {
  return (0, import_jsx_runtime117.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime117.jsx)(
        "path",
        {
          d: "M3.125 11.25L7.5 15.625L17.5 5.625",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconCirclesThreePlusFill = (0, import_react258.forwardRef)(function IconCirclesThreePlusFill2(props, ref) {
  return (0, import_jsx_runtime118.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime118.jsx)(
        "path",
        {
          d: "M9.375 6.25C9.375 6.86807 9.19172 7.47225 8.84834 7.98616C8.50496 8.50006 8.01691 8.9006 7.44589 9.13713C6.87487 9.37365 6.24654 9.43553 5.64034 9.31496C5.03415 9.19438 4.47733 8.89675 4.04029 8.45971C3.60325 8.02267 3.30563 7.46585 3.18505 6.85966C3.06447 6.25347 3.12635 5.62513 3.36288 5.05412C3.5994 4.4831 3.99994 3.99504 4.51384 3.65166C5.02775 3.30828 5.63193 3.125 6.25 3.125C7.0788 3.125 7.87366 3.45424 8.45971 4.04029C9.04576 4.62634 9.375 5.4212 9.375 6.25ZM13.75 9.375C14.3681 9.375 14.9723 9.19172 15.4862 8.84834C16.0001 8.50496 16.4006 8.01691 16.6371 7.44589C16.8736 6.87487 16.9355 6.24654 16.815 5.64034C16.6944 5.03415 16.3967 4.47733 15.9597 4.04029C15.5227 3.60325 14.9658 3.30563 14.3597 3.18505C13.7535 3.06447 13.1251 3.12635 12.5541 3.36288C11.9831 3.5994 11.495 3.99994 11.1517 4.51384C10.8083 5.02775 10.625 5.63193 10.625 6.25C10.625 7.0788 10.9542 7.87366 11.5403 8.45971C12.1263 9.04576 12.9212 9.375 13.75 9.375ZM6.25 10.625C5.63193 10.625 5.02775 10.8083 4.51384 11.1517C3.99994 11.495 3.5994 11.9831 3.36288 12.5541C3.12635 13.1251 3.06447 13.7535 3.18505 14.3597C3.30563 14.9658 3.60325 15.5227 4.04029 15.9597C4.47733 16.3967 5.03415 16.6944 5.64034 16.815C6.24654 16.9355 6.87487 16.8736 7.44589 16.6371C8.01691 16.4006 8.50496 16.0001 8.84834 15.4862C9.19172 14.9723 9.375 14.3681 9.375 13.75C9.375 12.9212 9.04576 12.1263 8.45971 11.5403C7.87366 10.9542 7.0788 10.625 6.25 10.625ZM16.25 13.125H14.375V11.25C14.375 11.0842 14.3092 10.9253 14.1919 10.8081C14.0747 10.6908 13.9158 10.625 13.75 10.625C13.5842 10.625 13.4253 10.6908 13.3081 10.8081C13.1908 10.9253 13.125 11.0842 13.125 11.25V13.125H11.25C11.0842 13.125 10.9253 13.1908 10.8081 13.3081C10.6908 13.4253 10.625 13.5842 10.625 13.75C10.625 13.9158 10.6908 14.0747 10.8081 14.1919C10.9253 14.3092 11.0842 14.375 11.25 14.375H13.125V16.25C13.125 16.4158 13.1908 16.5747 13.3081 16.6919C13.4253 16.8092 13.5842 16.875 13.75 16.875C13.9158 16.875 14.0747 16.8092 14.1919 16.6919C14.3092 16.5747 14.375 16.4158 14.375 16.25V14.375H16.25C16.4158 14.375 16.5747 14.3092 16.6919 14.1919C16.8092 14.0747 16.875 13.9158 16.875 13.75C16.875 13.5842 16.8092 13.4253 16.6919 13.3081C16.5747 13.1908 16.4158 13.125 16.25 13.125Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconClockClockwise = (0, import_react259.forwardRef)(function IconClockClockwise2(props, ref) {
  return (0, import_jsx_runtime119.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime119.jsx)(
          "path",
          {
            d: "M10 6.25V10L13.125 11.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime119.jsx)(
          "path",
          {
            d: "M14.375 8.125H17.5V5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime119.jsx)(
          "path",
          {
            d: "M14.7188 14.9998C13.736 15.9272 12.5018 16.5444 11.1702 16.7743C9.83865 17.0042 8.46887 16.8366 7.23202 16.2925C5.99517 15.7483 4.94609 14.8518 4.21585 13.7148C3.48562 12.5779 3.10662 11.251 3.12621 9.89986C3.1458 8.54875 3.5631 7.23336 4.32599 6.11806C5.08887 5.00276 6.1635 4.137 7.41561 3.62896C8.66771 3.12091 10.0418 2.9931 11.3661 3.26151C12.6904 3.52991 13.9063 4.18263 14.8618 5.13809C15.7813 6.06934 16.5407 6.94747 17.5001 8.12481",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconClock = (0, import_react260.forwardRef)(function IconClock2(props, ref) {
  return (0, import_jsx_runtime120.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime120.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime120.jsx)(
          "path",
          {
            d: "M10 5.625V10H14.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCloudArrowUp = (0, import_react261.forwardRef)(function IconCloudArrowUp2(props, ref) {
  return (0, import_jsx_runtime121.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime121.jsx)(
          "path",
          {
            d: "M7.49997 16.25H5.62497C5.00463 16.2492 4.39154 16.1166 3.82639 15.8608C3.26124 15.605 2.75694 15.2319 2.34697 14.7663C1.937 14.3008 1.63072 13.7534 1.44846 13.1604C1.2662 12.5674 1.21213 11.9425 1.28983 11.327C1.36753 10.7116 1.57522 10.1197 1.89913 9.5906C2.22305 9.06153 2.65577 8.6074 3.16859 8.25834C3.6814 7.90928 4.26259 7.67326 4.87358 7.56595C5.48458 7.45864 6.1114 7.4825 6.71247 7.63593",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime121.jsx)(
          "path",
          {
            d: "M6.25 10C6.25 9.00968 6.48533 8.03353 6.9366 7.152C7.38788 6.27047 8.04217 5.50879 8.84556 4.92974C9.64895 4.35068 10.5784 3.97083 11.5574 3.82148C12.5364 3.67213 13.5369 3.75756 14.4764 4.07073C15.4159 4.3839 16.2676 4.91584 16.9612 5.62272C17.6547 6.3296 18.1704 7.19118 18.4657 8.13645C18.761 9.08173 18.8274 10.0836 18.6595 11.0596C18.4916 12.0356 18.0942 12.9577 17.5 13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime121.jsx)(
          "path",
          {
            d: "M9.375 12.5L11.875 10L14.375 12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime121.jsx)(
          "path",
          {
            d: "M11.875 16.25V10",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCode = (0, import_react262.forwardRef)(function IconCode2(props, ref) {
  return (0, import_jsx_runtime122.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime122.jsx)(
          "path",
          {
            d: "M5 6.875L1.25 10L5 13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime122.jsx)(
          "path",
          {
            d: "M15 6.875L18.75 10L15 13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime122.jsx)(
          "path",
          {
            d: "M12.5 3.125L7.5 16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCoffee = (0, import_react263.forwardRef)(function IconCoffee2(props, ref) {
  return (0, import_jsx_runtime123.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime123.jsx)(
          "path",
          {
            d: "M6.50781 16.875C5.31162 16.3261 4.29811 15.4454 3.58767 14.3375C2.87723 13.2296 2.49973 11.9411 2.5 10.625V6.875H16.25V10.625C16.2503 11.9411 15.8728 13.2296 15.1623 14.3375C14.4519 15.4454 13.4384 16.3261 12.2422 16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime123.jsx)(
          "path",
          {
            d: "M6.875 1.875V4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime123.jsx)(
          "path",
          {
            d: "M9.375 1.875V4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime123.jsx)(
          "path",
          {
            d: "M11.875 1.875V4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime123.jsx)(
          "path",
          {
            d: "M2.5 16.875H16.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime123.jsx)(
          "path",
          {
            d: "M16.2499 6.875C16.9129 6.875 17.5488 7.13839 18.0177 7.60723C18.4865 8.07607 18.7499 8.71196 18.7499 9.375V10C18.7499 10.663 18.4865 11.2989 18.0177 11.7678C17.5488 12.2366 16.9129 12.5 16.2499 12.5H15.9858",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCopySimple = (0, import_react264.forwardRef)(function IconCopySimple2(props, ref) {
  return (0, import_jsx_runtime124.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime124.jsx)(
          "path",
          {
            d: "M16.8743 14.3746V3.12451H5.62378",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime124.jsx)(
          "path",
          {
            d: "M14.3742 5.62451H3.12378V16.8745H14.3742V5.62451Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCornersIn = (0, import_react265.forwardRef)(function IconCornersIn2(props, ref) {
  return (0, import_jsx_runtime125.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime125.jsx)(
          "path",
          {
            d: "M16.25 7.5H12.5V3.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime125.jsx)(
          "path",
          {
            d: "M3.75 12.5H7.5V16.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime125.jsx)(
          "path",
          {
            d: "M12.5 16.25V12.5H16.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime125.jsx)(
          "path",
          {
            d: "M7.5 3.75V7.5H3.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCornersOut = (0, import_react266.forwardRef)(function IconCornersOut2(props, ref) {
  return (0, import_jsx_runtime126.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime126.jsx)(
          "path",
          {
            d: "M13.125 3.75H16.25V6.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime126.jsx)(
          "path",
          {
            d: "M6.875 16.25H3.75V13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime126.jsx)(
          "path",
          {
            d: "M16.25 13.125V16.25H13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime126.jsx)(
          "path",
          {
            d: "M3.75 6.875V3.75H6.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCreditCard = (0, import_react267.forwardRef)(function IconCreditCard2(props, ref) {
  return (0, import_jsx_runtime127.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime127.jsx)(
          "path",
          {
            d: "M17.5 4.375H2.5C2.15482 4.375 1.875 4.65482 1.875 5V15C1.875 15.3452 2.15482 15.625 2.5 15.625H17.5C17.8452 15.625 18.125 15.3452 18.125 15V5C18.125 4.65482 17.8452 4.375 17.5 4.375Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime127.jsx)(
          "path",
          {
            d: "M13.1245 13.125H15.6245",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime127.jsx)(
          "path",
          {
            d: "M9.37451 13.125H10.6245",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime127.jsx)(
          "path",
          {
            d: "M1.87451 7.56641H18.1245",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCube = (0, import_react268.forwardRef)(function IconCube2(props, ref) {
  return (0, import_jsx_runtime128.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime128.jsx)(
          "path",
          {
            d: "M2.55469 6.0094L10 10.0844L17.4453 6.0094",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime128.jsx)(
          "path",
          {
            d: "M10.3 1.95317L17.175 5.71723C17.2732 5.77095 17.3551 5.85003 17.4123 5.94623C17.4695 6.04243 17.4997 6.15221 17.5 6.26411V13.736C17.4997 13.8479 17.4695 13.9577 17.4123 14.0539C17.3551 14.1501 17.2732 14.2291 17.175 14.2829L10.3 18.0469C10.208 18.0973 10.1049 18.1236 10 18.1236C9.89515 18.1236 9.79198 18.0973 9.7 18.0469L2.825 14.2829C2.72683 14.2291 2.64488 14.1501 2.58772 14.0539C2.53055 13.9577 2.50025 13.8479 2.5 13.736V6.26411C2.50025 6.15221 2.53055 6.04243 2.58772 5.94623C2.64488 5.85003 2.72683 5.77095 2.825 5.71723L9.7 1.95317C9.79198 1.90284 9.89515 1.87646 10 1.87646C10.1049 1.87646 10.208 1.90284 10.3 1.95317Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime128.jsx)(
          "path",
          {
            d: "M10 10.0852V18.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconCurrencyCircleDollar = (0, import_react269.forwardRef)(function IconCurrencyCircleDollar2(props, ref) {
  return (0, import_jsx_runtime129.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime129.jsx)(
          "path",
          {
            d: "M10 5.625V6.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime129.jsx)(
          "path",
          {
            d: "M10 13.125V14.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime129.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime129.jsx)(
          "path",
          {
            d: "M8.125 13.125H10.9375C11.3519 13.125 11.7493 12.9604 12.0424 12.6674C12.3354 12.3743 12.5 11.9769 12.5 11.5625C12.5 11.1481 12.3354 10.7507 12.0424 10.4576C11.7493 10.1646 11.3519 10 10.9375 10H9.0625C8.6481 10 8.25067 9.83538 7.95765 9.54235C7.66462 9.24933 7.5 8.8519 7.5 8.4375C7.5 8.0231 7.66462 7.62567 7.95765 7.33265C8.25067 7.03962 8.6481 6.875 9.0625 6.875H11.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconDotsSixVerticalSmall = (0, import_react270.forwardRef)(function IconDotsSixVerticalSmall2(props, ref) {
  return (0, import_jsx_runtime130.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime130.jsx)(
          "path",
          {
            d: "M5.75 4.75C6.30228 4.75 6.75 4.30228 6.75 3.75C6.75 3.19772 6.30228 2.75 5.75 2.75C5.19772 2.75 4.75 3.19772 4.75 3.75C4.75 4.30228 5.19772 4.75 5.75 4.75Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime130.jsx)(
          "path",
          {
            d: "M10.25 4.75C10.8023 4.75 11.25 4.30228 11.25 3.75C11.25 3.19772 10.8023 2.75 10.25 2.75C9.69772 2.75 9.25 3.19772 9.25 3.75C9.25 4.30228 9.69772 4.75 10.25 4.75Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime130.jsx)(
          "path",
          {
            d: "M5.75 9C6.30228 9 6.75 8.55228 6.75 8C6.75 7.44772 6.30228 7 5.75 7C5.19772 7 4.75 7.44772 4.75 8C4.75 8.55228 5.19772 9 5.75 9Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime130.jsx)(
          "path",
          {
            d: "M10.25 9C10.8023 9 11.25 8.55228 11.25 8C11.25 7.44772 10.8023 7 10.25 7C9.69772 7 9.25 7.44772 9.25 8C9.25 8.55228 9.69772 9 10.25 9Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime130.jsx)(
          "path",
          {
            d: "M5.75 13.25C6.30228 13.25 6.75 12.8023 6.75 12.25C6.75 11.6977 6.30228 11.25 5.75 11.25C5.19772 11.25 4.75 11.6977 4.75 12.25C4.75 12.8023 5.19772 13.25 5.75 13.25Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime130.jsx)(
          "path",
          {
            d: "M10.25 13.25C10.8023 13.25 11.25 12.8023 11.25 12.25C11.25 11.6977 10.8023 11.25 10.25 11.25C9.69772 11.25 9.25 11.6977 9.25 12.25C9.25 12.8023 9.69772 13.25 10.25 13.25Z",
            fill: "currentColor"
          }
        )
      ]
    })
  );
});
var IconDotsSixVertical = (0, import_react271.forwardRef)(function IconDotsSixVertical2(props, ref) {
  return (0, import_jsx_runtime131.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime131.jsx)(
          "path",
          {
            d: "M7.1875 5.9375C7.87786 5.9375 8.4375 5.37786 8.4375 4.6875C8.4375 3.99714 7.87786 3.4375 7.1875 3.4375C6.49714 3.4375 5.9375 3.99714 5.9375 4.6875C5.9375 5.37786 6.49714 5.9375 7.1875 5.9375Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime131.jsx)(
          "path",
          {
            d: "M12.8125 5.9375C13.5029 5.9375 14.0625 5.37786 14.0625 4.6875C14.0625 3.99714 13.5029 3.4375 12.8125 3.4375C12.1221 3.4375 11.5625 3.99714 11.5625 4.6875C11.5625 5.37786 12.1221 5.9375 12.8125 5.9375Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime131.jsx)(
          "path",
          {
            d: "M7.1875 11.25C7.87786 11.25 8.4375 10.6904 8.4375 10C8.4375 9.30964 7.87786 8.75 7.1875 8.75C6.49714 8.75 5.9375 9.30964 5.9375 10C5.9375 10.6904 6.49714 11.25 7.1875 11.25Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime131.jsx)(
          "path",
          {
            d: "M12.8125 11.25C13.5029 11.25 14.0625 10.6904 14.0625 10C14.0625 9.30964 13.5029 8.75 12.8125 8.75C12.1221 8.75 11.5625 9.30964 11.5625 10C11.5625 10.6904 12.1221 11.25 12.8125 11.25Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime131.jsx)(
          "path",
          {
            d: "M7.1875 16.5625C7.87786 16.5625 8.4375 16.0029 8.4375 15.3125C8.4375 14.6221 7.87786 14.0625 7.1875 14.0625C6.49714 14.0625 5.9375 14.6221 5.9375 15.3125C5.9375 16.0029 6.49714 16.5625 7.1875 16.5625Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime131.jsx)(
          "path",
          {
            d: "M12.8125 16.5625C13.5029 16.5625 14.0625 16.0029 14.0625 15.3125C14.0625 14.6221 13.5029 14.0625 12.8125 14.0625C12.1221 14.0625 11.5625 14.6221 11.5625 15.3125C11.5625 16.0029 12.1221 16.5625 12.8125 16.5625Z",
            fill: "currentColor"
          }
        )
      ]
    })
  );
});
var IconDotsThreeVertical = (0, import_react272.forwardRef)(function IconDotsThreeVertical2(props, ref) {
  return (0, import_jsx_runtime132.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime132.jsx)(
        "path",
        {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M10 6.09375C10.8629 6.09375 11.5625 5.39419 11.5625 4.53125C11.5625 3.66831 10.8629 2.96875 10 2.96875C9.13706 2.96875 8.4375 3.66831 8.4375 4.53125C8.4375 5.39419 9.13706 6.09375 10 6.09375ZM10 11.5625C10.8629 11.5625 11.5625 10.8629 11.5625 10C11.5625 9.13705 10.8629 8.4375 10 8.4375C9.13706 8.4375 8.4375 9.13705 8.4375 10C8.4375 10.8629 9.13706 11.5625 10 11.5625ZM11.5625 15.4688C11.5625 16.3317 10.8629 17.0312 10 17.0312C9.13706 17.0312 8.4375 16.3317 8.4375 15.4688C8.4375 14.6058 9.13706 13.9062 10 13.9062C10.8629 13.9062 11.5625 14.6058 11.5625 15.4688Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconEnvelopeSimpleFill = (0, import_react273.forwardRef)(function IconEnvelopeSimpleFill2(props, ref) {
  return (0, import_jsx_runtime133.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime133.jsx)(
        "path",
        {
          d: "M17.5 3.75H2.5C2.33424 3.75 2.17527 3.81585 2.05806 3.93306C1.94085 4.05027 1.875 4.20924 1.875 4.375V15C1.875 15.3315 2.0067 15.6495 2.24112 15.8839C2.47554 16.1183 2.79348 16.25 3.125 16.25H16.875C17.2065 16.25 17.5245 16.1183 17.7589 15.8839C17.9933 15.6495 18.125 15.3315 18.125 15V4.375C18.125 4.20924 18.0592 4.05027 17.9419 3.93306C17.8247 3.81585 17.6658 3.75 17.5 3.75ZM16.875 15H3.125V5.79609L9.57734 11.7109C9.69265 11.8168 9.84348 11.8755 10 11.8755C10.1565 11.8755 10.3074 11.8168 10.4227 11.7109L16.875 5.79609V15Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconEnvelopeSimple = (0, import_react274.forwardRef)(function IconEnvelopeSimple2(props, ref) {
  return (0, import_jsx_runtime134.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime134.jsx)(
          "path",
          {
            d: "M2.5 4.375H17.5V15C17.5 15.1658 17.4342 15.3247 17.3169 15.4419C17.1997 15.5592 17.0408 15.625 16.875 15.625H3.125C2.95924 15.625 2.80027 15.5592 2.68306 15.4419C2.56585 15.3247 2.5 15.1658 2.5 15V4.375Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime134.jsx)(
          "path",
          {
            d: "M17.5 4.375L10 11.25L2.5 4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconEyeSlash = (0, import_react275.forwardRef)(function IconEyeSlash2(props, ref) {
  return (0, import_jsx_runtime135.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime135.jsx)(
          "path",
          {
            d: "M3.75 3.125L16.25 16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime135.jsx)(
          "path",
          {
            d: "M12.1024 12.3125C11.4891 12.8701 10.6794 13.1612 9.85146 13.1218C9.02351 13.0824 8.24514 12.7157 7.68756 12.1023C7.12998 11.489 6.83888 10.6793 6.87829 9.8514C6.91771 9.02345 7.2844 8.24508 7.89772 7.6875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime135.jsx)(
          "path",
          {
            d: "M10.5884 6.93066C11.2528 7.05789 11.8579 7.39726 12.3129 7.89779C12.768 8.39832 13.0483 9.03299 13.1118 9.70645",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime135.jsx)(
          "path",
          {
            d: "M16.2976 13.2109C18.0007 11.6859 18.7499 10 18.7499 10C18.7499 10 16.2499 4.37501 9.9999 4.37501C9.45867 4.37427 8.91829 4.41817 8.38428 4.50626",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime135.jsx)(
          "path",
          {
            d: "M5.78125 5.35938C2.59609 6.97187 1.25 10 1.25 10C1.25 10 3.75 15.625 10 15.625C11.4645 15.6365 12.9106 15.2991 14.2188 14.6406",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconEye = (0, import_react276.forwardRef)(function IconEye2(props, ref) {
  return (0, import_jsx_runtime136.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime136.jsx)(
          "path",
          {
            d: "M10 4.37451C3.75 4.37451 1.25 10.0001 1.25 10.0001C1.25 10.0001 3.75 15.6245 10 15.6245C16.25 15.6245 18.75 10.0001 18.75 10.0001C18.75 10.0001 16.25 4.37451 10 4.37451Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime136.jsx)(
          "path",
          {
            d: "M10 13.125C11.7259 13.125 13.125 11.7259 13.125 10C13.125 8.27411 11.7259 6.875 10 6.875C8.27411 6.875 6.875 8.27411 6.875 10C6.875 11.7259 8.27411 13.125 10 13.125Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconFaders = (0, import_react277.forwardRef)(function IconFaders2(props, ref) {
  return (0, import_jsx_runtime137.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime137.jsx)(
          "path",
          {
            d: "M10 9.375L10 16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime137.jsx)(
          "path",
          {
            d: "M10 3.125L10 6.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime137.jsx)(
          "path",
          {
            d: "M15.625 15.625L15.6251 16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime137.jsx)(
          "path",
          {
            d: "M15.6251 3.125L15.625 13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime137.jsx)(
          "path",
          {
            d: "M17.5 13.125H13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime137.jsx)(
          "path",
          {
            d: "M4.37506 13.125L4.375 16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime137.jsx)(
          "path",
          {
            d: "M4.375 3.125L4.37506 10.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime137.jsx)(
          "path",
          {
            d: "M2.5 10.625H6.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime137.jsx)(
          "path",
          {
            d: "M11.875 6.875H8.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconFileText = (0, import_react278.forwardRef)(function IconFileText2(props, ref) {
  return (0, import_jsx_runtime138.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime138.jsx)(
          "path",
          {
            d: "M15.6251 17.5H4.37451C4.20875 17.5 4.04978 17.4342 3.93257 17.3169C3.81536 17.1997 3.74951 17.0408 3.74951 16.875V3.125C3.74951 2.95924 3.81536 2.80027 3.93257 2.68306C4.04978 2.56585 4.20875 2.5 4.37451 2.5H11.8751L16.2501 6.875V16.875C16.2501 16.9571 16.234 17.0383 16.2025 17.1142C16.1711 17.19 16.1251 17.2589 16.0671 17.3169C16.009 17.375 15.9401 17.421 15.8643 17.4524C15.7885 17.4838 15.7072 17.5 15.6251 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime138.jsx)(
          "path",
          {
            d: "M11.875 2.5V6.875H16.2506",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime138.jsx)(
          "path",
          {
            d: "M7.5 10.625H12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime138.jsx)(
          "path",
          {
            d: "M7.5 13.125H12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconFlag = (0, import_react279.forwardRef)(function IconFlag2(props, ref) {
  return (0, import_jsx_runtime139.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime139.jsx)(
          "path",
          {
            d: "M3.125 16.875V3.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime139.jsx)(
          "path",
          {
            d: "M3.125 13.1251C8.125 8.79463 11.875 17.4556 16.875 13.1251V3.7501C11.875 8.08057 8.125 -0.58037 3.125 3.7501",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconGearSix = (0, import_react280.forwardRef)(function IconGearSix2(props, ref) {
  return (0, import_jsx_runtime140.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime140.jsx)(
          "path",
          {
            d: "M10 13.125C11.7259 13.125 13.125 11.7259 13.125 10C13.125 8.27411 11.7259 6.875 10 6.875C8.27411 6.875 6.875 8.27411 6.875 10C6.875 11.7259 8.27411 13.125 10 13.125Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime140.jsx)(
          "path",
          {
            d: "M10.1603 16.1023C10.0556 16.1023 9.95011 16.1023 9.84777 16.1023L7.34386 17.5C6.36912 17.1721 5.46501 16.6632 4.67902 16L4.66964 13.1875C4.61417 13.1 4.56183 13.0117 4.51339 12.9211L2.02355 11.5031C1.82744 10.5112 1.82744 9.4904 2.02355 8.49844L4.51105 7.08438C4.56183 6.99453 4.61418 6.90547 4.6673 6.81797L4.6798 4.00547C5.46508 3.34035 6.36895 2.82957 7.34386 2.5L9.84386 3.89766C9.94855 3.89766 10.054 3.89766 10.1564 3.89766L12.6564 2.5C13.6311 2.82788 14.5352 3.33679 15.3212 4L15.3306 6.8125C15.3861 6.9 15.4384 6.98828 15.4868 7.07891L17.9751 8.49609C18.1712 9.48806 18.1712 10.5088 17.9751 11.5008L15.4876 12.9148C15.4368 13.0047 15.3845 13.0938 15.3314 13.1813L15.3189 15.9938C14.5341 16.659 13.6308 17.17 12.6564 17.5L10.1603 16.1023Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconGift = (0, import_react281.forwardRef)(function IconGift2(props, ref) {
  return (0, import_jsx_runtime141.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime141.jsx)(
          "path",
          {
            d: "M16.875 6.25H3.125C2.77982 6.25 2.5 6.52982 2.5 6.875V9.375C2.5 9.72018 2.77982 10 3.125 10H16.875C17.2202 10 17.5 9.72018 17.5 9.375V6.875C17.5 6.52982 17.2202 6.25 16.875 6.25Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime141.jsx)(
          "path",
          {
            d: "M16.25 10V15.625C16.25 15.7908 16.1842 15.9497 16.0669 16.0669C15.9497 16.1842 15.7908 16.25 15.625 16.25H4.375C4.20924 16.25 4.05027 16.1842 3.93306 16.0669C3.81585 15.9497 3.75 15.7908 3.75 15.625V10",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime141.jsx)(
          "path",
          {
            d: "M10 6.25V16.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime141.jsx)(
          "path",
          {
            d: "M13.8117 2.43849C14.5414 3.16818 14.5844 4.39631 13.8117 5.08068C12.4906 6.25021 10 6.25021 10 6.25021C10 6.25021 10 3.75959 11.1719 2.43849C11.8539 1.66584 13.082 1.70881 13.8117 2.43849Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime141.jsx)(
          "path",
          {
            d: "M6.18825 2.43849C5.45856 3.16818 5.41559 4.39631 6.18825 5.08068C7.50934 6.25021 9.99997 6.25021 9.99997 6.25021C9.99997 6.25021 9.99997 3.75959 8.82809 2.43849C8.14606 1.66584 6.91794 1.70881 6.18825 2.43849Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconGlobeHemisphereWest = (0, import_react282.forwardRef)(function IconGlobeHemisphereWest2(props, ref) {
  return (0, import_jsx_runtime142.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime142.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime142.jsx)(
          "path",
          {
            d: "M5.92822 9.62974L6.96885 7.81255C7.02378 7.7174 7.10282 7.63842 7.19801 7.58355C7.2932 7.52869 7.40117 7.49989 7.51104 7.50005H8.8165C8.92205 7.50022 9.02588 7.47332 9.11807 7.42192L10.0782 6.8938C10.1205 6.87107 10.1596 6.84297 10.1946 6.81021L12.2978 4.90942C12.4024 4.81425 12.4717 4.6864 12.4942 4.54676C12.5168 4.40712 12.4913 4.26396 12.422 4.14067L11.6017 2.67114",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime142.jsx)(
          "path",
          {
            d: "M5.29518 4.15869L4.37486 6.33447C4.3127 6.48177 4.30935 6.64728 4.36549 6.79697L5.26393 9.19307C5.30084 9.29097 5.36174 9.37803 5.44105 9.44628C5.52035 9.51453 5.61553 9.56178 5.71783 9.58369L7.39205 9.94385C7.48491 9.96376 7.57201 10.0046 7.64674 10.0632C7.72146 10.1218 7.78185 10.1967 7.8233 10.2821L8.12018 10.897C8.17139 11.0026 8.25131 11.0917 8.35079 11.154C8.45027 11.2163 8.56529 11.2493 8.68268 11.2493H9.7608",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime142.jsx)(
          "path",
          {
            d: "M16.6478 13.4749L12.5556 10.9578C12.4812 10.9124 12.3982 10.8829 12.3118 10.871L10.529 10.6304C10.3951 10.6123 10.2589 10.638 10.1409 10.7038C10.0229 10.7696 9.92935 10.8718 9.87432 10.9953L8.80401 13.3968C8.75427 13.5086 8.73841 13.6325 8.75841 13.7531C8.77841 13.8738 8.83338 13.986 8.91651 14.0757L10.4587 15.664C10.5256 15.7359 10.5745 15.8225 10.6017 15.9168C10.6288 16.0112 10.6334 16.1106 10.6149 16.207L10.3673 17.4913",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconHandPointingFill = (0, import_react283.forwardRef)(function IconHandPointingFill2(props, ref) {
  return (0, import_jsx_runtime143.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime143.jsx)(
        "path",
        {
          d: "M16.875 8.12498V12.1039C16.875 15.7133 13.9961 18.7094 10.3906 18.7492C9.51557 18.761 8.64704 18.5971 7.83649 18.2671C7.02595 17.9371 6.28988 17.4478 5.67189 16.8281C3.96798 15.0258 2.04298 10.625 2.04298 10.625C1.95831 10.4784 1.90427 10.3162 1.88416 10.1482C1.86405 9.98011 1.87828 9.80972 1.92598 9.64733C1.97368 9.48493 2.05386 9.33392 2.16167 9.20344C2.26948 9.07296 2.40266 8.96574 2.55314 8.88826C3.15157 8.57576 3.88907 8.82264 4.22501 9.40545L5.86564 12.2523C5.91127 12.3343 5.98011 12.4009 6.06351 12.4439C6.14692 12.4869 6.24116 12.5042 6.33439 12.4937H6.34376C6.49389 12.4679 6.62988 12.3893 6.72726 12.2722C6.82464 12.155 6.87703 12.007 6.87501 11.8547V2.49998C6.87482 2.33064 6.90903 2.16303 6.97557 2.00731C7.04212 1.8516 7.13961 1.71103 7.26213 1.59413C7.38465 1.47724 7.52965 1.38646 7.68832 1.3273C7.84699 1.26814 8.01602 1.24183 8.18517 1.24998C8.85782 1.28123 9.37501 1.86092 9.37501 2.53358V8.12498C9.37482 8.21066 9.39225 8.29547 9.42622 8.37413C9.46019 8.45279 9.50996 8.52362 9.57246 8.58223C9.63495 8.64085 9.70883 8.68598 9.78951 8.71484C9.87018 8.7437 9.95593 8.75566 10.0414 8.74998C10.2021 8.73618 10.3517 8.66203 10.4599 8.54246C10.5682 8.42288 10.6272 8.26675 10.625 8.10545V6.87498C10.6248 6.70564 10.659 6.53803 10.7256 6.38231C10.7921 6.2266 10.8896 6.08603 11.0121 5.96913C11.1347 5.85224 11.2796 5.76146 11.4383 5.7023C11.597 5.64314 11.766 5.61683 11.9352 5.62498C12.6078 5.65623 13.125 6.23592 13.125 6.90858V8.74998C13.1248 8.83566 13.1423 8.92047 13.1762 8.99913C13.2102 9.07779 13.26 9.14862 13.3225 9.20723C13.385 9.26585 13.4588 9.31098 13.5395 9.33984C13.6202 9.3687 13.7059 9.38066 13.7914 9.37498C13.9521 9.36118 14.1017 9.28703 14.2099 9.16746C14.3182 9.04788 14.3772 8.89175 14.375 8.73045V8.1617C14.375 7.48905 14.8922 6.9117 15.5649 6.87811C15.7337 6.86997 15.9025 6.89618 16.061 6.95515C16.2194 7.01412 16.3643 7.10462 16.4868 7.22118C16.6092 7.33774 16.7068 7.47794 16.7735 7.63329C16.8403 7.78863 16.8748 7.95591 16.875 8.12498Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconHandbagSimple = (0, import_react284.forwardRef)(function IconHandbagSimple2(props, ref) {
  return (0, import_jsx_runtime144.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime144.jsx)(
          "path",
          {
            d: "M16.3804 5.625H3.61947C3.46585 5.62498 3.31752 5.68112 3.20241 5.78285C3.0873 5.88458 3.01334 6.02488 2.99447 6.17734L1.88119 15.5523C1.87089 15.6403 1.87941 15.7295 1.90617 15.8139C1.93294 15.8983 1.97734 15.9761 2.03644 16.0421C2.09553 16.108 2.16797 16.1607 2.24896 16.1965C2.32995 16.2324 2.41763 16.2506 2.50619 16.25H17.4937C17.5823 16.2506 17.6699 16.2324 17.7509 16.1965C17.8319 16.1607 17.9044 16.108 17.9634 16.0421C18.0225 15.9761 18.0669 15.8983 18.0937 15.8139C18.1205 15.7295 18.129 15.6403 18.1187 15.5523L17.0054 6.17734C16.9865 6.02488 16.9126 5.88458 16.7975 5.78285C16.6824 5.68112 16.534 5.62498 16.3804 5.625Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime144.jsx)(
          "path",
          {
            d: "M6.875 5.625V5C6.875 4.1712 7.20424 3.37634 7.79029 2.79029C8.37634 2.20424 9.1712 1.875 10 1.875C10.8288 1.875 11.6237 2.20424 12.2097 2.79029C12.7958 3.37634 13.125 4.1712 13.125 5V5.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconHeadset = (0, import_react285.forwardRef)(function IconHeadset2(props, ref) {
  return (0, import_jsx_runtime145.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime145.jsx)(
          "path",
          {
            d: "M17.5 15.625V16.25C17.5 16.913 17.2366 17.5489 16.7678 18.0178C16.2989 18.4866 15.663 18.75 15 18.75H10.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime145.jsx)(
          "path",
          {
            d: "M17.5 10H15C14.6685 10 14.3505 10.1317 14.1161 10.3661C13.8817 10.6005 13.75 10.9185 13.75 11.25V14.375C13.75 14.7065 13.8817 15.0245 14.1161 15.2589C14.3505 15.4933 14.6685 15.625 15 15.625H17.5V10ZM17.5 10C17.5 9.01509 17.306 8.03982 16.9291 7.12987C16.5522 6.21993 15.9997 5.39314 15.3033 4.6967C14.6069 4.00026 13.7801 3.44781 12.8701 3.0709C11.9602 2.69399 10.9849 2.5 10 2.5C9.01509 2.5 8.03982 2.69399 7.12987 3.0709C6.21993 3.44781 5.39314 4.00026 4.6967 4.6967C4.00026 5.39314 3.44781 6.21993 3.0709 7.12987C2.69399 8.03982 2.5 9.01509 2.5 10M2.5 10V14.375C2.5 14.7065 2.6317 15.0245 2.86612 15.2589C3.10054 15.4933 3.41848 15.625 3.75 15.625H5C5.33152 15.625 5.64946 15.4933 5.88388 15.2589C6.1183 15.0245 6.25 14.7065 6.25 14.375V11.25C6.25 10.9185 6.1183 10.6005 5.88388 10.3661C5.64946 10.1317 5.33152 10 5 10H2.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconHeart = (0, import_react286.forwardRef)(function IconHeart2(props, ref) {
  return (0, import_jsx_runtime146.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime146.jsx)(
        "path",
        {
          d: "M10 16.875C10 16.875 1.875 12.5 1.875 7.34375C1.875 6.22487 2.31947 5.15181 3.11064 4.36064C3.90181 3.56947 4.97487 3.125 6.09375 3.125C7.85859 3.125 9.37031 4.08672 10 5.625C10.6297 4.08672 12.1414 3.125 13.9062 3.125C15.0251 3.125 16.0982 3.56947 16.8894 4.36064C17.6805 5.15181 18.125 6.22487 18.125 7.34375C18.125 12.5 10 16.875 10 16.875Z",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconHouse = (0, import_react287.forwardRef)(function IconHouse2(props, ref) {
  return (0, import_jsx_runtime147.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime147.jsx)(
        "path",
        {
          d: "M11.875 16.2501V12.5001C11.875 12.3343 11.8092 12.1753 11.6919 12.0581C11.5747 11.9409 11.4158 11.8751 11.25 11.8751H8.75C8.58424 11.8751 8.42527 11.9409 8.30806 12.0581C8.19085 12.1753 8.125 12.3343 8.125 12.5001V16.2501C8.125 16.4158 8.05915 16.5748 7.94194 16.692C7.82473 16.8092 7.66576 16.8751 7.5 16.8751H3.75C3.58424 16.8751 3.42527 16.8092 3.30806 16.692C3.19085 16.5748 3.125 16.4158 3.125 16.2501V9.02661C3.12501 8.93951 3.14322 8.85338 3.17847 8.77373C3.21372 8.69409 3.26523 8.62269 3.32969 8.56411L9.57969 2.66255C9.69477 2.55781 9.84478 2.49976 10.0004 2.49976C10.156 2.49976 10.306 2.55781 10.4211 2.66255L16.6711 8.56411C16.7356 8.62269 16.7871 8.69409 16.8223 8.77373C16.8576 8.85338 16.8758 8.93951 16.8758 9.02661V16.2501C16.8758 16.4158 16.8099 16.5748 16.6927 16.692C16.5755 16.8092 16.4165 16.8751 16.2508 16.8751H12.5C12.3342 16.8751 12.1753 16.8092 12.0581 16.692C11.9408 16.5748 11.875 16.4158 11.875 16.2501Z",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconIdentificationCard = (0, import_react288.forwardRef)(function IconIdentificationCard2(props, ref) {
  return (0, import_jsx_runtime148.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime148.jsx)(
          "path",
          {
            d: "M11.875 8.75H15",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime148.jsx)(
          "path",
          {
            d: "M11.875 11.25H15",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime148.jsx)(
          "path",
          {
            d: "M16.875 3.75H3.125C2.77982 3.75 2.5 4.02982 2.5 4.375V15.625C2.5 15.9702 2.77982 16.25 3.125 16.25H16.875C17.2202 16.25 17.5 15.9702 17.5 15.625V4.375C17.5 4.02982 17.2202 3.75 16.875 3.75Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime148.jsx)(
          "path",
          {
            d: "M7.5 11.25C8.53553 11.25 9.375 10.4105 9.375 9.375C9.375 8.33947 8.53553 7.5 7.5 7.5C6.46447 7.5 5.625 8.33947 5.625 9.375C5.625 10.4105 6.46447 11.25 7.5 11.25Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime148.jsx)(
          "path",
          {
            d: "M5 13.125C5.27734 12.0469 6.33516 11.25 7.5 11.25C8.66484 11.25 9.72344 12.0461 10 13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconImageSquareFill = (0, import_react289.forwardRef)(function IconImageSquareFill2(props, ref) {
  return (0, import_jsx_runtime149.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime149.jsx)(
        "path",
        {
          d: "M16.25 2.5H3.75C3.41848 2.5 3.10054 2.6317 2.86612 2.86612C2.6317 3.10054 2.5 3.41848 2.5 3.75V16.25C2.5 16.5815 2.6317 16.8995 2.86612 17.1339C3.10054 17.3683 3.41848 17.5 3.75 17.5H16.25C16.5815 17.5 16.8995 17.3683 17.1339 17.1339C17.3683 16.8995 17.5 16.5815 17.5 16.25V3.75C17.5 3.41848 17.3683 3.10054 17.1339 2.86612C16.8995 2.6317 16.5815 2.5 16.25 2.5ZM3.75 3.75H16.25V9.79531L14.3211 7.86562C14.0867 7.63138 13.7689 7.4998 13.4375 7.4998C13.1061 7.4998 12.7883 7.63138 12.5539 7.86562L4.16953 16.25H3.75V3.75ZM6.25 7.5C6.25 7.25277 6.32331 7.0111 6.46066 6.80554C6.59801 6.59998 6.79324 6.43976 7.02165 6.34515C7.25005 6.25054 7.50139 6.22579 7.74386 6.27402C7.98634 6.32225 8.20907 6.4413 8.38388 6.61612C8.5587 6.79093 8.67775 7.01366 8.72598 7.25614C8.77421 7.49861 8.74946 7.74995 8.65485 7.97835C8.56024 8.20676 8.40002 8.40199 8.19446 8.53934C7.9889 8.67669 7.74723 8.75 7.5 8.75C7.16848 8.75 6.85054 8.6183 6.61612 8.38388C6.3817 8.14946 6.25 7.83152 6.25 7.5Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconImageSquare = (0, import_react290.forwardRef)(function IconImageSquare2(props, ref) {
  return (0, import_jsx_runtime150.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime150.jsx)(
          "path",
          {
            d: "M16.25 3.125H3.75C3.40482 3.125 3.125 3.40482 3.125 3.75V16.25C3.125 16.5952 3.40482 16.875 3.75 16.875H16.25C16.5952 16.875 16.875 16.5952 16.875 16.25V3.75C16.875 3.40482 16.5952 3.125 16.25 3.125Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime150.jsx)(
          "path",
          {
            d: "M7.5 8.75C8.19036 8.75 8.75 8.19036 8.75 7.5C8.75 6.80964 8.19036 6.25 7.5 6.25C6.80964 6.25 6.25 6.80964 6.25 7.5C6.25 8.19036 6.80964 8.75 7.5 8.75Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime150.jsx)(
          "path",
          {
            d: "M4.42871 16.875L12.9951 8.30782C13.0532 8.24971 13.1221 8.20361 13.198 8.17215C13.2738 8.1407 13.3552 8.12451 13.4373 8.12451C13.5194 8.12451 13.6008 8.1407 13.6766 8.17215C13.7525 8.20361 13.8214 8.24971 13.8795 8.30782L16.8748 11.3039",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconInfoFill = (0, import_react291.forwardRef)(function IconInfoFill2(props, ref) {
  return (0, import_jsx_runtime151.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime151.jsx)(
        "path",
        {
          d: "M10 1.875C8.39303 1.875 6.82214 2.35152 5.486 3.24431C4.14985 4.1371 3.10844 5.40605 2.49348 6.8907C1.87852 8.37535 1.71762 10.009 2.03112 11.5851C2.34463 13.1612 3.11846 14.6089 4.25476 15.7452C5.39106 16.8815 6.8388 17.6554 8.4149 17.9689C9.99099 18.2824 11.6247 18.1215 13.1093 17.5065C14.594 16.8916 15.8629 15.8502 16.7557 14.514C17.6485 13.1779 18.125 11.607 18.125 10C18.1227 7.84581 17.266 5.78051 15.7427 4.25727C14.2195 2.73403 12.1542 1.87727 10 1.875ZM9.6875 5.625C9.87292 5.625 10.0542 5.67998 10.2084 5.783C10.3625 5.88601 10.4827 6.03243 10.5536 6.20373C10.6246 6.37504 10.6432 6.56354 10.607 6.7454C10.5708 6.92725 10.4815 7.0943 10.3504 7.22541C10.2193 7.35652 10.0523 7.44581 9.8704 7.48199C9.68854 7.51816 9.50004 7.49959 9.32874 7.42864C9.15743 7.35768 9.01101 7.23752 8.908 7.08335C8.80499 6.92918 8.75 6.74792 8.75 6.5625C8.75 6.31386 8.84878 6.0754 9.02459 5.89959C9.20041 5.72377 9.43886 5.625 9.6875 5.625ZM10.625 14.375C10.2935 14.375 9.97554 14.2433 9.74112 14.0089C9.5067 13.7745 9.375 13.4565 9.375 13.125V10C9.20924 10 9.05027 9.93415 8.93306 9.81694C8.81585 9.69973 8.75 9.54076 8.75 9.375C8.75 9.20924 8.81585 9.05027 8.93306 8.93306C9.05027 8.81585 9.20924 8.75 9.375 8.75C9.70652 8.75 10.0245 8.8817 10.2589 9.11612C10.4933 9.35054 10.625 9.66848 10.625 10V13.125C10.7908 13.125 10.9497 13.1908 11.0669 13.3081C11.1842 13.4253 11.25 13.5842 11.25 13.75C11.25 13.9158 11.1842 14.0747 11.0669 14.1919C10.9497 14.3092 10.7908 14.375 10.625 14.375Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconInfo = (0, import_react292.forwardRef)(function IconInfo2(props, ref) {
  return (0, import_jsx_runtime152.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime152.jsx)(
          "path",
          {
            d: "M9.375 9.375C9.54076 9.375 9.69973 9.44085 9.81694 9.55806C9.93415 9.67527 10 9.83424 10 10V13.125C10 13.2908 10.0658 13.4497 10.1831 13.5669C10.3003 13.6842 10.4592 13.75 10.625 13.75",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime152.jsx)(
          "path",
          {
            d: "M9.375 9.375C9.54076 9.375 9.69973 9.44085 9.81694 9.55806C9.93415 9.67527 10 9.83424 10 10V13.125C10 13.2908 10.0658 13.4497 10.1831 13.5669C10.3003 13.6842 10.4592 13.75 10.625 13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime152.jsx)(
          "path",
          {
            d: "M10.4062 6.5625C10.4062 6.95945 10.0845 7.28125 9.6875 7.28125C9.29055 7.28125 8.96875 6.95945 8.96875 6.5625C8.96875 6.16555 9.29055 5.84375 9.6875 5.84375C10.0845 5.84375 10.4062 6.16555 10.4062 6.5625Z",
            fill: "currentColor",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "0.125"
          }
        ),
        (0, import_jsx_runtime152.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconKey = (0, import_react293.forwardRef)(function IconKey2(props, ref) {
  return (0, import_jsx_runtime153.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime153.jsx)(
          "path",
          {
            d: "M7.27891 9.5962C6.79615 8.39341 6.74355 7.06082 7.13001 5.82372C7.51647 4.58662 8.31827 3.52093 9.39985 2.80683C10.4814 2.09272 11.7764 1.77402 13.0659 1.90461C14.3553 2.0352 15.5602 2.60706 16.4766 3.52351C17.393 4.43996 17.9649 5.64477 18.0955 6.93423C18.2261 8.22368 17.9074 9.51868 17.1933 10.6003C16.4792 11.6818 15.4135 12.4836 14.1764 12.8701C12.9393 13.2566 11.6067 13.204 10.4039 12.7212L9.375 13.7501H7.5V15.6251H5.625V17.5001H2.5V14.3751L7.27891 9.5962Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime153.jsx)(
          "path",
          {
            d: "M14.7812 5.9375C14.7812 6.33445 14.4595 6.65625 14.0625 6.65625C13.6655 6.65625 13.3438 6.33445 13.3438 5.9375C13.3438 5.54055 13.6655 5.21875 14.0625 5.21875C14.4595 5.21875 14.7812 5.54055 14.7812 5.9375Z",
            fill: "currentColor",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "0.125"
          }
        )
      ]
    })
  );
});
var IconLayout = (0, import_react294.forwardRef)(function IconLayout2(props, ref) {
  return (0, import_jsx_runtime154.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime154.jsx)(
          "path",
          {
            d: "M8.125 8.125V16.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime154.jsx)(
          "path",
          {
            d: "M2.5 8.125H17.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime154.jsx)(
          "path",
          {
            d: "M16.875 3.75H3.125C2.77982 3.75 2.5 4.02982 2.5 4.375V15.625C2.5 15.9702 2.77982 16.25 3.125 16.25H16.875C17.2202 16.25 17.5 15.9702 17.5 15.625V4.375C17.5 4.02982 17.2202 3.75 16.875 3.75Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconLinkBreak = (0, import_react295.forwardRef)(function IconLinkBreak2(props, ref) {
  return (0, import_jsx_runtime155.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime155.jsx)(
          "path",
          {
            d: "M14.375 9.99993L15.3344 9.0843C15.9036 8.49492 16.2186 7.70554 16.2115 6.88618C16.2044 6.06681 15.8757 5.28302 15.2963 4.70362C14.7169 4.12422 13.9331 3.79557 13.1138 3.78845C12.2944 3.78133 11.505 4.09631 10.9156 4.66555L10 5.62493",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime155.jsx)(
          "path",
          {
            d: "M5.62517 10L4.6658 10.9156C4.09655 11.505 3.78157 12.2944 3.78869 13.1138C3.79581 13.9331 4.12447 14.7169 4.70387 15.2963C5.28327 15.8757 6.06705 16.2044 6.88642 16.2115C7.70578 16.2186 8.49517 15.9036 9.08455 15.3344L10.0002 14.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime155.jsx)(
          "path",
          {
            d: "M14.375 12.5H16.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime155.jsx)(
          "path",
          {
            d: "M3.75 7.5H5.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime155.jsx)(
          "path",
          {
            d: "M12.5 14.375V16.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime155.jsx)(
          "path",
          {
            d: "M7.5 3.75V5.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconLinkSimpleFill = (0, import_react296.forwardRef)(function IconLinkFill(props, ref) {
  return (0, import_jsx_runtime156.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime156.jsx)(
          "path",
          {
            d: "M13.5356 2.40186C14.6131 2.40186 15.6464 2.82987 16.4083 3.59173C17.1701 4.35362 17.5981 5.38692 17.5981 6.46435C17.5981 7.54178 17.1701 8.57508 16.4083 9.33697L14.1986 11.5467C13.4361 12.3074 12.403 12.7346 11.3259 12.7346C10.2488 12.7346 9.21576 12.3074 8.45326 11.5467C8.33618 11.4295 8.27045 11.2706 8.27051 11.1049C8.27057 10.9392 8.33642 10.7803 8.45358 10.6631C8.57074 10.546 8.72963 10.4801 8.89532 10.4801C9.06101 10.48 9.21995 10.5457 9.3372 10.6628C9.86506 11.1895 10.5803 11.4853 11.326 11.4853C12.0716 11.4853 12.7868 11.1895 13.3147 10.6628L15.5243 8.45303C15.7855 8.19187 15.9926 7.88182 16.134 7.5406C16.2753 7.19938 16.3481 6.83366 16.3481 6.46432C16.3481 6.09499 16.2753 5.72927 16.134 5.38805C15.9926 5.04683 15.7855 4.73679 15.5243 4.47563C15.2631 4.21448 14.9531 4.00732 14.6119 3.86598C14.2706 3.72465 13.9049 3.65191 13.5356 3.65191C13.1663 3.65191 12.8005 3.72466 12.4593 3.866C12.1181 4.00734 11.8081 4.21451 11.5469 4.47567L10.0001 6.02246C9.94209 6.08057 9.87318 6.12668 9.79733 6.15814C9.72148 6.18961 9.64017 6.20582 9.55805 6.20585C9.47593 6.20588 9.3946 6.18973 9.31873 6.15832C9.24286 6.12691 9.17391 6.08085 9.11585 6.02278C9.05778 5.96471 9.01172 5.89577 8.98031 5.8199C8.9489 5.74402 8.93275 5.6627 8.93278 5.58058C8.93281 5.49846 8.94902 5.41715 8.98049 5.3413C9.01195 5.26545 9.05806 5.19654 9.11617 5.13852L10.663 3.59173C11.4248 2.82987 12.4582 2.40186 13.5356 2.40186Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime156.jsx)(
          "path",
          {
            d: "M8.45281 15.5241L9.9996 13.9773C10.1168 13.8602 10.2758 13.7945 10.4415 13.7946C10.6072 13.7946 10.7661 13.8605 10.8832 13.9776C11.0004 14.0948 11.0662 14.2537 11.0663 14.4194C11.0663 14.5851 11.0006 14.744 10.8835 14.8613L9.33675 16.408C8.57472 17.1692 7.54165 17.5965 6.46463 17.5962C5.38761 17.5959 4.3548 17.1679 3.59322 16.4063C2.83165 15.6448 2.40366 14.612 2.40332 13.5349C2.40299 12.4579 2.83034 11.4248 3.59144 10.6628L5.80114 8.45303C6.56365 7.69234 7.59674 7.26514 8.6738 7.26514C9.75086 7.26514 10.784 7.69234 11.5465 8.45303C11.6046 8.51106 11.6507 8.57997 11.6821 8.65582C11.7136 8.73167 11.7298 8.81298 11.7298 8.8951C11.7299 8.97722 11.7137 9.05854 11.6823 9.13441C11.6509 9.21029 11.6048 9.27923 11.5468 9.3373C11.4887 9.39537 11.4198 9.44142 11.3439 9.47283C11.268 9.50425 11.1867 9.5204 11.1046 9.52037C11.0225 9.52034 10.9412 9.50413 10.8653 9.47266C10.7894 9.44119 10.7205 9.39508 10.6625 9.33697C10.1347 8.81025 9.41945 8.51443 8.67376 8.51443C7.92807 8.51443 7.21284 8.81025 6.685 9.33697L4.47538 11.5468C4.21422 11.8079 4.00706 12.118 3.86573 12.4592C3.72439 12.8004 3.65165 13.1661 3.65165 13.5355C3.65166 13.9048 3.7244 14.2705 3.86575 14.6117C4.00709 14.9529 4.21425 15.263 4.47542 15.5241C4.73658 15.7853 5.04662 15.9925 5.38784 16.1338C5.72907 16.2751 6.09479 16.3479 6.46412 16.3479C6.83346 16.3479 7.19918 16.2751 7.5404 16.1338C7.88162 15.9924 8.19166 15.7853 8.45281 15.5241Z",
            fill: "currentColor"
          }
        )
      ]
    })
  );
});
var IconLinkSimple = (0, import_react297.forwardRef)(function IconLinkSimple2(props, ref) {
  return (0, import_jsx_runtime157.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime157.jsx)(
          "path",
          {
            d: "M7.5 12.5L12.5 7.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime157.jsx)(
          "path",
          {
            d: "M8.75 5.94598L11.0984 3.60223C11.8036 2.90843 12.7544 2.52139 13.7437 2.52542C14.7329 2.52945 15.6805 2.92422 16.3801 3.62374C17.0796 4.32326 17.4743 5.27086 17.4784 6.26012C17.4824 7.24938 17.0954 8.20016 16.4016 8.90536L14.0531 11.2499",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime157.jsx)(
          "path",
          {
            d: "M5.94598 8.75L3.60223 11.0984C2.90843 11.8036 2.52139 12.7544 2.52542 13.7437C2.52945 14.7329 2.92422 15.6805 3.62374 16.3801C4.32326 17.0796 5.27086 17.4743 6.26012 17.4784C7.24938 17.4824 8.20016 17.0954 8.90536 16.4016L11.2499 14.0531",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconListBullets = (0, import_react298.forwardRef)(function IconListBullets2(props, ref) {
  return (0, import_jsx_runtime158.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime158.jsx)(
          "path",
          {
            d: "M6.875 5H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime158.jsx)(
          "path",
          {
            d: "M6.87549 10H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime158.jsx)(
          "path",
          {
            d: "M6.87549 15H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime158.jsx)(
          "path",
          {
            d: "M3.4375 5.78125C3.86897 5.78125 4.21875 5.43147 4.21875 5C4.21875 4.56853 3.86897 4.21875 3.4375 4.21875C3.00603 4.21875 2.65625 4.56853 2.65625 5C2.65625 5.43147 3.00603 5.78125 3.4375 5.78125Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime158.jsx)(
          "path",
          {
            d: "M3.4375 15.7812C3.86897 15.7812 4.21875 15.4315 4.21875 15C4.21875 14.5685 3.86897 14.2188 3.4375 14.2188C3.00603 14.2188 2.65625 14.5685 2.65625 15C2.65625 15.4315 3.00603 15.7812 3.4375 15.7812Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime158.jsx)(
          "path",
          {
            d: "M3.4375 10.7812C3.86897 10.7812 4.21875 10.4315 4.21875 10C4.21875 9.56853 3.86897 9.21875 3.4375 9.21875C3.00603 9.21875 2.65625 9.56853 2.65625 10C2.65625 10.4315 3.00603 10.7812 3.4375 10.7812Z",
            fill: "currentColor"
          }
        )
      ]
    })
  );
});
var IconListNumbers = (0, import_react299.forwardRef)(function IconListNumbers2(props, ref) {
  return (0, import_jsx_runtime159.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime159.jsx)(
          "path",
          {
            d: "M8.125 10H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime159.jsx)(
          "path",
          {
            d: "M8 10H16.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime159.jsx)(
          "path",
          {
            d: "M8.125 5H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime159.jsx)(
          "path",
          {
            d: "M8.125 15H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime159.jsx)(
          "path",
          {
            d: "M4.375 8.125V3.125L3.125 3.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime159.jsx)(
          "path",
          {
            d: "M5.625 16.2501H3.125L5.36563 13.2524C5.46726 13.1221 5.5415 12.9726 5.5839 12.8129C5.62629 12.6532 5.63595 12.4866 5.61231 12.3231C5.58867 12.1595 5.5322 12.0025 5.44631 11.8613C5.36042 11.7201 5.24687 11.5978 5.1125 11.5016C4.83867 11.3017 4.49804 11.2157 4.16212 11.2616C3.8262 11.3075 3.52113 11.4817 3.31094 11.7477C3.23187 11.8494 3.16914 11.9627 3.125 12.0837",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconList = (0, import_react300.forwardRef)(function IconList2(props, ref) {
  return (0, import_jsx_runtime160.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime160.jsx)(
          "path",
          {
            d: "M3.125 10H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime160.jsx)(
          "path",
          {
            d: "M3.125 5H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime160.jsx)(
          "path",
          {
            d: "M3.125 15H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconLockKeyOpen = (0, import_react301.forwardRef)(function IconLockKeyOpen2(props, ref) {
  return (0, import_jsx_runtime161.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime161.jsx)(
          "path",
          {
            d: "M16.25 6.875H3.75C3.40482 6.875 3.125 7.15482 3.125 7.5V16.25C3.125 16.5952 3.40482 16.875 3.75 16.875H16.25C16.5952 16.875 16.875 16.5952 16.875 16.25V7.5C16.875 7.15482 16.5952 6.875 16.25 6.875Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime161.jsx)(
          "path",
          {
            d: "M6.875 6.875V4.375C6.875 3.5462 7.20424 2.75134 7.79029 2.16529C8.37634 1.57924 9.1712 1.25 10 1.25C11.5117 1.25 12.8352 2.32344 13.125 3.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime161.jsx)(
          "path",
          {
            d: "M10 12.5C10.8629 12.5 11.5625 11.8004 11.5625 10.9375C11.5625 10.0746 10.8629 9.375 10 9.375C9.13706 9.375 8.4375 10.0746 8.4375 10.9375C8.4375 11.8004 9.13706 12.5 10 12.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime161.jsx)(
          "path",
          {
            d: "M10 12.5V14.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconLockKey = (0, import_react302.forwardRef)(function IconLockKey2(props, ref) {
  return (0, import_jsx_runtime162.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime162.jsx)(
          "path",
          {
            d: "M10 12.5C10.8629 12.5 11.5625 11.8004 11.5625 10.9375C11.5625 10.0746 10.8629 9.375 10 9.375C9.13706 9.375 8.4375 10.0746 8.4375 10.9375C8.4375 11.8004 9.13706 12.5 10 12.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime162.jsx)(
          "path",
          {
            d: "M10 12.5V14.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime162.jsx)(
          "path",
          {
            d: "M16.25 6.875H3.75C3.40482 6.875 3.125 7.15482 3.125 7.5V16.25C3.125 16.5952 3.40482 16.875 3.75 16.875H16.25C16.5952 16.875 16.875 16.5952 16.875 16.25V7.5C16.875 7.15482 16.5952 6.875 16.25 6.875Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime162.jsx)(
          "path",
          {
            d: "M6.875 6.875V4.375C6.875 3.5462 7.20424 2.75134 7.79029 2.16529C8.37634 1.57924 9.1712 1.25 10 1.25C10.8288 1.25 11.6237 1.57924 12.2097 2.16529C12.7958 2.75134 13.125 3.5462 13.125 4.375V6.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconMagnifyingGlassPlus = (0, import_react303.forwardRef)(function IconMagnifyingGlassPlus2(props, ref) {
  return (0, import_jsx_runtime163.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime163.jsx)(
          "path",
          {
            d: "M6.25 8.75H11.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime163.jsx)(
          "path",
          {
            d: "M8.75 15C12.2018 15 15 12.2018 15 8.75C15 5.29822 12.2018 2.5 8.75 2.5C5.29822 2.5 2.5 5.29822 2.5 8.75C2.5 12.2018 5.29822 15 8.75 15Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime163.jsx)(
          "path",
          {
            d: "M13.1694 13.1694L17.4999 17.4999",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime163.jsx)(
          "path",
          {
            d: "M8.75 6.25V11.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconMagnifyingGlassSmall = (0, import_react304.forwardRef)(function IconMagnifyingGlassSmall2(props, ref) {
  return (0, import_jsx_runtime164.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime164.jsx)(
          "path",
          {
            d: "M7 12C9.76142 12 12 9.76142 12 7C12 4.23858 9.76142 2 7 2C4.23858 2 2 4.23858 2 7C2 9.76142 4.23858 12 7 12Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime164.jsx)(
          "path",
          {
            d: "M10.5356 10.5356L14 14",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconMagnifyingGlass = (0, import_react305.forwardRef)(function IconMagnifyingGlass2(props, ref) {
  return (0, import_jsx_runtime165.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime165.jsx)(
          "path",
          {
            d: "M8.75 15C12.2018 15 15 12.2018 15 8.75C15 5.29822 12.2018 2.5 8.75 2.5C5.29822 2.5 2.5 5.29822 2.5 8.75C2.5 12.2018 5.29822 15 8.75 15Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime165.jsx)(
          "path",
          {
            d: "M13.1694 13.1694L17.4999 17.4999",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconMapPin = (0, import_react306.forwardRef)(function IconMapPin2(props, ref) {
  return (0, import_jsx_runtime166.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime166.jsx)(
          "path",
          {
            d: "M10 10.625C11.3807 10.625 12.5 9.50571 12.5 8.125C12.5 6.74429 11.3807 5.625 10 5.625C8.61929 5.625 7.5 6.74429 7.5 8.125C7.5 9.50571 8.61929 10.625 10 10.625Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime166.jsx)(
          "path",
          {
            d: "M16.25 8.125C16.25 13.75 10 18.125 10 18.125C10 18.125 3.75 13.75 3.75 8.125C3.75 6.4674 4.40848 4.87769 5.58058 3.70558C6.75269 2.53348 8.3424 1.875 10 1.875C11.6576 1.875 13.2473 2.53348 14.4194 3.70558C15.5915 4.87769 16.25 6.4674 16.25 8.125V8.125Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconMegaphoneFill = (0, import_react307.forwardRef)(function IconMegaphoneFill2(props, ref) {
  return (0, import_jsx_runtime167.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime167.jsx)(
        "path",
        {
          d: "M5 5.62503H8.10938C8.33672 5.61174 12.2984 5.33284 16.0711 2.16878C16.2533 2.01577 16.4753 1.91793 16.7112 1.88676C16.9471 1.85558 17.1869 1.89236 17.4026 1.99278C17.6183 2.09319 17.8008 2.25307 17.9288 2.45364C18.0567 2.6542 18.1248 2.88712 18.125 3.12503V15.625C18.125 15.863 18.057 16.096 17.9291 16.2967C17.8012 16.4974 17.6187 16.6574 17.4029 16.7579C17.1872 16.8584 16.9473 16.8953 16.7114 16.8641C16.4755 16.833 16.2533 16.7351 16.0711 16.5821C13.1203 14.1071 10.0555 13.3977 8.75 13.1992V15.6774C8.75026 15.8833 8.69962 16.0862 8.60258 16.2679C8.50553 16.4496 8.36509 16.6045 8.19375 16.7188L7.33438 17.2914C7.16827 17.4023 6.97802 17.4718 6.77955 17.494C6.58109 17.5162 6.38019 17.4906 6.19367 17.4192C6.00716 17.3478 5.84046 17.2328 5.70754 17.0837C5.57462 16.9347 5.47934 16.756 5.42969 16.5625L4.51016 13.0969C3.55958 12.9801 2.68971 12.5041 2.07894 11.7664C1.46818 11.0287 1.16281 10.0852 1.22546 9.12957C1.28811 8.1739 1.71404 7.27841 2.41589 6.62677C3.11774 5.97512 4.04231 5.61671 5 5.62503ZM6.64063 16.2414V16.25L7.5 15.6774V13.125H5.8125L6.64063 16.2414ZM5 11.875H7.5V6.87503H5C4.33696 6.87503 3.70108 7.13842 3.23223 7.60726C2.76339 8.0761 2.5 8.71198 2.5 9.37503C2.5 10.0381 2.76339 10.674 3.23223 11.1428C3.70108 11.6116 4.33696 11.875 5 11.875Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconMegaphone = (0, import_react308.forwardRef)(function IconMegaphone2(props, ref) {
  return (0, import_jsx_runtime168.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime168.jsx)(
          "path",
          {
            d: "M8.125 6.25V15.6773C8.12494 15.7801 8.09953 15.8813 8.05101 15.9719C8.0025 16.0626 7.93238 16.1398 7.84688 16.1969L6.9875 16.7695C6.90414 16.8251 6.80865 16.8598 6.70906 16.8708C6.60947 16.8817 6.50872 16.8686 6.41528 16.8324C6.32184 16.7963 6.23846 16.7382 6.17217 16.6631C6.10588 16.5879 6.05862 16.498 6.03438 16.4008L5 12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime168.jsx)(
          "path",
          {
            d: "M17.5 15.625C17.5 15.7441 17.466 15.8606 17.402 15.961C17.338 16.0613 17.2466 16.1413 17.1387 16.1915C17.0308 16.2418 16.9108 16.2601 16.7928 16.2445C16.6748 16.2288 16.5637 16.1798 16.4727 16.1032C12.3789 12.6688 8.125 12.5 8.125 12.5H5C4.1712 12.5 3.37634 12.1708 2.79029 11.5848C2.20424 10.9987 1.875 10.2039 1.875 9.37505C1.875 8.54625 2.20424 7.75139 2.79029 7.16534C3.37634 6.57929 4.1712 6.25005 5 6.25005H8.125C8.125 6.25005 12.3789 6.0813 16.4727 2.64771C16.5637 2.57112 16.6747 2.52211 16.7926 2.50643C16.9105 2.49075 17.0305 2.50905 17.1384 2.55917C17.2462 2.6093 17.3376 2.68917 17.4016 2.78941C17.4657 2.88965 17.4998 3.00609 17.5 3.12505V15.625Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconMinusCircleFill = (0, import_react309.forwardRef)(function IconMinusCircleFill2(props, ref) {
  return (0, import_jsx_runtime169.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime169.jsx)(
        "path",
        {
          d: "M10 1.875C8.39303 1.875 6.82214 2.35152 5.486 3.24431C4.14985 4.1371 3.10844 5.40605 2.49348 6.8907C1.87852 8.37535 1.71762 10.009 2.03112 11.5851C2.34463 13.1612 3.11846 14.6089 4.25476 15.7452C5.39106 16.8815 6.8388 17.6554 8.4149 17.9689C9.99099 18.2824 11.6247 18.1215 13.1093 17.5065C14.594 16.8916 15.8629 15.8502 16.7557 14.514C17.6485 13.1779 18.125 11.607 18.125 10C18.1227 7.84581 17.266 5.78051 15.7427 4.25727C14.2195 2.73403 12.1542 1.87727 10 1.875ZM13.125 10.625H6.875C6.70924 10.625 6.55027 10.5592 6.43306 10.4419C6.31585 10.3247 6.25 10.1658 6.25 10C6.25 9.83424 6.31585 9.67527 6.43306 9.55806C6.55027 9.44085 6.70924 9.375 6.875 9.375H13.125C13.2908 9.375 13.4497 9.44085 13.5669 9.55806C13.6842 9.67527 13.75 9.83424 13.75 10C13.75 10.1658 13.6842 10.3247 13.5669 10.4419C13.4497 10.5592 13.2908 10.625 13.125 10.625Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconMinusSmall = (0, import_react310.forwardRef)(function IconMinusSmall2(props, ref) {
  return (0, import_jsx_runtime170.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime170.jsx)(
        "path",
        {
          d: "M2.5 8H13.5",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconMinus = (0, import_react311.forwardRef)(function IconMinus2(props, ref) {
  return (0, import_jsx_runtime171.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime171.jsx)(
        "path",
        {
          d: "M3.125 10H16.875",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconNewspaper = (0, import_react312.forwardRef)(function IconNewspaper2(props, ref) {
  return (0, import_jsx_runtime172.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime172.jsx)(
          "path",
          {
            d: "M7.5 8.75H13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime172.jsx)(
          "path",
          {
            d: "M7.5 11.25H13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime172.jsx)(
          "path",
          {
            d: "M2.5 15.625C2.83152 15.625 3.14946 15.4933 3.38388 15.2589C3.6183 15.0245 3.75 14.7065 3.75 14.375V5C3.75 4.83424 3.81585 4.67527 3.93306 4.55806C4.05027 4.44085 4.20924 4.375 4.375 4.375H16.875C17.0408 4.375 17.1997 4.44085 17.3169 4.55806C17.4342 4.67527 17.5 4.83424 17.5 5V14.375C17.5 14.7065 17.3683 15.0245 17.1339 15.2589C16.8995 15.4933 16.5815 15.625 16.25 15.625H2.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime172.jsx)(
          "path",
          {
            d: "M2.5 15.625C2.16848 15.625 1.85054 15.4933 1.61612 15.2589C1.3817 15.0245 1.25 14.7065 1.25 14.375V6.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconNotebook = (0, import_react313.forwardRef)(function IconNotebook2(props, ref) {
  return (0, import_jsx_runtime173.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime173.jsx)(
          "path",
          {
            d: "M8.75 8.75H13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime173.jsx)(
          "path",
          {
            d: "M8.75 11.25H13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime173.jsx)(
          "path",
          {
            d: "M16.25 3.125H3.75C3.40482 3.125 3.125 3.40482 3.125 3.75V16.25C3.125 16.5952 3.40482 16.875 3.75 16.875H16.25C16.5952 16.875 16.875 16.5952 16.875 16.25V3.75C16.875 3.40482 16.5952 3.125 16.25 3.125Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime173.jsx)(
          "path",
          {
            d: "M6.25 3.125V16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconPaperPlaneTilt = (0, import_react314.forwardRef)(function IconPaperPlaneTilt2(props, ref) {
  return (0, import_jsx_runtime174.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime174.jsx)(
          "path",
          {
            d: "M17.4758 3.29526C17.506 3.18834 17.5071 3.07533 17.479 2.96786C17.451 2.86039 17.3948 2.76233 17.3162 2.68379C17.2377 2.60525 17.1396 2.54906 17.0321 2.521C16.9247 2.49294 16.8117 2.49403 16.7048 2.52416L1.70475 7.0726C1.58229 7.10716 1.4733 7.17828 1.39234 7.27645C1.31138 7.37462 1.26231 7.49516 1.25169 7.62196C1.24107 7.74876 1.26942 7.87578 1.33293 7.98605C1.39643 8.09631 1.49209 8.18456 1.6071 8.23901L8.29616 11.4062C8.42639 11.468 8.53127 11.5728 8.59304 11.7031L11.761 18.3914C11.8154 18.5064 11.9037 18.602 12.014 18.6655C12.1242 18.729 12.2512 18.7574 12.3781 18.7468C12.5049 18.7361 12.6254 18.6871 12.7236 18.6061C12.8217 18.5252 12.8928 18.4162 12.9274 18.2937L17.4758 3.29526Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime174.jsx)(
          "path",
          {
            d: "M8.47021 11.5297L12.4999 7.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconPaperclip = (0, import_react315.forwardRef)(function IconPaperclip2(props, ref) {
  return (0, import_jsx_runtime175.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime175.jsx)(
        "path",
        {
          d: "M12.4999 6.25004L5.9913 12.8664C5.76258 13.102 5.63576 13.4182 5.63823 13.7465C5.6407 14.0749 5.77227 14.3891 6.00451 14.6212C6.23674 14.8533 6.55099 14.9848 6.87934 14.9871C7.20769 14.9894 7.52376 14.8625 7.75927 14.6336L15.5179 6.76801C15.9868 6.29912 16.2502 5.66316 16.2502 5.00004C16.2502 4.33692 15.9868 3.70097 15.5179 3.23207C15.049 2.76318 14.413 2.49976 13.7499 2.49976C13.0868 2.49976 12.4508 2.76318 11.9819 3.23207L4.22333 11.0985C3.52953 11.8037 3.14249 12.7545 3.14652 13.7437C3.15054 14.733 3.54531 15.6806 4.24483 16.3801C4.94435 17.0796 5.89195 17.4744 6.88121 17.4784C7.87048 17.4824 8.82126 17.0954 9.52645 16.4016L15.9374 10",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconPauseCircle = (0, import_react316.forwardRef)(function IconPauseCircle2(props, ref) {
  return (0, import_jsx_runtime176.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime176.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime176.jsx)(
          "path",
          {
            d: "M8.125 7.5V12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime176.jsx)(
          "path",
          {
            d: "M11.875 7.5V12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconPencil = (0, import_react317.forwardRef)(function IconPencil2(props, ref) {
  return (0, import_jsx_runtime177.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime177.jsx)(
          "path",
          {
            d: "M7.24141 16.8751H3.75C3.58424 16.8751 3.42527 16.8093 3.30806 16.692C3.19085 16.5748 3.125 16.4159 3.125 16.2501V12.7587C3.12508 12.5932 3.19082 12.4344 3.30781 12.3173L12.9422 2.68291C13.0594 2.56579 13.2183 2.5 13.384 2.5C13.5497 2.5 13.7086 2.56579 13.8258 2.68291L17.3172 6.17198C17.4343 6.28917 17.5001 6.44808 17.5001 6.61377C17.5001 6.77946 17.4343 6.93837 17.3172 7.05557L7.68281 16.6923C7.56569 16.8093 7.40695 16.875 7.24141 16.8751Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime177.jsx)(
          "path",
          {
            d: "M10.625 5L15 9.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconPlayCircleFill = (0, import_react318.forwardRef)(function IconPlayCircleFill2(props, ref) {
  return (0, import_jsx_runtime178.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime178.jsx)(
        "path",
        {
          d: "M10 1.875C8.39303 1.875 6.82214 2.35152 5.486 3.24431C4.14985 4.1371 3.10844 5.40605 2.49348 6.8907C1.87852 8.37535 1.71762 10.009 2.03112 11.5851C2.34463 13.1612 3.11846 14.6089 4.25476 15.7452C5.39106 16.8815 6.8388 17.6554 8.4149 17.9689C9.99099 18.2824 11.6247 18.1215 13.1093 17.5065C14.594 16.8916 15.8629 15.8502 16.7557 14.514C17.6485 13.1779 18.125 11.607 18.125 10C18.1209 7.84638 17.2635 5.78216 15.7407 4.25932C14.2178 2.73648 12.1536 1.87913 10 1.875ZM12.8438 10.5234L9.09375 13.0234C8.99032 13.0874 8.87161 13.1225 8.75 13.125C8.64693 13.1249 8.54529 13.1008 8.45313 13.0547C8.35321 13.0008 8.26987 12.9206 8.21206 12.8229C8.15425 12.7252 8.12415 12.6135 8.125 12.5V7.5C8.12415 7.38646 8.15425 7.27483 8.21206 7.1771C8.26987 7.07938 8.35321 6.99924 8.45313 6.94531C8.55345 6.89453 8.66526 6.87071 8.77758 6.87618C8.88989 6.88166 8.99885 6.91625 9.09375 6.97656L12.8438 9.47656C12.9308 9.53336 13.0023 9.61097 13.0518 9.70237C13.1013 9.79376 13.1272 9.89606 13.1272 10C13.1272 10.1039 13.1013 10.2062 13.0518 10.2976C13.0023 10.389 12.9308 10.4666 12.8438 10.5234Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconPlayCircle = (0, import_react319.forwardRef)(function IconPlayCircle2(props, ref) {
  return (0, import_jsx_runtime179.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime179.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime179.jsx)(
          "path",
          {
            d: "M12.5 10L8.75 7.5V12.5L12.5 10Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconPlusCircle = (0, import_react320.forwardRef)(function IconPlusCircle2(props, ref) {
  return (0, import_jsx_runtime180.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime180.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime180.jsx)(
          "path",
          {
            d: "M6.875 10H13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime180.jsx)(
          "path",
          {
            d: "M10 6.875V13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconPlus = (0, import_react321.forwardRef)(function IconPlus2(props, ref) {
  return (0, import_jsx_runtime181.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime181.jsx)(
          "path",
          {
            d: "M3.125 10H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime181.jsx)(
          "path",
          {
            d: "M10 3.125V16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconPrinter = (0, import_react322.forwardRef)(function IconPrinter2(props, ref) {
  return (0, import_jsx_runtime182.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime182.jsx)(
          "path",
          {
            d: "M5 6.25V3.125H15V6.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime182.jsx)(
          "path",
          {
            d: "M15 11.875H5V16.875H15V11.875Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime182.jsx)(
          "path",
          {
            d: "M5 13.75H1.875V7.5C1.875 6.80937 2.48125 6.25 3.22891 6.25H16.7711C17.5187 6.25 18.125 6.80937 18.125 7.5V13.75H15",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime182.jsx)(
          "path",
          {
            d: "M15.5625 9.0625C15.5625 9.54575 15.1707 9.9375 14.6875 9.9375C14.2043 9.9375 13.8125 9.54575 13.8125 9.0625C13.8125 8.57925 14.2043 8.1875 14.6875 8.1875C15.1707 8.1875 15.5625 8.57925 15.5625 9.0625Z",
            fill: "currentColor",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "0.125"
          }
        )
      ]
    })
  );
});
var IconProhibit = (0, import_react323.forwardRef)(function IconProhibit2(props, ref) {
  return (0, import_jsx_runtime183.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime183.jsx)(
          "path",
          {
            d: "M15.303 15.303L4.69678 4.69678",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime183.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconPulse = (0, import_react324.forwardRef)(function IconPulse2(props, ref) {
  return (0, import_jsx_runtime184.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime184.jsx)(
        "path",
        {
          d: "M1.875 10H4.375L7.5 3.125L12.5 16.25L15.625 10H18.125",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconQuestion = (0, import_react325.forwardRef)(function IconQuestion2(props, ref) {
  return (0, import_jsx_runtime185.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime185.jsx)(
          "path",
          {
            d: "M10.7188 14.0625C10.7188 14.4595 10.397 14.7812 10 14.7812C9.60305 14.7812 9.28125 14.4595 9.28125 14.0625C9.28125 13.6655 9.60305 13.3438 10 13.3438C10.397 13.3438 10.7188 13.6655 10.7188 14.0625Z",
            fill: "currentColor",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "0.125"
          }
        ),
        (0, import_jsx_runtime185.jsx)(
          "path",
          {
            d: "M10 11.25V10.625C11.3805 10.625 12.5 9.64531 12.5 8.4375C12.5 7.22969 11.3805 6.25 10 6.25C8.61953 6.25 7.5 7.22969 7.5 8.4375V8.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime185.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconReceipt = (0, import_react326.forwardRef)(function IconReceipt2(props, ref) {
  return (0, import_jsx_runtime186.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime186.jsx)(
          "path",
          {
            d: "M6.25 8.125H13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime186.jsx)(
          "path",
          {
            d: "M6.25 10.625H13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime186.jsx)(
          "path",
          {
            d: "M2.5 16.25V4.375C2.5 4.20924 2.56585 4.05027 2.68306 3.93306C2.80027 3.81585 2.95924 3.75 3.125 3.75H16.875C17.0408 3.75 17.1997 3.81585 17.3169 3.93306C17.4342 4.05027 17.5 4.20924 17.5 4.375V16.25L15 15L12.5 16.25L10 15L7.5 16.25L5 15L2.5 16.25Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconRocketLaunch = (0, import_react327.forwardRef)(function IconRocketLaunch2(props, ref) {
  return (0, import_jsx_runtime187.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime187.jsx)(
          "path",
          {
            d: "M7.5 14.375C7.5 14.375 6.875 16.875 3.125 16.875C3.125 13.125 5.625 12.5 5.625 12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime187.jsx)(
          "path",
          {
            d: "M14.9305 8.8195C16.8055 6.9445 16.9227 4.71403 16.8641 3.7195C16.8543 3.56792 16.7897 3.42508 16.6823 3.31767C16.5749 3.21027 16.432 3.14565 16.2805 3.1359C15.2859 3.07731 13.057 3.19293 11.1805 5.0695L6.25 9.99996L10 13.75L14.9305 8.8195Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime187.jsx)(
          "path",
          {
            d: "M10.625 5.625H5.80855C5.64301 5.62508 5.48426 5.69082 5.36714 5.80781L2.68355 8.49141C2.60162 8.57352 2.54415 8.67682 2.51759 8.78974C2.49102 8.90265 2.49641 9.02074 2.53314 9.13077C2.56987 9.2408 2.6365 9.33844 2.72556 9.41275C2.81463 9.48707 2.92263 9.53513 3.03746 9.55156L6.24996 10",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime187.jsx)(
          "path",
          {
            d: "M14.375 9.375V14.1914C14.3749 14.3569 14.3092 14.5157 14.1922 14.6328L11.5086 17.3164C11.4265 17.3983 11.3232 17.4558 11.2103 17.4824C11.0973 17.5089 10.9793 17.5036 10.8692 17.4668C10.7592 17.4301 10.6616 17.3635 10.5872 17.2744C10.5129 17.1853 10.4649 17.0773 10.4484 16.9625L10 13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconRows = (0, import_react328.forwardRef)(function IconRows2(props, ref) {
  return (0, import_jsx_runtime188.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime188.jsx)(
          "path",
          {
            d: "M16.25 11.25H3.75C3.40482 11.25 3.125 11.5298 3.125 11.875V15C3.125 15.3452 3.40482 15.625 3.75 15.625H16.25C16.5952 15.625 16.875 15.3452 16.875 15V11.875C16.875 11.5298 16.5952 11.25 16.25 11.25Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime188.jsx)(
          "path",
          {
            d: "M16.25 4.375H3.75C3.40482 4.375 3.125 4.65482 3.125 5V8.125C3.125 8.47018 3.40482 8.75 3.75 8.75H16.25C16.5952 8.75 16.875 8.47018 16.875 8.125V5C16.875 4.65482 16.5952 4.375 16.25 4.375Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconShareNetworkFill = (0, import_react329.forwardRef)(function IconShareNetworkFill2(props, ref) {
  return (0, import_jsx_runtime189.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime189.jsx)(
        "path",
        {
          d: "M16.5627 15.6251C16.5628 16.0356 16.473 16.4411 16.2996 16.8132C16.1263 17.1853 15.8735 17.5149 15.5592 17.779C15.2449 18.043 14.8766 18.235 14.4801 18.3416C14.0837 18.4481 13.6687 18.4666 13.2644 18.3956C12.8601 18.3247 12.4762 18.1662 12.1396 17.9311C11.8031 17.696 11.5221 17.3901 11.3164 17.0349C11.1107 16.6796 10.9852 16.2837 10.9488 15.8748C10.9124 15.4659 10.966 15.054 11.1057 14.668L6.96508 12.0079C6.56962 12.3958 6.06842 12.6583 5.52434 12.7624C4.98027 12.8666 4.41756 12.8077 3.9068 12.5933C3.39604 12.3788 2.95999 12.0183 2.65334 11.557C2.34669 11.0956 2.18311 10.554 2.18311 10.0001C2.18311 9.44611 2.34669 8.90449 2.65334 8.44316C2.95999 7.98182 3.39604 7.62132 3.9068 7.40686C4.41756 7.19241 4.98027 7.13356 5.52434 7.23771C6.06842 7.34185 6.56962 7.60434 6.96508 7.99225L11.1057 5.336C10.8686 4.68447 10.8799 3.96842 11.1374 3.32468C11.3948 2.68093 11.8805 2.15463 12.5015 1.84633C13.1225 1.53803 13.8354 1.46936 14.5038 1.65343C15.1722 1.8375 15.7494 2.26141 16.1251 2.84416C16.5007 3.42691 16.6485 4.12763 16.5401 4.81244C16.4318 5.49725 16.0749 6.11813 15.5377 6.55643C15.0005 6.99473 14.3206 7.21973 13.628 7.18844C12.9354 7.15714 12.2785 6.87174 11.7831 6.38678L7.64243 9.04693C7.86621 9.66533 7.86621 10.3426 7.64243 10.961L11.7831 13.6212C12.1784 13.2342 12.679 12.9725 13.2224 12.8687C13.7657 12.7649 14.3276 12.8236 14.8377 13.0374C15.3478 13.2513 15.7836 13.6109 16.0904 14.0711C16.3972 14.5314 16.5615 15.0719 16.5627 15.6251Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconShareNetwork = (0, import_react330.forwardRef)(function IconShareNetwork2(props, ref) {
  return (0, import_jsx_runtime190.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime190.jsx)(
          "path",
          {
            d: "M5 12.5C6.38071 12.5 7.5 11.3807 7.5 10C7.5 8.61929 6.38071 7.5 5 7.5C3.61929 7.5 2.5 8.61929 2.5 10C2.5 11.3807 3.61929 12.5 5 12.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime190.jsx)(
          "path",
          {
            d: "M13.75 18.125C15.1307 18.125 16.25 17.0057 16.25 15.625C16.25 14.2443 15.1307 13.125 13.75 13.125C12.3693 13.125 11.25 14.2443 11.25 15.625C11.25 17.0057 12.3693 18.125 13.75 18.125Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime190.jsx)(
          "path",
          {
            d: "M13.75 6.875C15.1307 6.875 16.25 5.75571 16.25 4.375C16.25 2.99429 15.1307 1.875 13.75 1.875C12.3693 1.875 11.25 2.99429 11.25 4.375C11.25 5.75571 12.3693 6.875 13.75 6.875Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime190.jsx)(
          "path",
          {
            d: "M11.6484 5.72656L7.10156 8.64844",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime190.jsx)(
          "path",
          {
            d: "M7.10156 11.3516L11.6484 14.2734",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconShoppingCartSimple = (0, import_react331.forwardRef)(function IconShoppingCartSimple2(props, ref) {
  return (0, import_jsx_runtime191.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime191.jsx)(
          "path",
          {
            d: "M6.625 17.9688C7.22906 17.9688 7.71875 17.4791 7.71875 16.875C7.71875 16.2709 7.22906 15.7812 6.625 15.7812C6.02094 15.7812 5.53125 16.2709 5.53125 16.875C5.53125 17.4791 6.02094 17.9688 6.625 17.9688Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime191.jsx)(
          "path",
          {
            d: "M14.75 17.9688C15.3541 17.9688 15.8438 17.4791 15.8438 16.875C15.8438 16.2709 15.3541 15.7812 14.75 15.7812C14.1459 15.7812 13.6562 16.2709 13.6562 16.875C13.6562 17.4791 14.1459 17.9688 14.75 17.9688Z",
            fill: "currentColor"
          }
        ),
        (0, import_jsx_runtime191.jsx)(
          "path",
          {
            d: "M3.67891 5.625H17.875L15.6469 12.868C15.5682 13.1235 15.4096 13.3471 15.1945 13.5058C14.9793 13.6646 14.7189 13.7501 14.4516 13.75H6.94297C6.6713 13.7501 6.40699 13.6617 6.19005 13.4982C5.9731 13.3347 5.81533 13.1049 5.74063 12.8437L2.91484 2.95312C2.87751 2.82259 2.79868 2.70777 2.69029 2.62601C2.5819 2.54426 2.44983 2.50003 2.31406 2.5H1",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconSignOut = (0, import_react332.forwardRef)(function IconSignOut2(props, ref) {
  return (0, import_jsx_runtime192.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime192.jsx)(
          "path",
          {
            d: "M8.125 3.125H3.75C3.58424 3.125 3.42527 3.19085 3.30806 3.30806C3.19085 3.42527 3.125 3.58424 3.125 3.75V16.25C3.125 16.4158 3.19085 16.5747 3.30806 16.6919C3.42527 16.8092 3.58424 16.875 3.75 16.875H8.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime192.jsx)(
          "path",
          {
            d: "M8.125 10H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime192.jsx)(
          "path",
          {
            d: "M13.75 6.875L16.875 10L13.75 13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconSlidersFill = (0, import_react333.forwardRef)(function IconSlidersFill2(props, ref) {
  return (0, import_jsx_runtime193.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime193.jsx)(
        "path",
        {
          d: "M6.5625 10.625C6.56245 11.096 6.41035 11.5545 6.12883 11.9321C5.84731 12.3098 5.4514 12.5865 5 12.7211V16.875C5 17.0408 4.93415 17.1997 4.81694 17.3169C4.69973 17.4342 4.54076 17.5 4.375 17.5C4.20923 17.5 4.05026 17.4342 3.93305 17.3169C3.81584 17.1997 3.75 17.0408 3.75 16.875V12.7211C3.29872 12.5864 2.90298 12.3096 2.6216 11.932C2.34022 11.5543 2.18823 11.0959 2.18823 10.625C2.18823 10.1541 2.34022 9.69568 2.6216 9.31803C2.90298 8.94038 3.29872 8.66362 3.75 8.52891V3.125C3.75 2.95924 3.81584 2.80027 3.93305 2.68306C4.05026 2.56585 4.20923 2.5 4.375 2.5C4.54076 2.5 4.69973 2.56585 4.81694 2.68306C4.93415 2.80027 5 2.95924 5 3.125V8.52891C5.4514 8.66349 5.84731 8.94019 6.12883 9.31785C6.41035 9.69551 6.56245 10.154 6.5625 10.625ZM10.625 4.77891V3.125C10.625 2.95924 10.5591 2.80027 10.4419 2.68306C10.3247 2.56585 10.1658 2.5 10 2.5C9.83423 2.5 9.67526 2.56585 9.55805 2.68306C9.44084 2.80027 9.375 2.95924 9.375 3.125V4.77891C8.92372 4.91362 8.52798 5.19038 8.2466 5.56803C7.96522 5.94568 7.81323 6.40405 7.81323 6.875C7.81323 7.34595 7.96522 7.80432 8.2466 8.18197C8.52798 8.55962 8.92372 8.83638 9.375 8.97109V16.875C9.375 17.0408 9.44084 17.1997 9.55805 17.3169C9.67526 17.4342 9.83423 17.5 10 17.5C10.1658 17.5 10.3247 17.4342 10.4419 17.3169C10.5591 17.1997 10.625 17.0408 10.625 16.875V8.97109C11.0763 8.83638 11.472 8.55962 11.7534 8.18197C12.0348 7.80432 12.1868 7.34595 12.1868 6.875C12.1868 6.40405 12.0348 5.94568 11.7534 5.56803C11.472 5.19038 11.0763 4.91362 10.625 4.77891ZM16.25 11.0289V3.125C16.25 2.95924 16.1841 2.80027 16.0669 2.68306C15.9497 2.56585 15.7908 2.5 15.625 2.5C15.4592 2.5 15.3003 2.56585 15.1831 2.68306C15.0658 2.80027 15 2.95924 15 3.125V11.0289C14.5487 11.1636 14.153 11.4404 13.8716 11.818C13.5902 12.1957 13.4382 12.6541 13.4382 13.125C13.4382 13.5959 13.5902 14.0543 13.8716 14.432C14.153 14.8096 14.5487 15.0864 15 15.2211V16.875C15 17.0408 15.0658 17.1997 15.1831 17.3169C15.3003 17.4342 15.4592 17.5 15.625 17.5C15.7908 17.5 15.9497 17.4342 16.0669 17.3169C16.1841 17.1997 16.25 17.0408 16.25 16.875V15.2211C16.7013 15.0864 17.097 14.8096 17.3784 14.432C17.6598 14.0543 17.8118 13.5959 17.8118 13.125C17.8118 12.6541 17.6598 12.1957 17.3784 11.818C17.097 11.4404 16.7013 11.1636 16.25 11.0289Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconSparkleFill = (0, import_react334.forwardRef)(function IconSparkleFill2(props, ref) {
  return (0, import_jsx_runtime194.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime194.jsx)(
        "path",
        {
          d: "M16.25 11.25C16.2516 11.5048 16.1742 11.7539 16.0284 11.9629C15.8826 12.1719 15.6756 12.3306 15.4359 12.4172L11.4008 13.9016L9.91641 17.9336C9.82851 18.1724 9.66947 18.3785 9.46075 18.5241C9.25204 18.6697 9.00369 18.7477 8.74922 18.7477C8.49475 18.7477 8.2464 18.6697 8.03769 18.5241C7.82898 18.3785 7.66994 18.1724 7.58203 17.9336L6.09375 13.9062L2.06094 12.4219C1.82213 12.334 1.61604 12.1749 1.47046 11.9662C1.32488 11.7575 1.24683 11.5092 1.24683 11.2547C1.24683 11.0002 1.32488 10.7519 1.47046 10.5432C1.61604 10.3344 1.82213 10.1754 2.06094 10.0875L6.0961 8.60313L7.58047 4.57109C7.66837 4.33229 7.82741 4.12619 8.03613 3.98061C8.24484 3.83504 8.49319 3.75698 8.74766 3.75698C9.00213 3.75698 9.25047 3.83504 9.45919 3.98061C9.6679 4.12619 9.82694 4.33229 9.91485 4.57109L11.3992 8.60625L15.4313 10.0906C15.6706 10.176 15.8777 10.3331 16.0242 10.5407C16.1708 10.7482 16.2496 10.9959 16.25 11.25ZM11.875 3.75H13.125V5C13.125 5.16576 13.1908 5.32473 13.3081 5.44194C13.4253 5.55915 13.5842 5.625 13.75 5.625C13.9158 5.625 14.0747 5.55915 14.1919 5.44194C14.3092 5.32473 14.375 5.16576 14.375 5V3.75H15.625C15.7908 3.75 15.9497 3.68415 16.0669 3.56694C16.1842 3.44973 16.25 3.29076 16.25 3.125C16.25 2.95924 16.1842 2.80027 16.0669 2.68306C15.9497 2.56585 15.7908 2.5 15.625 2.5H14.375V1.25C14.375 1.08424 14.3092 0.925268 14.1919 0.808058C14.0747 0.690848 13.9158 0.625 13.75 0.625C13.5842 0.625 13.4253 0.690848 13.3081 0.808058C13.1908 0.925268 13.125 1.08424 13.125 1.25V2.5H11.875C11.7092 2.5 11.5503 2.56585 11.4331 2.68306C11.3158 2.80027 11.25 2.95924 11.25 3.125C11.25 3.29076 11.3158 3.44973 11.4331 3.56694C11.5503 3.68415 11.7092 3.75 11.875 3.75ZM18.75 6.25H18.125V5.625C18.125 5.45924 18.0592 5.30027 17.9419 5.18306C17.8247 5.06585 17.6658 5 17.5 5C17.3342 5 17.1753 5.06585 17.0581 5.18306C16.9408 5.30027 16.875 5.45924 16.875 5.625V6.25H16.25C16.0842 6.25 15.9253 6.31585 15.8081 6.43306C15.6908 6.55027 15.625 6.70924 15.625 6.875C15.625 7.04076 15.6908 7.19973 15.8081 7.31694C15.9253 7.43415 16.0842 7.5 16.25 7.5H16.875V8.125C16.875 8.29076 16.9408 8.44973 17.0581 8.56694C17.1753 8.68415 17.3342 8.75 17.5 8.75C17.6658 8.75 17.8247 8.68415 17.9419 8.56694C18.0592 8.44973 18.125 8.29076 18.125 8.125V7.5H18.75C18.9158 7.5 19.0747 7.43415 19.1919 7.31694C19.3092 7.19973 19.375 7.04076 19.375 6.875C19.375 6.70924 19.3092 6.55027 19.1919 6.43306C19.0747 6.31585 18.9158 6.25 18.75 6.25Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconSparkle = (0, import_react335.forwardRef)(function IconSparkle2(props, ref) {
  return (0, import_jsx_runtime195.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime195.jsx)(
          "path",
          {
            d: "M6.31543 13.3179L2.27949 11.8335C2.16082 11.7897 2.05842 11.7106 1.9861 11.6068C1.91377 11.503 1.875 11.3795 1.875 11.253C1.875 11.1265 1.91377 11.0031 1.9861 10.8993C2.05842 10.7955 2.16082 10.7164 2.27949 10.6726L6.31543 9.18818C6.39946 9.15741 6.47578 9.10869 6.53906 9.04541C6.60234 8.98213 6.65106 8.90581 6.68183 8.82177L8.16621 4.78584C8.21001 4.66716 8.28914 4.56477 8.39293 4.49244C8.49671 4.42012 8.62018 4.38135 8.74668 4.38135C8.87318 4.38135 8.99664 4.42012 9.10043 4.49244C9.20421 4.56477 9.28334 4.66716 9.32715 4.78584L10.8115 8.82177C10.8423 8.90581 10.891 8.98213 10.9543 9.04541C11.0176 9.10869 11.0939 9.15741 11.1779 9.18818L15.2139 10.6726C15.3325 10.7164 15.4349 10.7955 15.5073 10.8993C15.5796 11.0031 15.6184 11.1265 15.6184 11.253C15.6184 11.3795 15.5796 11.503 15.5073 11.6068C15.4349 11.7106 15.3325 11.7897 15.2139 11.8335L11.1779 13.3179C11.0939 13.3486 11.0176 13.3974 10.9543 13.4606C10.891 13.5239 10.8423 13.6002 10.8115 13.6843L9.32715 17.7202C9.28334 17.8389 9.20421 17.9413 9.10043 18.0136C8.99664 18.0859 8.87318 18.1247 8.74668 18.1247C8.62018 18.1247 8.49671 18.0859 8.39293 18.0136C8.28914 17.9413 8.21001 17.8389 8.16621 17.7202L6.68183 13.6843C6.65106 13.6002 6.60234 13.5239 6.53906 13.4606C6.47578 13.3974 6.39946 13.3486 6.31543 13.3179Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime195.jsx)(
          "path",
          {
            d: "M13.75 1.25V5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime195.jsx)(
          "path",
          {
            d: "M17.5 5.625V8.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime195.jsx)(
          "path",
          {
            d: "M11.875 3.125H15.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime195.jsx)(
          "path",
          {
            d: "M16.25 6.875H18.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconSquaresFour = (0, import_react336.forwardRef)(function IconSquaresFour2(props, ref) {
  return (0, import_jsx_runtime196.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime196.jsx)(
          "path",
          {
            d: "M8.125 3.75H4.375C4.02982 3.75 3.75 4.02982 3.75 4.375V8.125C3.75 8.47018 4.02982 8.75 4.375 8.75H8.125C8.47018 8.75 8.75 8.47018 8.75 8.125V4.375C8.75 4.02982 8.47018 3.75 8.125 3.75Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime196.jsx)(
          "path",
          {
            d: "M15.625 3.75H11.875C11.5298 3.75 11.25 4.02982 11.25 4.375V8.125C11.25 8.47018 11.5298 8.75 11.875 8.75H15.625C15.9702 8.75 16.25 8.47018 16.25 8.125V4.375C16.25 4.02982 15.9702 3.75 15.625 3.75Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime196.jsx)(
          "path",
          {
            d: "M8.125 11.25H4.375C4.02982 11.25 3.75 11.5298 3.75 11.875V15.625C3.75 15.9702 4.02982 16.25 4.375 16.25H8.125C8.47018 16.25 8.75 15.9702 8.75 15.625V11.875C8.75 11.5298 8.47018 11.25 8.125 11.25Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime196.jsx)(
          "path",
          {
            d: "M15.625 11.25H11.875C11.5298 11.25 11.25 11.5298 11.25 11.875V15.625C11.25 15.9702 11.5298 16.25 11.875 16.25H15.625C15.9702 16.25 16.25 15.9702 16.25 15.625V11.875C16.25 11.5298 15.9702 11.25 15.625 11.25Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconStack = (0, import_react337.forwardRef)(function IconStack2(props, ref) {
  return (0, import_jsx_runtime197.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime197.jsx)(
          "path",
          {
            d: "M2.5 13.75L10 18.125L17.5 13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime197.jsx)(
          "path",
          {
            d: "M2.5 10L10 14.375L17.5 10",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime197.jsx)(
          "path",
          {
            d: "M2.5 6.25L10 10.625L17.5 6.25L10 1.875L2.5 6.25Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconStarFill = (0, import_react338.forwardRef)(function IconStarFill2(props, ref) {
  return (0, import_jsx_runtime198.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime198.jsx)(
        "path",
        {
          d: "M18.3203 8.93578L14.7969 12.0108L15.8524 16.5889C15.9082 16.8282 15.8923 17.0787 15.8065 17.309C15.7208 17.5394 15.5691 17.7393 15.3703 17.8839C15.1716 18.0284 14.9346 18.1112 14.6891 18.1218C14.4436 18.1324 14.2004 18.0704 13.9899 17.9436L9.99689 15.5217L6.01252 17.9436C5.80202 18.0704 5.55881 18.1324 5.31328 18.1218C5.06775 18.1112 4.83079 18.0284 4.63204 17.8839C4.4333 17.7393 4.28157 17.5394 4.19584 17.309C4.1101 17.0787 4.09416 16.8282 4.15002 16.5889L5.20392 12.0155L1.6797 8.93578C1.49331 8.77502 1.35852 8.5628 1.29225 8.32574C1.22598 8.08868 1.23117 7.83733 1.30718 7.60321C1.38319 7.36909 1.52663 7.16262 1.71952 7.0097C1.9124 6.85678 2.14614 6.76421 2.39142 6.74359L7.03674 6.34125L8.85002 2.01625C8.94471 1.78931 9.10443 1.59546 9.30907 1.45911C9.51371 1.32276 9.75411 1.25 10 1.25C10.2459 1.25 10.4863 1.32276 10.691 1.45911C10.8956 1.59546 11.0553 1.78931 11.15 2.01625L12.9688 6.34125L17.6125 6.74359C17.8578 6.76421 18.0915 6.85678 18.2844 7.0097C18.4773 7.16262 18.6207 7.36909 18.6968 7.60321C18.7728 7.83733 18.778 8.08868 18.7117 8.32574C18.6454 8.5628 18.5106 8.77502 18.3242 8.93578H18.3203Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconStar = (0, import_react339.forwardRef)(function IconStar2(props, ref) {
  return (0, import_jsx_runtime199.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime199.jsx)(
        "path",
        {
          d: "M17.8621 8.34201C17.8502 8.3512 17.8386 8.36077 17.8272 8.37071L14.3037 11.4457C14.0953 11.6277 14.0039 11.9096 14.0661 12.1793L15.1215 16.7574L15.122 16.7594C15.1443 16.8551 15.1379 16.9553 15.1037 17.0474C15.0694 17.1395 15.0087 17.2195 14.9292 17.2773C14.8497 17.3352 14.7549 17.3683 14.6567 17.3725C14.5588 17.3768 14.4618 17.3521 14.3778 17.3017C14.3775 17.3015 14.3772 17.3014 14.377 17.3012L10.3858 14.8805C10.1466 14.7353 9.84645 14.7355 9.60733 14.8808L5.62539 17.3012C5.62506 17.3014 5.62473 17.3016 5.6244 17.3018C5.54043 17.3522 5.44352 17.3767 5.3457 17.3725C5.24748 17.3683 5.1527 17.3352 5.0732 17.2773C4.9937 17.2195 4.93301 17.1395 4.89872 17.0474C4.86443 16.9553 4.85805 16.8551 4.88039 16.7594L4.88086 16.7573L5.93477 12.1839C5.99686 11.9144 5.90565 11.6327 5.69744 11.4507L2.17322 8.37103L2.17323 8.37102L2.16954 8.36784C2.09498 8.30353 2.04106 8.21864 2.01456 8.12382C1.98805 8.02899 1.99013 7.92845 2.02053 7.83481C2.05093 7.74116 2.10831 7.65857 2.18546 7.5974C2.26262 7.53623 2.35611 7.49921 2.45423 7.49096L2.45614 7.4908L7.10145 7.08845C7.37917 7.0644 7.62063 6.88831 7.72841 6.63124L9.54169 2.30624L9.54218 2.30506C9.57988 2.21471 9.64347 2.13753 9.72494 2.08325C9.80641 2.02897 9.90212 2 10 2C10.0979 2 10.1936 2.02897 10.2751 2.08325C10.3566 2.13753 10.4202 2.21471 10.4579 2.30506L10.4587 2.30698L12.2774 6.63198C12.3853 6.88866 12.6266 7.06441 12.904 7.08845L17.5478 7.4908L17.5497 7.49096C17.6478 7.49921 17.7413 7.53623 17.8185 7.5974C17.8956 7.65857 17.953 7.74116 17.9834 7.83481C18.0138 7.92845 18.0159 8.02899 17.9894 8.12382C17.9663 8.20644 17.9224 8.28152 17.8621 8.34201Z",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconStorefront = (0, import_react340.forwardRef)(function IconStorefront2(props, ref) {
  return (0, import_jsx_runtime200.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime200.jsx)(
          "path",
          {
            d: "M3.75 10.9053V16.2499C3.75 16.4157 3.81585 16.5747 3.93306 16.6919C4.05027 16.8091 4.20924 16.8749 4.375 16.8749H15.625C15.7908 16.8749 15.9497 16.8091 16.0669 16.6919C16.1842 16.5747 16.25 16.4157 16.25 16.2499V10.9054",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime200.jsx)(
          "path",
          {
            d: "M4.22144 3.125H15.7786C15.9144 3.125 16.0465 3.16924 16.1549 3.25103C16.2634 3.33282 16.3422 3.44771 16.3795 3.5783L17.5 7.5H2.5L3.62049 3.5783C3.6578 3.44771 3.73664 3.33282 3.84507 3.25103C3.9535 3.16924 4.08562 3.125 4.22144 3.125Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime200.jsx)(
          "path",
          {
            d: "M7.5 7.5V8.75C7.5 9.41304 7.23661 10.0489 6.76777 10.5178C6.29893 10.9866 5.66304 11.25 5 11.25C4.33696 11.25 3.70107 10.9866 3.23223 10.5178C2.76339 10.0489 2.5 9.41304 2.5 8.75V7.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime200.jsx)(
          "path",
          {
            d: "M12.5 7.5V8.75C12.5 9.41304 12.2366 10.0489 11.7678 10.5178C11.2989 10.9866 10.663 11.25 10 11.25C9.33696 11.25 8.70107 10.9866 8.23223 10.5178C7.76339 10.0489 7.5 9.41304 7.5 8.75V7.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime200.jsx)(
          "path",
          {
            d: "M17.5 7.5V8.75C17.5 9.41304 17.2366 10.0489 16.7678 10.5178C16.2989 10.9866 15.663 11.25 15 11.25C14.337 11.25 13.7011 10.9866 13.2322 10.5178C12.7634 10.0489 12.5 9.41304 12.5 8.75V7.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconTagFill = (0, import_react341.forwardRef)(function IconTagFill2(props, ref) {
  return (0, import_jsx_runtime201.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime201.jsx)(
        "path",
        {
          d: "M19.0086 10.625L11.25 2.86641C11.1344 2.74983 10.9967 2.65741 10.845 2.59451C10.6933 2.5316 10.5306 2.49948 10.3664 2.50001H3.12501C2.95925 2.50001 2.80027 2.56585 2.68306 2.68306C2.56585 2.80027 2.50001 2.95925 2.50001 3.12501V10.3664C2.49948 10.5306 2.5316 10.6933 2.59451 10.845C2.65741 10.9967 2.74983 11.1344 2.86641 11.25L10.625 19.0086C10.7411 19.1247 10.8789 19.2168 11.0306 19.2796C11.1822 19.3425 11.3448 19.3748 11.509 19.3748C11.6732 19.3748 11.8357 19.3425 11.9874 19.2796C12.1391 19.2168 12.2769 19.1247 12.393 19.0086L19.0086 12.393C19.1247 12.2769 19.2168 12.1391 19.2796 11.9874C19.3425 11.8357 19.3748 11.6732 19.3748 11.509C19.3748 11.3448 19.3425 11.1822 19.2796 11.0306C19.2168 10.8789 19.1247 10.7411 19.0086 10.625ZM6.56251 7.50001C6.37709 7.50001 6.19583 7.44502 6.04166 7.34201C5.88749 7.239 5.76733 7.09258 5.69637 6.92127C5.62541 6.74997 5.60685 6.56147 5.64302 6.37961C5.67919 6.19775 5.76848 6.03071 5.89959 5.89959C6.03071 5.76848 6.19775 5.67919 6.37961 5.64302C6.56147 5.60685 6.74997 5.62541 6.92127 5.69637C7.09258 5.76733 7.239 5.88749 7.34201 6.04166C7.44502 6.19583 7.50001 6.37709 7.50001 6.56251C7.50001 6.81115 7.40123 7.0496 7.22542 7.22542C7.0496 7.40123 6.81115 7.50001 6.56251 7.50001Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconTag = (0, import_react342.forwardRef)(function IconTag2(props, ref) {
  return (0, import_jsx_runtime202.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime202.jsx)(
          "path",
          {
            d: "M3.30781 10.8078C3.19082 10.6907 3.12508 10.5319 3.125 10.3664V3.125H10.3664C10.5319 3.12508 10.6907 3.19082 10.8078 3.30781L18.5672 11.0672C18.6843 11.1844 18.7501 11.3433 18.7501 11.509C18.7501 11.6747 18.6843 11.8336 18.5672 11.9508L11.9531 18.5672C11.8359 18.6843 11.677 18.7501 11.5113 18.7501C11.3456 18.7501 11.1867 18.6843 11.0695 18.5672L3.30781 10.8078Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime202.jsx)(
          "path",
          {
            d: "M7.28125 6.5625C7.28125 6.95945 6.95945 7.28125 6.5625 7.28125C6.16555 7.28125 5.84375 6.95945 5.84375 6.5625C5.84375 6.16555 6.16555 5.84375 6.5625 5.84375C6.95945 5.84375 7.28125 6.16555 7.28125 6.5625Z",
            fill: "currentColor",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "0.125"
          }
        )
      ]
    })
  );
});
var IconTextAlignCenter = (0, import_react343.forwardRef)(function IconTextAlignCenter2(props, ref) {
  return (0, import_jsx_runtime203.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime203.jsx)(
          "path",
          {
            d: "M3.125 5H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime203.jsx)(
          "path",
          {
            d: "M5 8.125H15",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime203.jsx)(
          "path",
          {
            d: "M3.125 11.25H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime203.jsx)(
          "path",
          {
            d: "M5 14.375H15",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconTextAlignLeft = (0, import_react344.forwardRef)(function IconTextAlignLeft2(props, ref) {
  return (0, import_jsx_runtime204.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime204.jsx)(
          "path",
          {
            d: "M3.125 5H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime204.jsx)(
          "path",
          {
            d: "M3.125 8.125H13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime204.jsx)(
          "path",
          {
            d: "M3.125 11.25H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime204.jsx)(
          "path",
          {
            d: "M3.125 14.375H13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconTextAlignRight = (0, import_react345.forwardRef)(function IconTextAlignRight2(props, ref) {
  return (0, import_jsx_runtime205.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime205.jsx)(
          "path",
          {
            d: "M3.125 5H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime205.jsx)(
          "path",
          {
            d: "M6.875 8.125H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime205.jsx)(
          "path",
          {
            d: "M3.125 11.25H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime205.jsx)(
          "path",
          {
            d: "M6.875 14.375H16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconTextB = (0, import_react346.forwardRef)(function IconTextB2(props, ref) {
  return (0, import_jsx_runtime206.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime206.jsx)(
        "path",
        {
          d: "M5.625 9.375H11.875C12.7038 9.375 13.4987 9.70424 14.0847 10.2903C14.6708 10.8763 15 11.6712 15 12.5C15 13.3288 14.6708 14.1237 14.0847 14.7097C13.4987 15.2958 12.7038 15.625 11.875 15.625H5.625V3.75H10.9375C11.6834 3.75 12.3988 4.04632 12.9262 4.57376C13.4537 5.10121 13.75 5.81658 13.75 6.5625C13.75 7.30842 13.4537 8.02379 12.9262 8.55124C12.3988 9.07868 11.6834 9.375 10.9375 9.375",
          vectorEffect: "non-scaling-stroke",
          stroke: "currentColor",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }
      )
    })
  );
});
var IconTextItalic = (0, import_react347.forwardRef)(function IconTextItalic2(props, ref) {
  return (0, import_jsx_runtime207.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime207.jsx)(
          "path",
          {
            d: "M11.8745 4.375L8.12451 15.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime207.jsx)(
          "path",
          {
            d: "M4.99951 15.625H11.2495",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime207.jsx)(
          "path",
          {
            d: "M8.74951 4.375H14.9995",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconTextUnderline = (0, import_react348.forwardRef)(function IconTextUnderline2(props, ref) {
  return (0, import_jsx_runtime208.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime208.jsx)(
          "path",
          {
            d: "M5 17.5H15",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime208.jsx)(
          "path",
          {
            d: "M14.375 4.375V10.625C14.375 11.7853 13.9141 12.8981 13.0936 13.7186C12.2731 14.5391 11.1603 15 10 15C8.83968 15 7.72688 14.5391 6.90641 13.7186C6.08594 12.8981 5.625 11.7853 5.625 10.625V4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconTicket = (0, import_react349.forwardRef)(function IconTicket2(props, ref) {
  return (0, import_jsx_runtime209.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime209.jsx)(
          "path",
          {
            d: "M7.5 4.375V15.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime209.jsx)(
          "path",
          {
            d: "M1.875 13.0617C1.87497 12.9178 1.92473 12.7782 2.01585 12.6667C2.10696 12.5552 2.23383 12.4786 2.37494 12.45C2.93958 12.3346 3.44704 12.0278 3.81149 11.5814C4.17594 11.1349 4.375 10.5763 4.375 10C4.375 9.42369 4.17594 8.86508 3.81149 8.41864C3.44704 7.9722 2.93958 7.66536 2.37494 7.55C2.23383 7.52135 2.10696 7.4448 2.01585 7.33331C1.92473 7.22182 1.87497 7.08225 1.875 6.93826V5C1.875 4.83424 1.94085 4.67527 2.05806 4.55806C2.17527 4.44085 2.33424 4.375 2.5 4.375H17.5C17.6658 4.375 17.8247 4.44085 17.9419 4.55806C18.0592 4.67527 18.125 4.83424 18.125 5V6.93826C18.125 7.08225 18.0753 7.22182 17.9842 7.33331C17.893 7.4448 17.7662 7.52136 17.6251 7.55C17.0604 7.66536 16.553 7.97221 16.1885 8.41865C15.8241 8.86508 15.625 9.4237 15.625 10C15.625 10.5763 15.8241 11.1349 16.1885 11.5814C16.553 12.0278 17.0604 12.3346 17.6251 12.45C17.7662 12.4787 17.893 12.5552 17.9841 12.6667C18.0753 12.7782 18.125 12.9178 18.125 13.0617V15C18.125 15.1658 18.0592 15.3247 17.9419 15.4419C17.8247 15.5592 17.6658 15.625 17.5 15.625H2.5C2.33424 15.625 2.17527 15.5592 2.05806 15.4419C1.94085 15.3247 1.875 15.1658 1.875 15V13.0617Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconTrash = (0, import_react350.forwardRef)(function IconTrash2(props, ref) {
  return (0, import_jsx_runtime210.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime210.jsx)(
          "path",
          {
            d: "M16.8748 4.375L3.12476 4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime210.jsx)(
          "path",
          {
            d: "M8.125 8.125V13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime210.jsx)(
          "path",
          {
            d: "M11.875 8.125V13.125",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime210.jsx)(
          "path",
          {
            d: "M15.625 4.375V16.25C15.625 16.4158 15.5592 16.5747 15.4419 16.6919C15.3247 16.8092 15.1658 16.875 15 16.875H5C4.83424 16.875 4.67527 16.8092 4.55806 16.6919C4.44085 16.5747 4.375 16.4158 4.375 16.25V4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime210.jsx)(
          "path",
          {
            d: "M13.125 4.375V3.125C13.125 2.79348 12.9933 2.47554 12.7589 2.24112C12.5245 2.0067 12.2065 1.875 11.875 1.875H8.125C7.79348 1.875 7.47554 2.0067 7.24112 2.24112C7.0067 2.47554 6.875 2.79348 6.875 3.125V4.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconTreeStructureFill = (0, import_react351.forwardRef)(function IconTreeStructureFill2(props, ref) {
  return (0, import_jsx_runtime211.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime211.jsx)(
        "path",
        {
          d: "M11.875 7.5V6.25H11.25C10.9185 6.25 10.6005 6.3817 10.3661 6.61612C10.1317 6.85054 10 7.16848 10 7.5V12.5C10 12.8315 10.1317 13.1495 10.3661 13.3839C10.6005 13.6183 10.9185 13.75 11.25 13.75H11.875V12.5C11.875 12.1685 12.0067 11.8505 12.2411 11.6161C12.4755 11.3817 12.7935 11.25 13.125 11.25H16.875C17.2065 11.25 17.5245 11.3817 17.7589 11.6161C17.9933 11.8505 18.125 12.1685 18.125 12.5V16.25C18.125 16.5815 17.9933 16.8995 17.7589 17.1339C17.5245 17.3683 17.2065 17.5 16.875 17.5H13.125C12.7935 17.5 12.4755 17.3683 12.2411 17.1339C12.0067 16.8995 11.875 16.5815 11.875 16.25V15H11.25C10.587 15 9.95107 14.7366 9.48223 14.2678C9.01339 13.7989 8.75 13.163 8.75 12.5V10.625H6.25V11.25C6.25 11.5815 6.1183 11.8995 5.88388 12.1339C5.64946 12.3683 5.33152 12.5 5 12.5H2.5C2.16848 12.5 1.85054 12.3683 1.61612 12.1339C1.3817 11.8995 1.25 11.5815 1.25 11.25V8.75C1.25 8.41848 1.3817 8.10054 1.61612 7.86612C1.85054 7.6317 2.16848 7.5 2.5 7.5H5C5.33152 7.5 5.64946 7.6317 5.88388 7.86612C6.1183 8.10054 6.25 8.41848 6.25 8.75V9.375H8.75V7.5C8.75 6.83696 9.01339 6.20107 9.48223 5.73223C9.95107 5.26339 10.587 5 11.25 5H11.875V3.75C11.875 3.41848 12.0067 3.10054 12.2411 2.86612C12.4755 2.6317 12.7935 2.5 13.125 2.5H16.875C17.2065 2.5 17.5245 2.6317 17.7589 2.86612C17.9933 3.10054 18.125 3.41848 18.125 3.75V7.5C18.125 7.83152 17.9933 8.14946 17.7589 8.38388C17.5245 8.6183 17.2065 8.75 16.875 8.75H13.125C12.7935 8.75 12.4755 8.6183 12.2411 8.38388C12.0067 8.14946 11.875 7.83152 11.875 7.5Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconTrendDownFill = (0, import_react352.forwardRef)(function IconTrendDownFill2(props, ref) {
  return (0, import_jsx_runtime212.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime212.jsx)(
        "path",
        {
          d: "M18.75 10.625V15.625C18.75 15.7907 18.6842 15.9497 18.5669 16.0669C18.4497 16.1841 18.2908 16.25 18.125 16.25H13.125C13.0013 16.2501 12.8804 16.2135 12.7775 16.1448C12.6746 16.0761 12.5945 15.9785 12.5471 15.8642C12.4998 15.75 12.4874 15.6242 12.5115 15.5029C12.5357 15.3816 12.5953 15.2702 12.6828 15.1828L14.7414 13.125L10.625 9.00857L7.94219 11.6922C7.88414 11.7503 7.81521 11.7964 7.73934 11.8278C7.66346 11.8593 7.58213 11.8755 7.5 11.8755C7.41787 11.8755 7.33654 11.8593 7.26066 11.8278C7.18479 11.7964 7.11586 11.7503 7.05781 11.6922L1.43281 6.06717C1.31554 5.94989 1.24965 5.79083 1.24965 5.62498C1.24965 5.45913 1.31554 5.30007 1.43281 5.18279C1.55009 5.06552 1.70915 4.99963 1.875 4.99963C2.04085 4.99963 2.19991 5.06552 2.31719 5.18279L7.5 10.3664L10.1828 7.68279C10.2409 7.62468 10.3098 7.57858 10.3857 7.54713C10.4615 7.51568 10.5429 7.49949 10.625 7.49949C10.7071 7.49949 10.7885 7.51568 10.8643 7.54713C10.9402 7.57858 11.0091 7.62468 11.0672 7.68279L15.625 12.2414L17.6828 10.1828C17.7702 10.0953 17.8816 10.0357 18.0029 10.0115C18.1242 9.98737 18.25 9.99975 18.3642 10.0471C18.4785 10.0944 18.5762 10.1746 18.6448 10.2775C18.7135 10.3804 18.7501 10.5013 18.75 10.625Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconTrendUpFill = (0, import_react353.forwardRef)(function IconTrendUpFill2(props, ref) {
  return (0, import_jsx_runtime213.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime213.jsx)(
        "path",
        {
          d: "M18.75 4.375V9.375C18.7501 9.49868 18.7135 9.61962 18.6448 9.72249C18.5762 9.82536 18.4785 9.90554 18.3642 9.95289C18.25 10.0002 18.1242 10.0126 18.0029 9.98846C17.8816 9.9643 17.7702 9.9047 17.6828 9.81719L15.625 7.75859L11.0672 12.3172C11.0091 12.3753 10.9402 12.4214 10.8643 12.4529C10.7885 12.4843 10.7071 12.5005 10.625 12.5005C10.5429 12.5005 10.4615 12.4843 10.3857 12.4529C10.3098 12.4214 10.2409 12.3753 10.1828 12.3172L7.5 9.63359L2.31719 14.8172C2.19991 14.9345 2.04085 15.0003 1.875 15.0003C1.70915 15.0003 1.55009 14.9345 1.43281 14.8172C1.31554 14.6999 1.24965 14.5409 1.24965 14.375C1.24965 14.2091 1.31554 14.0501 1.43281 13.9328L7.05781 8.30781C7.11586 8.2497 7.18479 8.2036 7.26066 8.17215C7.33654 8.1407 7.41787 8.12451 7.5 8.12451C7.58213 8.12451 7.66346 8.1407 7.73934 8.17215C7.81521 8.2036 7.88414 8.2497 7.94219 8.30781L10.625 10.9914L14.7414 6.875L12.6828 4.81719C12.5953 4.72978 12.5357 4.61837 12.5115 4.49707C12.4874 4.37576 12.4998 4.25002 12.5471 4.13576C12.5945 4.02149 12.6746 3.92384 12.7775 3.85517C12.8804 3.78651 13.0013 3.7499 13.125 3.75H18.125C18.2908 3.75 18.4497 3.81585 18.5669 3.93306C18.6842 4.05027 18.75 4.20924 18.75 4.375Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconTruck = (0, import_react354.forwardRef)(function IconTruck2(props, ref) {
  return (0, import_jsx_runtime214.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime214.jsx)(
          "path",
          {
            d: "M13.75 6.25H17.0766C17.2011 6.24994 17.3228 6.28709 17.4261 6.35669C17.5294 6.42629 17.6095 6.52517 17.6562 6.64063L18.75 9.375",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime214.jsx)(
          "path",
          {
            d: "M1.25 11.25H13.75",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime214.jsx)(
          "path",
          {
            d: "M14.375 16.875C15.4105 16.875 16.25 16.0355 16.25 15C16.25 13.9645 15.4105 13.125 14.375 13.125C13.3395 13.125 12.5 13.9645 12.5 15C12.5 16.0355 13.3395 16.875 14.375 16.875Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime214.jsx)(
          "path",
          {
            d: "M5.625 16.875C6.66053 16.875 7.5 16.0355 7.5 15C7.5 13.9645 6.66053 13.125 5.625 13.125C4.58947 13.125 3.75 13.9645 3.75 15C3.75 16.0355 4.58947 16.875 5.625 16.875Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime214.jsx)(
          "path",
          {
            d: "M12.5 15H7.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime214.jsx)(
          "path",
          {
            d: "M13.75 9.375H18.75V14.375C18.75 14.5408 18.6842 14.6997 18.5669 14.8169C18.4497 14.9342 18.2908 15 18.125 15H16.25",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime214.jsx)(
          "path",
          {
            d: "M3.75 15H1.875C1.70924 15 1.55027 14.9342 1.43306 14.8169C1.31585 14.6997 1.25 14.5408 1.25 14.375V5.625C1.25 5.45924 1.31585 5.30027 1.43306 5.18306C1.55027 5.06585 1.70924 5 1.875 5H13.75V13.232",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconUniteFill = (0, import_react355.forwardRef)(function IconUniteFill2(props, ref) {
  return (0, import_jsx_runtime215.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime215.jsx)(
        "path",
        {
          d: "M5.00001 12.5C5.00001 12.75 5.01251 12.9977 5.03672 13.2414C4.09698 12.8399 3.27004 12.214 2.62834 11.4187C1.98664 10.6233 1.54976 9.68275 1.35596 8.67936C1.16217 7.67596 1.21737 6.64035 1.51674 5.66324C1.81611 4.68614 2.35052 3.79734 3.07314 3.07472C3.79576 2.3521 4.68455 1.8177 5.66166 1.51833C6.63876 1.21896 7.67437 1.16375 8.67777 1.35755C9.68116 1.55134 10.6217 1.98823 11.4171 2.62993C12.2124 3.27163 12.8383 4.09857 13.2398 5.03831C12.9961 5.01409 12.7484 5.00159 12.4984 5.00159C10.5106 5.00428 8.60486 5.79515 7.19921 7.2008C5.79357 8.60645 5.00269 10.5121 5.00001 12.5ZM13.75 7.50003C13.7498 7.11655 13.714 6.73391 13.643 6.35706C13.2661 6.28605 12.8835 6.25022 12.5 6.25003C10.843 6.25189 9.25434 6.91097 8.08264 8.08267C6.91094 9.25437 6.25187 10.843 6.25001 12.5C6.2502 12.8835 6.28603 13.2661 6.35704 13.643C6.73389 13.714 7.11652 13.7498 7.50001 13.75C9.15704 13.7482 10.7457 13.0891 11.9174 11.9174C13.0891 10.7457 13.7481 9.15706 13.75 7.50003ZM14.9633 6.75862C14.9875 7.00237 15 7.25003 15 7.50003C14.9977 9.48845 14.2068 11.3948 12.8008 12.8008C11.3948 14.2068 9.48843 14.9978 7.50001 15C7.25001 15 7.00235 14.9875 6.7586 14.9633C7.16015 15.9031 7.78602 16.73 8.58137 17.3717C9.37671 18.0134 10.3173 18.4503 11.3207 18.6441C12.3241 18.8379 13.3597 18.7827 14.3368 18.4833C15.3139 18.1839 16.2027 17.6495 16.9253 16.9269C17.6479 16.2043 18.1823 15.3155 18.4817 14.3384C18.7811 13.3613 18.8363 12.3257 18.6425 11.3223C18.4487 10.3189 18.0118 9.3783 17.3701 8.58295C16.7284 7.7876 15.9015 7.16174 14.9617 6.76019L14.9633 6.75862Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconUser = (0, import_react356.forwardRef)(function IconUser2(props, ref) {
  return (0, import_jsx_runtime216.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime216.jsx)(
          "path",
          {
            d: "M10 12.5C12.7614 12.5 15 10.2614 15 7.5C15 4.73858 12.7614 2.5 10 2.5C7.23858 2.5 5 4.73858 5 7.5C5 10.2614 7.23858 12.5 10 12.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime216.jsx)(
          "path",
          {
            d: "M2.5 16.875C4.01328 14.2602 6.76172 12.5 10 12.5C13.2383 12.5 15.9867 14.2602 17.5 16.875",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconUsers = (0, import_react357.forwardRef)(function IconUsers2(props, ref) {
  return (0, import_jsx_runtime217.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime217.jsx)(
          "path",
          {
            d: "M0.799316 15.6252C1.42361 14.6653 2.27775 13.8766 3.28421 13.3305C4.29067 12.7845 5.41757 12.4985 6.5626 12.4985C7.70763 12.4985 8.83452 12.7845 9.84098 13.3305C10.8474 13.8766 11.7016 14.6653 12.3259 15.6252",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime217.jsx)(
          "path",
          {
            d: "M13.4375 12.5C14.5825 12.4993 15.7095 12.7849 16.716 13.3306C17.7225 13.8764 18.5767 14.6651 19.2008 15.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime217.jsx)(
          "path",
          {
            d: "M6.5625 12.5C8.80616 12.5 10.625 10.6812 10.625 8.4375C10.625 6.19384 8.80616 4.375 6.5625 4.375C4.31884 4.375 2.5 6.19384 2.5 8.4375C2.5 10.6812 4.31884 12.5 6.5625 12.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime217.jsx)(
          "path",
          {
            d: "M11.929 4.66406C12.4847 4.44242 13.0825 4.34625 13.6797 4.38244C14.2769 4.41862 14.8587 4.58626 15.3836 4.87338C15.9085 5.16051 16.3635 5.56002 16.716 6.04337C17.0686 6.52672 17.3101 7.08198 17.4232 7.66948C17.5363 8.25698 17.5183 8.86221 17.3703 9.44192C17.2224 10.0216 16.9483 10.5615 16.5675 11.023C16.1868 11.4845 15.7088 11.8562 15.1677 12.1115C14.6266 12.3668 14.0358 12.4995 13.4375 12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconVideoCameraFill = (0, import_react358.forwardRef)(function IconVideoCameraFill2(props, ref) {
  return (0, import_jsx_runtime218.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime218.jsx)("g", { clipPath: "url(#clip0_81_30)", children: (0, import_jsx_runtime218.jsx)(
          "path",
          {
            d: "M15 5.625V14.375C15 14.7065 14.8683 15.0245 14.6339 15.2589C14.3995 15.4933 14.0815 15.625 13.75 15.625H2.5C2.16848 15.625 1.85054 15.4933 1.61612 15.2589C1.3817 15.0245 1.25 14.7065 1.25 14.375V5.625C1.25 5.29348 1.3817 4.97554 1.61612 4.74112C1.85054 4.5067 2.16848 4.375 2.5 4.375H13.75C14.0815 4.375 14.3995 4.5067 14.6339 4.74112C14.8683 4.97554 15 5.29348 15 5.625ZM19.5312 5.64453C19.4431 5.62295 19.3513 5.62029 19.2621 5.63672C19.1728 5.65315 19.088 5.68829 19.0133 5.73984L16.3891 7.48906C16.3463 7.51762 16.3112 7.55631 16.2869 7.6017C16.2626 7.64708 16.25 7.69776 16.25 7.74922V12.2508C16.25 12.3022 16.2626 12.3529 16.2869 12.3983C16.3112 12.4437 16.3463 12.4824 16.3891 12.5109L19.0281 14.2703C19.1269 14.3362 19.2424 14.3726 19.3611 14.3752C19.4798 14.3779 19.5968 14.3466 19.6984 14.2852C19.7924 14.2254 19.8695 14.1425 19.9223 14.0444C19.9751 13.9464 20.0019 13.8364 20 13.725V6.25C20.0001 6.11139 19.9541 5.97668 19.8692 5.86708C19.7843 5.75747 19.6655 5.67918 19.5312 5.64453Z",
            fill: "currentColor"
          }
        ) }),
        (0, import_jsx_runtime218.jsx)("defs", { children: (0, import_jsx_runtime218.jsx)("clipPath", { id: "clip0_81_30", children: (0, import_jsx_runtime218.jsx)("rect", { width: "20", height: "20", fill: "transparent" }) }) })
      ]
    })
  );
});
var IconWarningCircleFill = (0, import_react359.forwardRef)(function IconWarningCircleFill2(props, ref) {
  return (0, import_jsx_runtime219.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime219.jsx)(
        "path",
        {
          d: "M10 1.875C8.39303 1.875 6.82214 2.35152 5.486 3.24431C4.14985 4.1371 3.10844 5.40605 2.49348 6.8907C1.87852 8.37535 1.71762 10.009 2.03112 11.5851C2.34463 13.1612 3.11846 14.6089 4.25476 15.7452C5.39106 16.8815 6.8388 17.6554 8.4149 17.9689C9.99099 18.2824 11.6247 18.1215 13.1093 17.5065C14.594 16.8916 15.8629 15.8502 16.7557 14.514C17.6485 13.1779 18.125 11.607 18.125 10C18.1226 7.84586 17.2658 5.78065 15.7426 4.25744C14.2194 2.73424 12.1541 1.87743 10 1.875ZM9.375 6.25C9.375 6.08424 9.44085 5.92527 9.55806 5.80806C9.67527 5.69085 9.83424 5.625 10 5.625C10.1658 5.625 10.3247 5.69085 10.4419 5.80806C10.5592 5.92527 10.625 6.08424 10.625 6.25V10.625C10.625 10.7908 10.5592 10.9497 10.4419 11.0669C10.3247 11.1842 10.1658 11.25 10 11.25C9.83424 11.25 9.67527 11.1842 9.55806 11.0669C9.44085 10.9497 9.375 10.7908 9.375 10.625V6.25ZM10 14.375C9.81458 14.375 9.63333 14.32 9.47916 14.217C9.32499 14.114 9.20482 13.9676 9.13387 13.7963C9.06291 13.625 9.04434 13.4365 9.08052 13.2546C9.11669 13.0727 9.20598 12.9057 9.33709 12.7746C9.4682 12.6435 9.63525 12.5542 9.81711 12.518C9.99896 12.4818 10.1875 12.5004 10.3588 12.5714C10.5301 12.6423 10.6765 12.7625 10.7795 12.9167C10.8825 13.0708 10.9375 13.2521 10.9375 13.4375C10.9375 13.6861 10.8387 13.9246 10.6629 14.1004C10.4871 14.2762 10.2486 14.375 10 14.375Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconWarningCircle = (0, import_react360.forwardRef)(function IconWarningCircle2(props, ref) {
  return (0, import_jsx_runtime220.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime220.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime220.jsx)(
          "path",
          {
            d: "M10 6.25V10.625",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime220.jsx)(
          "path",
          {
            d: "M 10 13.4 l 0.0001 0",
            vectorEffect: "non-scaling-stroke",
            strokeWidth: "3",
            strokeLinecap: "round",
            stroke: "currentColor"
          }
        )
      ]
    })
  );
});
var IconXCircleFill = (0, import_react361.forwardRef)(function IconXCircleFill2(props, ref) {
  return (0, import_jsx_runtime221.jsx)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-fill": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: (0, import_jsx_runtime221.jsx)(
        "path",
        {
          d: "M10 1.875C8.39303 1.875 6.82214 2.35152 5.486 3.24431C4.14985 4.1371 3.10844 5.40605 2.49348 6.8907C1.87852 8.37535 1.71762 10.009 2.03112 11.5851C2.34463 13.1612 3.11846 14.6089 4.25476 15.7452C5.39106 16.8815 6.8388 17.6554 8.4149 17.9689C9.99099 18.2824 11.6247 18.1215 13.1093 17.5065C14.594 16.8916 15.8629 15.8502 16.7557 14.514C17.6485 13.1779 18.125 11.607 18.125 10C18.1225 7.84588 17.2657 5.7807 15.7425 4.25751C14.2193 2.73431 12.1541 1.87749 10 1.875ZM12.9419 12.0581C13 12.1161 13.0462 12.185 13.0776 12.2609C13.1091 12.3367 13.1254 12.418 13.1254 12.5001C13.1255 12.5823 13.1093 12.6636 13.0779 12.7395C13.0465 12.8153 13.0004 12.8843 12.9424 12.9424C12.8843 13.0004 12.8154 13.0465 12.7395 13.0779C12.6636 13.1093 12.5823 13.1254 12.5001 13.1254C12.418 13.1254 12.3367 13.1091 12.2609 13.0776C12.185 13.0462 12.1161 13 12.0581 12.9419L10 10.8838L7.9419 12.9419C7.82466 13.0589 7.66577 13.1246 7.50014 13.1245C7.33451 13.1244 7.1757 13.0585 7.05858 12.9414C6.94146 12.8243 6.87563 12.6655 6.87554 12.4999C6.87545 12.3342 6.94112 12.1753 7.05811 12.0581L9.11621 10L7.05811 7.94189C6.94112 7.82465 6.87545 7.66576 6.87554 7.50014C6.87563 7.33451 6.94146 7.17569 7.05858 7.05858C7.1757 6.94146 7.33451 6.87563 7.50014 6.87554C7.66577 6.87545 7.82466 6.94111 7.9419 7.05811L10 9.11621L12.0581 7.05811C12.1754 6.94111 12.3342 6.87545 12.4999 6.87554C12.6655 6.87563 12.8243 6.94146 12.9414 7.05858C13.0585 7.17569 13.1244 7.33451 13.1245 7.50014C13.1246 7.66576 13.0589 7.82465 12.9419 7.94189L10.8838 10L12.9419 12.0581Z",
          fill: "currentColor"
        }
      )
    })
  );
});
var IconXCircle = (0, import_react362.forwardRef)(function IconXCircle2(props, ref) {
  return (0, import_jsx_runtime222.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime222.jsx)(
          "path",
          {
            d: "M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime222.jsx)(
          "path",
          {
            d: "M12.5 7.5L7.5 12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime222.jsx)(
          "path",
          {
            d: "M12.5 12.5L7.5 7.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconXSmall = (0, import_react363.forwardRef)(function IconXSmall2(props, ref) {
  return (0, import_jsx_runtime223.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon-small": true,
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime223.jsx)(
          "path",
          {
            d: "M12.5 3.5L3.5 12.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime223.jsx)(
          "path",
          {
            d: "M12.5 12.5L3.5 3.5",
            vectorEffect: "non-scaling-stroke",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        )
      ]
    })
  );
});
var IconX = (0, import_react364.forwardRef)(
  function IconX2(props, ref) {
    return (0, import_jsx_runtime224.jsxs)(
      "svg",
      __spreadProps3(__spreadValues4({
        width: "20",
        height: "20",
        viewBox: "0 0 20 20",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ref,
        "aria-hidden": true,
        focusable: false
      }, props), {
        children: [
          (0, import_jsx_runtime224.jsx)(
            "path",
            {
              d: "M15.625 4.375L4.375 15.625",
              vectorEffect: "non-scaling-stroke",
              stroke: "currentColor",
              strokeWidth: "1.5",
              strokeLinecap: "round",
              strokeLinejoin: "round"
            }
          ),
          (0, import_jsx_runtime224.jsx)(
            "path",
            {
              d: "M15.625 15.625L4.375 4.375",
              vectorEffect: "non-scaling-stroke",
              stroke: "currentColor",
              strokeWidth: "1.5",
              strokeLinecap: "round",
              strokeLinejoin: "round"
            }
          )
        ]
      })
    );
  }
);
var IconCounterClockwise = (0, import_react365.forwardRef)(function IconCounterClockwise2(props, ref) {
  return (0, import_jsx_runtime225.jsxs)(
    "svg",
    __spreadProps3(__spreadValues4({
      "data-sl-icon": true,
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ref,
      "aria-hidden": true,
      focusable: false
    }, props), {
      children: [
        (0, import_jsx_runtime225.jsx)(
          "path",
          {
            d: "M10 6.25V10L13.125 11.875",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime225.jsx)(
          "path",
          {
            d: "M5.625 8.125H2.5V5",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime225.jsx)(
          "path",
          {
            d: "M5.28125 15.0001C6.26404 15.9274 7.49832 16.5446 8.82987 16.7745C10.1614 17.0044 11.5312 16.8368 12.768 16.2927C14.0049 15.7486 15.054 14.852 15.7842 13.7151C16.5144 12.5781 16.8934 11.2512 16.8739 9.9001C16.8543 8.54899 16.437 7.23361 15.6741 6.11831C14.9112 5.00301 13.8366 4.13725 12.5845 3.6292C11.3324 3.12115 9.9583 2.99335 8.63397 3.26175C7.30964 3.53016 6.09377 4.18287 5.13828 5.13834C4.21875 6.06959 3.45937 6.94771 2.5 8.12506",
            stroke: "currentColor",
            strokeWidth: "1.5",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        (0, import_jsx_runtime225.jsx)(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M12.2779 4.32393C11.1624 3.8713 9.93823 3.75744 8.75837 3.99656C7.57929 4.23553 6.4967 4.81644 5.6457 5.66677C5.09272 6.22688 4.59816 6.76815 4.07685 7.375H5.6005C6.01471 7.375 6.3505 7.71079 6.3505 8.125C6.3505 8.53921 6.01471 8.875 5.6005 8.875H2.4755C2.26161 8.875 2.06864 8.78547 1.93201 8.64184C1.8799 8.58721 1.83744 8.52619 1.80486 8.46114C1.76409 8.37997 1.73763 8.29037 1.72878 8.19566C1.72616 8.16807 1.72506 8.14033 1.72549 8.11259V5C1.72549 4.58579 2.06128 4.25 2.4755 4.25C2.88971 4.25 3.2255 4.58579 3.2255 5V6.06757C3.66527 5.5665 4.10114 5.09611 4.58002 4.61112L4.58338 4.60776C5.64311 3.54806 6.99162 2.82414 8.46042 2.52645C9.92922 2.22877 11.4532 2.37052 12.8419 2.93399C14.2306 3.49746 15.4224 4.45766 16.2685 5.69463C17.1147 6.9316 17.5775 8.39048 17.5992 9.88898C17.6209 11.3875 17.2006 12.8592 16.3907 14.1201C15.5808 15.3811 14.4173 16.3755 13.0455 16.979C11.6737 17.5825 10.1545 17.7683 8.67769 17.5133C7.20088 17.2584 5.83195 16.5738 4.74195 15.5453C4.44069 15.261 4.42691 14.7863 4.71119 14.4851C4.99547 14.1838 5.47014 14.17 5.7714 14.4543C6.64698 15.2805 7.74661 15.8304 8.9329 16.0352C10.1192 16.24 11.3395 16.0907 12.4415 15.606C13.5434 15.1212 14.478 14.3224 15.1286 13.3095C15.7792 12.2966 16.1168 11.1144 16.0994 9.91073C16.0819 8.70701 15.7101 7.53513 15.0305 6.54149C14.3508 5.54786 13.3934 4.77655 12.2779 4.32393ZM10.75 6.25C10.75 5.83579 10.4142 5.5 10 5.5C9.58579 5.5 9.25 5.83579 9.25 6.25V10C9.25 10.2634 9.38823 10.5076 9.61413 10.6431L12.7391 12.5181C13.0943 12.7312 13.555 12.6161 13.7681 12.2609C13.9812 11.9057 13.8661 11.445 13.5109 11.2319L10.75 9.57536V6.25Z",
            fill: "currentColor"
          }
        )
      ]
    })
  );
});
var DEFAULT_SIZE = 16;
var DEFAULT_DESCRIPTION = "loading";
var Spinner = (0, import_react370.forwardRef)(
  function Spinner2(props, ref) {
    const _a2 = props, {
      size: size3 = DEFAULT_SIZE,
      description = DEFAULT_DESCRIPTION
    } = _a2, spinnerProps = __objRest3(_a2, [
      "size",
      "description"
    ]);
    return (0, import_jsx_runtime226.jsxs)(
      "div",
      __spreadProps3(__spreadValues4({
        ref,
        "data-sl-spinner": true,
        "aria-atomic": "true",
        "aria-live": "assertive"
      }, spinnerProps), {
        children: [
          (0, import_jsx_runtime226.jsx)("title", { children: description }),
          (0, import_jsx_runtime226.jsx)("svg", { viewBox: "0 0 50 50", width: size3, height: size3, children: (0, import_jsx_runtime226.jsx)("circle", { cx: 25, cy: 25, r: 20 }) })
        ]
      })
    );
  }
);
var Center = (0, import_react371.forwardRef)(
  function Center2(props, ref) {
    const _a2 = props, { asChild = false } = _a2, domProps = __objRest3(_a2, ["asChild"]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime227.jsx)(Comp, __spreadValues4({ "data-sl-center": true, ref }, domProps));
  }
);
var Button3 = (0, import_react368.forwardRef)(
  function Button22(props, ref) {
    const _a2 = props, {
      type = "button",
      size: size3 = "normal",
      variant = "secondary",
      loading = false,
      asChild = false,
      disabled = false,
      children: children3
    } = _a2, buttonProps = __objRest3(_a2, [
      "type",
      "size",
      "variant",
      "loading",
      "asChild",
      "disabled",
      "children"
    ]);
    const Comp = asChild ? Compose : Button;
    return (0, import_jsx_runtime228.jsxs)(
      Comp,
      __spreadProps3(__spreadValues4({
        ref,
        "aria-busy": loading,
        "data-sl-button": true,
        "data-variant": variant,
        "data-size": size3,
        "data-loading": loading,
        type,
        disabled: disabled || loading
      }, buttonProps), {
        children: [
          loading && (0, import_jsx_runtime228.jsx)(Center, { "data-sl-button-overlay": true, children: (0, import_jsx_runtime228.jsx)(Spinner, {}) }),
          (0, import_jsx_runtime228.jsx)(
            Composable,
            {
              render: (node) => (0, import_jsx_runtime228.jsx)("span", { "data-sl-button-content": true, children: spanizeString(node) }),
              children: asChild ? children3 : spanizeString(children3)
            }
          )
        ]
      })
    );
  }
);
function spanizeString(children3) {
  return import_react368.Children.map(children3, (child) => {
    if (typeof child === "string") {
      return (0, import_jsx_runtime228.jsx)("span", { children: child });
    }
    return child;
  });
}
var IconButton = (0, import_react367.forwardRef)(
  function IconButton2(props, ref) {
    const _a2 = props, { label, children: children3, asChild } = _a2, buttonProps = __objRest3(_a2, ["label", "children", "asChild"]);
    return (0, import_jsx_runtime229.jsx)(Button3, __spreadProps3(__spreadValues4({ ref, "data-sl-icon-button": true, asChild }, buttonProps), { children: asChild ? children3 : (0, import_jsx_runtime229.jsx)(AccessibleIcon, { label, children: children3 }) }));
  }
);
var Alert = (0, import_react366.forwardRef)(
  function Alert2(props, ref) {
    const _a2 = props, {
      variant = "informational",
      children: children3,
      onDismiss
    } = _a2, otherProps = __objRest3(_a2, [
      "variant",
      "children",
      "onDismiss"
    ]);
    const icon = getIcon(variant);
    return (0, import_jsx_runtime230.jsxs)("div", __spreadProps3(__spreadValues4({ "data-sl-alert": true, "data-variant": variant, ref }, otherProps), { children: [
      (0, import_jsx_runtime230.jsx)("div", { "data-sl-alert-icon-container": true, children: icon }),
      (0, import_jsx_runtime230.jsx)("div", { "data-sl-alert-container": true, children: children3 }),
      (0, import_jsx_runtime230.jsx)("div", { "data-sl-alert-dismiss-container": true, children: onDismiss && (0, import_jsx_runtime230.jsx)(IconButton, { onClick: onDismiss, label: "dismiss", variant: "tertiary", children: (0, import_jsx_runtime230.jsx)(IconX, {}) }) })
    ] }));
  }
);
function getIcon(variant = "informational") {
  switch (variant) {
    case "informational": {
      return (0, import_jsx_runtime230.jsx)(IconInfoFill, {});
    }
    case "success": {
      return (0, import_jsx_runtime230.jsx)(IconCheckCircleFill, {});
    }
    case "critical": {
      return (0, import_jsx_runtime230.jsx)(IconXCircleFill, {});
    }
    case "warning": {
      return (0, import_jsx_runtime230.jsx)(IconWarningCircleFill, {});
    }
  }
}
var Bleed = (0, import_react372.forwardRef)(
  function Bleed2(props, ref) {
    const _a2 = props, {
      top = "$space-0",
      bottom = "$space-0",
      start = "$space-0",
      end = "$space-0",
      children: children3
    } = _a2, restProps = __objRest3(_a2, [
      "top",
      "bottom",
      "start",
      "end",
      "children"
    ]);
    return (0, import_jsx_runtime231.jsx)("div", __spreadProps3(__spreadValues4({ "data-sl-bleed": true, ref }, restProps), { children: (0, import_jsx_runtime231.jsx)(
      "div",
      {
        "data-sl-bleed-content": true,
        style: style({
          "--sl-bleed-top": top,
          "--sl-bleed-bottom": bottom,
          "--sl-bleed-start": start,
          "--sl-bleed-end": end
        }),
        children: children3
      }
    ) }));
  }
);
var Text = (0, import_react374.forwardRef)(function Text2(props, ref) {
  const _a2 = props, {
    children: children3,
    variant = "context",
    color = "inherit",
    style: styleObject = {}
  } = _a2, otherProps = __objRest3(_a2, [
    "children",
    "variant",
    "color",
    "style"
  ]);
  const Element2 = props.as || "span";
  return (0, import_jsx_runtime232.jsx)(
    Element2,
    __spreadProps3(__spreadValues4({
      "data-sl-text": true,
      ref,
      "data-variant": variant,
      style: style(__spreadValues4({
        "--sl-text-color": color
      }, styleObject))
    }, otherProps), {
      children: children3
    })
  );
});
var Checkbox3 = (0, import_react373.forwardRef)(
  function Checkbox22(props, forwardedRef) {
    const {
      inputProps,
      inputRef,
      isChecked,
      isIndeterminate,
      isFocusVisible,
      isDisabled
    } = useCheckbox3(props);
    return (0, import_jsx_runtime233.jsxs)("label", { "data-sl-checkbox": true, children: [
      (0, import_jsx_runtime233.jsx)(VisuallyHidden3, { children: (0, import_jsx_runtime233.jsx)(
        "input",
        __spreadProps3(__spreadValues4({}, inputProps), {
          type: "checkbox",
          ref: useMergeRef(inputRef, forwardedRef)
        })
      ) }),
      (0, import_jsx_runtime233.jsxs)(
        "div",
        {
          "data-sl-checkbox-input": true,
          "data-checked": isChecked,
          "data-indeterminate": isIndeterminate,
          "data-disabled": isDisabled,
          "data-focus-visible": isFocusVisible,
          "aria-hidden": "true",
          children: [
            isIndeterminate && (0, import_jsx_runtime233.jsx)(IconMinusSmall, { "data-sl-checkbox-check-mixed": true }),
            isChecked && (0, import_jsx_runtime233.jsx)(IconCheckSmall, { "data-sl-checkbox-check": true })
          ]
        }
      ),
      props.children ? (0, import_jsx_runtime233.jsx)(
        Text,
        {
          variant: "body",
          "data-sl-checkbox-label": true,
          "data-disabled": isDisabled,
          children: props.children
        }
      ) : null
    ] });
  }
);
function useCheckbox3(props) {
  var _b;
  const _a2 = props, {
    id: defaultId,
    indeterminate = false,
    disabled,
    checked,
    defaultChecked,
    required,
    onFocus,
    onBlur,
    onChange
  } = _a2, rest = __objRest3(_a2, [
    "id",
    "indeterminate",
    "disabled",
    "checked",
    "defaultChecked",
    "required",
    "onFocus",
    "onBlur",
    "onChange"
  ]);
  const typeUnsafe = {
    onFocus,
    onBlur
  };
  const { isFocusVisible, focusProps } = $f7dceffc5ad7768b$export$4e328f61c538687f();
  const id = useId2(defaultId);
  const inputRef = (0, import_react373.useRef)(null);
  const state = $3017fa7ffdddec74$export$8042c6c013fd5226(__spreadValues4(__spreadValues4({
    isSelected: checked,
    defaultSelected: defaultChecked,
    isDisabled: disabled,
    isRequired: required,
    onChange: (checked2) => onChange == null ? void 0 : onChange({
      target: {
        value: checked2,
        checked: checked2
      }
    })
  }, typeUnsafe), rest));
  const { inputProps } = $406796ff087fe49b$export$e375f10ce42261c5(
    __spreadValues4(__spreadValues4({
      id,
      isIndeterminate: indeterminate,
      isDisabled: disabled
    }, typeUnsafe), rest),
    state,
    inputRef
  );
  const isChecked = (0, import_react373.useMemo)(
    () => state.isSelected && !indeterminate,
    [state.isSelected, indeterminate]
  );
  return {
    inputRef,
    isChecked,
    isFocusVisible,
    isIndeterminate: indeterminate,
    isDisabled: (_b = inputProps.disabled) != null ? _b : false,
    inputProps: mergeProps2(inputProps, focusProps)
  };
}
var FieldContext = (0, import_react376.createContext)(
  new Store({
    id: "",
    error: false
  })
);
function useFieldContext() {
  const context = (0, import_react376.useContext)(FieldContext);
  return context;
}
function FieldProvider(props) {
  const { children: children3, store } = props;
  return (0, import_jsx_runtime234.jsx)(FieldContext.Provider, { value: store, children: children3 });
}
var Field = forwardRef22(
  function Field2(props, ref) {
    const _a2 = props, {
      id: defaultId,
      error = false,
      children: children3,
      asChild = false,
      space = "normal"
    } = _a2, otherProps = __objRest3(_a2, [
      "id",
      "error",
      "children",
      "asChild",
      "space"
    ]);
    const id = useId2(defaultId);
    const Comp = asChild ? Compose : "div";
    const store = React35.useMemo(
      () => new Store({
        id,
        error
      }),
      [error, id]
    );
    return (0, import_jsx_runtime235.jsx)(
      Comp,
      __spreadProps3(__spreadValues4({
        "data-sl-field": true,
        id: `${id}-field`,
        ref,
        "data-space": space
      }, otherProps), {
        children: (0, import_jsx_runtime235.jsx)(FieldProvider, { store, children: (0, import_jsx_runtime235.jsx)(Composable, { children: children3 }) })
      })
    );
  }
);
var FieldDescription = (0, import_react377.forwardRef)(function FieldDescription2(props, ref) {
  const _a2 = props, { asChild = false, children: children3, id: defaultId } = _a2, domProps = __objRest3(_a2, ["asChild", "children", "id"]);
  const Comp = asChild ? Compose : "div";
  return (0, import_jsx_runtime236.jsx)(Comp, __spreadProps3(__spreadValues4({ "data-sl-field-description": true, ref }, domProps), { children: children3 }));
});
var FieldError = (0, import_react378.forwardRef)(
  function FieldError2(props, ref) {
    const _a2 = props, { asChild = false, children: children3, id: defaultId } = _a2, domProps = __objRest3(_a2, ["asChild", "children", "id"]);
    const Comp = asChild ? Compose : "div";
    const store = useFieldContext();
    const error = useStore2(store, (s) => s.error);
    if (!error) {
      return (0, import_jsx_runtime237.jsx)(import_jsx_runtime237.Fragment, {});
    }
    return (0, import_jsx_runtime237.jsx)(Comp, __spreadProps3(__spreadValues4({ role: "alert", "data-sl-field-error": true, ref }, domProps), { children: children3 }));
  }
);
var FieldCharCounter = (0, import_react379.forwardRef)(function FieldCharCounter2(props, ref) {
  const _a2 = props, { count: count3, limit } = _a2, domProps = __objRest3(_a2, ["count", "limit"]);
  return (0, import_jsx_runtime238.jsxs)("div", __spreadProps3(__spreadValues4({ "data-sl-field-char-counter": true, ref }, domProps), { children: [
    count3,
    " / ",
    limit
  ] }));
});
var Stack = (0, import_react380.forwardRef)(
  function Stack2(props, ref) {
    const _a2 = props, {
      asChild = false,
      horizontal = false,
      space = "$space-gap",
      fluid = false,
      align = "start",
      style: styleObject = {}
    } = _a2, restProps = __objRest3(_a2, [
      "asChild",
      "horizontal",
      "space",
      "fluid",
      "align",
      "style"
    ]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime239.jsx)(
      Comp,
      __spreadValues4({
        "data-sl-stack": true,
        ref,
        "data-horizontal": horizontal,
        "data-fluid": fluid,
        style: style(__spreadValues4({
          "--sl-stack-space": space,
          "--sl-stack-align": align
        }, styleObject))
      }, restProps)
    );
  }
);
var bg_default = {
  optional: "(optional)"
};
var de_default = {
  optional: "(optional)"
};
var en_default = {
  optional: "(optional)"
};
var es_default = {
  optional: "(optional)"
};
var fr_default = {
  optional: "(optional)"
};
var it_default = {
  optional: "(optional)"
};
var ja_default = {
  optional: "(オプション)"
};
var ko_default = {
  optional: "(optional)"
};
var nl_default = {
  optional: "(optional)"
};
var pt_default = {
  optional: "(optional)"
};
var ro_default = {
  optional: "(optional)"
};
var th_default = {
  optional: "(optional)"
};
var messages = {
  "en-US": en_default,
  "es-AR": es_default,
  "fr-FR": fr_default,
  "pt-BR": pt_default,
  "ja-JP": ja_default,
  "ko-KR": ko_default,
  "it-IT": it_default,
  "nl-NL": nl_default,
  "ro-RO": ro_default,
  "bg-BG": bg_default,
  "th-TH": th_default,
  "de-DE": de_default
};
var useMessage = createMessageHook(messages);
var Label = (0, import_react381.forwardRef)(
  function Label2(props, ref) {
    const _a2 = props, {
      asChild = false,
      optional = false,
      children: children3,
      id: defaultId
    } = _a2, domProps = __objRest3(_a2, [
      "asChild",
      "optional",
      "children",
      "id"
    ]);
    const Comp = asChild ? Compose : "label";
    const getMessage = useMessage();
    const store = useFieldContext();
    const id = useStore2(store, (s) => s.id);
    return (0, import_jsx_runtime240.jsxs)(Comp, __spreadProps3(__spreadValues4({ "data-sl-label": true, ref, htmlFor: defaultId || id }, domProps), { children: [
      (0, import_jsx_runtime240.jsx)(Composable, { children: children3 }),
      optional && (0, import_jsx_runtime240.jsx)("span", { "data-sl-label-optional-flag": true, children: getMessage("optional") })
    ] }));
  }
);
var CheckboxGroup = (0, import_react375.forwardRef)(
  function CheckboxGroup2(props, ref) {
    const _a2 = props, {
      error,
      description,
      errorText,
      label,
      children: children3,
      className,
      horizontal = false,
      id: defaultId
    } = _a2, otherProps = __objRest3(_a2, [
      "error",
      "description",
      "errorText",
      "label",
      "children",
      "className",
      "horizontal",
      "id"
    ]);
    const id = useId2(defaultId);
    return (0, import_jsx_runtime241.jsxs)(
      Field,
      __spreadProps3(__spreadValues4({
        "data-sl-checkbox-group": true,
        className,
        ref,
        error,
        space: "large"
      }, otherProps), {
        children: [
          (0, import_jsx_runtime241.jsx)(Label, { htmlFor: id, children: label }),
          (0, import_jsx_runtime241.jsx)(
            Stack,
            {
              horizontal,
              space: horizontal ? "$space-5" : "$space-4",
              children: children3
            }
          ),
          description && (0, import_jsx_runtime241.jsx)(FieldDescription, { children: description }),
          (0, import_jsx_runtime241.jsx)(FieldError, { children: errorText })
        ]
      })
    );
  }
);
var Collection3 = (0, import_react382.forwardRef)(
  function Collection22(props, ref) {
    const _a2 = props, { children: children3 } = _a2, otherProps = __objRest3(_a2, ["children"]);
    return (0, import_jsx_runtime242.jsx)("div", __spreadProps3(__spreadValues4({ "data-sl-collection": true, ref }, otherProps), { children: children3 }));
  }
);
var EmptyState = (0, import_react384.forwardRef)(
  function EmptyState2(props, ref) {
    const _a2 = props, { size: size3 = "medium", children: children3 } = _a2, otherProps = __objRest3(_a2, ["size", "children"]);
    return (0, import_jsx_runtime243.jsx)("div", __spreadProps3(__spreadValues4({ "data-sl-empty-state": true, "data-sl-size": size3, ref }, otherProps), { children: (0, import_jsx_runtime243.jsx)("div", { "data-sl-empty-state-container": true, children: children3 }) }));
  }
);
var EmptyStateActions = forwardRef22(function EmptyStateActions2(props, ref) {
  const _a2 = props, { asChild = false } = _a2, otherProps = __objRest3(_a2, ["asChild"]);
  const Comp = asChild ? Compose : "div";
  return (0, import_jsx_runtime244.jsx)(Comp, __spreadValues4({ "data-sl-empty-state-actions": true, ref }, otherProps));
});
var EmptyStateIllustration = forwardRef22(function EmptyStateIllustration2(props, ref) {
  const _a2 = props, { asChild = false } = _a2, otherProps = __objRest3(_a2, ["asChild"]);
  const Comp = asChild ? Compose : "div";
  return (0, import_jsx_runtime245.jsx)(Comp, __spreadValues4({ "data-sl-empty-state-illustration": true, ref }, otherProps));
});
var Heading3 = (0, import_react385.forwardRef)(
  function Heading22(props, ref) {
    const _a2 = props, {
      asChild = false,
      level = 3,
      variant = "context"
    } = _a2, otherProps = __objRest3(_a2, [
      "asChild",
      "level",
      "variant"
    ]);
    const Comp = asChild ? Compose : `h${level}`;
    return (0, import_jsx_runtime246.jsx)(Comp, __spreadValues4({ "data-sl-heading": true, "data-variant": variant, ref }, otherProps));
  }
);
var Skeleton = (0, import_react386.forwardRef)(
  function Skeleton2(props, ref) {
    const _a2 = props, {
      shape = "rect",
      width = "100%",
      height = "100%",
      style: styleObject = {}
    } = _a2, otherProps = __objRest3(_a2, [
      "shape",
      "width",
      "height",
      "style"
    ]);
    return (0, import_jsx_runtime247.jsx)(
      "div",
      __spreadValues4({
        "data-sl-skeleton": true,
        "data-sl-skeleton-shape": shape,
        ref,
        style: style(__spreadValues4({
          "--sl-skeleton-width": width,
          "--sl-skeleton-height": height
        }, styleObject))
      }, otherProps)
    );
  }
);
var bg_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var de_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var en_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var es_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var fr_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var it_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var ja_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var ko_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var nl_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var pt_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var ro_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var th_default2 = {
  "not-found-heading": "No results found",
  "not-found-description": "Try using different terms or filters.",
  "empty-heading": "No items yet",
  "empty-description": "Create an item to start selling.",
  "empty-action": "Create item",
  "error-heading": "Something went wrong",
  "error-action": "Try again",
  "unauthorized-heading": "Unauthorized access",
  "unauthorized-description": "User profile does not have access to the filtered content. Please contact support."
};
var messages2 = {
  "en-US": en_default2,
  "es-AR": es_default2,
  "fr-FR": fr_default2,
  "pt-BR": pt_default2,
  "ja-JP": ja_default2,
  "ko-KR": ko_default2,
  "it-IT": it_default2,
  "nl-NL": nl_default2,
  "ro-RO": ro_default2,
  "bg-BG": bg_default2,
  "th-TH": th_default2,
  "de-DE": de_default2
};
var useMessage2 = createMessageHook(messages2);
var CollectionView = (0, import_react383.forwardRef)(
  function CollectionMessage(props, ref) {
    const _a2 = props, { status, children: children3, onError, onEmpty, messages: messages8 } = _a2, otherProps = __objRest3(_a2, ["status", "children", "onError", "onEmpty", "messages"]);
    const getMessage = useMessage2(messages8);
    if (status === "loading") {
      return (0, import_jsx_runtime248.jsx)("div", { "data-sl-collection-view-skeleton": true, children: (0, import_jsx_runtime248.jsx)(Skeleton, __spreadValues4({}, otherProps)) });
    }
    if (status === "ready") {
      return (0, import_jsx_runtime248.jsx)(
        "div",
        __spreadProps3(__spreadValues4({
          "data-sl-collection-view": true,
          "data-sl-collection-view-ready": true,
          ref
        }, otherProps), {
          children: children3
        })
      );
    }
    const handleActionByStatus = {
      error: onError,
      empty: onEmpty
    };
    const handleAction = handleActionByStatus[status];
    const heading = getMessage(`${status}-heading`);
    const description = getMessage(`${status}-description`);
    const action = handleAction && getMessage(`${status}-action`);
    const actionVariant = status === "empty" ? "primary" : "secondary";
    return (0, import_jsx_runtime248.jsx)("div", __spreadProps3(__spreadValues4({ "data-sl-collection-view": true, ref }, otherProps), { children: (0, import_jsx_runtime248.jsxs)(EmptyState, { size: "large", children: [
      (0, import_jsx_runtime248.jsx)(EmptyStateIllustration, { "data-sl-collection-view-illustration": true, children: getIcon2(status) }),
      (0, import_jsx_runtime248.jsx)(Heading3, { "data-sl-collection-view-heading": true, children: heading }),
      description && (0, import_jsx_runtime248.jsx)(Text, { "data-sl-collection-view-description": true, children: description }),
      action && (0, import_jsx_runtime248.jsx)(EmptyStateActions, { children: (0, import_jsx_runtime248.jsxs)(
        Button3,
        {
          "data-sl-collection-view-action": true,
          onClick: handleAction,
          variant: actionVariant,
          children: [
            status === "empty" && (0, import_jsx_runtime248.jsx)(IconPlus, {}),
            action
          ]
        }
      ) })
    ] }) }));
  }
);
function getIcon2(status) {
  switch (status) {
    case "error":
      return (0, import_jsx_runtime248.jsx)(IconWarningCircle, { color: "var(--sl-color-red-8)" });
    case "empty":
      return (0, import_jsx_runtime248.jsx)(IconPlusCircle, { color: "var(--sl-color-gray-8)" });
    case "not-found":
      return (0, import_jsx_runtime248.jsx)(IconMagnifyingGlass, { color: "var(--sl-color-gray-8)" });
    default:
      return (0, import_jsx_runtime248.jsx)(IconProhibit, { color: "var(--sl-color-gray-8)" });
  }
}
var CollectionRow = forwardRef22(
  function CollectionRow2(props, ref) {
    const _a2 = props, {
      asChild = false,
      style: styleProp,
      gap = "$space-2",
      align = "center",
      justify = "space-between",
      direction = "row"
    } = _a2, otherProps = __objRest3(_a2, [
      "asChild",
      "style",
      "gap",
      "align",
      "justify",
      "direction"
    ]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime249.jsx)(
      Comp,
      __spreadValues4({
        "data-sl-collection-row": true,
        style: style(__spreadValues4({
          "--gap": gap,
          "--align": align,
          "--justify": justify,
          "--direction": direction
        }, styleProp)),
        ref
      }, otherProps)
    );
  }
);
var Container = (0, import_react390.forwardRef)(
  function Container2(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime250.jsx)(Comp, __spreadProps3(__spreadValues4({ "data-sl-container": true, ref }, otherProps), { children: children3 }));
  }
);
var Content3 = (0, import_react391.forwardRef)(
  function Content22(props, ref) {
    const _a2 = props, { asChild = false, narrow = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "narrow", "children"]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime251.jsx)(Comp, __spreadProps3(__spreadValues4({ "data-sl-content": true, "data-narrow": narrow, ref }, otherProps), { children: children3 }));
  }
);
var Modal = (0, import_react388.forwardRef)(
  function Modal2(props, ref) {
    const _a2 = props, {
      children: children3,
      portal = true,
      size: size3 = "medium",
      style: styleOverride
    } = _a2, otherProps = __objRest3(_a2, [
      "children",
      "portal",
      "size",
      "style"
    ]);
    return (0, import_jsx_runtime252.jsx)(
      Dialog,
      __spreadProps3(__spreadValues4({
        "data-sl-modal": true,
        ref,
        backdrop: (0, import_jsx_runtime252.jsx)("div", { "data-sl-modal-backdrop": true }),
        portal,
        "data-size": size3,
        style: style(__spreadValues4({ zIndex: "var(--sl-z-4)" }, styleOverride))
      }, otherProps), {
        children: (0, import_jsx_runtime252.jsx)(Container, { "data-sl-modal-container": true, children: children3 })
      })
    );
  }
);
var Flex = (0, import_react393.forwardRef)(
  function Flex2(props, ref) {
    const _a2 = props, {
      asChild = false,
      inline: inline2 = false,
      order = 0,
      direction = "row",
      grow = 0,
      wrap = "nowrap",
      shrink = 1,
      basis = "auto",
      justify = "flex-start",
      align = "stretch",
      gap = "$space-gap",
      style: styleObject = {}
    } = _a2, domProps = __objRest3(_a2, [
      "asChild",
      "inline",
      "order",
      "direction",
      "grow",
      "wrap",
      "shrink",
      "basis",
      "justify",
      "align",
      "gap",
      "style"
    ]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime253.jsx)(
      Comp,
      __spreadValues4({
        "data-sl-flex": true,
        ref,
        "data-inline": inline2,
        style: style(__spreadValues4({
          "--sl-flex-order": order,
          "--sl-flex-direction": direction,
          "--sl-flex-grow": grow,
          "--sl-flex-wrap": wrap,
          "--sl-flex-shrink": shrink,
          "--sl-flex-basis": basis,
          "--sl-flex-justify": justify,
          "--sl-flex-align": align,
          "--sl-flex-gap": cssVar({ token: String(gap) })
        }, styleObject))
      }, domProps)
    );
  }
);
var ModalHeader = (0, import_react392.forwardRef)(
  function ModalHeader2(props, ref) {
    const _a2 = props, { children: children3 } = _a2, otherProps = __objRest3(_a2, ["children"]);
    return (0, import_jsx_runtime254.jsx)(Content3, __spreadProps3(__spreadValues4({ asChild: true, "data-sl-modal-header": true, narrow: true, ref }, otherProps), { children: (0, import_jsx_runtime254.jsx)("header", { children: (0, import_jsx_runtime254.jsx)(Flex, { justify: "space-between", align: "center", children: children3 }) }) }));
  }
);
var ModalContent = (0, import_react394.forwardRef)(
  function ModalContent2(props, ref) {
    const _a2 = props, { children: children3 } = _a2, otherProps = __objRest3(_a2, ["children"]);
    return (0, import_jsx_runtime255.jsx)(Content3, __spreadProps3(__spreadValues4({ "data-sl-modal-content": true, ref }, otherProps), { children: children3 }));
  }
);
var ModalFooter = (0, import_react395.forwardRef)(
  function ModalFooter2(props, ref) {
    const _a2 = props, { children: children3 } = _a2, otherProps = __objRest3(_a2, ["children"]);
    return (0, import_jsx_runtime256.jsx)(Content3, __spreadProps3(__spreadValues4({ "data-sl-modal-footer": true, narrow: true, ref }, otherProps), { children: children3 }));
  }
);
var ModalHeading = (0, import_react396.forwardRef)(
  function ModalHeading2(props, ref) {
    const _a2 = props, { children: children3, variant = "display2" } = _a2, otherProps = __objRest3(_a2, ["children", "variant"]);
    return (0, import_jsx_runtime257.jsx)(Heading3, __spreadProps3(__spreadValues4({ asChild: true, ref, variant }, otherProps), { children: (0, import_jsx_runtime257.jsx)(DialogHeading, { "data-sl-modal-title": true, children: children3 }) }));
  }
);
var ModalDismiss = (0, import_react398.forwardRef)(
  function ModalDismiss2(props, ref) {
    const _a2 = props, { children: children3, size: size3 = "large" } = _a2, otherProps = __objRest3(_a2, ["children", "size"]);
    return (0, import_jsx_runtime258.jsx)(
      IconButton,
      __spreadProps3(__spreadValues4({
        "data-sl-modal-dismiss": true,
        variant: "tertiary",
        label: "close",
        asChild: true,
        size: size3
      }, otherProps), {
        ref,
        children: (0, import_jsx_runtime258.jsx)(DialogDismiss, { children: (0, import_jsx_runtime258.jsx)(IconX, {}) })
      })
    );
  }
);
var bg_default3 = {
  title: "Потвърди действие",
  confirm: "Потвърди",
  cancel: "Отказ"
};
var de_default3 = {
  title: "Aktion bestätigen",
  confirm: "Bestätigen",
  cancel: "Abbrechen"
};
var en_default3 = {
  title: "Confirm action",
  confirm: "Confirm",
  cancel: "Cancel"
};
var es_default3 = {
  title: "Confirmar acción",
  confirm: "Confirmar",
  cancel: "Cancelar"
};
var fr_default3 = {
  title: "Confirmer l'action",
  confirm: "Confirmer",
  cancel: "Annuler"
};
var it_default3 = {
  title: "Conferma azione",
  confirm: "Conferma",
  cancel: "Annulla"
};
var ja_default3 = {
  title: "アクションを確認",
  confirm: "確認",
  cancel: "キャンセル"
};
var ko_default3 = {
  title: "동작 확인",
  confirm: "확인",
  cancel: "취소"
};
var nl_default3 = {
  title: "Actie bevestigen",
  confirm: "Bevestigen",
  cancel: "Annuleren"
};
var pt_default3 = {
  title: "Confirmar ação",
  confirm: "Confirmar",
  cancel: "Cancelar"
};
var ro_default3 = {
  title: "Confirmați acțiunea",
  confirm: "Confirmați",
  cancel: "Anulați"
};
var th_default3 = {
  title: "ยืนยันการดำเนินการ",
  confirm: "ยืนยัน",
  cancel: "ยกเลิก"
};
var messages3 = {
  "en-US": en_default3,
  "es-AR": es_default3,
  "fr-FR": fr_default3,
  "pt-BR": pt_default3,
  "ja-JP": ja_default3,
  "ko-KR": ko_default3,
  "it-IT": it_default3,
  "nl-NL": nl_default3,
  "ro-RO": ro_default3,
  "bg-BG": bg_default3,
  "th-TH": th_default3,
  "de-DE": de_default3
};
var useMessage3 = createMessageHook(messages3);
var ConfirmationModal = (0, import_react387.forwardRef)(function ConfirmationModal2(props, ref) {
  const _a2 = props, {
    children: children3,
    open,
    onClose,
    onConfirm,
    onCancel,
    locale = "en-US",
    messages: messages8,
    disabled = false,
    critical = false
  } = _a2, otherProps = __objRest3(_a2, [
    "children",
    "open",
    "onClose",
    "onConfirm",
    "onCancel",
    "locale",
    "messages",
    "disabled",
    "critical"
  ]);
  const getMessage = useMessage3(messages8);
  const title = getMessage("title");
  const cancel = getMessage("cancel");
  const confirm = getMessage("confirm");
  return (0, import_jsx_runtime259.jsxs)(
    Modal,
    __spreadProps3(__spreadValues4({
      "data-sl-confirmation-modal": true,
      open,
      onClose,
      ref
    }, otherProps), {
      size: "small",
      children: [
        title ? (0, import_jsx_runtime259.jsxs)(ModalHeader, { children: [
          (0, import_jsx_runtime259.jsx)(ModalHeading, { children: title }),
          (0, import_jsx_runtime259.jsx)(ModalDismiss, {})
        ] }) : null,
        (0, import_jsx_runtime259.jsx)(ModalContent, { children: children3 }),
        (0, import_jsx_runtime259.jsxs)(ModalFooter, { "data-sl-confirmation-modal-footer": true, children: [
          (0, import_jsx_runtime259.jsx)(Button3, { onClick: onCancel, size: "large", "aria-label": cancel, children: cancel }),
          (0, import_jsx_runtime259.jsx)(
            Button3,
            {
              onClick: onConfirm,
              size: "large",
              variant: critical ? "critical" : "primary",
              "aria-label": confirm,
              disabled,
              children: confirm
            }
          )
        ] })
      ]
    })
  );
});
var Popover22 = (0, import_react401.forwardRef)(
  function Popover3(props, ref) {
    const _a2 = props, { children: children3, asChild = false, portal = true } = _a2, otherProps = __objRest3(_a2, ["children", "asChild", "portal"]);
    return (0, import_jsx_runtime260.jsx)(
      Popover,
      __spreadProps3(__spreadValues4({
        "data-sl-popover": true,
        ref,
        render: asChild && children3,
        portal,
        gutter: 4
      }, otherProps), {
        children: children3
      })
    );
  }
);
var PopoverTrigger = (0, import_react404.forwardRef)(function PopoverTrigger2(props, ref) {
  const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
  return (0, import_jsx_runtime261.jsx)(
    PopoverDisclosure,
    __spreadProps3(__spreadValues4({
      "data-sl-popover-trigger": true,
      ref,
      render: asChild && children3
    }, otherProps), {
      children: children3
    })
  );
});
var PopoverDismiss3 = (0, import_react406.forwardRef)(function PopoverDismiss22(props, ref) {
  const _a2 = props, { children: children3, asChild = false } = _a2, otherProps = __objRest3(_a2, ["children", "asChild"]);
  return (0, import_jsx_runtime262.jsx)(
    PopoverDismiss,
    __spreadProps3(__spreadValues4({
      "data-sl-popover-dismiss": true,
      ref,
      render: asChild && children3
    }, otherProps), {
      children: children3
    })
  );
});
var ContextualHelp = (0, import_react400.forwardRef)(
  function ContextualHelp2(props, ref) {
    const _a2 = props, {
      children: children3,
      className,
      label,
      open,
      setOpen,
      defaultOpen,
      store,
      placement,
      narrow = false
    } = _a2, otherProps = __objRest3(_a2, [
      "children",
      "className",
      "label",
      "open",
      "setOpen",
      "defaultOpen",
      "store",
      "placement",
      "narrow"
    ]);
    return (0, import_jsx_runtime263.jsx)("div", { "data-sl-contextual-help": true, className, children: (0, import_jsx_runtime263.jsxs)(
      PopoverProvider,
      {
        open,
        setOpen,
        defaultOpen,
        store,
        placement,
        children: [
          (0, import_jsx_runtime263.jsx)(PopoverTrigger, { asChild: true, children: (0, import_jsx_runtime263.jsx)(IconButton, { "data-sl-contextual-help-trigger": true, label, children: (0, import_jsx_runtime263.jsx)("div", { "data-sl-contextual-help-trigger-bg": true, children: "?" }) }) }),
          (0, import_jsx_runtime263.jsx)(
            Popover22,
            __spreadProps3(__spreadValues4({
              "data-sl-contextual-help-popover": true,
              ref
            }, otherProps), {
              asChild: true,
              children: (0, import_jsx_runtime263.jsx)(Container, { children: (0, import_jsx_runtime263.jsx)(Content3, { narrow, children: children3 }) })
            })
          )
        ]
      }
    ) });
  }
);
var Divider = forwardRef22(
  function Divider2(props, ref) {
    const _a2 = props, { orientation = "horizontal" } = _a2, otherProps = __objRest3(_a2, ["orientation"]);
    return (0, import_jsx_runtime264.jsx)(
      Separator,
      __spreadValues4({
        "data-sl-divider": true,
        "data-orientation": orientation,
        orientation,
        ref
      }, otherProps)
    );
  }
);
var DrawerContent = (0, import_react409.forwardRef)(
  function DrawerContent2(props, ref) {
    const _a2 = props, { children: children3 } = _a2, rest = __objRest3(_a2, ["children"]);
    return (0, import_jsx_runtime265.jsx)(Content3, __spreadProps3(__spreadValues4({ "data-sl-drawer-content": true, narrow: true, ref }, rest), { children: children3 }));
  }
);
var DrawerDismiss = (0, import_react410.forwardRef)(
  function DrawerDismiss2(props, ref) {
    const _a2 = props, { children: children3, label = "Close" } = _a2, otherProps = __objRest3(_a2, ["children", "label"]);
    return (0, import_jsx_runtime266.jsx)(
      IconButton,
      __spreadProps3(__spreadValues4({
        "data-sl-modal-dismiss": true,
        variant: "tertiary",
        asChild: true,
        size: "large",
        ref,
        label
      }, otherProps), {
        children: (0, import_jsx_runtime266.jsx)(Drawer.Close, { children: (0, import_jsx_runtime266.jsx)(IconX, {}) })
      })
    );
  }
);
var DrawerFooter = (0, import_react411.forwardRef)(
  function DrawerFooter2(props, ref) {
    return (0, import_jsx_runtime267.jsx)(Content3, { "data-sl-drawer-footer": true, narrow: true, asChild: true, children: (0, import_jsx_runtime267.jsx)("footer", __spreadValues4({ ref }, props)) });
  }
);
var DrawerHeader = (0, import_react412.forwardRef)(
  function DrawerHeader2(props, ref) {
    return (0, import_jsx_runtime268.jsx)(Content3, { narrow: true, asChild: true, children: (0, import_jsx_runtime268.jsx)("header", __spreadValues4({ "data-sl-drawer-header": true, ref }, props)) });
  }
);
var DrawerHeading = (0, import_react413.forwardRef)(
  function DrawerHeading2(props, ref) {
    const _a2 = props, { children: children3 } = _a2, rest = __objRest3(_a2, ["children"]);
    return (0, import_jsx_runtime269.jsx)(Heading3, __spreadProps3(__spreadValues4({ variant: "display2" }, rest), { ref, asChild: true, children: (0, import_jsx_runtime269.jsx)(Drawer.Title, { "data-sl-drawer-heading": true, children: children3 }) }));
  }
);
var DrawerPopover = (0, import_react414.forwardRef)(
  function DrawerPopover2(props, ref) {
    const _a2 = props, { children: children3, size: size3 = "medium", style: style11 } = _a2, rest = __objRest3(_a2, ["children", "size", "style"]);
    return (0, import_jsx_runtime270.jsx)(Drawer.Portal, { children: (0, import_jsx_runtime270.jsx)(
      Drawer.Content,
      {
        "data-vaul-no-drag": true,
        "data-size": size3,
        "data-sl-drawer-popover": true,
        ref,
        asChild: true,
        style: __spreadValues4({
          /**
           * Vaul disables user selection by default.
           * On Shoreline, the text selection is a desired feature.
           */
          userSelect: "text"
        }, style11),
        children: (0, import_jsx_runtime270.jsx)(Container, __spreadProps3(__spreadValues4({}, rest), { children: children3 }))
      }
    ) });
  }
);
function DrawerProvider(props) {
  const { children: children3, open, onClose, onOpenChange, dismissible } = props;
  return (0, import_jsx_runtime271.jsx)(
    Drawer.Root,
    {
      open,
      onClose,
      onOpenChange,
      shouldScaleBackground: false,
      dismissible,
      modal: false,
      direction: "right",
      children: children3
    }
  );
}
var DrawerTrigger = Drawer.Trigger;
var SelectPopover3 = (0, import_react419.forwardRef)(
  function SelectPopover22(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    return (0, import_jsx_runtime272.jsx)(
      SelectPopover,
      __spreadProps3(__spreadValues4({
        "data-sl-select-popover": true,
        ref,
        render: asChild ? children3 : void 0
      }, otherProps), {
        children: children3
      })
    );
  }
);
var SelectTrigger = (0, import_react421.forwardRef)(
  function SelectTrigger2(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    return (0, import_jsx_runtime273.jsx)(
      Select,
      __spreadProps3(__spreadValues4({
        "data-sl-select": true,
        ref,
        render: asChild ? children3 : void 0
      }, otherProps), {
        children: children3
      })
    );
  }
);
var bg_default4 = {
  placeholder: "Изберете..."
};
var de_default4 = {
  placeholder: "Wählen..."
};
var en_default4 = {
  placeholder: "Select..."
};
var es_default4 = {
  placeholder: "Seleccionar..."
};
var fr_default4 = {
  placeholder: "Sélectionner..."
};
var it_default4 = {
  placeholder: "Selezionare..."
};
var ja_default4 = {
  placeholder: "選択する..."
};
var ko_default4 = {
  placeholder: "선택하다..."
};
var nl_default4 = {
  placeholder: "Selecteer..."
};
var pt_default4 = {
  placeholder: "Selecionar..."
};
var ro_default4 = {
  placeholder: "Selectați..."
};
var th_default4 = {
  placeholder: "เลือก..."
};
var messages4 = {
  "en-US": en_default4,
  "es-AR": es_default4,
  "fr-FR": fr_default4,
  "pt-BR": pt_default4,
  "ja-JP": ja_default4,
  "ko-KR": ko_default4,
  "it-IT": it_default4,
  "nl-NL": nl_default4,
  "ro-RO": ro_default4,
  "bg-BG": bg_default4,
  "th-TH": th_default4,
  "de-DE": de_default4
};
function isEmpty2(value) {
  if (Array.isArray(value)) {
    return value.length === 0;
  }
  return isStringEmpty(value);
}
function SelectValue2(props) {
  const { placeholder } = props;
  const ctx16 = useSelectContext();
  if (!ctx16) {
    throw Error("use SelectValue within a SelectProvider or Select");
  }
  const value = ctx16.useState("value");
  if (isEmpty2(value)) {
    return (0, import_jsx_runtime274.jsx)("div", { "data-sl-select-placeholder": true, children: placeholder });
  }
  return (0, import_jsx_runtime274.jsx)("div", { "data-sl-select-value": true, children: value });
}
function SelectArrow3() {
  return (0, import_jsx_runtime275.jsx)(SelectArrow, { render: (0, import_jsx_runtime275.jsx)(IconCaretUpDownSmall, {}) });
}
var useMessage4 = createMessageHook(messages4);
var Select22 = (0, import_react417.forwardRef)(
  function Select3(props, ref) {
    const _a2 = props, {
      children: children3,
      value,
      className,
      id: defaultId,
      disabled = false,
      error: defaultError,
      defaultValue: defaultValue2,
      setValue,
      messages: messages8
    } = _a2, otherProps = __objRest3(_a2, [
      "children",
      "value",
      "className",
      "id",
      "disabled",
      "error",
      "defaultValue",
      "setValue",
      "messages"
    ]);
    const [_value, _setValue] = useControlledState(
      value,
      defaultValue2 || "",
      setValue
    );
    const store = useFieldContext();
    const select = useSelectStore({
      value: _value,
      setValue: _setValue
    });
    const { id: contextId, error: contextError } = useStore2(store, (s) => s);
    const getMessage = useMessage4(messages8);
    const error = defaultError || contextError;
    const id = defaultId || contextId;
    return (0, import_jsx_runtime276.jsx)("div", { "data-sl-select": true, className, children: (0, import_jsx_runtime276.jsxs)(SelectProvider, { store: select, children: [
      (0, import_jsx_runtime276.jsxs)(
        SelectTrigger,
        __spreadProps3(__spreadValues4({
          "data-sl-select-button": true,
          ref,
          disabled,
          "data-error": error,
          "data-selected": !isEmpty2(_value),
          "data-disabled": disabled,
          id
        }, otherProps), {
          children: [
            (0, import_jsx_runtime276.jsx)(SelectValue2, { placeholder: getMessage("placeholder") }),
            (0, import_jsx_runtime276.jsx)(SelectArrow3, {})
          ]
        })
      ),
      (0, import_jsx_runtime276.jsx)(
        SelectPopover3,
        {
          sameWidth: true,
          unmountOnHide: true,
          hideOnInteractOutside: true,
          gutter: 4,
          children: children3
        }
      )
    ] }) });
  }
);
var SelectItemCheck3 = (0, import_react426.forwardRef)(function SelectItemCheck22(props, ref) {
  const _a2 = props, { children: children3 } = _a2, domProps = __objRest3(_a2, ["children"]);
  return (0, import_jsx_runtime277.jsx)(SelectItemCheck, __spreadProps3(__spreadValues4({ "data-sl-select-item-check": true, ref }, domProps), { children: children3 || (0, import_jsx_runtime277.jsx)(IconCheckSmall, {}) }));
});
var SelectItem3 = (0, import_react424.forwardRef)(
  function SelectItem22(props, ref) {
    const _a2 = props, { asChild = false, children: children3, hideOnClick } = _a2, domProps = __objRest3(_a2, ["asChild", "children", "hideOnClick"]);
    return (0, import_jsx_runtime278.jsxs)(
      SelectItem,
      __spreadProps3(__spreadValues4({
        "data-sl-select-item": true,
        ref,
        render: asChild ? children3 : void 0,
        hideOnClick
      }, domProps), {
        children: [
          (0, import_jsx_runtime278.jsx)(SelectItemCheck3, {}),
          (0, import_jsx_runtime278.jsx)("span", { children: children3 })
        ]
      })
    );
  }
);
var SelectList3 = (0, import_react428.forwardRef)(
  function SelectList22(props, ref) {
    const _a2 = props, {
      asChild = false,
      alwaysVisible = false,
      children: children3
    } = _a2, otherProps = __objRest3(_a2, [
      "asChild",
      "alwaysVisible",
      "children"
    ]);
    return (0, import_jsx_runtime279.jsx)(
      SelectList,
      __spreadProps3(__spreadValues4({
        "data-sl-select-list": true,
        ref,
        render: asChild ? children3 : void 0,
        alwaysVisible
      }, otherProps), {
        children: children3
      })
    );
  }
);
function useSearchable() {
  const combobox = useComboboxContext();
  const searchable = !!combobox;
  return searchable;
}
var FilterList = (0, import_react416.forwardRef)(
  function FilterList2(props, ref) {
    const searchable = useSearchable();
    const Comp = searchable ? ComboboxList3 : SelectList3;
    return (0, import_jsx_runtime280.jsx)(
      Comp,
      __spreadValues4({
        alwaysVisible: true,
        "data-sl-filter-list": true,
        ref,
        "data-searchable": searchable
      }, props)
    );
  }
);
var FilterContext = (0, import_react433.createContext)(
  void 0
);
function useFilterContext() {
  return (0, import_react433.useContext)(FilterContext);
}
var FilterClear = (0, import_react432.forwardRef)(
  function FilterClear2(props, ref) {
    const clearProps = useFilterClear();
    return (0, import_jsx_runtime281.jsx)(PopoverDismiss3, __spreadValues4({ ref }, mergeProps2(props, clearProps)));
  }
);
function useFilterClear() {
  var _a2, _b;
  const select = useSelectContext();
  const filter = useFilterContext();
  const selectValue = (_a2 = select == null ? void 0 : select.useState("value")) != null ? _a2 : "";
  const filterValue = (_b = filter == null ? void 0 : filter.useState("value")) != null ? _b : "";
  const isSelectValueEmpty = Array.isArray(selectValue) ? selectValue.length === 0 : !selectValue;
  const isFilterValueEmpty = Array.isArray(filterValue) ? filterValue.length === 0 : !filterValue;
  return {
    onClick() {
      filter == null ? void 0 : filter.setValue(reset2);
      select == null ? void 0 : select.setValue(reset2);
    },
    disabled: isSelectValueEmpty && isFilterValueEmpty
  };
}
function reset2(value) {
  return Array.isArray(value) ? [] : "";
}
function shallowEqual2(a2, b2, equals = (a22, b22) => a22 === b22) {
  if (Array.isArray(a2) && Array.isArray(b2)) {
    return a2.length === b2.length && a2.every((val, index) => equals(val, b2[index]));
  }
  return equals(a2, b2);
}
var FilterApply = (0, import_react435.forwardRef)(
  function FilterApply2(props, ref) {
    const applyProps = useFilterApply();
    return (0, import_jsx_runtime282.jsx)(PopoverDismiss3, __spreadValues4({ ref }, mergeProps2(props, applyProps)));
  }
);
function useFilterApply() {
  var _a2, _b;
  const select = useSelectContext();
  const filter = useFilterContext();
  const selectValue = (_a2 = select == null ? void 0 : select.useState("value")) != null ? _a2 : "";
  const filterValue = (_b = filter == null ? void 0 : filter.useState("value")) != null ? _b : "";
  return {
    onClick() {
      filter == null ? void 0 : filter.setValue(selectValue);
    },
    disabled: shallowEqual2(selectValue, filterValue)
  };
}
var bg_default5 = {
  apply: "Приложи",
  clear: "ясно"
};
var de_default5 = {
  apply: "Anwenden",
  clear: "Löschen"
};
var en_default5 = {
  apply: "Apply",
  clear: "Clear"
};
var es_default5 = {
  apply: "Aplicar",
  clear: "Limpiar"
};
var fr_default5 = {
  apply: "Appliquer",
  clear: "Effacer"
};
var it_default5 = {
  apply: "Applicare",
  clear: "Chiaro"
};
var ja_default5 = {
  apply: "申し込み",
  clear: "クリア"
};
var ko_default5 = {
  apply: "적용하다",
  clear: "분명한"
};
var nl_default5 = {
  apply: "Van toepassing zijn",
  clear: "Doorzichtig"
};
var pt_default5 = {
  apply: "Aplicar",
  clear: "Limpar"
};
var ro_default5 = {
  apply: "Aplica",
  clear: "Clar"
};
var th_default5 = {
  apply: "ใช้",
  clear: "ล้าง"
};
var messages5 = {
  "en-US": en_default5,
  "es-AR": es_default5,
  "fr-FR": fr_default5,
  "pt-BR": pt_default5,
  "ja-JP": ja_default5,
  "ko-KR": ko_default5,
  "it-IT": it_default5,
  "nl-NL": nl_default5,
  "ro-RO": ro_default5,
  "bg-BG": bg_default5,
  "th-TH": th_default5,
  "de-DE": de_default5
};
var bg_default6 = {
  placeholder: "Search"
};
var de_default6 = {
  placeholder: "Search"
};
var en_default6 = {
  placeholder: "Search"
};
var es_default6 = {
  placeholder: "Search"
};
var fr_default6 = {
  placeholder: "Search"
};
var it_default6 = {
  placeholder: "Search"
};
var ja_default6 = {
  placeholder: "Search"
};
var ko_default6 = {
  placeholder: "Search"
};
var nl_default6 = {
  placeholder: "Search"
};
var pt_default6 = {
  placeholder: "Pesquisar"
};
var ro_default6 = {
  placeholder: "Search"
};
var th_default6 = {
  placeholder: "Search"
};
var messages6 = {
  "en-US": en_default6,
  "es-AR": es_default6,
  "fr-FR": fr_default6,
  "pt-BR": pt_default6,
  "ja-JP": ja_default6,
  "ko-KR": ko_default6,
  "it-IT": it_default6,
  "nl-NL": nl_default6,
  "ro-RO": ro_default6,
  "bg-BG": bg_default6,
  "th-TH": th_default6,
  "de-DE": de_default6
};
var useMessage5 = createMessageHook(messages6);
var Search = (0, import_react437.forwardRef)(
  function Search2(props, forwardedRef) {
    const _a2 = props, {
      disabled = false,
      loading = false,
      messages: messages8,
      className,
      value,
      onClear,
      placeholder: deprecatedPlaceholder,
      id: defaultId,
      defaultValue: defaultValue2
    } = _a2, inputProps = __objRest3(_a2, [
      "disabled",
      "loading",
      "messages",
      "className",
      "value",
      "onClear",
      "placeholder",
      "id",
      "defaultValue"
    ]);
    const getMessage = useMessage5(messages8);
    const placeholder = deprecatedPlaceholder != null ? deprecatedPlaceholder : getMessage("placeholder");
    const id = useId2(defaultId);
    const ref = (0, import_react437.useRef)(null);
    const handleFocus = () => {
      if (ref.current) {
        ref.current.focus();
      }
    };
    return (0, import_jsx_runtime283.jsxs)(
      "div",
      {
        className,
        "data-disabled": disabled,
        "data-loading": loading,
        "data-sl-search": true,
        onClick: handleFocus,
        children: [
          loading ? (0, import_jsx_runtime283.jsx)(Spinner, { "data-sl-pre-icon": true }) : (0, import_jsx_runtime283.jsx)(IconMagnifyingGlassSmall, { "data-sl-pre-icon": true }),
          (0, import_jsx_runtime283.jsx)(
            "input",
            __spreadValues4({
              id,
              "data-sl-search-input": true,
              ref: useMergeRef(ref, forwardedRef),
              disabled,
              value,
              placeholder,
              defaultValue: defaultValue2
            }, inputProps)
          ),
          (0, import_jsx_runtime283.jsx)(VisuallyHidden3, { children: (0, import_jsx_runtime283.jsx)("label", { htmlFor: id, children: placeholder }) }),
          !disabled && (value || defaultValue2) && typeof onClear !== "undefined" ? (0, import_jsx_runtime283.jsx)(
            IconButton,
            {
              label: "Clear",
              onClick: onClear,
              variant: "tertiary",
              "data-sl-search-clear-btn": true,
              children: (0, import_jsx_runtime283.jsx)(IconXCircle, {})
            }
          ) : null
        ]
      }
    );
  }
);
var useMessage6 = createMessageHook(messages5);
var FilterPopover = (0, import_react431.forwardRef)(
  function FilterPopover2(props, ref) {
    const _a2 = props, { children: children3, messages: messages8 } = _a2, otherProps = __objRest3(_a2, ["children", "messages"]);
    const searchable = useSearchable();
    const getMessage = useMessage6(messages8);
    return (0, import_jsx_runtime284.jsx)(Popover22, __spreadProps3(__spreadValues4({ "data-sl-filter-popover": true, ref }, otherProps), { children: (0, import_jsx_runtime284.jsxs)(Container, { children: [
      searchable && (0, import_jsx_runtime284.jsx)(Content3, { narrow: true, "data-sl-filter-popover-combobox": true, children: (0, import_jsx_runtime284.jsx)(ComboboxInput, { autoSelect: true, placeholder: "Search", asChild: true, children: (0, import_jsx_runtime284.jsx)(Search, {}) }) }),
      children3,
      (0, import_jsx_runtime284.jsx)(Content3, { narrow: true, asChild: true, children: (0, import_jsx_runtime284.jsxs)("footer", { "data-sl-filter-popover-footer": true, children: [
        (0, import_jsx_runtime284.jsx)(FilterClear, { asChild: true, children: (0, import_jsx_runtime284.jsx)(Button3, { children: getMessage("clear") }) }),
        (0, import_jsx_runtime284.jsx)(FilterApply, { asChild: true, children: (0, import_jsx_runtime284.jsx)(Button3, { variant: "primary", children: getMessage("apply") }) })
      ] }) })
    ] }) }));
  }
);
function FilterProvider(props) {
  const {
    children: children3,
    open,
    setOpen,
    defaultOpen,
    value,
    setValue,
    defaultValue: defaultValue2,
    searchValue,
    setSearchValue,
    defaultSearchValue
  } = props;
  const popoverStore = usePopoverStore({
    open,
    setOpen,
    defaultOpen
  });
  const filterStore = useSelectStore({
    value,
    setValue,
    defaultValue: defaultValue2
  });
  const selectStore = useSelectStore({
    defaultValue: defaultValue2
  });
  (0, import_react438.useEffect)(function syncState() {
    selectStore.setValue(filterStore.getState().value);
  }, []);
  const searchable = !!searchValue || !!setSearchValue || !!defaultSearchValue;
  return searchable ? (0, import_jsx_runtime285.jsx)(
    ComboboxProvider,
    {
      resetValueOnHide: true,
      value: searchValue,
      setValue: setSearchValue,
      defaultValue: defaultSearchValue,
      children: (0, import_jsx_runtime285.jsx)(PopoverProvider, { store: popoverStore, children: (0, import_jsx_runtime285.jsx)(SelectProvider, { store: selectStore, children: (0, import_jsx_runtime285.jsx)(FilterContext.Provider, { value: filterStore, children: children3 }) }) })
    }
  ) : (0, import_jsx_runtime285.jsx)(PopoverProvider, { store: popoverStore, children: (0, import_jsx_runtime285.jsx)(SelectProvider, { store: selectStore, children: (0, import_jsx_runtime285.jsx)(FilterContext.Provider, { value: filterStore, children: children3 }) }) });
}
var valueSeparator = ": ";
var countPrefix = ", +";
var FilterValue = (0, import_react440.forwardRef)(
  function FilterValue2(props, ref) {
    const filter = useFilterContext();
    const value = filter == null ? void 0 : filter.useState("value");
    const isArray = Array.isArray(value);
    const isLongArray = isArray && value.length > 1;
    return (0, import_jsx_runtime286.jsxs)("span", __spreadProps3(__spreadValues4({ "data-sl-filter-value": true, ref }, props), { children: [
      value && value.length > 0 && valueSeparator,
      isArray ? value[0] : value,
      isLongArray && `${countPrefix}${value.length - 1}`
    ] }));
  }
);
var FilterTrigger = (0, import_react439.forwardRef)(
  function FilterTrigger2(props, ref) {
    const _a2 = props, { children: children3 } = _a2, otherProps = __objRest3(_a2, ["children"]);
    return (0, import_jsx_runtime287.jsx)(PopoverTrigger, __spreadProps3(__spreadValues4({ "data-sl-filter-trigger": true, ref }, otherProps), { asChild: true, children: (0, import_jsx_runtime287.jsxs)(Button3, { children: [
      children3,
      (0, import_jsx_runtime287.jsx)(FilterValue, {}),
      (0, import_jsx_runtime287.jsx)(IconCaretDownSmall, {})
    ] }) }));
  }
);
var Filter = (0, import_react415.forwardRef)(
  function Filter2(props, ref) {
    const _a2 = props, {
      children: children3,
      label,
      value,
      setValue,
      defaultValue: defaultValue2,
      searchValue,
      setSearchValue,
      defaultSearchValue,
      messages: messages8,
      disabled
    } = _a2, otherProps = __objRest3(_a2, [
      "children",
      "label",
      "value",
      "setValue",
      "defaultValue",
      "searchValue",
      "setSearchValue",
      "defaultSearchValue",
      "messages",
      "disabled"
    ]);
    return (0, import_jsx_runtime288.jsx)("div", __spreadProps3(__spreadValues4({ "data-sl-filter": true, ref }, otherProps), { children: (0, import_jsx_runtime288.jsxs)(
      FilterProvider,
      {
        value,
        setValue,
        defaultValue: defaultValue2,
        searchValue,
        setSearchValue,
        defaultSearchValue,
        children: [
          (0, import_jsx_runtime288.jsx)(FilterTrigger, { disabled, children: label }),
          (0, import_jsx_runtime288.jsx)(FilterPopover, { messages: messages8, children: (0, import_jsx_runtime288.jsx)(FilterList, { children: children3 }) })
        ]
      }
    ) }));
  }
);
var FilterListSkeleton = (0, import_react441.forwardRef)(function FilterListSkeleton2(props, ref) {
  return (0, import_jsx_runtime289.jsxs)(Stack, __spreadProps3(__spreadValues4({ space: "$space-4", ref }, props), { children: [
    (0, import_jsx_runtime289.jsx)(
      Skeleton,
      {
        style: {
          width: "8.75rem",
          height: "1.25rem",
          marginTop: "var(--sl-space-2)"
        }
      }
    ),
    (0, import_jsx_runtime289.jsx)(Skeleton, { style: { width: "10rem", height: "1.25rem" } }),
    (0, import_jsx_runtime289.jsx)(Skeleton, { style: { width: "7.5rem", height: "1.25rem" } }),
    (0, import_jsx_runtime289.jsx)(Skeleton, { style: { width: "8.75rem", height: "1.25rem" } }),
    (0, import_jsx_runtime289.jsx)(
      Skeleton,
      {
        style: {
          width: "10rem",
          height: "1.25rem",
          marginBottom: "var(--sl-space-2)"
        }
      }
    )
  ] }));
});
var FilterItemCheck = (0, import_react443.forwardRef)(
  function FilterItemCheck2(props, ref) {
    const select = useSelectContext();
    const multiselect = Array.isArray(select == null ? void 0 : select.getState().value);
    return (0, import_jsx_runtime290.jsx)(
      "span",
      __spreadProps3(__spreadValues4({
        "aria-hidden": "true",
        "data-sl-filter-item-check": true,
        "data-multiselect": multiselect,
        ref
      }, props), {
        children: (0, import_jsx_runtime290.jsx)(SelectItemCheck3, { children: (0, import_jsx_runtime290.jsx)(
          "span",
          {
            "data-sl-filter-item-check-indicator": true,
            "data-multiselect": multiselect,
            children: multiselect ? (0, import_jsx_runtime290.jsx)(IconCheckSmall, {}) : (0, import_jsx_runtime290.jsx)("span", { "data-sl-filter-item-check-radio-center": true })
          }
        ) })
      })
    );
  }
);
var FilterItem = (0, import_react442.forwardRef)(
  function FilterItem2(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    const searchable = useSearchable();
    return searchable ? (0, import_jsx_runtime291.jsx)(
      SelectItem3,
      __spreadProps3(__spreadValues4({
        hideOnClick: false,
        "data-sl-filter-item": true,
        ref
      }, otherProps), {
        asChild: true,
        children: (0, import_jsx_runtime291.jsxs)(ComboboxItem3, { asChild, children: [
          (0, import_jsx_runtime291.jsx)(FilterItemCheck, {}),
          (0, import_jsx_runtime291.jsx)("span", { children: children3 })
        ] })
      })
    ) : (0, import_jsx_runtime291.jsx)(
      SelectItem3,
      __spreadProps3(__spreadValues4({
        hideOnClick: false,
        "data-sl-filter-item": true,
        ref,
        asChild: true
      }, otherProps), {
        children: (0, import_jsx_runtime291.jsxs)("span", { children: [
          (0, import_jsx_runtime291.jsx)(FilterItemCheck, {}),
          (0, import_jsx_runtime291.jsx)("span", { children: children3 })
        ] })
      })
    );
  }
);
var Grid = (0, import_react444.forwardRef)(
  function Grid2(props, ref) {
    const _a2 = props, {
      asChild = false,
      gap = "$space-gap",
      areas = "none",
      rows = "auto",
      columns = "auto",
      autoColumns = "auto",
      autoRows = "auto",
      autoFlow = "row",
      style: styleObject = {}
    } = _a2, otherProps = __objRest3(_a2, [
      "asChild",
      "gap",
      "areas",
      "rows",
      "columns",
      "autoColumns",
      "autoRows",
      "autoFlow",
      "style"
    ]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime292.jsx)(
      Comp,
      __spreadValues4({
        "data-sl-grid": true,
        ref,
        style: style(__spreadValues4({
          "--sl-grid-gap": gap,
          "--sl-grid-areas": areas,
          "--sl-grid-rows": rows,
          "--sl-grid-columns": columns,
          "--sl-grid-auto-columns": autoColumns,
          "--sl-grid-auto-rows": autoRows,
          "--sl-grid-auto-flow": autoFlow
        }, styleObject))
      }, otherProps)
    );
  }
);
var GridCell = (0, import_react445.forwardRef)(
  function GridCell2(props, ref) {
    const _a2 = props, {
      asChild = false,
      columnStart = "auto",
      columnEnd = "auto",
      rowStart = "auto",
      rowEnd = "auto",
      column = "auto",
      row = "auto",
      area = "auto",
      style: styleObject = {}
    } = _a2, domProps = __objRest3(_a2, [
      "asChild",
      "columnStart",
      "columnEnd",
      "rowStart",
      "rowEnd",
      "column",
      "row",
      "area",
      "style"
    ]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime293.jsx)(
      Comp,
      __spreadValues4({
        "data-sl-grid-cell": true,
        ref,
        style: style(__spreadValues4({
          "--sl-grid-cell-column-start": columnStart,
          "--sl-grid-cell-column-end": columnEnd,
          "--sl-grid-cell-row-start": rowStart,
          "--sl-grid-cell-row-end": rowEnd,
          "--sl-grid-cell-column": column,
          "--sl-grid-cell-row": row,
          "--sl-grid-cell-area": area
        }, styleObject))
      }, domProps)
    );
  }
);
var Input = (0, import_react446.forwardRef)(
  function Input2(props, ref) {
    const _a2 = props, {
      id: defaultId,
      disabled,
      error: defaultError,
      prefix: prefix2,
      suffix,
      defaultValue: defaultValue2,
      value,
      onChange,
      className
    } = _a2, otherProps = __objRest3(_a2, [
      "id",
      "disabled",
      "error",
      "prefix",
      "suffix",
      "defaultValue",
      "value",
      "onChange",
      "className"
    ]);
    const [_value, _setValue] = useControlledState(
      value,
      defaultValue2 || "",
      onChange
    );
    const store = useFieldContext();
    const { id: contextId, error: contextError } = useStore2(store, (s) => s);
    const error = defaultError || contextError;
    const id = defaultId || contextId;
    return (0, import_jsx_runtime294.jsxs)(
      "div",
      {
        "data-sl-input": true,
        "data-disabled": disabled,
        "data-error": error,
        className,
        children: [
          prefix2 && (0, import_jsx_runtime294.jsx)("div", { "data-sl-input-term": true, "data-type": "prefix", children: prefix2 }),
          (0, import_jsx_runtime294.jsx)(
            "input",
            __spreadValues4({
              "data-sl-input-element": true,
              ref,
              value: _value,
              onChange: (e) => _setValue(e.target.value),
              id,
              disabled
            }, otherProps)
          ),
          suffix && (0, import_jsx_runtime294.jsx)("div", { "data-sl-input-term": true, "data-type": "suffix", children: suffix })
        ]
      }
    );
  }
);
var Link = (0, import_react447.forwardRef)(
  function Link2(props, ref) {
    const _a2 = props, { asChild } = _a2, otherProps = __objRest3(_a2, ["asChild"]);
    const Comp = asChild ? Compose : "a";
    return (0, import_jsx_runtime295.jsx)(Comp, __spreadValues4({ "data-sl-link": true, ref }, otherProps));
  }
);
var MenuPopover = (0, import_react449.forwardRef)(
  function MenuPopover2(props, ref) {
    const _a2 = props, { children: children3, asChild = false, portal = true } = _a2, otherProps = __objRest3(_a2, ["children", "asChild", "portal"]);
    return (0, import_jsx_runtime296.jsx)(
      Menu,
      __spreadProps3(__spreadValues4({
        "data-sl-menu-popover": true,
        ref,
        render: asChild && children3,
        gutter: 4,
        portal
      }, otherProps), {
        children: children3
      })
    );
  }
);
function MenuProvider2(props) {
  const _a2 = props, { placement = "bottom-end" } = _a2, otherProps = __objRest3(_a2, ["placement"]);
  return (0, import_jsx_runtime297.jsx)(MenuProvider, __spreadValues4({ placement }, otherProps));
}
var MenuTrigger = (0, import_react452.forwardRef)(
  function MenuTrigger2(props, ref) {
    const _a2 = props, { children: children3, asChild = false } = _a2, otherProps = __objRest3(_a2, ["children", "asChild"]);
    const store = useMenuContext();
    invariant2(store, "You must use MenuTrigger under the MenuProvider context.");
    const open = store.useState("open");
    return (0, import_jsx_runtime298.jsx)(
      MenuButton,
      __spreadProps3(__spreadValues4({
        ref,
        "data-sl-menu-trigger": true,
        render: asChild && children3,
        "data-active": open
      }, otherProps), {
        children: children3
      })
    );
  }
);
var Menu22 = (0, import_react448.forwardRef)(
  function Menu3(props, ref) {
    const _a2 = props, {
      children: children3,
      label,
      asChild = false,
      variant = "tertiary",
      type = "menu",
      iconOnly = false,
      size: size3 = "normal",
      open,
      setOpen,
      defaultOpen,
      store,
      placement,
      disabled
    } = _a2, domProps = __objRest3(_a2, [
      "children",
      "label",
      "asChild",
      "variant",
      "type",
      "iconOnly",
      "size",
      "open",
      "setOpen",
      "defaultOpen",
      "store",
      "placement",
      "disabled"
    ]);
    const Icon = getIcon3(type);
    return (0, import_jsx_runtime299.jsx)("div", __spreadProps3(__spreadValues4({ "data-sl-menu": true, ref }, domProps), { children: (0, import_jsx_runtime299.jsxs)(
      MenuProvider2,
      {
        open,
        setOpen,
        defaultOpen,
        store,
        placement,
        children: [
          (0, import_jsx_runtime299.jsx)(MenuTrigger, { disabled, asChild: true, children: iconOnly ? (0, import_jsx_runtime299.jsx)(IconButton, { label, variant, size: size3, children: Icon }) : (0, import_jsx_runtime299.jsxs)(Button3, { variant, size: size3, children: [
            type === "actions" && Icon,
            label,
            type === "menu" && Icon
          ] }) }),
          (0, import_jsx_runtime299.jsx)(MenuPopover, { children: children3 })
        ]
      }
    ) }));
  }
);
function getIcon3(type = "menu") {
  switch (type) {
    case "menu":
      return (0, import_jsx_runtime299.jsx)(IconCaretDownSmall, {});
    case "actions":
      return (0, import_jsx_runtime299.jsx)(IconDotsThreeVertical, {});
    default:
      return (0, import_jsx_runtime299.jsx)(IconCaretDownSmall, {});
  }
}
var MenuItem3 = (0, import_react454.forwardRef)(
  function MenuItem22(props, ref) {
    const _a2 = props, {
      children: children3,
      asChild = false,
      critical = false,
      disabled = false
    } = _a2, otherProps = __objRest3(_a2, [
      "children",
      "asChild",
      "critical",
      "disabled"
    ]);
    return (0, import_jsx_runtime300.jsx)(
      MenuItem,
      __spreadProps3(__spreadValues4({
        "data-sl-menu-item": true,
        "data-critical": critical,
        "data-disabled": disabled,
        ref,
        render: asChild && children3,
        disabled
      }, otherProps), {
        children: children3
      })
    );
  }
);
var MenuSeparator3 = (0, import_react456.forwardRef)(
  function Menu4(props, ref) {
    return (0, import_jsx_runtime301.jsx)(MenuSeparator, __spreadValues4({ "data-sl-menu-separator": true, ref }, props));
  }
);
var Page = (0, import_react458.forwardRef)(
  function Page2(props, ref) {
    const _a2 = props, { children: children3 } = _a2, otherProps = __objRest3(_a2, ["children"]);
    return (0, import_jsx_runtime302.jsx)(Container, __spreadProps3(__spreadValues4({ "data-sl-page": true, ref, tabIndex: 0 }, otherProps), { children: children3 }));
  }
);
var PageHeader = (0, import_react459.forwardRef)(
  function PageHeader2(props, ref) {
    const _a2 = props, { children: children3 } = _a2, otherProps = __objRest3(_a2, ["children"]);
    return (0, import_jsx_runtime303.jsx)(Container, { children: (0, import_jsx_runtime303.jsx)(
      Content3,
      __spreadProps3(__spreadValues4({
        "data-sl-page-header-container": true,
        asChild: true,
        narrow: true,
        ref
      }, otherProps), {
        children: (0, import_jsx_runtime303.jsx)("header", { children: (0, import_jsx_runtime303.jsx)("div", { "data-sl-page-header": true, children: children3 }) })
      })
    ) });
  }
);
var PageContent = (0, import_react460.forwardRef)(
  function PageContent2(props, ref) {
    const _a2 = props, { children: children3, layout = "standard" } = _a2, otherProps = __objRest3(_a2, ["children", "layout"]);
    return (0, import_jsx_runtime304.jsx)(Container, { "data-sl-page-container": true, children: (0, import_jsx_runtime304.jsx)(
      Content3,
      __spreadProps3(__spreadValues4({
        "data-sl-page-content": true,
        "data-layout": layout,
        ref
      }, otherProps), {
        children: children3
      })
    ) });
  }
);
var PageHeading = (0, import_react461.forwardRef)(
  function PageHeading2(props, ref) {
    const _a2 = props, { children: children3 } = _a2, otherProps = __objRest3(_a2, ["children"]);
    return (0, import_jsx_runtime305.jsx)(
      Heading3,
      __spreadProps3(__spreadValues4({
        level: 1,
        variant: "display1",
        "data-sl-page-heading": true,
        ref
      }, otherProps), {
        children: children3
      })
    );
  }
);
var PageHeaderRow = forwardRef22(
  function PageHeaderRow2(props, ref) {
    const _a2 = props, { asChild = false } = _a2, otherProps = __objRest3(_a2, ["asChild"]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime306.jsx)(Comp, __spreadValues4({ "data-sl-page-header-row": true, ref }, otherProps));
  }
);
var bg_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} of {items}",
  "pagination-label-single-page": "{lastPosition} of {items}",
  "next-page-action": "Next page",
  "previous-page-action": "Previous page"
};
var de_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} of {items}",
  "pagination-label-single-page": "{lastPosition} of {items}",
  "next-page-action": "Next page",
  "previous-page-action": "Previous page"
};
var en_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} of {items}",
  "pagination-label-single-page": "{lastPosition} of {items}",
  "next-page-action": "Next page",
  "previous-page-action": "Previous page"
};
var es_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} of {items}",
  "pagination-label-single-page": "{lastPosition} of {items}",
  "next-page-action": "Next page",
  "previous-page-action": "Previous page"
};
var fr_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} of {items}",
  "pagination-label-single-page": "{lastPosition} of {items}",
  "next-page-action": "Next page",
  "previous-page-action": "Previous page"
};
var it_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} of {items}",
  "pagination-label-single-page": "{lastPosition} of {items}",
  "next-page-action": "Next page",
  "previous-page-action": "Previous page"
};
var ja_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} of {items}",
  "pagination-label-single-page": "{lastPosition} of {items}",
  "next-page-action": "Next page",
  "previous-page-action": "Previous page"
};
var ko_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} of {items}",
  "pagination-label-single-page": "{lastPosition} of {items}",
  "next-page-action": "Next page",
  "previous-page-action": "Previous page"
};
var nl_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} of {items}",
  "pagination-label-single-page": "{lastPosition} of {items}",
  "next-page-action": "Next page",
  "previous-page-action": "Previous page"
};
var pt_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} de {items}",
  "pagination-label-single-page": "{lastPosition} de {items}",
  "next-page-action": "Próxima página",
  "previous-page-action": "Página anterior"
};
var ro_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} of {items}",
  "pagination-label-single-page": "{lastPosition} of {items}",
  "next-page-action": "Next page",
  "previous-page-action": "Previous page"
};
var th_default7 = {
  "pagination-label": "{firstPosition} — {lastPosition} of {items}",
  "pagination-label-single-page": "{lastPosition} of {items}",
  "next-page-action": "Next page",
  "previous-page-action": "Previous page"
};
var messages7 = {
  "en-US": en_default7,
  "es-AR": es_default7,
  "fr-FR": fr_default7,
  "pt-BR": pt_default7,
  "ja-JP": ja_default7,
  "ko-KR": ko_default7,
  "it-IT": it_default7,
  "nl-NL": nl_default7,
  "ro-RO": ro_default7,
  "bg-BG": bg_default7,
  "th-TH": th_default7,
  "de-DE": de_default7
};
var useMessage7 = createMessageHook(messages7);
var Pagination = (0, import_react462.forwardRef)(
  function Pagination2(props, ref) {
    const _a2 = props, {
      page,
      total,
      size: size3 = 25,
      onPageChange,
      loading = false
    } = _a2, otherProps = __objRest3(_a2, [
      "page",
      "total",
      "size",
      "onPageChange",
      "loading"
    ]);
    const getMessage = useMessage7();
    const { firstPosition, lastPosition } = (0, import_react462.useMemo)(() => {
      const minFirstposition = Math.min(total, 1);
      const firstPosition2 = Math.max(page * size3 - size3, minFirstposition);
      const lastPosition2 = Math.min(page * size3, total);
      return { firstPosition: firstPosition2, lastPosition: lastPosition2 };
    }, [page, total]);
    const isSinglePage = total <= size3;
    const paginationLabel = isSinglePage ? "pagination-label-single-page" : "pagination-label";
    return (0, import_jsx_runtime307.jsx)("div", __spreadProps3(__spreadValues4({ "data-sl-pagination": true, ref }, otherProps), { children: (0, import_jsx_runtime307.jsxs)(Stack, { horizontal: true, space: "$space-2", children: [
      (0, import_jsx_runtime307.jsx)("div", { "data-sl-pagination-label": true, "data-loading": loading, children: loading ? (0, import_jsx_runtime307.jsx)(Skeleton, {}) : getMessage(paginationLabel, {
        firstPosition,
        lastPosition,
        items: total
      }) }),
      (0, import_jsx_runtime307.jsxs)("div", { "data-sl-pagination-actions": true, children: [
        (0, import_jsx_runtime307.jsx)(
          IconButton,
          {
            label: getMessage("previous-page-action"),
            variant: "tertiary",
            onClick: () => {
              onPageChange == null ? void 0 : onPageChange(page - 1, "prev");
            },
            disabled: page === 1 || loading,
            "data-sl-pagination-action-prev": true,
            children: (0, import_jsx_runtime307.jsx)(IconCaretLeft, {})
          }
        ),
        (0, import_jsx_runtime307.jsx)(
          IconButton,
          {
            variant: "tertiary",
            label: getMessage("next-page-action"),
            onClick: () => {
              onPageChange == null ? void 0 : onPageChange(page + 1, "next");
            },
            disabled: lastPosition === total || loading,
            "data-sl-pagination-action-next": true,
            children: (0, import_jsx_runtime307.jsx)(IconCaretRight, {})
          }
        )
      ] })
    ] }) }));
  }
);
var Radio3 = (0, import_react463.forwardRef)(
  function Radio22(props, ref) {
    const _a2 = props, {
      error = false,
      disabled,
      children: children3,
      value,
      id: defaultId
    } = _a2, otherProps = __objRest3(_a2, [
      "error",
      "disabled",
      "children",
      "value",
      "id"
    ]);
    const id = useId2(defaultId);
    return (0, import_jsx_runtime308.jsxs)("div", { "data-sl-radio": true, children: [
      (0, import_jsx_runtime308.jsx)(
        Radio,
        __spreadValues4({
          "data-sl-radio-input": true,
          value,
          "data-error": error,
          "data-disabled": disabled,
          disabled,
          id,
          ref
        }, otherProps)
      ),
      (0, import_jsx_runtime308.jsx)(Label, { htmlFor: id, "data-disabled": disabled, children: children3 })
    ] });
  }
);
var RadioGroup3 = (0, import_react465.forwardRef)(
  function Radio32(props, ref) {
    const _a2 = props, {
      error,
      description,
      errorText,
      label,
      children: children3,
      className,
      horizontal = false,
      state,
      id: defaultId
    } = _a2, otherProps = __objRest3(_a2, [
      "error",
      "description",
      "errorText",
      "label",
      "children",
      "className",
      "horizontal",
      "state",
      "id"
    ]);
    const id = useId2(defaultId);
    return (0, import_jsx_runtime309.jsx)(RadioProvider, { store: state, children: (0, import_jsx_runtime309.jsxs)(
      Field,
      {
        space: "large",
        "data-sl-radio-group": true,
        error,
        className,
        children: [
          (0, import_jsx_runtime309.jsx)(Label, { htmlFor: id, children: label }),
          (0, import_jsx_runtime309.jsx)(RadioGroup, __spreadProps3(__spreadValues4({ "data-sl-group": true, id, ref }, otherProps), { children: (0, import_jsx_runtime309.jsx)(
            Stack,
            {
              horizontal,
              space: horizontal ? "$space-5" : "$space-4",
              children: children3
            }
          ) })),
          description && (0, import_jsx_runtime309.jsx)(FieldDescription, { children: description }),
          (0, import_jsx_runtime309.jsx)(FieldError, { children: errorText })
        ]
      }
    ) });
  }
);
var useRadioState = useRadioStore;
var Tab3 = (0, import_react467.forwardRef)(
  function Tab22(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    return (0, import_jsx_runtime310.jsx)(
      Tab,
      __spreadProps3(__spreadValues4({
        "data-sl-tab": true,
        ref,
        render: asChild ? children3 : void 0
      }, otherProps), {
        children: (0, import_jsx_runtime310.jsx)("div", { "data-sl-tab-content": true, children: children3 })
      })
    );
  }
);
var TabList3 = (0, import_react469.forwardRef)(
  function TabList22(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    return (0, import_jsx_runtime311.jsx)(
      TabList,
      __spreadProps3(__spreadValues4({
        "data-sl-tab-list": true,
        ref,
        render: asChild ? children3 : void 0
      }, otherProps), {
        children: children3
      })
    );
  }
);
var TabPanel3 = (0, import_react471.forwardRef)(
  function TabPanel22(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    return (0, import_jsx_runtime312.jsx)(
      TabPanel,
      __spreadProps3(__spreadValues4({
        "data-sl-tab-panel": true,
        ref,
        render: asChild ? children3 : void 0
      }, otherProps), {
        children: children3
      })
    );
  }
);
var TableBody = (0, import_react476.forwardRef)(
  function TableBody2(props, ref) {
    const _a2 = props, { asChild = false } = _a2, otherProps = __objRest3(_a2, ["asChild"]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime313.jsx)(Comp, __spreadValues4({ role: "presentation", "data-sl-table-body": true, ref }, otherProps));
  }
);
var TableCell = (0, import_react477.forwardRef)(
  function TableCell2(props, ref) {
    const _a2 = props, { asChild = false, align = "start" } = _a2, otherProps = __objRest3(_a2, ["asChild", "align"]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime314.jsx)(
      Comp,
      __spreadValues4({
        role: "cell",
        "data-sl-table-cell": true,
        "data-sl-align": align,
        ref
      }, otherProps)
    );
  }
);
var TableHeaderCell = (0, import_react478.forwardRef)(
  function TableHeaderCell2(props, ref) {
    const _a2 = props, {
      asChild = false,
      sortable = false,
      align = "start"
    } = _a2, otherProps = __objRest3(_a2, [
      "asChild",
      "sortable",
      "align"
    ]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime315.jsx)(
      Comp,
      __spreadValues4({
        role: "columnheader",
        "data-sl-table-header-cell": true,
        "data-sortable": sortable,
        "data-sl-align": align,
        ref
      }, otherProps)
    );
  }
);
var TableHeader = (0, import_react479.forwardRef)(
  function TableHeader2(props, ref) {
    const _a2 = props, { asChild = false } = _a2, otherProps = __objRest3(_a2, ["asChild"]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime316.jsx)(
      Comp,
      __spreadValues4({
        role: "presentation",
        "data-sl-table-header": true,
        ref
      }, otherProps)
    );
  }
);
var TableSortIndicator = (0, import_react480.forwardRef)(function TableSortIndicator2(props, ref) {
  const _a2 = props, { sorted = false } = _a2, otherProps = __objRest3(_a2, ["sorted"]);
  return (0, import_jsx_runtime317.jsxs)("div", __spreadProps3(__spreadValues4({ "data-sl-table-sort-indicator": true, ref }, otherProps), { children: [
    (0, import_jsx_runtime317.jsx)("div", { "data-sl-table-sort-indicator-hover": true, "data-sl-sorted": sorted, children: (0, import_jsx_runtime317.jsx)(IconArrowUp, {}) }),
    sorted === "asc" ? (0, import_jsx_runtime317.jsx)(IconArrowUp, {}) : sorted === "desc" ? (0, import_jsx_runtime317.jsx)(IconArrowDown, {}) : null
  ] }));
});
var TableRow = (0, import_react481.forwardRef)(
  function TableRow2(props, ref) {
    const _a2 = props, {
      selected = false,
      expanded = false,
      asChild = false,
      dimOnHover = true
    } = _a2, otherProps = __objRest3(_a2, [
      "selected",
      "expanded",
      "asChild",
      "dimOnHover"
    ]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime318.jsx)(
      Comp,
      __spreadValues4({
        role: "row",
        "data-sl-table-row": true,
        "data-selected": selected,
        "data-expanded": expanded,
        "data-dim-on-hover": dimOnHover,
        ref
      }, otherProps)
    );
  }
);
var Table = (0, import_react482.forwardRef)(
  function Table2(props, ref) {
    const _a2 = props, {
      columnWidths,
      asChild = false,
      stickyHeader = false,
      stickyColumn = false,
      density = "default",
      style: style11 = {}
    } = _a2, otherProps = __objRest3(_a2, [
      "columnWidths",
      "asChild",
      "stickyHeader",
      "stickyColumn",
      "density",
      "style"
    ]);
    const Comp = asChild ? Compose : "div";
    return (0, import_jsx_runtime319.jsx)(
      Comp,
      __spreadValues4({
        role: "table",
        "data-sl-table": true,
        "data-sl-table-header-sticky": stickyHeader,
        "data-sl-table-sticky-column": stickyColumn,
        "data-sl-table-density": density,
        ref,
        style: __spreadProps3(__spreadValues4({}, style11), {
          "--sl-table-grid-template-columns": columnWidths == null ? void 0 : columnWidths.join(
            constants.whiteSpace
          )
        })
      }, otherProps)
    );
  }
);
var Tag = (0, import_react483.forwardRef)(
  function Tag2(props, ref) {
    const _a2 = props, {
      variant = "primary",
      size: size3 = "normal",
      color = "gray",
      children: children3
    } = _a2, otherProps = __objRest3(_a2, [
      "variant",
      "size",
      "color",
      "children"
    ]);
    return (0, import_jsx_runtime320.jsx)(
      "div",
      __spreadProps3(__spreadValues4({
        "data-sl-tag": true,
        "data-variant": variant,
        "data-size": size3,
        "data-color": color,
        ref
      }, otherProps), {
        children: children3
      })
    );
  }
);
var Textarea = (0, import_react484.forwardRef)(
  function Textarea2(props, ref) {
    const _a2 = props, {
      error: defaultError,
      disabled = false,
      resizable = true,
      className = "",
      id: defaultId,
      children: children3,
      value,
      defaultValue: defaultValue2,
      onChange,
      maxLength,
      optional
    } = _a2, htmlProps = __objRest3(_a2, [
      "error",
      "disabled",
      "resizable",
      "className",
      "id",
      "children",
      "value",
      "defaultValue",
      "onChange",
      "maxLength",
      "optional"
    ]);
    const store = useFieldContext();
    const { id: contextId, error: contextError } = useStore2(store, (s) => s);
    const id = defaultId || contextId;
    const error = defaultError || contextError;
    const [_value, _setValue] = useControlledState(
      value,
      defaultValue2 || "",
      onChange
    );
    return (0, import_jsx_runtime321.jsx)("div", { "data-sl-textarea": true, className, children: (0, import_jsx_runtime321.jsx)(
      "textarea",
      __spreadValues4({
        ref,
        id,
        "data-sl-textarea-input": true,
        "data-error": error,
        "data-disabled": disabled,
        "data-resizable": resizable,
        disabled,
        maxLength,
        "aria-invalid": error,
        value: _value,
        onChange: (e) => _setValue(e.target.value)
      }, htmlProps)
    ) });
  }
);
var toast = {
  informational(message) {
    return a(message, getOptions("informational"));
  },
  success(message) {
    return a.success(message, getOptions("success"));
  },
  critical(message) {
    return a.error(message, getOptions("critical"));
  },
  warning(message) {
    return a(message, getOptions("warning"));
  },
  loading(message) {
    return a.loading(message, getOptions("informational"));
  },
  promise(promise, messages8) {
    return a.promise(promise, messages8);
  },
  dismiss: a.dismiss
};
function getOptions(variant) {
  return {
    variant
  };
}
function Toast(props) {
  const _a2 = props, {
    id,
    variant = "informational",
    children: children3,
    loading,
    onDismiss
  } = _a2, restProps = __objRest3(_a2, [
    "id",
    "variant",
    "children",
    "loading",
    "onDismiss"
  ]);
  const icon = loading ? (0, import_jsx_runtime322.jsx)(Spinner, {}) : getIcon4(variant);
  return (0, import_jsx_runtime322.jsxs)(
    "div",
    __spreadProps3(__spreadValues4({
      "data-sl-toast": true,
      "data-loading": loading,
      "data-variant": variant
    }, restProps), {
      children: [
        (0, import_jsx_runtime322.jsx)("div", { "data-sl-toast-icon-container": true, children: icon }),
        (0, import_jsx_runtime322.jsx)("div", { "data-sl-toast-container": true, children: renderChildren(children3) }),
        (0, import_jsx_runtime322.jsx)(Bleed, { top: "$space-2", end: "$space-2", bottom: "$space-2", children: (0, import_jsx_runtime322.jsx)(
          IconButton,
          {
            onClick: (e) => {
              onDismiss == null ? void 0 : onDismiss(e);
              a.dismiss(id);
            },
            label: "dismiss",
            variant: "tertiary",
            children: (0, import_jsx_runtime322.jsx)(IconX, {})
          }
        ) })
      ]
    })
  );
}
function renderChildren(children3) {
  return import_react485.Children.map(children3, (child) => {
    if (typeof child === "string") {
      return (0, import_jsx_runtime322.jsx)(Text, { variant: "emphasis", children: child });
    }
    if ((0, import_react485.isValidElement)(child) && (child.type === Button3 || child.type === IconButton)) {
      return (0, import_jsx_runtime322.jsx)(Bleed, { top: "$space-2", bottom: "$space-2", start: "$space-2", end: "$space-2", children: child });
    }
    return child;
  });
}
function getIcon4(variant = "informational") {
  switch (variant) {
    case "informational": {
      return (0, import_jsx_runtime322.jsx)(IconInfoFill, {});
    }
    case "success": {
      return (0, import_jsx_runtime322.jsx)(IconCheckCircleFill, {});
    }
    case "critical": {
      return (0, import_jsx_runtime322.jsx)(IconXCircleFill, {});
    }
    case "warning": {
      return (0, import_jsx_runtime322.jsx)(IconWarningCircleFill, {});
    }
  }
}
function ToastAppear(props) {
  const _a2 = props, { id, onHeightUpdate, children: children3, visible = false } = _a2, divProps = __objRest3(_a2, ["id", "onHeightUpdate", "children", "visible"]);
  const ref = (0, import_react486.useCallback)(
    (el) => {
      if (!el) return;
      const updateHeight = () => {
        const height = el.getBoundingClientRect().height;
        onHeightUpdate(id, height);
      };
      updateHeight();
      new MutationObserver(updateHeight).observe(el, {
        subtree: true,
        childList: true,
        characterData: true
      });
    },
    [id, onHeightUpdate]
  );
  return (0, import_jsx_runtime323.jsx)("div", __spreadProps3(__spreadValues4({ "data-sl-toast-appear": true, "data-visible": visible, ref }, divProps), { children: children3 }));
}
function ToastStack(props) {
  const _a2 = props, {
    reverseOrder,
    position = "bottom-right",
    toastOptions,
    gutter = 16
  } = _a2, otherProps = __objRest3(_a2, [
    "reverseOrder",
    "position",
    "toastOptions",
    "gutter"
  ]);
  const { toasts, handlers } = H(toastOptions);
  return (0, import_jsx_runtime324.jsx)(
    "div",
    __spreadProps3(__spreadValues4({
      "data-sl-toast-stack": true,
      onMouseEnter: handlers.startPause,
      onMouseLeave: handlers.endPause
    }, otherProps), {
      children: toasts.map((t, index) => {
        const toastPosition = t.position || position;
        const offset3 = handlers.calculateOffset(t, {
          reverseOrder,
          gutter,
          defaultPosition: position
        });
        const positionStyle = getPositionStyle(toastPosition, offset3);
        return (0, import_jsx_runtime324.jsx)(
          ToastAppear,
          {
            id: t.id,
            onHeightUpdate: handlers.updateHeight,
            visible: t.visible,
            style: __spreadProps3(__spreadValues4({}, positionStyle), { "--sl-toast-index": index }),
            children: (0, import_jsx_runtime324.jsx)(
              Toast,
              __spreadProps3(__spreadValues4(__spreadValues4({
                id: t.id,
                loading: t.type === "loading",
                variant: t.variant
              }, t.ariaProps), toastOptions == null ? void 0 : toastOptions.ariaProps), {
                children: t.message
              })
            )
          },
          t.id
        );
      })
    })
  );
}
function getPositionStyle(position, offset3) {
  if (!position) return {};
  const top = position.includes("top");
  const verticalStyle = top ? { top: 0 } : { bottom: 0 };
  const horizontalStyle = position.includes("center") ? {
    justifyContent: "center"
  } : position.includes("right") ? {
    justifyContent: "flex-end"
  } : {};
  return __spreadValues4(__spreadValues4({
    transform: `translateY(${offset3 * (top ? 1 : -1)}px)`
  }, verticalStyle), horizontalStyle);
}
var TooltipTrigger = (0, import_react489.forwardRef)(
  function TooltipTrigger2(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    return (0, import_jsx_runtime325.jsx)(
      TooltipAnchor,
      __spreadProps3(__spreadValues4({
        "data-sl-tooltip-trigger": true,
        ref,
        render: asChild ? children3 : void 0
      }, otherProps), {
        children: children3
      })
    );
  }
);
var TooltipPopover = (0, import_react491.forwardRef)(
  function TooltipPopover2(props, ref) {
    const _a2 = props, { asChild = false, children: children3, gutter = 2 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children", "gutter"]);
    return (0, import_jsx_runtime326.jsx)(
      Tooltip,
      __spreadProps3(__spreadValues4({
        "data-sl-tooltip-popover": true,
        gutter,
        ref,
        render: asChild ? children3 : void 0
      }, otherProps), {
        children: children3
      })
    );
  }
);
var TooltipArrow3 = (0, import_react493.forwardRef)(
  function TooltipArrow22(props, ref) {
    const _a2 = props, { asChild = false, children: children3 } = _a2, otherProps = __objRest3(_a2, ["asChild", "children"]);
    return (0, import_jsx_runtime327.jsx)(
      TooltipArrow,
      __spreadValues4({
        "data-sl-tooltip-arrow": true,
        ref,
        render: asChild ? children3 : void 0
      }, otherProps)
    );
  }
);
var Tooltip22 = (0, import_react487.forwardRef)(
  function Tooltip3(props, ref) {
    const _a2 = props, {
      children: children3,
      label,
      timeout,
      open,
      setOpen,
      defaultOpen,
      placement
    } = _a2, otherProps = __objRest3(_a2, [
      "children",
      "label",
      "timeout",
      "open",
      "setOpen",
      "defaultOpen",
      "placement"
    ]);
    return (0, import_jsx_runtime328.jsx)(
      TooltipProvider,
      {
        timeout,
        open,
        setOpen,
        defaultOpen,
        placement,
        children: (0, import_jsx_runtime328.jsxs)("span", __spreadProps3(__spreadValues4({ "data-sl-tooltip": true, ref }, otherProps), { children: [
          (0, import_jsx_runtime328.jsx)(TooltipTrigger, { asChild: true, children: children3 }),
          (0, import_jsx_runtime328.jsxs)(TooltipPopover, { children: [
            (0, import_jsx_runtime328.jsx)(TooltipArrow3, {}),
            label
          ] })
        ] }))
      }
    );
  }
);
var CalendarContext = (0, import_react498.createContext)(null);
function CalendarProvider(props) {
  const { store, children: children3 } = props;
  return (0, import_jsx_runtime329.jsx)(CalendarContext.Provider, { value: store, children: children3 });
}
function useCalendarContext() {
  const context = (0, import_react498.useContext)(CalendarContext);
  invariant2(context, "Calendar components must be wrapped by CalendarProvider");
  return context;
}
function isRangeCalendar(state) {
  if (state.highlightedRange) {
    return true;
  }
  return false;
}
function CalendarCell(props) {
  const { date } = props;
  const ref = (0, import_react497.useRef)(null);
  const store = useCalendarContext();
  const {
    cellProps,
    buttonProps,
    isSelected: isSelected3,
    isOutsideVisibleRange,
    isDisabled,
    isUnavailable,
    formattedDate,
    isFocused
  } = $36a0ac60f04457c5$export$136073280381448e({ date }, store.state, ref);
  if (!store) {
    return null;
  }
  const canUseSelection = isRangeCalendar(store.state) && store.state.highlightedRange;
  const isSelectionStart = canUseSelection ? $14e0f24ef4ac5c92$export$ea39ec197993aef0(date, store.state.highlightedRange.start) : isSelected3;
  const isSelectionEnd = canUseSelection ? $14e0f24ef4ac5c92$export$ea39ec197993aef0(date, store.state.highlightedRange.end) : isSelected3;
  return (0, import_jsx_runtime330.jsx)("td", __spreadProps3(__spreadValues4({ "data-sl-calendar-cell": true }, cellProps), { children: (0, import_jsx_runtime330.jsx)(
    IconButton,
    __spreadProps3(__spreadValues4({}, buttonProps), {
      ref,
      variant: "tertiary",
      "data-sl-calendar-cell-button": true,
      hidden: isOutsideVisibleRange,
      "data-selection-start": isSelectionStart,
      "data-selection-end": isSelectionEnd,
      "data-selected": isSelected3,
      "data-disabled": isDisabled,
      "data-unavailable": isUnavailable,
      "data-focused": isFocused,
      label: formattedDate,
      children: (0, import_jsx_runtime330.jsx)("span", { children: formattedDate })
    })
  ) }));
}
function CalendarGrid(props) {
  const locale = useLocale();
  const store = useCalendarContext();
  const { gridProps, headerProps, weekDays } = $e3031d1f8c9d64eb$export$cb95147730a423f5(
    props,
    store.state
  );
  const weeksInMonth = $14e0f24ef4ac5c92$export$ccc1b2479e7dd654(store.state.visibleRange.start, locale);
  return (0, import_jsx_runtime331.jsxs)("table", __spreadProps3(__spreadValues4({ "data-sl-calendar-grid": true }, gridProps), { children: [
    (0, import_jsx_runtime331.jsx)("thead", __spreadProps3(__spreadValues4({ "data-sl-calendar-grid-header": true }, headerProps), { children: (0, import_jsx_runtime331.jsx)("tr", { children: weekDays.map((day, index) => (0, import_jsx_runtime331.jsx)("th", { children: day }, `${day}=${index}`)) }) })),
    (0, import_jsx_runtime331.jsx)("tbody", { children: [...new Array(weeksInMonth).keys()].map((weekIndex) => (0, import_jsx_runtime331.jsx)("tr", { children: store.state.getDatesInWeek(weekIndex).map((date, index) => (0, import_jsx_runtime331.jsx)(import_react499.Fragment, { children: date ? (0, import_jsx_runtime331.jsx)(CalendarCell, { date }) : (0, import_jsx_runtime331.jsx)("td", { "data-sl-calendar-cell": true }) }, index)) }, weekIndex)) })
  ] }));
}
function CalendarHeader(props) {
  const { children: children3 } = props;
  return (0, import_jsx_runtime332.jsx)("div", { "data-sl-calendar-header": true, children: children3 });
}
function CalendarTitle(props) {
  const { children: children3 } = props;
  return (0, import_jsx_runtime333.jsx)("h2", { "data-sl-calendar-title": true, children: children3 });
}
function Calendar(props) {
  const locale = useLocale();
  const state = $131cf43a05231e1e$export$6d095e787d2b5e1f(__spreadProps3(__spreadValues4({}, props), {
    createCalendar: $64244302c3013299$export$dd0bbc9b26defe37,
    locale
  }));
  const store = (0, import_react496.useMemo)(() => new Store(state), [state]);
  const { calendarProps, prevButtonProps, nextButtonProps, title } = $9942cad8a072a530$export$3ee915f8151bd4f1(props, store.state);
  return (0, import_jsx_runtime334.jsx)(CalendarProvider, { store, children: (0, import_jsx_runtime334.jsxs)("div", __spreadProps3(__spreadValues4({ "data-sl-calendar": true }, calendarProps), { children: [
    (0, import_jsx_runtime334.jsxs)(CalendarHeader, { children: [
      (0, import_jsx_runtime334.jsx)(
        IconButton,
        {
          label: prevButtonProps["aria-label"],
          variant: "tertiary",
          disabled: prevButtonProps.isDisabled,
          onClick: prevButtonProps.onPress,
          onFocus: prevButtonProps.onFocusChange,
          children: (0, import_jsx_runtime334.jsx)(IconCaretLeft, {})
        }
      ),
      (0, import_jsx_runtime334.jsx)(CalendarTitle, { children: title }),
      (0, import_jsx_runtime334.jsx)(
        IconButton,
        {
          label: nextButtonProps["aria-label"],
          variant: "tertiary",
          disabled: nextButtonProps.isDisabled,
          onClick: nextButtonProps.onPress,
          onFocus: nextButtonProps.onFocusChange,
          children: (0, import_jsx_runtime334.jsx)(IconCaretRight, {})
        }
      )
    ] }),
    (0, import_jsx_runtime334.jsx)(CalendarGrid, {})
  ] })) });
}
var DateSegment = (0, import_react501.forwardRef)(
  function DateSegment2(props, forwardedRef) {
    const { segment, state } = props;
    const ref = (0, import_react501.useRef)(null);
    const { segmentProps } = $32489daedd52963e$export$1315d136e6f7581(segment, state, ref);
    return (0, import_jsx_runtime335.jsx)(
      "div",
      __spreadProps3(__spreadValues4({}, segmentProps), {
        ref: useMergeRef(ref, forwardedRef),
        "data-sl-date-segment": true,
        "data-placeholder": segment.isPlaceholder,
        children: segment.text
      })
    );
  }
);
var DateField = forwardRef22(function DateField2(props, forwardedRef) {
  const { granularity = "day", hourCycle = 24, onChange, className } = props;
  const locale = useLocale();
  const state = $3c0fc76039f1c516$export$60e84778edff6d26(__spreadProps3(__spreadValues4({}, props), {
    onChange,
    granularity,
    hourCycle,
    locale,
    createCalendar: $64244302c3013299$export$dd0bbc9b26defe37
  }));
  const ref = import_react500.default.useRef(null);
  const { labelProps, fieldProps } = $16f0b7bb276bc17e$export$5591b0b878c1a989(props, state, ref);
  return (0, import_jsx_runtime336.jsxs)("div", { "data-sl-date-field": true, className, children: [
    (0, import_jsx_runtime336.jsx)(VisuallyHidden3, { children: (0, import_jsx_runtime336.jsx)("label", __spreadValues4({}, labelProps)) }),
    (0, import_jsx_runtime336.jsx)(
      "div",
      __spreadProps3(__spreadValues4({}, fieldProps), {
        ref: useMergeRef(ref, forwardedRef),
        "data-sl-date-field-segment-list": true,
        children: state.segments.map((segment, i) => (0, import_jsx_runtime336.jsx)(DateSegment, { segment, state }, i))
      })
    )
  ] });
});
function DatePicker(props) {
  const _a2 = props, {
    className,
    id: defaultId,
    error: defaultError,
    portal = true
  } = _a2, domProps = __objRest3(_a2, [
    "className",
    "id",
    "error",
    "portal"
  ]);
  const state = $ab5bf3f618090389$export$87194bb378cc3ac2(domProps);
  const ref = (0, import_react495.useRef)(null);
  const anchorRef = (0, import_react495.useRef)(null);
  const store = useFieldContext();
  const { id: contextId, error: contextError } = useStore2(store, (s) => s);
  const id = defaultId || contextId;
  const error = defaultError || contextError;
  const { groupProps, labelProps, fieldProps, buttonProps, calendarProps } = $6057a3d2a53a12fd$export$42df105a73306d51(__spreadProps3(__spreadValues4({}, domProps), { id }), state, ref);
  return (0, import_jsx_runtime337.jsxs)(
    PopoverProvider,
    {
      open: state.isOpen,
      setOpen: state.setOpen,
      placement: "bottom-start",
      children: [
        (0, import_jsx_runtime337.jsxs)("div", { ref: anchorRef, "data-sl-date-picker": true, className, children: [
          (0, import_jsx_runtime337.jsx)(VisuallyHidden3, { children: (0, import_jsx_runtime337.jsx)("div", __spreadValues4({}, labelProps)) }),
          (0, import_jsx_runtime337.jsxs)(
            "div",
            __spreadProps3(__spreadValues4({}, groupProps), {
              ref,
              "data-sl-date-picker-input": true,
              "data-error": error,
              children: [
                (0, import_jsx_runtime337.jsx)(DateField, __spreadValues4({ id }, fieldProps)),
                (0, import_jsx_runtime337.jsx)(Bleed, { end: "$space-2", children: (0, import_jsx_runtime337.jsx)(PopoverTrigger, { asChild: true, children: (0, import_jsx_runtime337.jsx)(
                  IconButton,
                  {
                    "data-sl-date-picker-button": true,
                    id: buttonProps.id,
                    label: buttonProps["aria-label"],
                    "aria-describedby": buttonProps["aria-describedby"],
                    variant: "tertiary",
                    disabled: buttonProps.isDisabled,
                    children: (0, import_jsx_runtime337.jsx)(IconCalendarBlank, {})
                  }
                ) }) })
              ]
            })
          )
        ] }),
        (0, import_jsx_runtime337.jsx)(
          Popover22,
          {
            portal,
            getAnchorRect: () => {
              if (anchorRef == null ? void 0 : anchorRef.current) {
                return anchorRef.current.getBoundingClientRect();
              }
              return null;
            },
            children: (0, import_jsx_runtime337.jsx)(Calendar, __spreadValues4({}, calendarProps))
          }
        )
      ]
    }
  );
}
function RangeCalendar(props) {
  const locale = useLocale();
  const ref = (0, import_react502.useRef)(null);
  const state = $9a36b6ba2fb1a7c5$export$9a987164d97ecc90(__spreadProps3(__spreadValues4({}, props), {
    createCalendar: $64244302c3013299$export$dd0bbc9b26defe37,
    locale
  }));
  const store = (0, import_react502.useMemo)(() => new Store(state), [state]);
  const { calendarProps, prevButtonProps, nextButtonProps, title } = $46a4342aab3d8076$export$87e0539f600c24e5(props, store.state, ref);
  return (0, import_jsx_runtime338.jsx)(CalendarProvider, { store, children: (0, import_jsx_runtime338.jsxs)("div", __spreadProps3(__spreadValues4({ ref, "data-sl-range-calendar": true }, calendarProps), { children: [
    (0, import_jsx_runtime338.jsxs)(CalendarHeader, { children: [
      (0, import_jsx_runtime338.jsx)(
        IconButton,
        {
          label: prevButtonProps["aria-label"],
          variant: "tertiary",
          disabled: prevButtonProps.isDisabled,
          onClick: prevButtonProps.onPress,
          onFocus: prevButtonProps.onFocusChange,
          children: (0, import_jsx_runtime338.jsx)(IconCaretLeft, {})
        }
      ),
      (0, import_jsx_runtime338.jsx)(CalendarTitle, { children: title }),
      (0, import_jsx_runtime338.jsx)(
        IconButton,
        {
          label: nextButtonProps["aria-label"],
          variant: "tertiary",
          disabled: nextButtonProps.isDisabled,
          onClick: nextButtonProps.onPress,
          onFocus: nextButtonProps.onFocusChange,
          children: (0, import_jsx_runtime338.jsx)(IconCaretRight, {})
        }
      )
    ] }),
    (0, import_jsx_runtime338.jsx)(CalendarGrid, {})
  ] })) });
}
function DateRangePicker(props) {
  const _a2 = props, { className, id: defaultId, error: defaultError } = _a2, domProps = __objRest3(_a2, ["className", "id", "error"]);
  const state = $93c38a5e28be6249$export$e50a61c1de9f574(domProps);
  const ref = (0, import_react503.useRef)(null);
  const anchorRef = (0, import_react503.useRef)(null);
  const store = useFieldContext();
  const { id: contextId, error: contextError } = useStore2(store, (s) => s);
  const id = defaultId || contextId;
  const error = defaultError || contextError;
  const {
    groupProps,
    labelProps,
    startFieldProps,
    endFieldProps,
    buttonProps,
    calendarProps
  } = $887cac91b7cc8801$export$12fd5f0e9f4bb192(__spreadProps3(__spreadValues4({}, domProps), { id }), state, ref);
  return (0, import_jsx_runtime339.jsxs)(
    PopoverProvider,
    {
      open: state.isOpen,
      setOpen: state.setOpen,
      placement: "bottom-start",
      children: [
        (0, import_jsx_runtime339.jsxs)("div", { ref: anchorRef, "data-sl-date-range-picker": true, children: [
          (0, import_jsx_runtime339.jsx)("div", __spreadValues4({}, labelProps)),
          (0, import_jsx_runtime339.jsxs)(
            "div",
            __spreadProps3(__spreadValues4({
              "data-sl-date-range-picker-input": true
            }, groupProps), {
              ref,
              "data-error": error,
              children: [
                (0, import_jsx_runtime339.jsxs)("div", { "data-sl-date-range-picker-field-group": true, children: [
                  (0, import_jsx_runtime339.jsx)(DateField, __spreadValues4({}, startFieldProps)),
                  (0, import_jsx_runtime339.jsx)(IconMinusSmall, {}),
                  (0, import_jsx_runtime339.jsx)(DateField, __spreadValues4({}, endFieldProps))
                ] }),
                (0, import_jsx_runtime339.jsx)(Bleed, { end: "$space-2", children: (0, import_jsx_runtime339.jsx)(PopoverTrigger, { asChild: true, children: (0, import_jsx_runtime339.jsx)(
                  IconButton,
                  {
                    id: buttonProps.id,
                    label: buttonProps["aria-label"],
                    "aria-describedby": buttonProps["aria-describedby"],
                    variant: "tertiary",
                    "data-sl-date-range-picker-icon-button": true,
                    disabled: buttonProps.isDisabled,
                    children: (0, import_jsx_runtime339.jsx)(IconCalendarBlank, {})
                  }
                ) }) })
              ]
            })
          )
        ] }),
        (0, import_jsx_runtime339.jsx)(
          Popover22,
          {
            getAnchorRect: () => {
              if (anchorRef == null ? void 0 : anchorRef.current) {
                return anchorRef.current.getBoundingClientRect();
              }
              return null;
            },
            children: (0, import_jsx_runtime339.jsx)(RangeCalendar, __spreadValues4({}, calendarProps))
          }
        )
      ]
    }
  );
}
var TimeInput = forwardRef22(function TimeInput2(props, forwardedRef) {
  const _a2 = props, { className, id: defaultId, error: defaultError } = _a2, domProps = __objRest3(_a2, ["className", "id", "error"]);
  const store = useFieldContext();
  const { id: contextId, error: contextError } = useStore2(store, (s) => s);
  const id = defaultId || contextId;
  const error = defaultError || contextError;
  const locale = useLocale();
  const state = $eff5d8ee529ac4bb$export$fd53cef0cc796101(__spreadProps3(__spreadValues4({}, domProps), {
    locale
  }));
  const ref = import_react504.default.useRef(null);
  const { fieldProps } = $16f0b7bb276bc17e$export$4c842f6a241dc825(
    __spreadValues4({
      id
    }, domProps),
    state,
    ref
  );
  const clear = (0, import_react504.useCallback)(() => {
    const types = [
      "era",
      "year",
      "month",
      "day",
      "hour",
      "minute",
      "second",
      "dayPeriod",
      "literal",
      "timeZoneName"
    ];
    types.forEach((segment) => {
      state.clearSegment(segment);
    });
  }, [state.clearSegment]);
  const showClearButton = (0, import_react504.useMemo)(
    () => state.segments.some((segment) => {
      return segment.isEditable && !segment.isPlaceholder;
    }),
    [state.segments]
  );
  return (0, import_jsx_runtime340.jsxs)(
    "div",
    {
      "data-sl-time-input": true,
      "data-disabled": fieldProps["aria-disabled"],
      "data-error": error || state.isInvalid,
      className,
      children: [
        (0, import_jsx_runtime340.jsx)(
          "div",
          __spreadProps3(__spreadValues4({}, fieldProps), {
            ref: useMergeRef(ref, forwardedRef),
            "data-sl-time-input-element": true,
            children: state.segments.map((segment, i) => (0, import_jsx_runtime340.jsx)(DateSegment, { segment, state }, i))
          })
        ),
        showClearButton && (0, import_jsx_runtime340.jsx)(Bleed, { end: "$space-2", children: (0, import_jsx_runtime340.jsx)(IconButton, { onClick: clear, variant: "tertiary", label: "Clear", children: (0, import_jsx_runtime340.jsx)(IconXCircle, {}) }) })
      ]
    }
  );
});
var presetSunrise = {
  outdir: "__theme-sunrise__",
  tokens: {
    space: {
      0: "0rem",
      "05": "0.125rem",
      1: "0.25rem",
      2: "0.5rem",
      3: "0.75rem",
      4: "1rem",
      5: "1.25rem",
      6: "1.5rem",
      7: "1.75rem",
      8: "2rem",
      10: "2.5rem",
      12: "3rem",
      16: "4rem",
      20: "5rem",
      24: "6rem",
      28: "7rem",
      32: "8rem",
      gap: "$space-4"
    },
    color: {
      gray: {
        0: "#FFFFFF",
        1: "#F5F5F5",
        2: "#EBEBEB",
        3: "#E0E0E0",
        4: "#D6D6D6",
        5: "#C2C2C2",
        6: "#ADADAD",
        7: "#999999",
        8: "#858585",
        9: "#707070",
        10: "#5C5C5C",
        11: "#3D3D3D",
        12: "#1F1F1F",
        13: "#000000"
      },
      red: {
        1: "#FDF6F5",
        2: "#FFEDEA",
        3: "#FFDFD9",
        4: "#FFD0C7",
        5: "#FFBBAD",
        6: "#FF9E8B",
        7: "#FF7F68",
        8: "#F95D47",
        9: "#EC3727",
        10: "#D31A15",
        11: "#B40202",
        12: "#940303",
        13: "#720000"
      },
      orange: {
        1: "#FDF5E9",
        2: "#FFEDCD",
        3: "#FFE0AE",
        4: "#FED392",
        5: "#FEBC64",
        6: "#FFA138",
        7: "#F78612",
        8: "#E57001",
        9: "#CC5E01",
        10: "#B24D01",
        11: "#963E01",
        12: "#7B3001",
        13: "#622401"
      },
      yellow: {
        1: "#FBF7D4",
        2: "#FDF5AD",
        3: "#FAEC6D",
        4: "#FADE1E",
        5: "#E9C701",
        6: "#D8B401",
        7: "#C5A001",
        8: "#B18D01",
        9: "#9C7901",
        10: "#866701",
        11: "#715401",
        12: "#5C4401",
        13: "#493401"
      },
      green: {
        1: "#E9FCE3",
        2: "#CEFDC0",
        3: "#AFF79E",
        4: "#97EF86",
        5: "#74E26C",
        6: "#4FD051",
        7: "#28BC37",
        8: "#08A822",
        9: "#019213",
        10: "#017D10",
        11: "#016810",
        12: "#01540E",
        13: "#01410B"
      },
      teal: {
        1: "#E9FAF8",
        2: "#CFF8F4",
        3: "#ABF2EB",
        4: "#8DEAE3",
        5: "#66DBD3",
        6: "#40CAC2",
        7: "#10B6AF",
        8: "#01A29B",
        9: "#018D88",
        10: "#017873",
        11: "#016460",
        12: "#0D504D",
        13: "#133D3B"
      },
      blue: {
        1: "#F1F8FD",
        2: "#E1F3FF",
        3: "#CBE9FF",
        4: "#B6DFFF",
        5: "#97CFFE",
        6: "#79BCFB",
        7: "#5AA8F7",
        8: "#3993F4",
        9: "#157BF4",
        10: "#0366DD",
        11: "#0155B7",
        12: "#014592",
        13: "#013672"
      },
      purple: {
        1: "#F9F5FD",
        2: "#F5EAFE",
        3: "#EDDCFE",
        4: "#E5CFFE",
        5: "#DABAFD",
        6: "#CBA3FC",
        7: "#BC8AFB",
        8: "#AD71F8",
        9: "#9C56F3",
        10: "#883CE6",
        11: "#7225D2",
        12: "#5C12B6",
        13: "#460B93"
      },
      pink: {
        1: "#FDF5F7",
        2: "#FFEBF2",
        3: "#FFDFEB",
        4: "#FFC8DC",
        5: "#FEB2CD",
        6: "#FF98BF",
        7: "#FE78AC",
        8: "#EF5997",
        9: "#DE387F",
        10: "#CA226A",
        11: "#AF0956",
        12: "#8F0246",
        13: "#74043B"
      },
      cyan: {
        1: "#E6FAFD",
        2: "#C6F9FF",
        3: "#A5F1FF",
        4: "#89E8FB",
        5: "#61D9F4",
        6: "#34C6E9",
        7: "#13B1DB",
        8: "#029DC9",
        9: "#0187B5",
        10: "#0172A0",
        11: "#015E8A",
        12: "#014B74",
        13: "#013A5E"
      }
    },
    fg: {
      base: {
        "*": "$color-gray-12",
        soft: "$color-gray-9",
        disabled: "$color-gray-7"
      },
      inverted: "$color-gray-0",
      warning: "$color-yellow-9",
      success: "$color-green-9",
      informational: "$color-blue-9",
      muted: {
        "*": "$color-gray-11",
        hover: "$color-gray-12",
        pressed: "$color-gray-13"
      },
      accent: {
        "*": "$color-blue-10",
        hover: "$color-blue-11",
        pressed: "$color-blue-12"
      },
      critical: {
        "*": "$color-red-10",
        hover: "$color-red-11",
        pressed: "$color-red-12"
      }
    },
    bg: {
      base: {
        "*": "$color-gray-0",
        disabled: "color-mix(in srgb, $color-gray-12 5%, transparent)",
        strong: {
          "*": "$color-gray-3",
          disabled: "$color-gray-6"
        },
        soft: "$color-gray-1"
      },
      warning: "$color-yellow-1",
      success: "$color-green-1",
      informational: "$color-blue-1",
      inverted: {
        "*": "$color-gray-12",
        strong: "color-mix(in srgb, $color-gray-12 50%, transparent)"
      },
      muted: {
        "*": "color-mix(in srgb, $color-gray-12 5%, transparent)",
        hover: "color-mix(in srgb, $color-gray-12 10%, transparent)",
        pressed: "color-mix(in srgb, $color-gray-12 15%, transparent)",
        plain: {
          "*": "color-mix(in srgb, $color-gray-12 0%, transparent)",
          hover: "color-mix(in srgb, $color-gray-12 5%, transparent)",
          pressed: "color-mix(in srgb, $color-gray-12 10%, transparent)"
        }
      },
      accent: {
        "*": "$color-blue-2",
        hover: "$color-blue-3",
        pressed: "$color-blue-4",
        plain: {
          "*": "color-mix(in srgb, $color-blue-10 0%, transparent)",
          hover: "color-mix(in srgb, $color-blue-10 5%, transparent)",
          pressed: "color-mix(in srgb, $color-blue-10 10%, transparent)"
        },
        strong: {
          "*": "$color-blue-10",
          hover: "$color-blue-11",
          pressed: "$color-blue-12"
        }
      },
      critical: {
        "*": "$color-red-1",
        plain: {
          "*": "color-mix(in srgb, $color-red-10 0%, transparent)",
          hover: "color-mix(in srgb, $color-red-10 5%, transparent)",
          pressed: "color-mix(in srgb, $color-red-10 10%, transparent)"
        },
        strong: {
          "*": "$color-red-10",
          hover: "$color-red-11",
          pressed: "$color-red-12"
        }
      }
    },
    border: {
      base: {
        "*": "1px solid $color-gray-3",
        disabled: "1px solid $color-gray-6",
        strong: {
          "*": "1px solid $color-gray-5",
          hover: "1px solid $color-gray-6"
        }
      },
      success: "1px solid $color-green-3",
      informational: "1px solid $color-blue-3",
      warning: "1px solid $color-yellow-3",
      accent: {
        "*": "1px solid $color-blue-3",
        strong: {
          "*": "1px solid $color-blue-10",
          hover: "1px solid $color-blue-11"
        }
      },
      critical: {
        "*": "1px solid $color-red-3",
        strong: {
          "*": "1px solid $color-red-8",
          hover: "1px solid $color-red-9"
        }
      }
    },
    radius: {
      0: "0rem",
      1: "0.25rem",
      2: "0.5rem",
      3: "0.75rem",
      full: "9999rem"
    },
    "focus-ring": {
      base: "0rem 0rem 0rem 0.0625rem $color-gray-0, 0rem 0rem 0rem 0.1875rem $color-gray-5",
      critical: "0rem 0rem 0rem 0.0625rem $color-gray-0, 0rem 0rem 0rem 0.1875rem $color-red-6",
      accent: "0rem 0rem 0rem 0.0625rem $color-gray-0, 0rem 0rem 0rem 0.1875rem $color-blue-6"
    },
    shadow: {
      1: "0rem 0.25rem 1rem 0rem rgba(0, 0, 0, 0.16)",
      2: "0rem 1.5rem 3rem 0rem rgba(0, 0, 0, 0.16)"
    },
    z: {
      1: "0",
      2: "100",
      3: "200",
      4: "300",
      5: "400",
      6: "500",
      7: "600",
      8: "700",
      9: "800",
      10: "900"
    },
    "font-family": {
      sans: '"Inter", -apple-system, system-ui, BlinkMacSystemFont, sans-serif'
    },
    "font-weight": {
      regular: "400",
      medium: "500",
      semibold: "600"
    },
    "font-size": {
      1: "0.75rem",
      2: "0.875rem",
      3: "1rem",
      4: "1.25rem",
      5: "1.5rem"
    },
    "letter-spacing": {
      1: "0rem",
      2: "-0.00875rem",
      3: "-0.02rem",
      4: "-0.04rem"
    },
    "line-height": {
      1: "1rem",
      2: "1.25rem",
      3: "1.5rem",
      4: "1.75rem",
      5: "2rem"
    },
    text: {
      caption: {
        2: {
          font: "$font-weight-regular $font-size-1 / $line-height-1 $font-family-sans",
          "letter-spacing": "$letter-spacing-1"
        },
        1: {
          font: "$font-weight-medium $font-size-1 / $line-height-1 $font-family-sans",
          "letter-spacing": "$letter-spacing-1"
        }
      },
      action: {
        font: "$font-weight-semibold $font-size-2 / $line-height-2 $font-family-sans",
        "letter-spacing": "$letter-spacing-2"
      },
      emphasis: {
        font: "$font-weight-medium $font-size-2 / $line-height-2 $font-family-sans",
        "letter-spacing": "$letter-spacing-2"
      },
      body: {
        font: "$font-weight-regular $font-size-2 / $line-height-2 $font-family-sans",
        "letter-spacing": "$letter-spacing-2"
      },
      display: {
        4: {
          font: "$font-weight-regular $font-size-3 / $line-height-3 $font-family-sans",
          "letter-spacing": "$letter-spacing-3"
        },
        3: {
          font: "$font-weight-semibold $font-size-3 / $line-height-3 $font-family-sans",
          "letter-spacing": "$letter-spacing-3"
        },
        2: {
          font: "$font-weight-semibold $font-size-4 / $line-height-4 $font-family-sans",
          "letter-spacing": "$letter-spacing-4"
        },
        1: {
          font: "$font-weight-semibold $font-size-5 / $line-height-5 $font-family-sans",
          "letter-spacing": "$letter-spacing-4"
        }
      }
    }
  }
};
export {
  AccessibleIcon,
  Alert,
  Bleed,
  Button3 as Button,
  Calendar,
  CalendarCell,
  CalendarContext,
  CalendarGrid,
  CalendarHeader,
  CalendarProvider,
  CalendarTitle,
  Center,
  Checkbox3 as Checkbox,
  CheckboxGroup,
  Clickable,
  ClickableBubble,
  Collection3 as Collection,
  CollectionRow,
  CollectionView,
  ComboboxInput,
  ComboboxItem3 as ComboboxItem,
  ComboboxList3 as ComboboxList,
  ComboboxPopover3 as ComboboxPopover,
  ComboboxProvider,
  Composable,
  Compose,
  ConfirmationModal,
  Container,
  Content3 as Content,
  ContextualHelp,
  DateField,
  DatePicker,
  DateRangePicker,
  DateSegment,
  Divider,
  DrawerContent,
  DrawerDismiss,
  DrawerFooter,
  DrawerHeader,
  DrawerHeading,
  DrawerPopover,
  DrawerProvider,
  DrawerTrigger,
  EmptyState,
  EmptyStateActions,
  EmptyStateIllustration,
  Field,
  FieldCharCounter,
  FieldContext,
  FieldDescription,
  FieldError,
  FieldProvider,
  Filter,
  FilterApply,
  FilterClear,
  FilterContext,
  FilterItem,
  FilterItemCheck,
  FilterList,
  FilterListSkeleton,
  FilterPopover,
  FilterProvider,
  FilterTrigger,
  FilterValue,
  Flex,
  Grid,
  GridCell,
  Heading3 as Heading,
  IconAlarm,
  IconArchive,
  IconArrowCounterClockwise,
  IconArrowDown,
  IconArrowDownSmall,
  IconArrowLeft,
  IconArrowLineDown,
  IconArrowLineUp,
  IconArrowRight,
  IconArrowUUpLeft,
  IconArrowUp,
  IconArrowUpRight,
  IconArrowUpRightSmall,
  IconArrowUpSmall,
  IconArrowsClockwise,
  IconBarcode,
  IconBell,
  IconButton,
  IconCalendarBlank,
  IconCameraFill,
  IconCaretDown,
  IconCaretDownSmall,
  IconCaretLeft,
  IconCaretLeftSmall,
  IconCaretRight,
  IconCaretRightSmall,
  IconCaretUp,
  IconCaretUpDownSmall,
  IconCaretUpSmall,
  IconChartBar,
  IconChartLineUp,
  IconChatCircle,
  IconChatText,
  IconCheck,
  IconCheckCircle,
  IconCheckCircleFill,
  IconCheckSmall,
  IconCirclesThreePlusFill,
  IconClock,
  IconClockClockwise,
  IconCloudArrowUp,
  IconCode,
  IconCoffee,
  IconCopySimple,
  IconCornersIn,
  IconCornersOut,
  IconCounterClockwise,
  IconCreditCard,
  IconCube,
  IconCurrencyCircleDollar,
  IconDotsSixVertical,
  IconDotsSixVerticalSmall,
  IconDotsThreeVertical,
  IconEnvelopeSimple,
  IconEnvelopeSimpleFill,
  IconEye,
  IconEyeSlash,
  IconFaders,
  IconFileText,
  IconFlag,
  IconGearSix,
  IconGift,
  IconGlobeHemisphereWest,
  IconHandPointingFill,
  IconHandbagSimple,
  IconHeadset,
  IconHeart,
  IconHouse,
  IconIdentificationCard,
  IconImageSquare,
  IconImageSquareFill,
  IconInfo,
  IconInfoFill,
  IconKey,
  IconLayout,
  IconLinkBreak,
  IconLinkSimple,
  IconLinkSimpleFill,
  IconList,
  IconListBullets,
  IconListNumbers,
  IconLockKey,
  IconLockKeyOpen,
  IconMagnifyingGlass,
  IconMagnifyingGlassPlus,
  IconMagnifyingGlassSmall,
  IconMapPin,
  IconMegaphone,
  IconMegaphoneFill,
  IconMinus,
  IconMinusCircleFill,
  IconMinusSmall,
  IconNewspaper,
  IconNotebook,
  IconPaperPlaneTilt,
  IconPaperclip,
  IconPauseCircle,
  IconPencil,
  IconPlayCircle,
  IconPlayCircleFill,
  IconPlus,
  IconPlusCircle,
  IconPrinter,
  IconProhibit,
  IconPulse,
  IconQuestion,
  IconReceipt,
  IconRocketLaunch,
  IconRows,
  IconShareNetwork,
  IconShareNetworkFill,
  IconShoppingCartSimple,
  IconSignOut,
  IconSlidersFill,
  IconSparkle,
  IconSparkleFill,
  IconSquaresFour,
  IconStack,
  IconStar,
  IconStarFill,
  IconStorefront,
  IconTag,
  IconTagFill,
  IconTextAlignCenter,
  IconTextAlignLeft,
  IconTextAlignRight,
  IconTextB,
  IconTextItalic,
  IconTextUnderline,
  IconTicket,
  IconTrash,
  IconTreeStructureFill,
  IconTrendDownFill,
  IconTrendUpFill,
  IconTruck,
  IconUniteFill,
  IconUser,
  IconUsers,
  IconVideoCameraFill,
  IconWarningCircle,
  IconWarningCircleFill,
  IconX,
  IconXCircle,
  IconXCircleFill,
  IconXSmall,
  Input,
  Label,
  Link,
  LinkBox,
  LocaleProvider,
  Menu22 as Menu,
  MenuItem3 as MenuItem,
  MenuPopover,
  MenuProvider2 as MenuProvider,
  MenuSeparator3 as MenuSeparator,
  MenuTrigger,
  Modal,
  ModalContent,
  ModalDismiss,
  ModalFooter,
  ModalHeader,
  ModalHeading,
  Page,
  PageContent,
  PageHeader,
  PageHeaderRow,
  PageHeading,
  Pagination,
  Popover22 as Popover,
  PopoverDismiss3 as PopoverDismiss,
  PopoverProvider,
  PopoverTrigger,
  Radio3 as Radio,
  RadioGroup3 as RadioGroup,
  RangeCalendar,
  Search,
  Select22 as Select,
  SelectItem3 as SelectItem,
  SelectItemCheck3 as SelectItemCheck,
  SelectList3 as SelectList,
  SelectPopover3 as SelectPopover,
  SelectProvider,
  SelectTrigger,
  Skeleton,
  Spinner,
  Stack,
  Store,
  Tab3 as Tab,
  TabList3 as TabList,
  TabPanel3 as TabPanel,
  TabProvider,
  Table,
  TableBody,
  TableCell,
  TableHeader,
  TableHeaderCell,
  TableRow,
  TableSortIndicator,
  Tag,
  Text,
  Textarea,
  $35ea8db9cb2ccb90$export$680ea196effce5f as Time,
  TimeInput,
  ToastStack,
  Tooltip22 as Tooltip,
  TooltipArrow3 as TooltipArrow,
  TooltipPopover,
  TooltipProvider,
  TooltipTrigger,
  VisuallyHidden3 as VisuallyHidden,
  camelCase,
  canUseDOM2 as canUseDOM,
  chain2 as chain,
  cleanTokenString,
  constants,
  $64244302c3013299$export$dd0bbc9b26defe37 as createCalendar,
  createMessageHook,
  cssVar,
  cx2 as cx,
  flattenObject,
  forwardRef22 as forwardRef,
  $14e0f24ef4ac5c92$export$aa8b41735afcabd2 as getLocalTimeZone,
  $14e0f24ef4ac5c92$export$ccc1b2479e7dd654 as getWeeksInMonth,
  hasSomeTextSelected,
  invariant2 as invariant,
  isComposable,
  isFunction,
  isNativeHandler,
  isRangeCalendar,
  $14e0f24ef4ac5c92$export$ea39ec197993aef0 as isSameDay,
  $14e0f24ef4ac5c92$export$a18c89cbd24170ff as isSameMonth,
  $14e0f24ef4ac5c92$export$5841f9eb9773f25f as isSameYear,
  isString,
  isStringEmpty,
  isToken,
  isUppercase,
  kebabCase,
  lowerFirst,
  merge,
  mergeProps2 as mergeProps,
  mergeRefs,
  navigate,
  $fae977aafc393c5c$export$8e384432362ed0f0 as parseAbsoluteToLocal,
  $fae977aafc393c5c$export$6b862160d295c8e as parseDate,
  $fae977aafc393c5c$export$588937bcd60ade55 as parseDateTime,
  $fae977aafc393c5c$export$c9698ec7f05a07e1 as parseTime,
  parseTokens,
  $fae977aafc393c5c$export$fd7893f06e92a6a4 as parseZonedDateTime,
  pascalCase,
  presetSunrise,
  shallowCompare,
  snakeCase,
  splitByCase,
  style,
  toVar,
  toast,
  $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3 as today,
  upperFirst,
  useCalendarContext,
  useControlledState,
  useFieldContext,
  useFilterContext,
  useId2 as useId,
  useLocale,
  useMergeRef,
  usePopoverContext,
  usePopoverStore,
  useRadioState,
  useSafeLayoutEffect2 as useSafeLayoutEffect,
  useSelectContext,
  useSelectStore,
  useStore2 as useStore,
  useTabContext,
  useTabStore,
  tiny_warning_esm_default as warning
};
/*! Bundled license information:

use-sync-external-store/cjs/use-sync-external-store-shim.development.js:
  (**
   * @license React
   * use-sync-external-store-shim.development.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

use-sync-external-store/cjs/use-sync-external-store-shim.development.js:
  (**
   * @license React
   * use-sync-external-store-shim.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js:
  (**
   * @license React
   * use-sync-external-store-shim/with-selector.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=@vtex_shoreline.js.map
